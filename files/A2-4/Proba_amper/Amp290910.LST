A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     1


MACRO ASSEMBLER A51 V6.14a
OBJECT MODULE PLACED IN Amp290910.OBJ
ASSEMBLER INVOKED BY: D:\PROGRAM FILES\CYGNAL\IDEFILES\C51\BIN\A51.EXE Amp290910.asm XR GEN DB EP NOMOD51

LOC  OBJ            LINE     SOURCE

                       1     
                       2     
                       3     ;;Добавлено К0,К1 в RS (откл/вкл. кор-ки 0) октябрь 2009
                       4     ;;выдача в RS измерений в формате плав. точки (2C "," вместо 2E ".")
                       5     ;;с 7F 0A в начале и 0A в кач-ве разделителя 25.11.09
                       6     ;;выдача в RS cостояния прибора с 7F 0A в начале и 0A в конце 25.11.09
                       7     ;;выдача в RS памяти с 7F 0A в начале 
                       8     ;;и 0A в кач-ве разделителя 25.11.09
                       9     ;;исправлены H0-2
                      10     ;;переключение скорости RS      16.12.09
                      11     ;;к-ды T0-5 (из T5 возвращается неправильно  исправлено 21.12.09
                      12     ;;убрана выдача 200 байт в RS после команд T4,T5
                      13     ;;сделана выдача в RS измерений на диапазонах 2 мс и 10мс как
                      14     ;;и на остальных        21.12.09
                      15     ;;исправлен T3 (без вкл. "измер." выдавал ERR 5 -- убран анализ
                      16     ;; p1.1 на метке anlp1:) 24.12.09
                      17     ;; сделана выдача 4-х 16-ных байт в RS на 2 mS
                      18     ;; в виде порядок + 3байта из Rez_A3    26.01.10
                      19     ;; перегрузка--1-й байт 41h (не работает на 2 и10 мс--
                      20     ;; не включается bitoll) метка FF (переставить анализ
                      21     ;; bitoll в ветку 2 мс)
                      22     ;; Для игнорирования в режиме "ПАМЯТЬ--Статистика" кнопки "-->"
                      23     ;; введено по метке labN_1: игнорирование по B0=61,62,63H
                      24     
                      25     ;$include (c8051f020.inc) ; Include register definition file.
                +1    26     
                +1    27     
                +1    28     
                +1    29     
                +1    30     
                +1    31     
                +1    32     
                +1    33     
                +1    34     
                +1    35     
                +1    36     
                +1    37     
                +1    38     
                +1    39     
  0080          +1    40     sfr P0       =  0x80;   /* PORT 0                                                  */   
  0081          +1    41     sfr SP       =  0x81;   /* STACK POINTER                                           */
  0082          +1    42     sfr DPL      =  0x82;   /* DATA POINTER - LOW BYTE                                 */
  0083          +1    43     sfr DPH      =  0x83;   /* DATA POINTER - HIGH BYTE                                */
  0084          +1    44     sfr P4       =  0x84;   /* PORT 4                                                          
                                                                                                    */
  0085          +1    45     sfr P5       =  0x85;   /* PORT 5                                                  */
  0086          +1    46     sfr P6       =  0x86;   /* PORT 6                                                          
                                                                                                    */                  
                                                                                                               
  0087          +1    47     sfr PCON     =  0x87;   /* POWER CONTROL                                           */
  0088          +1    48     sfr TCON     =  0x88;   /* TIMER CONTROL                                           */
  0089          +1    49     sfr TMOD     =  0x89;   /* TIMER MODE                                              */
  008A          +1    50     sfr TL0      =  0x8A;   /* TIMER 0 - LOW BYTE                                      */
  008B          +1    51     sfr TL1      =  0x8B;   /* TIMER 1 - LOW BYTE                                      */
  008C          +1    52     sfr TH0      =  0x8C;   /* TIMER 0 - HIGH BYTE                                     */   
  008D          +1    53     sfr TH1      =  0x8D;   /* TIMER 1 - HIGH BYTE                                     */
  008E          +1    54     sfr CKCON    =  0x8E;   /* CLOCK CONTROL                                           */
  008F          +1    55     sfr PSCTL    =  0x8F;   /* PROGRAM STORE R/W CONTROL                               */
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     2

  0090          +1    56     sfr P1       =  0x90;   /* PORT 1                                                  */
  0091          +1    57     sfr TMR3CN   =  0x91;   /* TIMER 3 CONTROL                                         */
  0092          +1    58     sfr TMR3RLL  =  0x92;   /* TIMER 3 RELOAD REGISTER - LOW BYTE                      */
  0093          +1    59     sfr TMR3RLH  =  0x93;   /* TIMER 3 RELOAD REGISTER - HIGH BYTE                     */
  0094          +1    60     sfr TMR3L    =  0x94;   /* TIMER 3 - LOW BYTE                                      */
  0095          +1    61     sfr TMR3H    =  0x95;   /* TIMER 3 - HIGH BYTE                                     */
  0096          +1    62     sfr P7           =  0x96;   /* PORT 7                                                  */
  0098          +1    63     sfr SCON0    =  0x98;   /* SERIAL PORT 0 CONTROL                                   */
  0099          +1    64     sfr SBUF0    =  0x99;   /* SERIAL PORT 0 BUFFER                                    */
  009A          +1    65     sfr SPI0CFG  =  0x9A;   /* SERIAL PERIPHERAL INTERFACE 0 CONFIGURATION             */
  009B          +1    66     sfr SPI0DAT  =  0x9B;   /* SERIAL PERIPHERAL INTERFACE 0 DATA                      */
  009C          +1    67     sfr ADC1     =  0x9C;   /* ADC 1 DATA                                              */
  009D          +1    68     sfr SPI0CKR  =  0x9D;   /* SERIAL PERIPHERAL INTERFACE 0 CLOCK RATE CONTROL        */
  009E          +1    69     sfr CPT0CN   =  0x9E;   /* COMPARATOR 0 CONTROL                                    */
  009F          +1    70     sfr CPT1CN   =  0x9F;   /* COMPARATOR 1 CONTROL                                    */
  00A0          +1    71     sfr P2       =  0xA0;   /* PORT 2                                                  */
  00A1          +1    72     sfr EMI0TC   =  0xA1;   /* EMIF TIMING CONTROL                                     */
  00A3          +1    73     sfr EMI0CF   =  0xA3;   /* EXTERNAL MEMORY INTERFACE (EMIF) CONFIGURATION          */
  00A4          +1    74     sfr P0MDOUT  =  0xA4;   /* PORT 0 OUTPUT MODE CONFIGURATION                        */
  00A5          +1    75     sfr P1MDOUT  =  0xA5;   /* PORT 1 OUTPUT MODE CONFIGURATION                        */
  00A6          +1    76     sfr P2MDOUT  =  0xA6;   /* PORT 2 OUTPUT MODE CONFIGURATION                        */
  00A7          +1    77     sfr P3MDOUT  =  0xA7;   /* PORT 3 OUTPUT MODE CONFIGURATION                        */
  00A8          +1    78     sfr IE       =  0xA8;   /* INTERRUPT ENABLE                                        */
  00A9          +1    79     sfr SADDR0   =  0xA9;   /* SERIAL PORT 0 SLAVE ADDRESS                             */
  00AA          +1    80     sfr ADC1CN   =  0xAA;   /* ADC 1 CONTROL                                           */
  00AB          +1    81     sfr ADC1CF   =  0xAB;   /* ADC 1 ANALOG MUX CONFIGURATION                          */
  00AC          +1    82     sfr AMX1SL   =  0xAC;   /* ADC 1 ANALOG MUX CHANNEL SELECT                         */
  00AD          +1    83     sfr P3IF     =  0xAD;   /* PORT 3 EXTERNAL INTERRUPT FLAGS                         */
  00AE          +1    84     sfr SADEN1   =  0xAE;   /* SERIAL PORT 1 SLAVE ADDRESS MASK                        */
  00AF          +1    85     sfr EMI0CN   =  0xAF;   /* EXTERNAL MEMORY INTERFACE CONTROL                       */
  00B0          +1    86     sfr P3       =  0xB0;   /* PORT 3                                                  */
  00B1          +1    87     sfr OSCXCN   =  0xB1;   /* EXTERNAL OSCILLATOR CONTROL                             */
  00B2          +1    88     sfr OSCICN   =  0xB2;   /* INTERNAL OSCILLATOR CONTROL                             */
  00B5          +1    89     sfr P74OUT   =  0xB5;   /* PORTS 4 - 7 OUTPUT MODE                                 */
  00B6          +1    90     sfr FLSCL    =  0xB6;   /* FLASH MEMORY TIMING PRESCALER                           */
  00B7          +1    91     sfr FLACL    =  0xB7;   /* FLASH ACESS LIMIT                                       */
  00B8          +1    92     sfr IP       =  0xB8;   /* INTERRUPT PRIORITY                                      */
  00B9          +1    93     sfr SADEN0   =  0xB9;   /* SERIAL PORT 0 SLAVE ADDRESS MASK                        */
  00BA          +1    94     sfr AMX0CF   =  0xBA;   /* ADC 0 MUX CONFIGURATION                                 */
  00BB          +1    95     sfr AMX0SL   =  0xBB;   /* ADC 0 MUX CHANNEL SELECTION                             */
  00BC          +1    96     sfr ADC0CF   =  0xBC;   /* ADC 0 CONFIGURATION                                     */
  00BD          +1    97     sfr P1MDIN   =  0xBD;   /* PORT 1 INPUT MODE                                       */
  00BE          +1    98     sfr ADC0L    =  0xBE;   /* ADC 0 DATA - LOW BYTE                                   */
  00BF          +1    99     sfr ADC0H    =  0xBF;   /* ADC 0 DATA - HIGH BYTE                                  */
  00C0          +1   100     sfr SMB0CN   =  0xC0;   /* SMBUS 0 CONTROL                                         */
  00C1          +1   101     sfr SMB0STA  =  0xC1;   /* SMBUS 0 STATUS                                          */
  00C2          +1   102     sfr SMB0DAT  =  0xC2;   /* SMBUS 0 DATA                                            */
  00C3          +1   103     sfr SMB0ADR  =  0xC3;   /* SMBUS 0 SLAVE ADDRESS                                   */
  00C4          +1   104     sfr ADC0GTL  =  0xC4;   /* ADC 0 GREATER-THAN REGISTER - LOW BYTE                  */
  00C5          +1   105     sfr ADC0GTH  =  0xC5;   /* ADC 0 GREATER-THAN REGISTER - HIGH BYTE                 */
  00C6          +1   106     sfr ADC0LTL  =  0xC6;   /* ADC 0 LESS-THAN REGISTER - LOW BYTE                     */
  00C7          +1   107     sfr ADC0LTH  =  0xC7;   /* ADC 0 LESS-THAN REGISTER - HIGH BYTE                    */
  00C8          +1   108     sfr T2CON    =  0xC8;   /* TIMER 2 CONTROL                                         */
  00C9          +1   109     sfr T4CON    =  0xC9;   /* TIMER 4 CONTROL                                         */
  00CA          +1   110     sfr RCAP2L   =  0xCA;   /* TIMER 2 CAPTURE REGISTER - LOW BYTE                     */
  00CB          +1   111     sfr RCAP2H   =  0xCB;   /* TIMER 2 CAPTURE REGISTER - HIGH BYTE                    */
  00CC          +1   112     sfr TL2      =  0xCC;   /* TIMER 2 - LOW BYTE                                      */
  00CD          +1   113     sfr TH2      =  0xCD;   /* TIMER 2 - HIGH BYTE                                     */
  00CF          +1   114     sfr SMB0CR   =  0xCF;   /* SMBUS 0 CLOCK RATE                                      */
  00D0          +1   115     sfr PSW      =  0xD0;   /* PROGRAM STATUS WORD                                     */
  00D1          +1   116     sfr REF0CN   =  0xD1;   /* VOLTAGE REFERENCE 0 CONTROL                             */
  00D2          +1   117     sfr DAC0L    =  0xD2;   /* DAC 0 REGISTER - LOW BYTE                               */
  00D3          +1   118     sfr DAC0H    =  0xD3;   /* DAC 0 REGISTER - HIGH BYTE                              */
  00D4          +1   119     sfr DAC0CN   =  0xD4;   /* DAC 0 CONTROL                                           */
  00D5          +1   120     sfr DAC1L    =  0xD5;   /* DAC 1 REGISTER - LOW BYTE                               */
  00D6          +1   121     sfr DAC1H    =  0xD6;   /* DAC 1 REGISTER - HIGH BYTE                              */
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     3

  00D7          +1   122     sfr DAC1CN   =  0xD7;   /* DAC 1 CONTROL                                           */
  00D8          +1   123     sfr PCA0CN   =  0xD8;   /* PCA 0 COUNTER CONTROL                                   */
  00D9          +1   124     sfr PCA0MD   =  0xD9;   /* PCA 0 COUNTER MODE                                      */
  00DA          +1   125     sfr PCA0CPM0 =  0xDA;   /* CONTROL REGISTER FOR PCA 0 MODULE 0                     */
  00DB          +1   126     sfr PCA0CPM1 =  0xDB;   /* CONTROL REGISTER FOR PCA 0 MODULE 1                     */
  00DC          +1   127     sfr PCA0CPM2 =  0xDC;   /* CONTROL REGISTER FOR PCA 0 MODULE 2                     */
  00DD          +1   128     sfr PCA0CPM3 =  0xDD;   /* CONTROL REGISTER FOR PCA 0 MODULE 3                     */
  00DE          +1   129     sfr PCA0CPM4 =  0xDE;   /* CONTROL REGISTER FOR PCA 0 MODULE 4                     */
  00E0          +1   130     sfr ACC      =  0xE0;   /* ACCUMULATOR                                             */
  00E1          +1   131     sfr XBR0     =  0xE1;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 0               */
  00E2          +1   132     sfr XBR1     =  0xE2;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 1               */
  00E3          +1   133     sfr XBR2     =  0xE3;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 2               */
  00E4          +1   134     sfr RCAP4L   =  0xE4;   /* TIMER 4 CAPTURE REGISTER - LOW BYTE                     */
  00E5          +1   135     sfr RCAP4H   =  0xE5;   /* TIMER 4 CAPTURE REGISTER - HIGH BYTE                    */
  00E6          +1   136     sfr EIE1     =  0xE6;   /* EXTERNAL INTERRUPT ENABLE 1                             */
  00E7          +1   137     sfr EIE2     =  0xE7;   /* EXTERNAL INTERRUPT ENABLE 2                             */
  00E8          +1   138     sfr ADC0CN   =  0xE8;   /* ADC 0 CONTROL                                           */   
  00E9          +1   139     sfr PCA0L    =  0xE9;   /* PCA 0 TIMER - LOW BYTE                                  */   
  00EA          +1   140     sfr PCA0CPL0 =   0xEA;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - LOW BYTE  */
  00EB          +1   141     sfr PCA0CPL1 =   0xEB;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - LOW BYTE  */
  00EC          +1   142     sfr PCA0CPL2 =   0xEC;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - LOW BYTE  */
  00ED          +1   143     sfr PCA0CPL3 =   0xED;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - LOW BYTE  */
  00EE          +1   144     sfr PCA0CPL4 =   0xEE;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - LOW BYTE  */
  00EF          +1   145     sfr RSTSRC   =   0xEF;   /* RESET SOURCE                                            */
  00F0          +1   146     sfr B        =   0xF0;   /* B REGISTER                                              */
  00F1          +1   147     sfr SCON1    =  0xF1;   /* SERIAL PORT 1 CONTROL                                   */
  00F2          +1   148     sfr SBUF1    =  0xF2;   /* SERAIL PORT 1 DATA                                      */
  00F3          +1   149     sfr SADDR1   =  0xF3;   /* SERAIL PORT 1                                           */ 
  00F4          +1   150     sfr TL4      =  0xF4;   /* TIMER 4 DATA - LOW BYTE                                 */
  00F5          +1   151     sfr TH4      =  0xF5;   /* TIMER 4 DATA - HIGH BYTE                                */
  00F6          +1   152     sfr EIP1     =   0xF6;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 1                  */
  00F7          +1   153     sfr EIP2     =   0xF7;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 2                  */
  00F8          +1   154     sfr SPI0CN   =   0xF8;   /* SERIAL PERIPHERAL INTERFACE 0 CONTROL                   */  
  00F9          +1   155     sfr PCA0H    =   0xF9;          /* PCA 0 TIMER - HIGH BYTE                                 
                             */
  00FA          +1   156     sfr PCA0CPH0 =   0xFA;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - HIGH BYTE 
                             */
  00FB          +1   157     sfr PCA0CPH1 =   0xFB;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - HIGH BYTE 
                             */
  00FC          +1   158     sfr PCA0CPH2 =   0xFC;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - HIGH BYTE 
                             */
  00FD          +1   159     sfr PCA0CPH3 =   0xFD;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - HIGH BYTE 
                             */
  00FE          +1   160     sfr PCA0CPH4 =   0xFE;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - HIGH BYTE 
                             */   
  00FF          +1   161     sfr WDTCN    =   0xFF;          /* WATCHDOG TIMER CONTROL                                  
                             */
                +1   162             
                +1   163     
                +1   164     
                +1   165     
                +1   166     
  008F          +1   167     sbit TF1   = TCON ^ 7;              /* TIMER 1 OVERFLOW FLAG      */
  008E          +1   168     sbit TR1   = TCON ^ 6;              /* TIMER 1 ON/OFF CONTROL     */
  008D          +1   169     sbit TF0   = TCON ^ 5;              /* TIMER 0 OVERFLOW FLAG      */
  008C          +1   170     sbit TR0   = TCON ^ 4;              /* TIMER 0 ON/OFF CONTROL     */
  008B          +1   171     sbit IE1   = TCON ^ 3;              /* EXT. INTERRUPT 1 EDGE FLAG */
  008A          +1   172     sbit IT1   = TCON ^ 2;              /* EXT. INTERRUPT 1 TYPE      */
  0089          +1   173     sbit IE0   = TCON ^ 1;              /* EXT. INTERRUPT 0 EDGE FLAG */
  0088          +1   174     sbit IT0   = TCON ^ 0;              /* EXT. INTERRUPT 0 TYPE      */
                +1   175     
                +1   176     
  009F          +1   177     sbit SM00  = SCON0 ^ 7;             /* SERIAL MODE CONTROL BIT 0           */   
  009E          +1   178     sbit SM10  = SCON0 ^ 6;             /* SERIAL MODE CONTROL BIT 1           */
  009D          +1   179     sbit SM20  = SCON0 ^ 5;             /* MULTIPROCESSOR COMMUNICATION ENABLE */
  009C          +1   180     sbit REN0  = SCON0 ^ 4;             /* RECEIVE ENABLE                      */
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     4

  009B          +1   181     sbit TB80  = SCON0 ^ 3;             /* TRANSMIT BIT 8                      */
  009A          +1   182     sbit RB80  = SCON0 ^ 2;             /* RECEIVE BIT 8                       */
  0099          +1   183     sbit TI0   = SCON0 ^ 1;             /* TRANSMIT INTERRUPT FLAG             */
  0098          +1   184     sbit RI0   = SCON0 ^ 0;             /* RECEIVE INTERRUPT FLAG              */
                +1   185     
                +1   186     
  00AF          +1   187     sbit EA    = IE ^ 7;                /* GLOBAL INTERRUPT ENABLE      */  
  00AD          +1   188     sbit ET2   = IE ^ 5;                /* TIMER 2 INTERRUPT ENABLE     */
  00AC          +1   189     sbit ES0   = IE ^ 4;                /* UART0 INTERRUPT ENABLE       */
  00AB          +1   190     sbit ET1   = IE ^ 3;                /* TIMER 1 INTERRUPT ENABLE     */
  00AA          +1   191     sbit EX1   = IE ^ 2;                /* EXTERNAL INTERRUPT 1 ENABLE  */
  00A9          +1   192     sbit ET0   = IE ^ 1;                /* TIMER 0 INTERRUPT ENABLE     */
  00A8          +1   193     sbit EX0   = IE ^ 0;                /* EXTERNAL INTERRUPT 0 ENABLE  */
                +1   194     
                +1   195     
  00BD          +1   196     sbit PT2   = IP ^ 5;                /* TIMER 2 PRIORITY                                 */ 
                                  
  00BC          +1   197     sbit PS    = IP ^ 4;                /* SERIAL PORT PRIORITY                             */
  00BB          +1   198     sbit PT1   = IP ^ 3;                /* TIMER 1 PRIORITY                                 */
  00BA          +1   199     sbit PX1   = IP ^ 2;                /* EXTERNAL INTERRUPT 1 PRIORITY    */
  00B9          +1   200     sbit PT0   = IP ^ 1;                /* TIMER 0 PRIORITY                                 */
  00B8          +1   201     sbit PX0   = IP ^ 0;                /* EXTERNAL INTERRUPT 0 PRIORITY    */              
                +1   202     
                +1   203     
  00C7          +1   204     sbit BUSY     =   SMB0CN ^ 7;       /* SMBUS 0 BUSY                    */
  00C6          +1   205     sbit ENSMB    =   SMB0CN ^ 6;       /* SMBUS 0 ENABLE                  */
  00C5          +1   206     sbit STA      =   SMB0CN ^ 5;       /* SMBUS 0 START FLAG              */
  00C4          +1   207     sbit STO      =   SMB0CN ^ 4;       /* SMBUS 0 STOP FLAG               */
  00C3          +1   208     sbit SI       =   SMB0CN ^ 3;       /* SMBUS 0 INTERRUPT PENDING FLAG  */
  00C2          +1   209     sbit AA       =   SMB0CN ^ 2;       /* SMBUS 0 ASSERT/ACKNOWLEDGE FLAG */
  00C1          +1   210     sbit SMBFTE   =   SMB0CN ^ 1;       /* SMBUS 0 FREE TIMER ENABLE       */
  00C0          +1   211     sbit SMBTOE   =   SMB0CN ^ 0;       /* SMBUS 0 TIMEOUT ENABLE          */
                +1   212     
                +1   213     
  00CF          +1   214     sbit TF2   = T2CON ^ 7;             /* TIMER 2 OVERFLOW FLAG        */
  00CE          +1   215     sbit EXF2  = T2CON ^ 6;             /* EXTERNAL FLAG                */
  00CD          +1   216     sbit RCLK0 = T2CON ^ 5;             /* UART0 RX CLOCK SOURCE        */
  00CC          +1   217     sbit TCLK0 = T2CON ^ 4;             /* UART0 TX CLOCK SOURCE        */
  00CB          +1   218     sbit EXEN2 = T2CON ^ 3;             /* TIMER 2 EXTERNAL ENABLE FLAG */  
  00CA          +1   219     sbit TR2   = T2CON ^ 2;             /* TIMER 2 ON/OFF CONTROL       */
  00C9          +1   220     sbit CT2   = T2CON ^ 1;             /* TIMER OR COUNTER SELECT      */
  00C8          +1   221     sbit CPRL2 = T2CON ^ 0;             /* CAPTURE OR RELOAD SELECT     */
                +1   222     
                +1   223     
  00D7          +1   224     sbit CY    = PSW ^ 7;               /* CARRY FLAG              */       
  00D6          +1   225     sbit AC    = PSW ^ 6;               /* AUXILIARY CARRY FLAG    */
  00D5          +1   226     sbit F0    = PSW ^ 5;               /* USER FLAG 0             */
  00D4          +1   227     sbit RS1   = PSW ^ 4;               /* REGISTER BANK SELECT 1  */
  00D3          +1   228     sbit RS0   = PSW ^ 3;               /* REGISTER BANK SELECT 0  */
  00D2          +1   229     sbit OV    = PSW ^ 2;               /* OVERFLOW FLAG           */
  00D1          +1   230     sbit F1    = PSW ^ 1;               /* USER FLAG 1             */
  00D0          +1   231     sbit P     = PSW ^ 0;               /* ACCUMULATOR PARITY FLAG */
                +1   232     
                +1   233     
  00DF          +1   234     sbit CF    =   PCA0CN ^ 7;          /* PCA 0 COUNTER OVERFLOW FLAG   */
  00DE          +1   235     sbit CR    =   PCA0CN ^ 6;          /* PCA 0 COUNTER RUN CONTROL BIT */
  00DC          +1   236     sbit CCF4  =   PCA0CN ^ 4;          /* PCA 0 MODULE 4 INTERRUPT FLAG */
  00DB          +1   237     sbit CCF3  =   PCA0CN ^ 3;          /* PCA 0 MODULE 3 INTERRUPT FLAG */
  00DA          +1   238     sbit CCF2  =   PCA0CN ^ 2;          /* PCA 0 MODULE 2 INTERRUPT FLAG */
  00D9          +1   239     sbit CCF1  =   PCA0CN ^ 1;          /* PCA 0 MODULE 1 INTERRUPT FLAG */
  00D8          +1   240     sbit CCF0  =   PCA0CN ^ 0;          /* PCA 0 MODULE 0 INTERRUPT FLAG */
                +1   241     
                +1   242     
  00EF          +1   243     sbit AD0EN     =   ADC0CN ^ 7;      /* ADC 0 ENABLE                              */
  00EE          +1   244     sbit AD0TM     =   ADC0CN ^ 6;      /* ADC 0 TRACK MODE                          */
  00ED          +1   245     sbit AD0INT    =   ADC0CN ^ 5;      /* ADC 0 CONVERISION COMPLETE INTERRUPT FLAG */
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     5

  00EC          +1   246     sbit AD0BUSY   =   ADC0CN ^ 4;      /* ADC 0 BUSY FLAG                           */
  00EB          +1   247     sbit AD0CM1    =   ADC0CN ^ 3;      /* ADC 0 START OF CONVERSION MODE BIT 1      */
  00EA          +1   248     sbit AD0CM0    =   ADC0CN ^ 2;      /* ADC 0 START OF CONVERSION MODE BIT 0      */
  00E9          +1   249     sbit AD0WINT   =   ADC0CN ^ 1;      /* ADC 0 WINDOW COMPARE INTERRUPT FLAG       */
  00E8          +1   250     sbit AD0LJST   =   ADC0CN ^ 0;      /* ADC 0 RIGHT JUSTIFY DATA BIT              */
                +1   251     
                +1   252     
  00FF          +1   253     sbit SPIF     =   SPI0CN ^ 7;       /* SPI 0 INTERRUPT FLAG                     */
  00FE          +1   254     sbit WCOL     =   SPI0CN ^ 6;       /* SPI 0 WRITE COLLISION FLAG       */
  00FD          +1   255     sbit MODF     =   SPI0CN ^ 5;       /* SPI 0 MODE FAULT FLAG            */
  00FC          +1   256     sbit RXOVRN   =   SPI0CN ^ 4;       /* SPI 0 RX OVERRUN FLAG            */
  00FB          +1   257     sbit TXBSY    =   SPI0CN ^ 3;       /* SPI 0 TX BUSY FLAG                       */
  00FA          +1   258     sbit SLVSEL   =   SPI0CN ^ 2;       /* SPI 0 SLAVE SELECT                       */
  00F9          +1   259     sbit MSTEN    =   SPI0CN ^ 1;       /* SPI 0 MASTER ENABLE                      */
  00F8          +1   260     sbit SPIEN    =   SPI0CN ^ 0;       /* SPI 0 SPI ENABLE                         */         
                                          
                     261     
                     262     ;?from .work
                     263     
                     264     ;+        CSEG AT 0
                     265              
                     266     NAME    MAIN
                     267                       ; EXTRN CODE(end1)
                     268                       ; EXTRN CODE(numb)
                     269                       ; EXTRN CODE(SOROS)
                     270                       ; EXTRN CODE(Abegin)
                     271     
                     272                     ;PUBLIC gener,bitmas,bitrs,bitznak 
                     273                     ;PUBLIC meff
                     274                     ;PUBLIC rez_A, rez_A0;  !!!!!!!!!!!!!
0000                 275             org 0h;   cseg AT 01            
0000 020000   F      276             jmp     begin   ;Main        ; Locate a jump to the start of code at 
0003                 277             org 3
0003 32              278                     reti   
000B                 279             org 0bh
000B 32              280                     reti
0013                 281             org 13h
0013 32              282                     reti
001B                 283             org 1bh
                     284     ;? timer1
001B 32              285                     reti
0023                 286             org 23h
0023 020000   F      287                     jmp     rs_byte ;!reti
002B                 288             org 2bh
002B 020000   F      289                     jmp     inter2  ;Timer2, IE.5,IP.5(ET2,PT2)
0033                 290             org 33h
0033 32              291                     reti
003B                 292             org 3bh
003B 32              293                     reti
0043                 294             org 43h
0043 32              295                     reti
004B                 296             org 4bh
004B 32              297                     reti
0053                 298             org 53h
0053 32              299                     reti
005B                 300             org 5bh
005B 32              301                     reti 
0063                 302             org 63h
0063 32              303                     reti
006B                 304             org 6bh
006B 32              305                     reti
0073                 306             org 73h
0073 32              307                     reti
0093                 308             org     93h
0093 020000   F      309                     jmp             keyb1           ;IE6
009B                 310             org     9bh
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     6

009B 020000   F      311                     jmp             keyb2      ;IE7
                     312     
  00CA               313     TMR2RLL  DATA 0cah;    // TIMER 2 RELOAD LOW                                       */
  00CB               314     TMR2RLH  DATA 0cbh;    // TIMER 2 RELOAD HIGH 
                     315      
                     316     Main         SEGMENT  CODE
                     317     
----                 318                     DSEG
                     319       
  0040               320     bufind  DATA    40h;буффер индикации 12byte
  004F               321     abin            DATA    4fh     ;4byte long~adec's digits
  0053               322     adec            DATA    53h     ;53h..5dh 10byte
  006E               323     chmas           DATA    6eh     ;счетчик л-тов незаполн массива
  006F               324     mabin           DATA    6fh
  0077               325     reacp           DATA    77h     ;результат чтения асп 4byte int (hex)
  003D               326     chkl            DATA    3dh     ;счетчик задержки клавиатуры 2bait                         
  003F               327     chmasN  DATA    3fh     ;n=2,n=10 суммирование n значений       =20(27.12.06)
  003C               328     savba           DATA    3ch     ;сохр байта индикации при миганиии      
  003B               329     movrig      DATA        3bh     ;крайне правое положение
  003A               330     movleft     DATA        3ah     ;крайне левое положение                  
  0039               331     nuerr           DATA    39h     ;номер ошибки (для интерфейса)  
  0038               332     nblok           DATA    38h     ;номер введенного блока
  0037               333     nelem           DATA    37h     ;номер лемента в блоке 0..200
  0036               334     saus            DATA    36h     ;сохр упр слово
  0034               335     sadiap  DATA    34H     ;сохр диапазон на кот проходила запись блока1
  0033               336     chind2  DATA    33h     ;счетчик индикации
  0032               337     sadiap2 DATA    32h     ;сохр диапазон на кот проходила запись блока2
  0031               338     sadiap3 DATA    31h     ;сохр диапазон на кот проходила запись блока3
  0030               339     sadiap4 DATA    30h     ;сохр диапазон на кот проходила запись блока4
                     340     ;DATA           2fh
                     341     ;;;;;
  0020               342     cellbit         DATA    20h
  0000               343     bitznak         BIT     cellbit.0       ;20.0           
  0001               344     bitmas          BIT     cellbit.1       ;20.1 бит заполнения массива            
  0002               345     znmat                   BIT     cellbit.2       ;20.2
  0003               346     bitrs                   BIT     cellbit.3       ;20.3
  0004               347     bitizm          BIT     cellbit.4       ;20.4 вкл реж измерения
  0005               348     bitavp          BIT     cellbit.5       ;20.5  бит режима avp
  0006               349     bitvi11         BIT     cellbit.6       ;20.6   бит нажатия ввод режима вычислить R!!!
  0007               350     bitzus          BIT     cellbit.7       ;20.7;флаг задержки     после установки us      
                     351     
  0021               352     cellbit1                DATA    21h
                     353     ;?bitbuf                BIT     cellbit1.0      ;21.0   
  0008               354     speed_rs                BIT     cellbit1.0      ;?21.0
                     355     
  0009               356     bitprd          BIT     cellbit1.1      ;21.1  выдача вкл       
  000A               357     bitbon          BIT     cellbit1.2      ;21.2  буфер вкл
  000B               358     bitmem          BIT     cellbit1.3      ;21.3 нажата кн память
                     359     ;bmem11         BIT     cellbit1.4      ;21.4    бит ПАМ11
  000D               360     bifl_kt         BIT     cellbit1.5      ;21.5  бит для выч Км теста измерения  
                     361     ;bmem13         BIT     cellbit1.6      ;21.6            
  000F               362     bitnul          BIT     cellbit1.7      ;21.7 бит кнопки НУЛЬ
                     363     
  0022               364     cellbit2                DATA    22h
  0010               365     bitt2                   BIT     cellbit2.0      ;22.0 уст признак Tизм2 нажата кнопка Т 
  0011               366     bitmenu         BIT     cellbit2.1      ;22.1  бит режима меню(нажата кн меню)  
  0012               367     bitklb          BIT     cellbit2.2      ;22.2  признак калибровки
  0013               368     bitv19          BIT     cellbit2.3      ;22.3   бит установки скор итерфейса 19.6
  0014               369     bitvich         BIT     cellbit2.4      ;22.4  1-е нажатие кн ВЫЧ R (режим ВЫЧ R)
  0015               370     biteizm         BIT     cellbit2.5      ;22.5   признак теста измерения 
  0016               371     bitpar          BIT     cellbit2.6      ;22.6   бит проведенного 1раз пароля 
  0017               372     bitoll          BIT     cellbit2.7      ;22.7 бит перегрузки
                     373     ;в реж измерения прибор измеряет (кнопка ИЗМ не нажата )
                     374     ;при нажатии кнопок (T,МЕНЮ ,ПАМЯТЬ ,ВЫЧ R)прибор выходит из реж измерения
                     375     ;и выдает т.н. буфер индикации  
  0023               376     cellbit3                DATA    23h
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     7

  0018               377     knizm                   BIT     cellbit3.0      ;22.0 уст признак нажата кнопка ИЗМ     
  0019               378     bitmig          BIT     cellbit3.1      ;22.1 бит мигания при наборе конст      
  001A               379     bitakt          BIT     cellbit3.2      ;22.2  бит такта
  001B               380     bitznB          BIT     cellbit3.3      ;22.3 БИТ ЗНАКА ПРИ ВВОДЕ константы В
  001C               381     bitprer         BIT     cellbit3.4      ;22.4    
                     382     ;bit                    BIT             cellbit3.5      ;22.5    
                     383     ;bit                    BIT             cellbit3.6      ;22.6            
                     384     ;bit                    BIT             cellbit3.7      ;22.7
                     385     
  000C               386     is_2            BIT     cellbit1.4      ;бит 'to RS direct out'
  000E               387     is_mem  BIT     cellbit1.6      ;21.6            
  001F               388     is_izm  BIT     cellbit3.7
  001D               389     is_cmd  BIT     cellbit3.5
  001E               390     is_rs           BIT     cellbit3.6      ;out rez_A3
  00DB               391     buf_in  DATA    0DBh    ;4
  0024               392     cnt_out DATA    24h
  0025               393     cnt_in  DATA    25h
  0026               394     p_out           DATA    26h     ;??
  0027               395     p_in            DATA    27h
  004E               396     cmd_rez DATA    4Eh
  0098               397     RI              BIT     SCON0.0
  0099               398     TI              BIT     SCON0.1
                     399     
                     400     
  005E               401     rez_Ame data 5eh;float   (РЕЗ1-AN)*K
                     402     ;hex
  0062               403     rez_A           data 62h        ;РЕЗ сумма 100 (10)отсчетов измерения    
  0066               404     rez_A1  data 66h        ;РЕЗ1  среднее по массиву из 2,10 ти лементов int (hex)
  006A               405     rez_A0  data 6ah        ;рез изм по нажатию кн НУЛЬ
  007B               406     rez_A2  data 7bh        ; A2
  0098               407     chinkor data  98h       ;80h,счетчик интервала коррекции  2byte
  0081               408     chavt           data  81h       ;счетчик автокалибровки  2byte
  0083               409     chdel           data  83h       ; счетчик задержки
                     410     ;float
  0084               411     kor0_AN data  84h       ;4byte  AN      результат коррекции 0
  0088               412     rezAp           data  88h       ;4byte  A+
  008C               413     rezAm           data  8ch       ;4byte  A-
  0090               414     koefKp  data  90h       ;4byte  K+
  0094               415     koefKm  data  94h       ;4byte  K-
                     416     ;hex 
  009A               417     parT            data  9ah       ;параметр времени измерения
  009B               418     chbefore        data  9bh       ;счетчик предварительного суммирования
  009C               419     rez_A3          data  9ch       ;A3
                     420     ;FLOAT
  00A0               421     koefKD  data  0a0h      ;KD кофф диапазона
  00A4               422     rez_Ak  data  0a4h      ;Ak
  00A8               423     parol           data  0a8h      ;храним в памяти пароль
  00AC               424     chind           data  0ach      ;счетчик индикации
                     425     ;chbuf  data  0adh       ;счетчик периода загрузки в буфер и интерфейс
  00AE               426     diap            data  0aeh      ;номер диапазона
  00AF               427     parN            data  0afh      ;N  пар разрядности индикатора
  00B0               428     level           data  0b0h      ;уровень в меню, выч    ,Tизм
  00B1               429     vichR           data  0b1h      ;параметр =11,12,13,21          state of menu VychR
  00B2               430     marker  data  0b2h      ;номер мигающего знакоместа
  00B3               431     summa           data  0b3h      ;ячейка для суммирования        rez_A
  00B7               432     load            data  0b7h      ;яч для загрузки текстов на индикатор
  00B8               433     work            data  0b8h      ;рабочая ячейка
  00BC               434     konstA  data  0bch      ;введенная с крана константа A
                     435     ;konstB data  0c0h       ;введенная с крана константа B
  00C0               436     saven_bl2       data    0c0h    ;копия адреса последней записанной ячейки блока2
  00C2               437     saven_bl3       data  0c2h      ;копия адреса последней записанной ячейки блока3 
                     438                ;c4 1bait
                     439     ;igor---
  00C4               440     byte_kor        data    0c4h    ;признак вкл/откл кор-ки
                     441     ;----
  00C5               442     Rez_del data  0c5h      ;сумма n-значений /n
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     8

  00C9               443     rez_R           data    0c9h    ;рез вычисления R 4baita
  00CD               444     interva data  0cdh      ;значение интервала (запись)2baita
  00CF               445     chbuf           data  0cfh      ;счетчик периода загрузки в буфер и интерфейс
  00D3               446     saven_bl        data  0d3h      ;номер ячейки в блоке 2 baita
  00D5               447     volume  data    0d5h    ;объем блока 2 baita
  00D6               448     chblok  data    0d6h    ;volume;кол измерений блока
  00D7               449     copy_hl data  0d7h      ;адрес ячейки блока для просмотра 
  00D9               450     saven_bl4       data  0d9h      ;копия адреса последней записанной ячейки блока4
                     451     ;data           0dbh e0h-граница стека
                     452     
                     453     ;внешнее ОЗУ 64K
                     454     ;в обл внешнего озу 0..ffh читается страница рпзу и при записи в любую
                     455     ;ячейку  стирается целая страница 0..ffh рпзу
                     456     ;               XSEG AT 100h
                     457             PUBLIC    MASS0
  0100               458     MASS0  xdata 0100h;     скользящий массив измерения
  0104               459     MASS1  xdata 0104h;
  0108               460     MASS2  xdata 0108h;
  010C               461     MASS3  xdata 010ch;
  0110               462     MASS4  xdata 0110h;
  0114               463     MASS5  xdata 0114h;
  0118               464     MASS6  xdata 0118h;
  011C               465     MASS7  xdata 011ch;
  0120               466     MASS8  xdata 0120h;
  0124               467     MASS9  xdata 0124h;
  0128               468     MASS10  xdata 0128h;
  012C               469     MASS11  xdata 012ch;
  0130               470     MASS12  xdata 0130h;
  0134               471     MASS13  xdata 0134h;
  0138               472     MASS14  xdata 0138h;
  013C               473     MASS15  xdata 013ch;
  0140               474     MASS16  xdata 0140h;
  0144               475     MASS17  xdata 0144h;
  0148               476     MASS18  xdata 0148h;
  014C               477     MASS19  xdata 014ch;
  0E00               478     chbuf1  xdata 0e00h;счетчик буфера 1
                     479     ;xdata  0e04
  0000               480                     rr0     EQU     00
  0001               481                     rr1     equ     01
  0006               482                     rr6   equ       06
  0002               483                     rr2     equ     02
  0003               484                     rr3     equ     03
  0007               485                     rr7   equ       07
  0008               486                     r8      equ     08
  0009               487                     r9      equ     09
  000A               488                     r10     equ     10
  000B               489                     r11   equ       11
                     490     
----                 491                  rseg     Main         ; Switch to this code segment.
                     492     
                     493                  using    0            ; Specify register bank for the following
                     494     
0100                 495             org 100h
                     496     ;$EJECT
                     497     
0100 7581E0          498     begin:  mov             sp, #0e0h               ;?8
                     499     
0103 75E900          500                     mov             PCA0L,#00;=0x00;
0106 75D900          501                     mov             PCA0MD,#00;= 0x00;
0109 75A41F          502                     mov             P0MDOUT,#1fh;=0x1f;
010C 75A5CC          503                     mov             P1MDOUT,#0cch;86h;8fh;=0x8f;
010F 75A600          504                     mov             P2MDOUT,#00;=0x00;
                     505             
0112 75A73F          506                     mov             P3MDOUT,#3fh;
0115 75B5FF          507                     mov             P74OUT ,#0ffh;=0xff;
0118 75D103          508                     mov             REF0CN,#03h;=0x03;
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE     9

                     509             
011B 75E114          510                     mov             XBR0,#14h;= 0x14;
011E 75E200          511                     mov             XBR1,#00; =0x00;
0121 75E300          512                     mov             XBR2,#00;=0x00
0124 75B0C0          513                     mov             P3,#0c0h
0127 75FFDE          514                     mov             WDTCN,#0deh;=0xde;запрет работы WDT
012A 75FFAD          515                     mov             WDTCN,#0adh;=0xad;                                   
012D 758922          516                     mov             TMOD,#22h;=0x22;        регистр режимов
0130 758E30          517                     mov             CKCON,#30h;=0x30; сист частота/12     
0133 758CF9          518                     mov             TH0,#0f9h;=0xf9;  Установка таймера
0136 758AF9          519                     mov             TL0,#0f9h;=0xf9; 
0139 75E680          520                     mov             EIE1,#80h;=0x80;
                     521     
013C 75D480          522                     mov             DAC0CN,#80h;=0x80;
013F 75D780          523                     mov             DAC1CN,#80h;=0x80;
0142 75B167          524                     mov             OSCXCN,#67h;=0x67;
                     525     
                     526     
0145                 527     gener:  ;+mov           a, oscxcn
                     528             ;+cjne  a,#11100111b,gener      ;?E7
0145 75B288          529                     mov             OSCICN,#88h;=0x84;
0148 75CA00          530                     mov             TMR2RLL,#0;=0;
014B 75CBD1          531                     mov             TMR2RLH,#0d1h;=0xd1;
                     532       
014E D28E            533                     setb    TCON.6                  ;регистр управления
0150 D28C            534                     setb            tcon.4
0152 75EF00          535                     mov             RSTSRC,#0;=00   ;//источники сброса 
0155 75E340          536                     mov             XBR2,#40h
0158 75E10E          537                     mov             XBR0,#0eh;06h;16h
015B 75F803          538                     mov             SPI0CN,#03
015E 759D31          539                     mov             spi0ckr,#31H;;;;;;;;#04
                     540     ;установка скорости
0161 759850          541                     mov             SCON0,#50h;01010000;скорость обмена определяется таймером1
0164 758780          542                     mov             PCON,#10000000b;удвоенная скорость передачи SMOD0=1
0167 758E10          543                     mov             CKCON,#00010000b;TIM=1                  ? was 30h
016A 758920          544                     mov             TMOD,#00100000b;реж2 внутр ист синхр ? was 22h
016D 758840          545                     mov             TCON,#01000000b;счетчик запущен ?.4,.6 was set
0170 75D900          546                     mov             PCA0MD,#00              ;PCA 
0173 75DA00          547                     mov             PCA0CPM0,#00000000b;00000110b;01000010b;
0176 75EA00          548                     mov             PCA0CPL0,#00
0179 75FA9C          549                     mov             PCA0CPH0,#9ch;регулировка звука 088h;90h
017C 75D840          550                     mov             PCA0CN,#40h
017F 75C800          551                     mov             T2CON,#00
0182 758DF4          552                     mov     TH1,#244        ;220~19600
0185 D28E            553                     setb    TR1     ;start Timer1
                     554     
                     555     ;?      mov   SBUF0,#37h
                     556     
                     557     ;       mov     3,#33
                     558     ;       mov     r2,#30
                     559     ;       mov     r0,#0DAh
                     560     
                     561     ;debug: mov     A,r2
                     562     ;               mov     @r0,A
                     563     ;               inc     r2
                     564     ;               inc     r0
                     565     ;               djnz    3,debug ;jmp    debug   ;interrupt debug
                     566     
                     567     
                     568     ;       mov     SBUF,#7
                     569     ;       jnb     TI,$
                     570     ;       clr     TI
                     571     
                     572     ;               mov     IE,#90h ;RS, ?Tim1
                     573     
                     574     ;?              mov             r2,#50h                 ;57.6->19.2
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    10

                     575     ;               mov             r3,#2ch
                     576     ;               call    re4byte                 ;502ch 1 bait skor
                     577     ;               mov             a,r8
                     578     ;?              cjne            a,#00,yst19
0187 C213            579                     clr             bitv19                  ;57.6
0189 758DF4          580                     mov             TH1,#244
018C 758BFD          581                     mov             TL1,#0FDh
018F 8008            582                     jmp             yst1
0191 900000   F      583     yst19:  mov     dptr,#teS19_2
0194 D213            584                     setb    bitv19                  ;19,2
0196 758DDC          585                     mov     TH1,#220
0199                 586     yst1:
0199 D28E            587                     setb    TR1     ;?start Timer1
019B 75E730          588                     mov             EIE2,#30H;00110000
                     589             ;       mov             EIP2,#30H
                     590     
                     591     ;       mov     p_in,#buf_in    ; for receive
                     592     ;       mov     cnt_out,#0      ;??
                     593     ;       mov     cnt_in,#0
                     594     
019E 75A880          595                     mov     IE,#80h ;??80//Снятие блокировки всех прерываний+RS
                     596     ;ozu
01A1 E4              597                     clr     a
01A2 7800            598                     mov     r0,#00h 
01A4 F6              599     mecle:  mov     @r0,a                   ;обнулить озу 256 байт
01A5 08              600                     inc     r0
01A6 B87FFB          601                     cjne    r0,#7fh,mecle
01A9 7880            602                     mov     r0,#80h
01AB F6              603     meff:           mov     @r0,a 
01AC F2              604                     movx @r0,a
01AD 08              605                     inc     r0
01AE B8DFFA          606                     cjne    r0,#0dfh,meff
                     607     
                     608     
                     609     ;               mov     cnt_out,#33             ;+
                     610     ;               mov     p_out,#0DAh
                     611     
01B1 120000   F      612                     call    clmassix
                     613     ;обнулить внешнее озу 4кбайта
01B4 900000          614                     mov     dptr,#0
01B7 E4              615     extcle: clr     a
01B8 F0              616                     movx    @dptr,a
01B9 A3              617                     inc     dptr
01BA E583            618                     mov     a,dph
01BC B410F8          619                     cjne    a,#10h,extcle
                     620     
01BF 7898            621                     mov             r0,#chinkor
01C1 7600            622                     mov             @r0,#0;1;
01C3 08              623                     inc             r0
01C4 7619            624                     mov             @r0,#19h;64h;0c8h;90h;
                     625     
01C6 7881            626                     mov             r0,#chavt
01C8 7601            627                     mov             @r0,#1
01CA 08              628                     inc             r0
01CB 7690            629                     mov             @r0,#90h
                     630     
01CD 78B2            631                     mov             r0,#marker
01CF 76FF            632                     mov             @r0,#0ffh
                     633     ;--------------------------------------------
01D1 78C4            634                             mov             r0,#byte_kor    ;igor
01D3 7600            635                             mov             @r0,#0                  ;
                     636     ;---------------------------------------------
01D5                 637     after_2:        ;?here 28.10.07
01D5 74FF            638                     mov             a,#0ffh
01D7 F585            639                     mov             p5,a
01D9 799A            640                     mov             r1,#parT
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    11

01DB 7702            641                     mov             @r1,#2                  ;Tizm=1s
01DD 79AE            642                     mov             r1,#diap
01DF 7705            643                     mov             @r1,#5                  ;10-7a
01E1 753405          644                     mov             sadiap,#5
01E4 79AF            645                     mov             r1,#parN
01E6 7702            646                     mov             @r1,#2
01E8 7400            647                     mov             a,#00h
01EA F585            648                     mov             p5,a
01EC D204            649                     setb            bitizm
                     650     
01EE 799B            651                     mov             r1,#chbefore
01F0 7700            652                     mov             @r1,#0
                     653     
01F2 900000   F      654                     mov             dptr,#ch_1              ;1->r2..r5 float
01F5 120000   F      655                     call    ldc_long
01F8 7890            656                     mov             r0,#koefKp         ;1(float)->koefKp
01FA 120000   F      657                     call    saver2
01FD 7894            658                     mov             r0,#koefKm              ;1(float)->koefKm
01FF 120000   F      659                     call    saver2
0202 78A0            660                     mov             r0,#koefKD
0204 120000   F      661                     call    saver2
0207 78CF            662                     mov             r0,#chbuf
0209 120000   F      663                     call    saver2
020C 900158          664                     mov             dptr,#158h;1 блок(2е с конца измерение) 
020F 79D3            665                     mov             r1,#saven_bl
0211 E583            666                     mov             a,dph
0213 F7              667                     mov             @r1,a
0214 09              668                     inc             r1
0215 E582            669                     mov             a,dpl
0217 F7              670                     mov             @r1,a
                     671     
0218 900478          672                     mov                     dptr,#478h;2 блок(2е с конца измерение) 
021B 79C0            673                     mov             r1,#saven_bl2
021D E583            674                     mov             a,dph
021F F7              675                     mov             @r1,a
0220 09              676                     inc             r1
0221 E582            677                     mov             a,dpl
0223 F7              678                     mov             @r1,a
0224 900798          679                     mov                     dptr,#798h;3 блок(2е с конца измерение) 
0227 79C2            680                     mov             r1,#saven_bl3
0229 E583            681                     mov             a,dph
022B F7              682                     mov             @r1,a
022C 09              683                     inc             r1
022D E582            684                     mov             a,dpl
022F F7              685                     mov             @r1,a
0230 900AB8          686                     mov             dptr,#0ab8h;4 блок(2е с конца измерение)        
0233 79D9            687                     mov             r1,#saven_bl4
0235 E583            688                     mov             a,dph
0237 F7              689                     mov             @r1,a
0238 09              690                     inc             r1
0239 E582            691                     mov             a,dpl
023B F7              692                     mov             @r1,a
023C 753801          693                     mov             nblok,#1                        ;номер введенного блока
023F 753701          694                     mov             nelem,#1
0242 78CD            695                     mov             r0,#interva
0244 7600            696                     mov             @r0,#0
0246 08              697                     inc             r0
0247 7601            698                     mov             @r0,#1
0249 7840            699                     mov             r0,#bufind
024B                 700     age2:
024B 76FD            701                     mov             @r0,#0fdh         ;погасить индикатор
024D 08              702                     inc             r0
024E B84CFA          703                     cjne    r0,#bufind+12,age2              
0251 120000   F      704                     call    ind
0254 120000   F      705                     call    z_1s
                     706     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    12

                     707                     ;зажечь все лементы индикации
0257 7840            708                     mov     r0,#bufind
0259 7669            709     ageon:  mov     @r0,#69h;0feh;?
025B 08              710                     inc     r0
025C B84CFA          711                     cjne    r0,#bufind+12,ageon             
025F 120000   F      712                     call    ind
0262 120000   F      713                     call    z_1s            ;1sec
                     714     
0265 120000   F      715                     call    z_15;z_1ms
0268 434B10          716                     orl     bufind+11,#10h;бит точки после 1 знакоместа
                     717     
026B 7C60            718                     mov     r4,#60h
026D 7D00            719                     mov     r5,#00         
026F 120000   F      720                     call    iniacp;инициализация acp
0272 120000   F      721                     call    loadUS          ;us 10-7 A
                     722     ;?after_2:              
                     723     ;?              setb            bitizm
                     724                             
0275 7527DB          725             mov     p_in,#buf_in    ; for receive
0278 752400          726             mov     cnt_out,#0      ;??
027B 752500          727             mov     cnt_in,#0
027E 75A890          728             mov     IE,#90h ;Снятие блокировки всех прерываний+RS
                     729     
0281                 730     rebyte:
                     731     
0281 301D03          732             jnb     is_cmd,me3              ;??
0284 120000   F      733             call    cmd_tree
0287                 734     me3:
                     735     
0287 C217            736                     clr             bitoll
0289 3095FD          737                     jnb             p1.5,$
028C 2095FD          738                     jb              p1.5,$
                     739                     ;mov            a,P6            ;p6.4=0
                     740                     ;anl            a,#0efh
                     741                     ;mov            P6,a
                     742                     ;nop
                     743                     ;nop
                     744                                     
                     745                     ;mov            a,P6                    ;p6.4=1 
                     746                     ;orl            a,#10h
                     747                     ;mov            P6,a                        
028F 7411            748                     mov             a,#11h
0291 120000   F      749                     call    write
                     750             ;чтение acp
0294 120000   F      751                     call    read    
0297 F578            752                     mov     reacp+1,A       ;старший байт 
0299 120000   F      753                     call    read    
029C F579            754                     mov     reacp+2,A       ;средний байт 
029E 120000   F      755                     call    read
02A1 F57A            756                     mov     reacp+3,A               ;мл байт
                     757     
02A3 7878            758                     mov             r0,#reacp+1
02A5 E6              759                     mov             a,@r0
02A6 20E743          760                     jb              acc.7,znplus;
02A9 D200            761                     setb    bitznak
02AB 4480            762                     orl             a,#80h  ;ост содерж яч 
02AD F6              763                     mov             @r0,a
                     764                                     
02AE 18              765     mmm:            dec             r0;,#reacp
02AF 76FF            766                     mov             @r0,#0ffh
02B1 8041            767                     jmp             goznak
                     768     
02B3 120000   F      769     mem10ms:        call            ind
02B6 80C9            770                     jmp             rebyte  ;10ms
                     771     
02B8                 772     labelA: ;разрешить ie6,ie7
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    13

                     773     ;               mov             a,chkl+1                ;low
                     774     ;               jnz             no0key
02B8 E53D            775                     mov             a,chkl
02BA 30E70B          776                     jnb             acc.7,no0key;jnz                        no0key
02BD E5AD            777                     mov             a,P3IF
02BF 543F            778                     anl             a,#3fh
02C1 F5AD            779                     mov             P3IF,a
02C3 75E730          780                     mov             EIE2,#30h ;EIE2.5,EIE2.4
02C6 800D            781                     jmp             yes0key
                     782                        
02C8                 783     no0key: ;mov            r1,#chkl 
                     784                     ;call   chdec
02C8 C3              785                     clr             c
02C9 E53E            786                     mov             a,chkl+1;chkl-1
02CB 9401            787                     subb            a,#1
02CD F53E            788                     mov             chkl+1,a
02CF E53D            789                     mov             a,chkl
02D1 9400            790                     subb            a,#0
02D3 F53D            791                     mov             chkl,a
                     792     
02D5                 793     yes0key:
02D5 2004A9          794                     jb              bitizm,rebyte
                     795              ;буфер 2 выдать на индикацию
02D8 E533            796                     mov             a,chind2                        ;реже выдавать на индикацию
02DA 700B            797                     jnz             nochind
02DC 753364          798                     mov             chind2,#100
02DF 120000   F      799                     call            ind
02E2 120000   F      800     yes0key1:       call            z_1ms;z_01s
                     801                     ;call   z_01s
                     802                     ;call   z_01s
02E5 80D1            803                     jmp             labelA
                     804     
02E7 14              805     nochind:        dec             a
02E8 F533            806                     mov             chind2,a
02EA 80F6            807                     jmp             yes0key1;labelA
                     808             
02EC C200            809     znplus: clr     bitznak
02EE 547F            810                     anl             a,#7fh;fdh                      ;+
02F0 F6              811                     mov             @r0,a
02F1 18              812                     dec             r0      ;,#reacp
02F2 7600            813                     mov             @r0,#00h
                     814                             
02F4                 815     goznak:
02F4 787A            816                     mov             r0,#reacp+3
02F6 E6              817                     mov             a,@r0
02F7 7F05            818                     mov             r7,#5           ;6 сдвиг на 5 разрядов вправо
02F9 C3              819     sdvig3:         clr             c
02FA 13              820                     rrc             a
02FB DFFC            821                     djnz            r7,sdvig3       ;d7,d6,d5         мл байт
02FD FA              822                     mov             r2,a            ;сохр байт
02FE 18              823                     dec             r0              ;reacp+2
02FF E6              824                     mov             a,@r0
0300 C0E0            825                     push    acc
0302 C3              826                     clr             c
0303 7F03            827                     mov             r7,#3;2
0305 C3              828     sdvig2:         clr             c
0306 33              829                     rlc             a
0307 DFFC            830                     djnz            r7,sdvig2       ;d12..d11        средний байт
0309 4A              831                     orl             a,r2
030A F57A            832                     mov             reacp+3,a       ;сформ мл байт
030C D0E0            833                     pop     acc
030E 7F05            834                     mov             r7,#5;6
0310 C3              835     sdvig1:         clr             c
0311 13              836                     rrc             a
0312 DFFC            837                     djnz    r7,sdvig1               ;d15,d14          ср байт
0314 FA              838                     mov             r2,a    ;сохр
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    14

0315 E578            839                     mov             a,reacp+1
0317 C0E0            840                     push    acc
                     841                     ;       push    acc
0319 7F03            842                     mov             r7,#3;2
031B C3              843     sdvig0:         clr             c
031C 33              844                     rlc             a
031D DFFC            845                     djnz    r7,sdvig0               ;d21..d16
031F 4A              846                     orl             a,r2
0320 F579            847                     mov             reacp+2,a       ;сформ средний  байт
0322 D0E0            848                     pop             acc             ;reacp+1
0324 20E70B          849                     jb              acc.7,sdvm
0327 C3              850                     clr             c
0328 7F05            851                     mov             r7,#5;6
032A C3              852     sdvig4:         clr             c
032B 13              853                     rrc             a
032C DFFC            854                     djnz            r7,sdvig4       ;d23,d22
032E F578            855                     mov             reacp+1,a
0330 8008            856                     jmp             readyacp        ;ankor;klmas
                     857     
0332 7F05            858     sdvm:           mov             r7,#5;6
0334 D3              859     sdvig6: setb            c
0335 13              860                     rrc             a
0336 DFFC            861                     djnz            r7,sdvig6 ;       d23,d22
0338 F578            862                     mov             reacp+1,a
                     863     ; reacp..reacp+3-результат чтения асп(hex) 
033A 7898            864     readyacp:       mov             r0,#chinkor
033C E6              865                     mov             a,@r0
033D 30E702          866                     jnb             acc.7,gopart
0340 8044            867                     jmp             sumt2
                     868                     
0342                 869     gopart:
0342 789A            870                     mov             r0,#parT        ;параметр времени
0344 793F            871                     mov             r1,#chmasN      ;суммир-ние n значений =20
0346 B6013A          872                     cjne            @r0,#1,noparT1
                     873             ;РЕЗ+РЕЗ
0349 7877            874                     mov             r0,#reacp
034B 120000   F      875                     call            resar2  ;reacp->r2..r5
034E 78B6            876                     mov             r0,#summa+3     ;rez_A+3
0350 120000   F      877                     call            ladd
0353 78B3            878                     mov             r0,#summa;rez_A
0355 120000   F      879                     call            saver2
0358 793F            880                     mov             r1,#chmasN
035A 7714            881                     mov             @r1,#20;10
035C 789B            882                     mov             r0,#chbefore
035E B6631E          883                     cjne            @r0,#99,nobef99
                     884             ;РЕЗ/100
0361 900000   F      885                     MOV     DPTR,#ch100 
0364 120000   F      886     allsum: CALL  ldc_ltemp          ; ltemp <-- 100
0367 120000   F      887                     call    zdiv;divide
036A 7862            888                     mov     r0,#rez_A
036C 120000   F      889                     call    saver2          ;сумма 100 отсчетов /100
036F 78C5            890                     mov     r0,#Rez_del
0371 120000   F      891                     call    saver2  
                     892     
0374 78B3            893                     mov             r0,#summa
0376 120000   F      894                     call            clear4
                     895     
0379 799B            896                     mov             r1,#chbefore
037B 7700            897                     mov             @r1,#0
037D 8070            898                     jmp             klmas           ;загр в массив скользящее ср
037F 06              899     nobef99:        inc             @r0                     ;chbefore
0380 020000   F      900                     jmp             rebyte;labelA;метка A
                     901     ;сначала суммируем 100 знач (не выводим на индикатор не расп в скользящий массив )
                     902     ;а потом уже располагаем  в скользящий массив  из n
                     903     
                     904     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    15

0383 B6021D          905     noparT1:        cjne    @r0,#2,noparT2
                     906             ;РЕЗ+РЕЗ
0386                 907     sumt2:
0386 7877            908                     mov     r0,#reacp
0388 120000   F      909                     call    resar2          ;reacp->r2..r5
038B 78B6            910                     mov     r0,#summa+3;rez_A+3
038D 120000   F      911                     call    ladd
0390 78B3            912                     mov     r0,#summa;rez_A
0392 120000   F      913                     call    saver2
0395 789B            914                     mov     r0,#chbefore
0397 793F            915                     mov     r1,#chmasN
0399 770A            916                     mov     @r1,#10
039B B613E1          917                     cjne    @r0,#19,nobef99;9,nobef99
                     918             ;РЕЗ/20
039E 900000   F      919                     MOV     DPTR,#ch20;ch10 
03A1 80C1            920                     jmp     allsum
                     921     
03A3 B6031D          922     noparT2:        cjne    @r0,#3,noparT3
03A6 7877            923                     mov     r0,#reacp
03A8 120000   F      924                     call    resar2          ;reacp->r2..r5
03AB 78B6            925                     mov     r0,#summa+3;rez_A+3
03AD 120000   F      926                     call    ladd
03B0 78B3            927                     mov     r0,#summa;rez_A
03B2 120000   F      928                     call    saver2
03B5 789B            929                     mov     r0,#chbefore
03B7 793F            930                     mov     r1,#chmasN
03B9 7702            931                     mov     @r1,#2;4                                        ;n=4
03BB B609C1          932                     cjne    @r0,#9,nobef99;9,nobef99
                     933             ;РЕЗ/10
03BE 900000   F      934                     MOV             DPTR,#ch10 
03C1 80A1            935                     jmp             allsum
                     936                             
03C3 B6041D          937     noparT3:        cjne    @r0,#4,noparT4
03C6                 938     aapar:          
03C6 7877            939                     mov             r0,#reacp
03C8 120000   F      940                     call            resar2          ;reacp->r2..r5
03CB 78B6            941                     mov             r0,#summa+3;rez_A+3
03CD 120000   F      942                     call            ladd
03D0 78B3            943                     mov             r0,#summa;rez_A
03D2 120000   F      944                     call            saver2
03D5 789B            945                     mov             r0,#chbefore
03D7 793F            946                     mov             r1,#chmasN
03D9 7702            947                     mov             @r1,#2;4
03DB B604A1          948                     cjne    @r0,#4,nobef99;9,nobef99
                     949             ;РЕЗ/10
03DE 900000   F      950                     MOV             DPTR,#ch5
03E1 8081            951                     jmp             allsum
                     952     
03E3 7702            953     noparT4:        mov             @r1,#2          ;chmasN n=2
03E5 7877            954                     mov             r0,#reacp
03E7 120000   F      955                     call            resar2          ;reacp->r2..r5
03EA 7862            956                     mov             r0,#rez_A
03EC 120000   F      957                     call            saver2
                     958     ;загрузить А в массив из 2/10 значений
                     959     
03EF                 960     klmas:           
03EF 793F            961                     mov     r1,#chmasN
03F1 B7021A          962                     cjne    @r1,#2,mas10
03F4 900100          963                     MOV     dptr,#MASS0
03F7 120000   F      964                     CALL    xCIKLWR           ; MASS0 --> MASS1
                     965     
03FA 7862            966                     mov     r0,#rez_A
03FC 120000   F      967                     call    resar2          ;->r2..r5
03FF 900100          968                     mov     dptr,#MASS0
0402 120000   F      969                   call      saveIr2                 ; R2-R5 --> MAS0
                     970                     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    16

0405 900107          971                   MOV       dptr,#MASS1+3
0408 120000   F      972                   CALL      addx
040B 020000   F      973                     jmp     endsum
                     974     ;массив из 10-ти измерений      ?
040E B70A7D          975     mas10:  cjne    @r1,#10,mas20
0411 900120          976                     mov     dptr,#MASS8
0414 120000   F      977                   CALL      xCIKLWR         ;MASS8->MASS9
0417 90011C          978                     mov     dptr,#MASS7
041A 120000   F      979                   CALL      xCIKLWR         ;MASS7->MASS8
041D 900118          980             MOV     dptr,#MASS6
0420 120000   F      981                   CALL      xCIKLWR            ; MASS6 --> MASS7
0423 900114          982                   MOV       dptr,#MASS5
0426 120000   F      983                     CALL    xCIKLWR           ; MASS5 --> MASS6
0429 900110          984                   MOV       dptr,#MASS4
042C 120000   F      985                     CALL    xCIKLWR           ; MASS4 --> MASS5
042F 90010C          986                     mov     dptr,#MASS3
0432 120000   F      987                     CALL    xCIKLWR         ;MASS3->MASS4
0435 900108          988             MOV     dptr,#MASS2
                     989     
0438 120000   F      990                   CALL      xCIKLWR            ; MASS2 --> MASS3
043B 900104          991                     MOV     dptr,#MASS1
043E 120000   F      992                   CALL      xCIKLWR           ; MASS1 --> MASS2
0441 900100          993                   MOV       dptr,#MASS0
0444 120000   F      994                     CALL    xCIKLWR           ; MASS0 --> MASS1
                     995     
0447 7862            996                     mov     r0,#rez_A
0449 120000   F      997                     call    resar2          ;->r2..r5
                     998             ;call   aform
044C 900100          999                     mov     dptr,#MASS0
044F 120000   F     1000                   call      saveIr2                 ; R2-R5 --> MAS0
                    1001              
0452 900107         1002                   MOV       dptr,#MASS1+3
0455 120000   F     1003                   CALL      addx
0458 90010B         1004                   MOV       dptr,#MASS2+3
045B 120000   F     1005                   CALL      addx
045E 90010F         1006                   MOV       dptr,#MASS3+3
0461 120000   F     1007                  CALL       addx
0464 900113         1008                   MOV       dptr,#MASS4+3
0467 120000   F     1009                   call      addx
046A 900117         1010                     MOV     dptr,#MASS5+3
046D 120000   F     1011                  CALL       addx
0470 90011B         1012                   MOV       dptr,#MASS6+3
0473 120000   F     1013                   CALL      addx
0476 90011F         1014                   MOV       dptr,#MASS7+3
0479 120000   F     1015                  CALL       addx
047C 900123         1016                  MOV        dptr,#MASS8+3
047F 120000   F     1017                   call      addx
0482 900127         1018                     MOV     dptr,#MASS9+3
0485 120000   F     1019                  call       addx
0488 020000   F     1020                     jmp             endsum
                    1021     
048B 020000   F     1022     rmas4:  jmp             mas4
                    1023     ;массив из 20-ти измерений
048E B714FA         1024     mas20:  cjne    @r1,#20,rmas4
0491 900148         1025                     mov             dptr,#MASS18
0494 120000   F     1026                   CALL              xCIKLWR         ;MASS18->MASS19 ?
0497 900144         1027                     mov             dptr,#MASS17
049A 120000   F     1028                   CALL              xCIKLWR         ;MASS17->MASS18
049D 900140         1029             MOV       dptr,#MASS16
04A0 120000   F     1030                   CALL         xCIKLWR         ; MASS16 --> MASS17
04A3 90013C         1031                   MOV          dptr,#MASS15
                    1032                    
04A6 120000   F     1033                   CALL         xCIKLWR        ; MASS15 --> MASS16
04A9 900138         1034                   MOV          dptr,#MASS14
04AC 120000   F     1035                   CALL         xCIKLWR        ; MASS14 --> MASS15
04AF 900134         1036                     mov             dptr,#MASS13
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    17

04B2 120000   F     1037                   CALL              xCIKLWR         ;MASS13->MASS14
04B5 900130         1038             MOV        dptr,#MASS12
04B8 120000   F     1039                   CALL         xCIKLWR         ; MASS12 --> MASS13
04BB 90012C         1040                   MOV          dptr,#MASS11
                    1041                     
04BE 120000   F     1042                   CALL         xCIKLWR        ; MASS11 --> MASS12
04C1 900128         1043                   MOV          dptr,#MASS10
04C4 120000   F     1044                   CALL         xCIKLWR        ; MASS10 --> MASS11
04C7 900124         1045                     MOV        dptr,#MASS9
04CA 120000   F     1046                   CALL         xCIKLWR        ; MASS9 --> MASS10
04CD 900120         1047                     mov             dptr,#MASS8
04D0 120000   F     1048                   CALL              xCIKLWR         ;MASS8->MASS9
04D3 90011C         1049                     mov             dptr,#MASS7
04D6 120000   F     1050                  CALL               xCIKLWR         ;MASS7->MASS8
04D9 900118         1051                     MOV       dptr,#MASS6
04DC 120000   F     1052                   CALL         xCIKLWR         ; MASS6 --> MASS7
04DF 900114         1053                   MOV          dptr,#MASS5
04E2 120000   F     1054                   CALL         xCIKLWR        ; MASS5 --> MASS6
04E5 900110         1055                   MOV          dptr,#MASS4
04E8 120000   F     1056                   CALL         xCIKLWR        ; MASS4 --> MASS5
04EB 90010C         1057                     mov             dptr,#MASS3
                    1058     
04EE 120000   F     1059                   CALL              xCIKLWR         ;MASS3->MASS4
04F1 900108         1060             MOV        dptr,#MASS2
04F4 120000   F     1061                   CALL         xCIKLWR         ; MASS2 --> MASS3
04F7 900104         1062                   MOV          dptr,#MASS1
04FA 120000   F     1063                   CALL         xCIKLWR        ; MASS1 --> MASS2
04FD 900100         1064                   MOV          dptr,#MASS0
0500 120000   F     1065                   CALL         xCIKLWR        ; MASS0 --> MASS1
                    1066                             
0503 7862           1067                     mov             r0,#rez_A
0505 120000   F     1068                     call    resar2          ;->r2..r5
                    1069             ;call   aform
0508 900100         1070                     mov     dptr,#MASS0
050B 120000   F     1071                   call      saveIr2                 ; R2-R5 --> MAS0
050E 900107         1072                   MOV       dptr,#MASS1+3
0511 120000   F     1073                   CALL      addx
0514 90010B         1074                   MOV       dptr,#MASS2+3
0517 120000   F     1075                   CALL      addx
051A 90010F         1076                   MOV       dptr,#MASS3+3
051D 120000   F     1077                  CALL       addx
0520 900113         1078                   MOV       dptr,#MASS4+3
0523 120000   F     1079                   call      addx
0526 900117         1080                     MOV     dptr,#MASS5+3
0529 120000   F     1081                  CALL       addx
052C 90011B         1082                  MOV        dptr,#MASS6+3
052F 120000   F     1083                  CALL       addx
0532 90011F         1084                  MOV        dptr,#MASS7+3
0535 120000   F     1085                  CALL       addx
0538 900123         1086                  MOV        dptr,#MASS8+3
053B 120000   F     1087                  call       addx
053E 900127         1088                     MOV     dptr,#MASS9+3
0541 120000   F     1089                  call       addx
                    1090     ;27
0544 90012B         1091                     MOV        dptr,#MASS10+3
0547 120000   F     1092                   CALL       addx
054A 90012F         1093                     MOV     dptr,#MASS11+3
054D 120000   F     1094                   CALL       addx
0550 900133         1095                   MOV       dptr,#MASS12+3
0553 120000   F     1096                   CALL       addx
0556 900137         1097                   MOV       dptr,#MASS13+3
0559 120000   F     1098                  CALL        addx
055C 90013B         1099                   MOV       dptr,#MASS14+3
055F 120000   F     1100                   call       addx
0562 90013F         1101                     MOV   dptr,#MASS15+3
0565 120000   F     1102                     CALL     addx
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    18

0568 900143         1103                   MOV       dptr,#MASS16+3
056B 120000   F     1104                   CALL       addx
056E 900147         1105                   MOV       dptr,#MASS17+3
0571 120000   F     1106                  CALL        addx
0574 90014B         1107                  MOV        dptr,#MASS18+3
0577 120000   F     1108                   call       addx
057A 90014F         1109                     MOV     dptr,#MASS19+3
057D 120000   F     1110                  call        addx
0580 802F           1111                     jmp             endsum
                    1112     ;массив из 4х измерений
0582                1113     mas4:                   
0582 900108         1114                     MOV        dptr,#MASS2
0585 120000   F     1115                   CALL         xCIKLWR         ; MASS2 --> MASS3
0588 900104         1116                   MOV          dptr,#MASS1
058B 120000   F     1117                   CALL         xCIKLWR        ; MASS1 --> MASS2
058E 900100         1118                   MOV          dptr,#MASS0
0591 120000   F     1119                   CALL         xCIKLWR        ; MASS0 --> MASS1
                    1120                     
0594 7862           1121                     mov     r0,#rez_A
0596 120000   F     1122                     call    resar2          ;->r2..r5
                    1123             ;call   aform
0599 900100         1124                     mov     dptr,#MASS0
059C 120000   F     1125                   call      saveIr2                 ; R2-R5 --> MAS0
                    1126              
059F 900107         1127                   MOV       dptr,#MASS1+3
05A2 120000   F     1128                   CALL      addx
05A5 90010B         1129                   MOV       dptr,#MASS2+3
05A8 120000   F     1130                   CALL      addx
05AB 90010F         1131                   MOV       dptr,#MASS3+3
05AE 120000   F     1132                  CALL       addx
                    1133                  
05B1                1134     endsum: ;23.03  
05B1 786E           1135                     mov     r0,#chmas;8.11.06               ;0..n(0..2,0..10)
05B3 06             1136                     inc     @r0
05B4 E6             1137                     mov     a,@r0   
05B5 200105         1138                     jb      bitmas,masfull          ;массив заполнен 2/10 значениями
05B8 B53F31         1139                     cjne    a,chmasN,masx5
05BB D201           1140                     setb    bitmas                  ;массив заполнен
05BD 853F6E         1141     masfull:        mov     chmas,chmasN
05C0 783F           1142                     mov     r0,#chmasN
05C2 E6             1143                     mov     a,@r0
                    1144     ;masfull:
05C3 B40208         1145                     cjne    a,#2,nochn2
05C6 900000   F     1146                     MOV     DPTR,#ch2;10 
05C9 120000   F     1147                     CALL  ldc_ltemp          ; ltemp <-- 2
05CC 8028           1148                     jmp     mas5div
                    1149     
05CE B40A08         1150     nochn2: cjne    a,#10,nochn10
05D1 900000   F     1151                     MOV     DPTR,#ch10 
05D4 120000   F     1152                     CALL  ldc_ltemp          ; ltemp <-- 10
05D7 801D           1153                     jmp     mas5div
                    1154     
05D9 B41408         1155     nochn10:        cjne    a,#20,nochn20
05DC 900000   F     1156                     MOV     DPTR,#ch20 
05DF 120000   F     1157                     CALL  ldc_ltemp          ; ltemp <-- 20
05E2 8012           1158                     jmp     mas5div
                    1159     
05E4 900000   F     1160     nochn20:        MOV     DPTR,#ch4 
05E7 120000   F     1161                     CALL  ldc_ltemp          ; ltemp <-- 4
05EA 800A           1162                     jmp     mas5div
                    1163     
05EC 856E0B         1164     masx5:  mov     ltemp+3,chmas                   ;массив не заполнен
05EF E4             1165                     clr     a
05F0 F50A           1166                     mov     ltemp+2,a
05F2 F509           1167                     mov     ltemp+1,a
05F4 F508           1168                     mov     ltemp,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    19

                    1169     
05F6 120000   F     1170     mas5div:        CALL    zdiv;divide, R2-R5 =(MAS0+MAS1+MAS2+MAS3+MAS4)/5
                    1171     ;получен результат 3 байта и знак
05F9 7866           1172                     mov     r0,#rez_A1
05FB 120000   F     1173                     call    saver2           ;сохр среднее по массиву
                    1174     ;;8.11.06                       mov             chmasN,#0
05FE C3             1175                     clr     c
05FF 799A           1176                     mov     r1,#parT
0601 7402           1177                     mov     a,#2
0603 97             1178                     subb    a,@r1
0604 501D           1179                     jnc     ankor           ;T<3
                    1180                             ;A-=РЕЗ1                                ;T>3
0606 120402         1181                     call    altof                   ;r2..r5->float
0609 785E           1182                     mov     r0,#rez_Ame
060B 120000   F     1183                     call    saver2
                    1184     
060E 7890           1185                     mov     r0,#koefKp;->r8..r11
0610 EA             1186                     mov     a,r2
0611 30E702         1187                     jnb     acc.7,nminus3
0614 7894           1188                     mov     r0,#koefKm;->r8..r11
0616 120000   F     1189     nminus3:        call    resar8
0619 120203         1190                     call    flmul  ;результат в плавающем формате м.б. его сохранить?
061C 785E           1191                     mov     r0,#rez_Ame
061E 120000   F     1192                     call    saver2
0621 8027           1193                     jmp     gotoKD
                    1194     
0623 7898           1195     ankor:  mov     r0,#chinkor
0625 E6             1196                     mov     a,@r0
0626 30E709         1197                     jnb     acc.7,nokorr
0629 78C4           1198                             mov     r0,#byte_kor    ;igor
062B E6             1199                             mov     a,@r0                   ;
062C 20E003         1200                             jb      acc.0,nokorr    ;
                    1201                     ;коррекция 0
062F 020000   F     1202                     jmp     kornul
0632                1203     nokorr: 
                    1204                     ;mov    r10,#00         ;       chavt
                    1205                     ;mov    r11,#00h
0632 7881           1206                     mov     r0,#chavt       
0634 E6             1207                     mov     a,@r0;call      chcmp           ;сравн счетчик авто калибровки с 0h
0635 30E737         1208                     jnb     acc.7,nonulavt;jnz              nonulavt        
0638 750A00         1209                     mov     r10,#0;1;00;02          
063B 750BC8         1210                     mov     r11,#0c8h;90h;0c8h;58h
063E 7898           1211                     mov     r0,#chinkor
0640 120000   F     1212                     call    chcmp
0643 7045           1213                     jnz     noavk
                    1214             ;автокалибровка
0645 020000   F     1215                     jmp             autoka;noavk;
                    1216     
0648 8079           1217     rafterK:        jmp             afterK
                    1218     
064A C3             1219     gotoKD:         clr             c
064B 799A           1220                     mov             r1,#parT
064D 7404           1221                     mov             a,#4
064F 97             1222                     subb            a,@r1
0650 50F6           1223                     jnc             rafterK         ;T<5
                    1224             ;A1-=A- *KD                     ;T>5
                    1225             ;call           findkoef                                ;r2,r3-hex
                    1226             ;call           rebyte2                         ;r2..r5- hex
                    1227             ;       call    altof                   ;r2..r5->float
                    1228             ;       mov     dptr,#CHtho;100000
                    1229             ;       call    ldc_ltemp                       ;r8..r11
                    1230             ;       call    fldiv
                    1231             ;       call    move28
0652 785E           1232                     mov     r0,#rez_Ame;->r2..r5   ?/ float
0654 120000   F     1233                     call    resar2
                    1234             ;call   flmul
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    20

0657 120343         1235                     call    ftol                    ;float->int
065A 7866           1236                     mov     r0,#rez_A1
065C 120000   F     1237                     call    saver2
065F 786A           1238                     mov     r0,#rez_A0;->r8..r11 hex
0661 120000   F     1239                     call    resar8
0664 120000   F     1240                     call    lsub            ;A3=A-1-A0
0667 789C           1241                     mov     r0,#rez_A3
0669 120000   F     1242                     call    saver2
                    1243     
066C 020000   F     1244                     jmp     labelB  ;?upper
                    1245      ;;;;;;;;;;; 9.11.06
066F 789A           1246     nonulavt:       mov     r0,#parT
0671 E6             1247                     mov     a,@r0
0672 6401           1248                     xrl     a,#01
0674 700F           1249                     jnz     avtdec1
0676 7982           1250                     mov     r1,#chavt+1     ;T=1 chavt-10
0678 120000   F     1251                     call    tenmin
067B 7999           1252     kordec10:       mov     r1,#chinkor+1
067D 120000   F     1253                     call    tenmin
0680 801E           1254                     jmp     rezmul
                    1255     
0682 020000   F     1256     rmo220: jmp     mo220
                    1257     
0685 7981           1258     avtdec1:        mov     r1,#chavt       
0687 120000   F     1259                     call    chdec           ;chavt-1
                    1260     ;               jmp             kordec1;rezmul
068A 789A           1261     noavk:  mov     r0,#parT
068C E6             1262                     mov     a,@r0
068D 6401           1263                     xrl     a,#01
068F 700A           1264                     jnz     kordec1
                    1265             ;T=1 chinkor-10
0691 7999           1266                     mov     r1,#chinkor+1
0693 120000   F     1267                     call    tenmin
0696 8008           1268                     jmp     rezmul
                    1269     
0698 020000   F     1270     rnotestizm:     jmp     notestizm
069B 7998           1271     kordec1:        mov     r1,#chinkor
069D 120000   F     1272                     call    chdec           ; chinkor-1
                    1273                        ;9.11.06
                    1274     ;(РЕЗ1-АN)*K
06A0 7866           1275     rezmul: mov     r0,#rez_A1;->r2..r5
06A2 120000   F     1276                     call    resar2
06A5 120402         1277                     call    altof   ;r2..r5->float  6.06    
06A8 7884           1278                     mov     r0,#kor0_AN;->r8..r11
06AA 120000   F     1279                     call    resar8
06AD 1201D1         1280                     call    flsub
06B0 7890           1281                     mov     r0,#koefKp;->r8..r11
06B2 EA             1282                     mov     a,r2
06B3 30E702         1283                     jnb     acc.7,nminus
                    1284                     ;jnb            bitznak,nminus
                    1285                     
06B6 7894           1286                     mov     r0,#koefKm;->r8..r11
06B8 120000   F     1287     nminus: call    resar8
06BB 120203         1288                     call    flmul  ;результат в плавающем формате м.б. его сохранить?
06BE 785E           1289                     mov     r0,#rez_Ame
06C0 120000   F     1290                     call    saver2
                    1291      
06C3 EA             1292     afterK: mov     a,r2
06C4 547F           1293                     anl     a,#7fh
06C6 FA             1294                     mov     r2,a
06C7 900000   F     1295                     mov     dptr,#ch_250;220;220000
06CA 120000   F     1296                     call    ldc_ltemp                       ;r8..r11=8
06CD 1201D6         1297                     call    flcmp
06D0 50B0           1298                     jnc     rmo220          ;A>220000
                    1299     
06D2 3015C3         1300                     jnb     biteizm,rnotestizm
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    21

06D5 78B1           1301                     mov     r0,#vichR
06D7 B62155         1302                     cjne    @r0,#21h,note21
06DA 7A50           1303                     mov     r2,#50h         ;-11a
06DC 7B18           1304                     mov     r3,#18h         ;k8
06DE 12046C         1305                     call    rebyte2                         ;r2..r5- hex
06E1 120402         1306                     call    altof                   ;r2..r5->float
06E4 C002           1307                     push    rr2
06E6 C003           1308                     push    rr3
06E8 C004           1309                     push    rr4
06EA C005           1310                     push    rr5
06EC 7A50           1311                     mov     r2,#50h         ;k10
06EE 7B20           1312                     mov     r3,#20h
06F0 12046C         1313     re11_7: call    rebyte2                 ;r2..r5
06F3 120402         1314                     call    altof                   ;r2..r5->float
06F6 120000   F     1315                     call    move28
06F9 D005           1316                     pop     rr5
06FB D004           1317                     pop     rr4
06FD D003           1318                     pop     rr3
06FF D002           1319                     pop     rr2
0701 1202B7         1320                     call    fldiv
                    1321             ;       mov                     dptr,#ch_10
                    1322             ;       call            ldc_ltemp                       ;r8..r11
                    1323             ;       call            flmul
                    1324             ;;;;;2.02.07
0704 C002           1325                     push    rr2
0706 C003           1326                     push    rr3
0708 C004           1327                     push    rr4
070A C005           1328                     push    rr5
070C 7A50           1329                     mov     r2,#50h                 ;-11a
070E 7B2C           1330                     mov     r3,#2ch                 ;Km
0710 12046C         1331                     call    rebyte2                         ;r2..r5- hex
0713 120402         1332                     call    altof                   ;r2..r5->float
0716 120000   F     1333                     call    move28
0719 D005           1334                     pop     rr5
071B D004           1335                     pop     rr4
071D D003           1336                     pop     rr3
071F D002           1337                     pop     rr2
0721 120203         1338                     call    flmul                           ;*Km
0724 900000   F     1339                     mov     dptr,#CHtho;100000
0727 120000   F     1340                     call    ldc_ltemp                       ;r8..r11=8
072A 1202B7         1341                     call    fldiv
                    1342     
072D 8050           1343                     jmp     temul
072F B62218         1344     note21: cjne    @r0,#22h,note22
0732 7A50           1345                     mov     r2,#50h                 ;-09a
0734 7B10           1346                     mov     r3,#10h                 ;k6
0736 12046C         1347                     call    rebyte2                 ;r2..r5- hex
0739 120402         1348                     call    altof                   ;r2..r5->float
073C C002           1349                     push    rr2
073E C003           1350                     push    rr3
0740 C004           1351                     push    rr4
0742 C005           1352                     push    rr5
0744 7A50           1353                     mov     r2,#50h                 ;k8
0746 7B18           1354                     mov     r3,#18h
0748 80A6           1355                     jmp     re11_7
074A 7A50           1356     note22: mov     r2,#50h                 ;-7a
074C 7B08           1357                     mov     r3,#08h                 ;k4
074E 12046C         1358                     call    rebyte2                         ;r2..r5- hex
0751 120402         1359                     call    altof                   ;r2..r5->float
0754 C002           1360                     push    rr2
0756 C003           1361                     push    rr3
0758 C004           1362                     push    rr4
075A C005           1363                     push    rr5
075C 7A50           1364                     mov     r2,#50h                 ;k6
075E 7B10           1365                     mov     r3,#10h
0760 808E           1366                     jmp     re11_7  
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    22

                    1367     
0762                1368     notestizm:
0762 301208         1369                     jnb     bitklb,komulpz
0765 900000   F     1370                     mov     dptr,#chk       ;100000
0768 120000   F     1371                     call    ldc_long        ;r2..r5
076B 8006           1372                     jmp     komul
076D 120000   F     1373     komulpz:        call    findkoef        ;r2,r3-hex
0770 12046C         1374                     call    rebyte2         ;r2..r5- hex
                    1375                                     
0773 120402         1376     komul:  call    altof                   ;r2..r5->float
0776 900000   F     1377                     mov     dptr,#CHtho;100000
0779 120000   F     1378                     call    ldc_ltemp                       ;r8..r11=8
077C 1202B7         1379                     call    fldiv
                    1380     ;A0,..  call    move28
077F 120000   F     1381     temul:  call    move28
0782 785E           1382                     mov     r0,#rez_Ame
0784 120000   F     1383                     call    resar2
0787 120203         1384                     call    flmul     ;A1-=A-*KD  fl
078A 120343         1385                     call    ftol                    ;float->int
078D 7866           1386                     mov     r0,#rez_A1
078F 120000   F     1387                     call    saver2
0792 120402         1388                     call    altof                   ;r2..r5->float
0795 EA             1389                     mov     a,r2
0796 547F           1390                     anl     a,#7fh
0798 FA             1391                     mov     r2,a
0799 900000   F     1392                     mov     dptr,#ch_220;200;200000
079C 120000   F     1393                     call    ldc_ltemp                       ;r8..r11=8
079F 1201D6         1394                     call    flcmp
07A2 502D           1395                     jnc     rrmo220         ;A>200000
                    1396             ;       jnb             knizm,noavp;goA2;               bitizm,goA2     
                    1397             ;       jb              bitavp,yesavp
07A4 301808         1398                     jnb     knizm,goA2
07A7 300602         1399                     jnb     bitvi11,qu_avp
07AA 8003           1400                     jmp     goA2
07AC 20052F         1401     qu_avp:         jb      bitavp,yesavp
07AF                1402     noavp:  ;jb     bitvi11,yesvich  ;уст после ввода A B (ввод ВЫЧИСЛИТЬ)
07AF                1403     goA2:           ;A2=A1-
07AF 7866           1404                     mov     r0,#rez_A1
07B1 120000   F     1405                     call    resar2
07B4 787B           1406                     mov     r0,#rez_A2
07B6 120000   F     1407                     call    saver2
07B9                1408     goA3A2: ;A3=A2-A0
07B9 786A           1409                     mov     r0,#rez_A0
07BB 120000   F     1410                     call    resar8
07BE 120000   F     1411                     call    lsub
07C1 789C           1412                     mov     r0,#rez_A3
07C3 120000   F     1413                     call    saver2
07C6 200666         1414                     jb      bitvi11,yesvich
                    1415     
07C9                1416     goonin: ;jmp    goonind;indA3;8.11.06
07C9 78AC           1417                     mov     r0,#chind
07CB B60006         1418                     cjne    @r0,#0,rnochi0
07CE 020000   F     1419                     jmp     goonind;indA3
                    1420     
07D1 020000   F     1421     rrmo220:        jmp     mo220
07D4 020000   F     1422     rnochi0:        jmp     nochi0
07D7 7866           1423     gokaA2: mov     r0,#rez_A1              ;(float)
07D9 120000   F     1424                     call    saver2          ;то необх для калибровки ,goA2 работает с тим знач
07DC 80D1           1425                     jmp     goA2
                    1426     
07DE EA             1427     yesavp: mov     a,r2
07DF 547F           1428                     anl     a,#7fh
07E1 FA             1429                     mov     r2,a
07E2 900000   F     1430                     mov     dptr,#ch_10th;10000
07E5 120000   F     1431                     call    ldc_ltemp                       ;r8..r11=8
07E8 1201D6         1432                     call    flcmp
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    23

07EB 50C2           1433                     jnc     noavp           ;A>10000        
07ED 78AE           1434                     mov     r0,#diap                ;10-11
07EF B60902         1435                     cjne    @r0,#9,avpgo
07F2 80BB           1436                     jmp     noavp
07F4                1437     avpgo:
07F4 06             1438                     inc     @r0             ;переключ диапазон на 1 позицию вниз
07F5 B60A01         1439                     cjne    @r0,#0ah,clmasv
07F8 16             1440                     dec     @r0
07F9                1441     clmasv: ;сбросить массив
07F9 120000   F     1442                     call    loadUS
                    1443                     ;call   louizm
07FC 120000   F     1444                     call    clmassix
07FF 78B3           1445                     mov     r0,#summa
0801 120000   F     1446                     call    clear4
0804 786A           1447                     mov     r0,#rez_A0
0806 120000   F     1448                     call    clear4
0809 C20F           1449                     clr     bitnul
080B D207           1450                     setb    bitzus  ;bitbuf
080D 80BA           1451                     jmp     goonin
                    1452     
080F D00B           1453     erra01: pop     r11
0811 D00A           1454                     pop     r10
0813 D009           1455                     pop     r9
0815 D008           1456                     pop     r8
0817 C214           1457                     clr     bitvich
0819 C206           1458                     clr     bitvi11
081B 753934         1459                     mov     nuerr,#34h;константа не должна быть равна0
081E 120000   F     1460                     call    error
0821 120000   F     1461                     call    ind
0824 120000   F     1462                     call    z_1s
0827 80A0           1463                     jmp     goonin
                    1464     
0829                1465     mo500R_:
0829 020000   F     1466                     jmp     mo500R
082C                1467     mo500I_:
082C 020000   F     1468                     jmp     mo500I          ;error
                    1469     
082F                1470     yesvich:
                    1471                     ;       mov             r0,#konstB
                    1472                     ;       call    resar2
                    1473                     ;       call    move28
082F 789C           1474                     mov     r0,#rez_A3;A1
0831 120000   F     1475                     call    resar2                          ;HEX
0834 120402         1476                     call    altof                   ;r2..r5->float
0837 EA             1477                     mov     a,r2                    ;модуль
0838 547F           1478                     anl     a,#7fh
083A FA             1479                     mov     r2,a
                    1480     ;               call            fladd                           ;A1+B
                    1481                                     
083B 900000   F     1482                     mov     dptr,#CH_500;
083E 120000   F     1483                     call    ldc_ltemp                       ;r8..r11
0841 1201D6         1484                     call    flcmp
0844 40E3           1485                     jc      mo500R_ ;error <500 >22000
                    1486     ;!
0846 900000   F     1487                     mov     dptr,#CH_22T;
0849 120000   F     1488                     call    ldc_ltemp                       ;r8..r11
084C 1201D6         1489                     call    flcmp
084F 50DB           1490                     jnc     mo500I_
                    1491     ;!
0851 120000   F     1492                     call    move28
0854 C008           1493                     push    r8
0856 C009           1494                     push    r9
0858 C00A           1495                     push    r10
085A C00B           1496                     push    r11
085C 78BC           1497                     mov     r0,#konstA
085E 120000   F     1498                     call    resar2
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    24

0861 900000   F     1499                     mov     dptr,#ch0
0864 120000   F     1500                     call    ldc_ltemp
0867 1201D6         1501                     call    flcmp
086A 60A3           1502                     jz      erra01
086C 900000   F     1503                     mov     dptr,#CH_B
086F 120000   F     1504                     CALL  ldc_ltemp          ; ltemp <-- 10-7
0872 120203         1505                     call    flmul                           ;A*10-7
0875 D00B           1506                     pop     r11
0877 D00A           1507                     pop     r10
0879 D009           1508                     pop     r9
087B D008           1509                     pop     r8
087D 1202B7         1510                     call    fldiv                   ;результат R
0880 78C9           1511                     mov     r0,#rez_R
0882 120000   F     1512                     call    saver2
0885 120343         1513                     call    ftol                    ;float->hex
                    1514     
0888 784F           1515                     mov     r0,#abin
088A 120000   F     1516                     call    saver2
                    1517     
                    1518     
088D 301E33         1519                             jnb     is_rs,mr_5              ;??
0890 300630         1520                             jnb     bitvi11,mr_5    ;alternative
0893 78C9           1521                     mov     r0,#rez_R       ;?
0895 301704         1522                             jnb     bitoll,moveR3_
0898 78C9           1523                             mov     r0,#rez_R
089A 7681           1524                             mov     @R0,#81h
089C                1525     moveR3_:
089C C2AF           1526                             clr     EA      ;?
                    1527     ;                       mov     A,#rez_R        ;Ame,..; bufind - no use: for fastest isn't
                              screen output
                    1528     ;                       mov     p_out,A
                    1529     ;                       mov     cnt_out,#4
089E 75997F         1530                             mov     SBUF0,#7Fh      ;was cmd_rez
                    1531     
08A1                1532     tx1:    ;?fragment
08A1 3099FD         1533                     jnb   TI,tx1
08A4 C299           1534                     clr   TI
08A6 8699           1535                     mov     SBUF0,@r0
08A8 08             1536                     inc     r0
08A9                1537     tx2:
08A9 3099FD         1538                     jnb   TI,tx2
08AC C299           1539                     clr   TI
08AE 8699           1540                     mov     SBUF0,@r0
08B0 08             1541                     inc     r0
08B1                1542     tx3:
08B1 3099FD         1543                     jnb   TI,tx3
08B4 C299           1544                     clr   TI
08B6 8699           1545                     mov             SBUF0,@r0
08B8 08             1546                     inc             r0
08B9                1547     tx4:
08B9 3099FD         1548                     jnb   TI,tx4
08BC C299           1549                     clr   TI
08BE 8699           1550                     mov             SBUF0,@r0
08C0 08             1551                     inc             r0
08C1 D2AF           1552                     setb    EA
                    1553             ;?
08C3                1554     mr_5:
                    1555     
                    1556     
08C3 7840           1557                     mov     r0,#bufind
08C5                1558     age9:
08C5 7620           1559                     mov     @r0,#" "          ;погасить индикатор
08C7 08             1560                     inc     r0
08C8 B84BFA         1561                     cjne    r0,#bufind+11,age9
08CB 78C9           1562                     mov     r0,#rez_R
08CD 120000   F     1563                     call    resar2
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    25

                    1564     
08D0 900000   F     1565                     mov     dptr,#CH_fl
08D3 120000   F     1566                     CALL  ldc_ltemp
08D6 1202B7         1567                     call    fldiv
08D9 78B8           1568                     mov     r0,#work                ;степень +
08DB 7600           1569                     mov     @r0,#0
08DD 78B9           1570                     mov     r0,#work+1;степень -
08DF 7600           1571                     mov     @r0,#0
08E1 900000   F     1572     compa1: mov     dptr,#ch_1;
08E4 120000   F     1573                     call    ldc_ltemp                       ;r8..r11
08E7 1201D6         1574                     call    flcmp
08EA 4026           1575                     jc      equ0            ;<1
08EC 78B8           1576                     mov     r0,#work                        ;степень +
08EE 06             1577                     inc     @r0
08EF 900000   F     1578                     mov     dptr,#ch_10;
08F2 120000   F     1579                     call    ldc_ltemp                       ;r8..r11
08F5 1202B7         1580                     call    fldiv
08F8 80E7           1581                     jmp     compa1                          ;work значение степени n(hex)  
                    1582     
08FA 900000   F     1583     mo500R: mov     dptr,#teOLR
08FD 120000   F     1584                     call    lotext           
0900 120000   F     1585                     call    ind
0903 020000   F     1586                     jmp     nobavp;nobitizm
0906 900000   F     1587     mo500I: mov     dptr,#teOLI
0909 120000   F     1588                     call    lotext           
090C 120000   F     1589                     call    ind
090F 020000   F     1590                     jmp     nobavp;nobitizm
0912                1591     equ0:           ;       call            ftol                    ;float->int
0912 78B8           1592                     mov     r0,#work                ;степень +
0914 B60019         1593                     cjne    @r0,#0,equ00
                    1594                                     
0917 900000   F     1595     compa2: mov     dptr,#ch_1;
091A 120000   F     1596                     call    ldc_ltemp                       ;r8..r11
091D 1201D6         1597                     call    flcmp
0920 500E           1598                     jnc     equ00           ;>1
0922 78B9           1599                     mov     r0,#work+1                      ;степень -
0924 16             1600                     dec     @r0                                                     ;0,ff(-1),f
                             e(-2)...
0925 900000   F     1601                     mov     dptr,#ch_10;
0928 120000   F     1602                     call    ldc_ltemp                       ;r8..r11
092B 120203         1603                     call    flmul
092E 80E7           1604                     jmp     compa2                          ;work значение степени n(hex)  
                    1605     
0930                1606     equ00:          
0930 7853           1607                     mov     r0,#adec
0932 7952           1608                     mov     r1,#abin+3      ;hex->10
0934 120000   F     1609                     call    bindec
                    1610     
                    1611     ;если степень полож убирать младший байт
                    1612     ;чтобы уложиться в 5 разрядов, если отриц располагать
                    1613     ;число в bufind..bufind+5
0937 78B8           1614                     mov     r0,#work
0939 B60021         1615                     cjne    @r0,#0,outr
093C 08             1616                     inc     r0                      ;work+1
093D B6FF05         1617                     cjne    @r0,#0ffh,bufr3 ;6разрядов нужно вывести 5
0940 06             1618                     inc     @r0;!!!!!!!!!?
0941 785B           1619                     mov     r0,#adec+8              ;разместить в буфер индикации R
0943 8003           1620                     jmp     bufr30
                    1621     
0945 06             1622     bufr3:  inc     @r0                     ;?!!!!!!!!n+1
0946 785C           1623                     mov     r0,#adec+9
0948 7945           1624     bufr30: mov     r1,#bufind+5;6
094A 7F05           1625                     mov     r7,#5;7
094C E6             1626     bufr2:  mov     a,@r0
094D 2430           1627                     add     a,#30h
094F F7             1628                     mov     @r1,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    26

0950 19             1629                     dec     r1
0951 18             1630                     dec     r0
0952 DFF8           1631                     djnz    r7,bufr2
                    1632     
0954 784F           1633                     mov     r0,#abin
0956 120000   F     1634                     call    clear4
0959 78B9           1635                     mov     r0,#work+1
095B 801C           1636                     jmp     outr5
                    1637     ;work!=0 значит после дел на 10**9 получили число > с чем 6 разрядов                       
                                          
095D 785C           1638     outr:           mov     r0,#adec+9;разместить в буфер индикации R
095F C3             1639                     clr     c
0960 79B8           1640                     mov     r1,#work
0962 E8             1641                     mov     a,r0
0963 14             1642                     dec     a                                       ;n-1
0964 97             1643                     subb    a,@r1
0965 F8             1644                     mov     r0,a                    ;adec+9-n !!!!!!!!!!!!!!!
0966 7945           1645                     mov     r1,#bufind+5;т к число разрядов > чем знакомест
0968 7F05           1646                     mov     r7,#5;7
096A E6             1647     bufr:           mov     a,@r0
096B 2430           1648                     add     a,#30h
096D F7             1649                     mov     @r1,a
096E 19             1650                     dec     r1
096F 18             1651                     dec     r0
0970 DFF8           1652                     djnz    r7,bufr
                    1653     
0972 784F           1654                     mov     r0,#abin
0974 120000   F     1655                     call    clear4
0977 78B8           1656                     mov     r0,#work
0979 E6             1657     outr5:  mov     a,@r0
097A F552           1658                     mov     abin+3,a
                    1659                             ;n(hex)->abin
097C 120000   F     1660                     call    findR                           ;a=2(10-2)...11(10-11)
097F 2552           1661                     add     a,abin+3
0981 F552           1662                     mov     abin+3,a
0983 7853           1663                     mov     r0,#adec
0985 7952           1664                     mov     r1,#abin+3      ;hex->10
0987 120000   F     1665                     call    bindec
098A 855C48         1666                     mov     bufind+8,adec+9
098D 855B47         1667                     mov     bufind+7,adec+8
0990 754966         1668                     mov     bufind+9,#66h
0993 434B10         1669                     orl     bufind+11,#10h;запятая после 1го знакоместа
0996 020000   F     1670                     jmp     nobavp;nobitizm;        goonin;call     ind
                    1671                                             
0999 300508         1672     mo220:  jnb     bitavp,indoll
099C 301805         1673                     jnb     knizm,indoll    ;bitizm,indoll
099F 78AE           1674                     mov     r0,#diap
09A1 B6001A         1675                     cjne    @r0,#0,nodi2
                    1676                        ;10-2
09A4 300414         1677     indoll: jnb     bitizm,goonin1;чтобы не OLL было при нажатии кнопок меню,пам,вычR
09A7 900000   F     1678                     mov     dptr,#teOLL;OLL
09AA 120000   F     1679                     call    lotext
09AD 300609         1680                     jnb     bitvi11,goonin2
09B0 900000   F     1681                     mov     dptr,#teOLI
09B3 120000   F     1682                     call    lotext
09B6 120000   F     1683                     call    ind
09B9 D217           1684     goonin2:        setb    bitoll
09BB 020000   F     1685     goonin1:        jmp     goonin
                    1686     
09BE 16             1687     nodi2:  dec     @r0     ;переключить на 1 позицию вверх
09BF B6FF01         1688                     cjne    @r0,#0ffh,nodi9
09C2 06             1689                     inc     @r0
09C3 120000   F     1690     nodi9:  call    loadUS
                    1691                     ;call   louizm
                    1692                     ;сбросить массив
09C6 120000   F     1693                     call    clmassix
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    27

09C9 78B3           1694                     mov     r0,#summa
09CB 120000   F     1695                     call    clear4
09CE 786A           1696                     mov     r0,#rez_A0
09D0 120000   F     1697                     call    clear4
09D3 C20F           1698                     clr     bitnul  
09D5 D207           1699                     setb    bitzus  ;bitbuf флаг задержки   после установки us                 
                                                           
09D7 020000   F     1700                     jmp     goonin
                    1701     
09DA 16             1702     nochi0: dec     @r0                     ;СТИ-1
09DB 020000   F     1703                     jmp     labelB  
09DE                1704     nop3_0: ;;      ;rez_A-rez_A0
                    1705                     ;;                      mov             r0,#rez_A0
                    1706                     ;;                      call    resar8
                    1707                     ;;                      call    lsub
                    1708                     ;;                      mov             r0,#rez_A
                    1709                     ;;;                     call    saver2
                    1710     
09DE B70207         1711     no3parN:        cjne    @r1,#2,no2parN
                    1712                     ;в байт 0  записать пробел
09E1 7946           1713                     mov     r1,#bufind+6
09E3 7720           1714                     mov     @r1,#" ";0fdh;
09E5 020000   F     1715                     jmp     seeind          ;moveA3
                    1716     
09E8                1717     no2parN:                        ;в байты 0 и 1 записать пробел
09E8 7945           1718                     mov     r1,#bufind+5
09EA 7720           1719                     mov     @r1,#" ";0fdh;" "
09EC 09             1720                     inc     r1
09ED 7720           1721                     mov     @r1,#" ";0fdh;" "
09EF 8077           1722                     jmp     seeind          ;moveA3
09F1 8075           1723     rseeind:        jmp     seeind
                    1724     
09F3                1725     goonind:                  ; ВЫДАЧА НА ИНДИКАТОР РЕЗУЛЬТАТА
                    1726     
                    1727     
09F3                1728     moveA3: ;нажата кн вычR не выдавать на индикатор не портить bufind..
                    1729                     ;по нажатию кн по прерыванию по выходу из прерыв прог доходит
                    1730                     ;до конца цикла измерения результат не размещать в буфере
                    1731                     ;не забывать сбрасывать по выходу из режима обр кнопки 
                    1732                     ;и возврату в режим измерения
09F3 20145C         1733                     jb              bitvich,rnorvich
09F6 201059         1734                     jb              bitt2,rnorvich
09F9 2017F5         1735                     jb              bitoll,rseeind
09FC 2011F2         1736                     jb              bitmenu,rseeind
09FF 200BEF         1737                     jb              bitmem,rseeind
                    1738             ; mov           r0,#rez_A3
                    1739             ;call   resar2
                    1740             ;call   ftol                    ;float->int r2..r5
0A02 789C           1741                     mov     r0,#rez_A3;->r2..r5       передать A3 в индикатор
0A04 120000   F     1742                     call    resar2;????????????????17.01.07
                    1743                                     
0A07 120000   F     1744                     call    maform
0A0A 784F           1745                     mov     r0,#abin
0A0C 120000   F     1746                     call    saver2
0A0F 7853           1747                     mov     r0,#adec
0A11 7952           1748                     mov     r1,#abin+3      ;hex->10
0A13 120000   F     1749                     call    bindec
                    1750                                     
0A16 785C           1751                     mov     r0,#adec+9;разместить в буфер индикации
0A18 7946           1752                     mov     r1,#bufind+6
0A1A 7F07           1753                     mov     r7,#7
0A1C E6             1754     bufdec: mov     a,@r0
0A1D 2430           1755                     add     a,#30h
0A1F F7             1756                     mov     @r1,a
0A20 19             1757                     dec     r1
0A21 18             1758                     dec     r0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    28

0A22 DFF8           1759                     djnz    r7,bufdec
0A24 7847           1760                     mov     r0,#bufind+7
0A26 762D           1761                     mov     @r0,#2dh          ;-2..-9
0A28 7840           1762                     mov     r0,#bufind
0A2A 762B           1763                     mov     @r0,#2bh
0A2C 300202         1764                     jnb     znmat,nozzmi;bitznak,nozzmi
0A2F 762D           1765                     mov     @r0,#2dh
0A31 79AE           1766     nozzmi: mov     r1,#diap
0A33 7848           1767                     mov     r0,#bufind+8
0A35 E7             1768                     mov     a,@r1
0A36 B4080B         1769                     cjne    a,#8,nodi8
0A39 20151E         1770                     jb      biteizm,seegoon
0A3C 7630           1771                     mov     @r0,#30h                 ;10-10
0A3E 18             1772                     dec     r0
0A3F 7663           1773                     mov     @r0,#63h;31h
0A41 08             1774                     inc     r0
0A42 8016           1775                     jmp     seegoon
0A44 B40910         1776     nodi8:  cjne    a,#9,nodis9
0A47 201510         1777                     jb      biteizm,seegoon
0A4A 7631           1778                     mov     @r0,#31h           ;10-11
0A4C 18             1779                     dec     r0
0A4D 7663           1780                     mov     @r0,#63h;31h
                    1781                             
0A4F 08             1782                     inc     r0
0A50 8008           1783                     jmp     seegoon
                    1784     
0A52 020000   F     1785     rnorvich:       jmp     norvich
0A55 8087           1786     rno3parN:       jmp     no3parN
                    1787     
0A57 2432           1788     nodis9: add     a,#32h
0A59 F6             1789                     mov     @r0,a;#37h;"T";
0A5A 08             1790     seegoon:        inc     r0
0A5B 7641           1791                     mov     @r0,#"A";"E";
0A5D 08             1792                     inc     r0
0A5E 7600           1793                     mov     @r0,#00h ;=feh в нач установе для поджига всех сегм
0A60 08             1794                     inc     r0;             mov             bufind+11
0A61 7610           1795                     mov     @r0,#010h               ;bufind+11.4 точка после первой цифры
                    1796                                             
                    1797     ;;;;;;goonind:
0A63 79AF           1798                     mov     r1,#parN        ; ??????
0A65 B703ED         1799                     cjne    @r1,#3,rno3parN ;  8.11.06
                    1800             
0A68                1801     seeind:                         ;;;;;;;;;;;;;
0A68 784A           1802                     mov             r0,#bufind+10
0A6A E6             1803                     mov             a,@r0
0A6B 300F03         1804                     jnb             bitnul,nnnul
0A6E 4408           1805                     orl             a,#08h
0A70 F6             1806                     mov             @r0,a
0A71 799A           1807     nnnul:  mov             r1,#parT
0A73 B70205         1808                     cjne            @r1,#2,nsec1
0A76 4420           1809                     orl             a,#20h    ;1s
0A78 F6             1810                     mov             @r0,a
0A79 800B           1811                     jmp             nsec10
0A7B B70105         1812     nsec1:  cjne            @r1,#1,nsec11
0A7E 4440           1813                     orl             a,#40h                  ;10s
0A80 F6             1814                     mov             @r0,a
0A81 8003           1815                     jmp             nsec10
                    1816                                     
0A83 4410           1817     nsec11: orl             a,#10h
0A85 F6             1818                     mov             @r0,a                    ;0,1s
                    1819     
0A86 784A           1820     nsec10: mov             r0,#bufind+10   
0A88 E6             1821                     mov             a,@r0;mov               @r0,a
0A89 300503         1822                     jnb             bitavp,nobavp
0A8C 4404           1823                     orl             a,#04           ;bufind+10.2
0A8E F6             1824                     mov             @r0,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    29

                    1825             ;       mov             @r0,a   
0A8F 784A           1826     nobavp: mov             r0,#bufind+10   
0A91 E6             1827                     mov             a,@r0;mov               @r0,a   
0A92 301803         1828                     jnb             knizm,nobitizm
0A95 4402           1829                     orl             a,#02
0A97 F6             1830                     mov             @r0,a
0A98                1831     nobitizm:                       
0A98 301A07         1832                     jnb             bitakt,notakt
0A9B C21A           1833                     clr             bitakt
0A9D 534AFE         1834                     anl             bufind+10,#0feh
0AA0 8005           1835                     jmp             taktind
0AA2 D21A           1836     notakt: setb    bitakt
0AA4 434A01         1837                     orl             bufind+10,#01                                   
0AA7                1838     taktind:                
                    1839     ;;;;;;;;;
0AA7 301517         1840                     jnb             biteizm,yesind
0AAA 79B1           1841                     mov             r1,#vichR
0AAC 7848           1842                     mov             r0,#bufind+8
0AAE 7654           1843                     mov             @r0,#'T'
0AB0 08             1844                     inc             r0
0AB1 B72104         1845                     cjne    @r1,#21h,test9i
0AB4 7631           1846                     mov             @r0,#31h;11A
                    1847                     ;       dec             r0
                    1848                     ;       mov             @r0,#63h
0AB6 8009           1849                     jmp             yesind
                    1850     
0AB8 B72204         1851     test9i: cjne            @r1,#22h,test7i
0ABB 7632           1852                     mov             @r0,#32h;39h;09A
0ABD 8002           1853                     jmp             yesind
0ABF 7633           1854     test7i: mov             @r0,#33h;37h;07A
                    1855     ;;;;;;;;;
0AC1                1856     yesind:         
0AC1 301203         1857                     jnb             bitklb,noklb
0AC4 434A80         1858                     orl             bufind+10,#80h; on kmp
0AC7 300A03         1859     noklb:  jnb             bitbon,nobuf
0ACA 434B02         1860                     orl             bufind+11,#02h; on pysk
0ACD                1861     nobuf:          ;;;;;
0ACD 301808         1862                     jnb             knizm,anlp1
0AD0 79AE           1863                     mov             r1,#diap
0AD2 C3             1864                     clr             c
0AD3 7401           1865                     mov             a,#1
0AD5 97             1866                     subb            a,@r1
0AD6 4003           1867                     jc              nop1oll
0AD8 309100         1868     anlp1:  jnb             p1.1,nop1oll
                    1869     ;;;24/12/09             mov             nuerr,#35h
                    1870     ;;;24/12/09             call            error   ;ошибка 5 перегрузка на диап 10-2,10-3  
0ADB 120000   F     1871     nop1oll:        call            ind     ;пп выдачи на индикатор
                    1872     
                    1873     
                    1874     ;       jnb     is_cmd,norvich          ;??
                    1875     ;       call    cmd_tree
                    1876     
                    1877     
                    1878     
0ADE                1879     norvich: 
0ADE 789A           1880                     mov             r0,# parT
0AE0 79AC           1881                     mov             r1,#chind
0AE2 B60152         1882                     cjne            @r0,#1,rnot1in
0AE5                1883     labelB: ;;;;;;;;;;;
                    1884                     ;сдвиг по алгоритму чтобы посмотреть в цапе 
0AE5 789F           1885                     mov             r0,#rez_A3+3
                    1886                     ;;;;;;;;
0AE7 79BB           1887                     mov             r1,#work+3
0AE9 E6             1888                     mov             a,@r0
0AEA 7F07           1889                     mov             r7,#7;кол сдв вправо
0AEC C3             1890     dvig3:  clr             c
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    30

0AED 13             1891                     rrc             a
0AEE DFFC           1892                     djnz    r7,dvig3 ;d7,d6,d5        мл байт
0AF0 FA             1893                     mov             r2,a    ;сохр байт
0AF1 18             1894                     dec             r0              ;rez_A3+2
0AF2 E6             1895                     mov             a,@r0
0AF3 C0E0           1896                     push    acc
0AF5 C3             1897                     clr             c
0AF6 7F01           1898                     mov             r7,#1
0AF8 C3             1899     dvig2:  clr             c
0AF9 33             1900                     rlc             a
0AFA DFFC           1901                     djnz    r7,dvig2 ;d12..d11       средний байт
0AFC 4A             1902                     orl             a,r2
0AFD F7             1903                     mov             @r1,a;сформ мл байт
0AFE 19             1904                     dec             r1
0AFF D0E0           1905                     pop             acc
                    1906                             
0B01 7F07           1907                     mov             r7,#7
0B03 C3             1908     dvig1:  clr             c
0B04 13             1909                     rrc             a
0B05 DFFC           1910                     djnz    r7,dvig1 ;d18     ср байт
0B07 FA             1911                     mov             r2,a   ;сохр
0B08 18             1912                     dec             r0
0B09 E6             1913                     mov             a,@r0 ;rez_A3+1
0B0A C0E0           1914                     push    acc
                    1915                     
0B0C 7F01           1916                     mov             r7,#1
0B0E C3             1917     dvig0:  clr             c
0B0F 33             1918                     rlc             a
0B10 DFFC           1919                     djnz    r7,dvig0 ;        d21..d16
0B12 4A             1920                     orl             a,r2
0B13 F7             1921                     mov             @r1,a   ; сформ средний  байт
0B14 19             1922                     dec             r1
0B15 D0E0           1923                     pop             acc       ;rez_A3+1
                    1924                             ;;;;;;;;;;;;;;
                    1925     ;                       jb              acc.7,dvm
0B17 C3             1926                     clr             c
0B18 7F07           1927                     mov             r7,#7
0B1A C3             1928     dvig4:  clr             c
0B1B 13             1929                     rrc             a
0B1C DFFC           1930                     djnz    r7,dvig4 ;        d22
0B1E FA             1931                     mov             r2,a    ;сохр
0B1F 18             1932                     dec             r0              ;       rez_A3
0B20 E6             1933                     mov             a,@r0
                    1934                     ;;;;;
0B21 7F01           1935                     mov             r7,#1
0B23 C3             1936     vig0:           clr             c
0B24 33             1937                     rlc             a
0B25 DFFC           1938                     djnz    r7,vig0 ;         d24..d30
0B27 4A             1939                     orl             a,r2
0B28 F7             1940                     mov             @r1,a   ; сформ   байт
0B29 19             1941                     dec             r1
0B2A E6             1942                     mov             a,@r0
                    1943                     ;;;;;
0B2B 20E70C         1944                     jb              acc.7,dvm
0B2E C3             1945                     clr             c
0B2F 7F07           1946                     mov             r7,#7
0B31 C3             1947     vig4:           clr             c
0B32 13             1948                     rrc             a
0B33 DFFC           1949                     djnz    r7,vig4 ;         d
0B35 8009           1950                     jmp             endsdv
                    1951     
0B37 020000   F     1952     rnot1in:        jmp             not1in
                    1953     
                    1954     ;;;;;;;;;;;;                                    
0B3A 7F07           1955     dvm:            mov             r7,#7
0B3C D3             1956     dvig6:  setb            c
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    31

0B3D 13             1957                     rrc             a
0B3E DFFC           1958                     djnz    r7,dvig6 ;        d31
0B40 F7             1959     endsdv: mov             @r1,a
                    1960                                                             
                    1961      ;->work   
                    1962     ;?              jnb                     is_mem,md_3             ???????????????????????
                    1963     ;               call            resa_hl
                    1964     ;               call            reA3_m          ;write A3 to Mem
                    1965     ;               call            save_hlm                ;bound of 200
                    1966     ;               setb            EA
                    1967     ;               sjmp            me_5
                    1968     
0B41                1969     md_3:
0B41                1970     md_5:
                    1971     ;;;     jnb     is_rs,me_5              ;out RS rez_A3
0B41 201E03         1972                     jb      is_rs,md_51             ;out RS rez_A3
0B44 020000   F     1973                     jmp             me_5
0B47                1974     md_51:
                    1975     ;       jb      bitvi11,me_5    ;rez_R is out
0B47 799A           1976                                     mov     r1,#parT        ;;;28.12.09
0B49 301709         1977             jnb     bitoll,moveA3_  ;бит  перегрузки
                    1978                     ;бит  перегрузки
0B4C 7840           1979             mov     r0,#bufind      ;20.11.09#rez_A3#rez_A3
                    1980     ;;;---28.12.09--------
0B4E B70602         1981                                     cjne @r1,#6,moveR0_no2ms
0B51 789C           1982                                     mov     r0,#rez_A3
0B53                1983     moveR0_no2ms:
                    1984     ;;;---28.12.09--------
0B53 7641           1985             mov     @R0,#41h
                    1986     
0B55                1987     moveA3_:
                    1988     ;;;------ 28.12.09 --- вернуть на 2 мs выдачу в RS по старому ---
0B55 B70624         1989                             cjne @r1,#6,moveA3_no2ms
                    1990     
0B58 7840           1991                     mov     r0,#bufind                              
0B5A 79AE           1992                     mov     r1,#diap
0B5C E7             1993                     mov     a,@r1
0B5D 2402           1994                     add     A,#2
0B5F F6             1995                     mov     @r0,A
0B60 08             1996                     inc     r0
0B61 799C           1997                     mov     r1,#rez_A3
0B63 09             1998                     inc     r1
0B64 E7             1999                     mov     A,@r1
0B65 F6             2000                     mov     @r0,A
0B66 09             2001                     inc     r1
0B67 08             2002                     inc     r0
0B68 E7             2003                     mov     A,@r1
0B69 F6             2004                     mov     @r0,A
0B6A 09             2005                     inc     r1
0B6B 08             2006                     inc     r0
0B6C E7             2007                     mov     A,@r1
0B6D F6             2008                     mov     @r0,A
0B6E 09             2009                     inc     r1
0B6F 08             2010                     inc     r0
                    2011     
                    2012     
                    2013     
                    2014     
0B70 7440           2015                             mov     A,#bufind                               ;;#rez_A3       ;Am
                             e,..; bufind - no use: for fastest isn't screen output
0B72 F526           2016                             mov     p_out,A
0B74 752404         2017                             mov     cnt_out,#4
0B77 75990A         2018                             mov     SBUF0,#0Ah      ;#7Fh   ;was cmd_rez
0B7A 8074           2019                             jmp             me_5
0B7C                2020     moveA3_no2ms:
                    2021     ;;;------  28.12.09 -----------
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    32

                    2022     ;------------------ 23.11.09---------------------
0B7C 789C           2023                     mov     r0,#rez_A3;->r2..r5       передать A3 в индикатор
0B7E 120000   F     2024                     call    resar2;????????????????17.01.07
                    2025                                     
0B81 120000   F     2026                     call    maform
0B84 784F           2027                     mov     r0,#abin
0B86 120000   F     2028                     call    saver2
0B89 7853           2029                     mov     r0,#adec
0B8B 7952           2030                     mov     r1,#abin+3      ;hex->10
0B8D 120000   F     2031                     call    bindec
                    2032                                     
0B90 785C           2033                     mov     r0,#adec+9;разместить в буфер индикации
0B92 7947           2034                     mov     r1,#bufind+7    ;20.11.09       6
0B94 7F06           2035                     mov     r7,#6
0B96 E6             2036     bufdecRS:       mov     a,@r0
0B97 2430           2037                     add     a,#30h
0B99 F7             2038                     mov     @r1,a
0B9A 19             2039                     dec     r1
0B9B 18             2040                     dec     r0
0B9C DFF8           2041                     djnz    r7,bufdecRS
0B9E F7             2042                                             mov     @r1,a           ;
0B9F 09             2043                                             inc     r1                      ;вставить точку
                    2044     ;                                       inc     r1
0BA0 772C           2045                                             mov     @r1,#2ch        ;       
0BA2 7848           2046                     mov     r0,#bufind+8
0BA4 762D           2047                     mov     @r0,#2dh          ;-2..-9
0BA6 7840           2048                     mov     r0,#bufind
0BA8 762B           2049                     mov     @r0,#2bh
0BAA 300202         2050                     jnb     znmat,nozzmiRS;bitznak,nozzmi
0BAD 762D           2051                     mov     @r0,#2dh
0BAF 79AE           2052     nozzmiRS:       mov     r1,#diap
0BB1 7849           2053                     mov     r0,#bufind+9
                    2054     
0BB3 7430           2055                             mov             a,#30h
                    2056     ;;;                     inc     r0
0BB5 F6             2057                             mov     @r0,A
                    2058     ;;;                     inc             A
                    2059     
0BB6 E7             2060                     mov     a,@r1
0BB7 B4080D         2061                     cjne    a,#8,nodi8RS
                    2062     
                    2063     ;;;                     mov     @r0,A
                    2064     
0BBA 201521         2065                     jb      biteizm,seegoonRS
0BBD 7631           2066                     mov     @r0,#31h                 ;10-10
0BBF 08             2067                             inc     r0
                    2068     ;;              dec     r0
0BC0 7630           2069                     mov     @r0,#30h
                    2070     ;;              inc     r0
0BC2 75240B         2071             mov     cnt_out,#11     ;20.11.09#4
0BC5 8017           2072                     jmp     seegoonRS
0BC7 B4090D         2073     nodi8RS:        cjne    a,#9,nodis9RS
0BCA 201511         2074                     jb      biteizm,seegoonRS
0BCD 7631           2075                     mov     @r0,#31h           ;10-11
0BCF 08             2076                             inc     r0
                    2077     ;;              dec     r0
0BD0 7631           2078                     mov     @r0,#31h
0BD2 75240B         2079             mov     cnt_out,#11     ;20.11.09#4                     
                    2080     ;;              inc     r0
0BD5 8007           2081                     jmp     seegoonRS
                    2082     
                    2083     ;;rnorvich:     jmp     norvich
                    2084     ;;rno3parN:     jmp     no3parN
                    2085     
0BD7 2432           2086     nodis9RS:       add     a,#32h
0BD9 08             2087                                     inc     r0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    33

0BDA F6             2088                     mov     @r0,a;#37h;"T";
0BDB 75240B         2089             mov     cnt_out,#11     ;20.11.09#4
0BDE                2090     seegoonRS:      
0BDE 7847           2091                     mov     r0,#bufind+7
0BE0 7645           2092                     mov     @r0,#"E";
                    2093     ;               mov     r0,#bufind+10
                    2094     ;               mov     @r0,#0Ah;
                    2095     ;------------------------------------------------
                    2096     
0BE2 7440           2097             mov     A,#bufind       ;20.11.09#rez_A3        ;Ame,..; bufind - no use: for faste
                             st isn't screen output
0BE4 F526           2098             mov     p_out,A
                    2099     ;       mov     cnt_out,#10     ;20.11.09#4
0BE6 75990A         2100             mov     SBUF0,#0Ah      ;#7Fh   ;was cmd_rez
                    2101     
                    2102     ;-----------28.12.09---------
0BE9 301704         2103                     jnb     bitoll,me_5     ;бит  перегрузки                mov     r0,#bufind 
                                  ;20.11.09#rez_A3#rez_A3
0BEC 7840           2104                     mov     r0,#bufind
0BEE 7641           2105                     mov     @R0,#41h
                    2106     ;----------28.12.09
0BF0                2107     me_5:                   ;??????????????????
0BF0 300C37         2108                     jnb     is_2,me_6
0BF3 120000   F     2109                     call    resa_hl ;dptr=(saven_bl)/2/3/4
0BF6 120000   F     2110                     call    loA3_X;адрес след ячейки внешн озу храним в ячейке saven_bl
0BF9 120000   F     2111                     call            save_hl
0BFC 78AE           2112                     mov                     r0,#diap
0BFE E6             2113                     mov                     a,@r0
0BFF 7938           2114                     mov                     r1,#nblok
0C01 B70104         2115                     cjne            @r1,#1,nosv1    ;?????
0C04 F534           2116                     mov                     sadiap,a
0C06 8010           2117                     jmp                     tostro
0C08 B70204         2118     nosv1:  cjne            @r1,#2,nosv2
0C0B F532           2119                     mov                     sadiap2,a
0C0D 8009           2120                     jmp                     tostro
0C0F B70304         2121     nosv2:  cjne            @r1,#3,nosv3
0C12 F531           2122                     mov                     sadiap3,a
0C14 8002           2123                     jmp                     tostro
0C16                2124     nosv3:          
0C16 F530           2125                     mov                     sadiap4,a
0C18                2126     tostro:
                    2127     
                    2128     ;               inc             cnt_out
                    2129     ;               mov             a,#200
                    2130     ;               subb    a,cnt_out
0C18 1524           2131                     dec             cnt_out
0C1A E524           2132                     mov             A,cnt_out
0C1C 700C           2133                     jnz             me_6
0C1E C20C           2134                     clr             is_2
0C20 789A           2135                     mov             R0,#parT
0C22 7602           2136                     mov             @R0,#2  ;1 sec
0C24 75A890         2137                     mov     IE,#90h ;Снятие блокировки всех прерываний+RS
                    2138     ;       setb    is_izm  ;???
0C27 020000   F     2139             jmp     after_2 ;keyb1
0C2A                2140     me_6:
                    2141                             ;??????????????????
0C2A 900000   F     2142                     mov             dptr,#chzap
0C2D 120000   F     2143                     call    ldc_long
0C30 78BB           2144                     mov             r0,#work+3
0C32 120000   F     2145                     call    ladd
0C35 ED             2146                     mov             a,r5
0C36 F5D2           2147                     mov             DAC0L,a
                    2148                             
0C38 EC             2149                     mov             a,r4
0C39 F5D3           2150                     mov             DAC0H,a
                    2151     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    34

                    2152                                             ;;;;;;;;;;
0C3B 78CF           2153                     mov                     r0,#chbuf               ;float
0C3D 120000   F     2154                     call            resar2
0C40 900000   F     2155                     mov                     dptr,#ch_2;ch0;ch_1
0C43 120000   F     2156                     call            ldc_ltemp
0C46 1201D6         2157                     call            flcmp
0C49 5020           2158                     jnc                     rnobuf0
                    2159                                             
0C4B 900000   F     2160                     mov                     dptr,#ch_1
0C4E 120000   F     2161                     call            ldc_ltemp
0C51 1201D1         2162                     call            flsub
0C54 900E00         2163                     mov                     dptr,#chbuf1                    ;СБ1 внешн озу
0C57 EA             2164                     mov                     a,r2
0C58 F0             2165                     movx            @dptr,a
0C59 A3             2166                     inc                     dptr
0C5A EB             2167                     mov                     a,r3
0C5B F0             2168                     movx            @dptr,a
0C5C A3             2169                     inc                     dptr
0C5D EC             2170                     mov                     a,r4
0C5E F0             2171                     movx            @dptr,a
0C5F A3             2172                     inc                     dptr
0C60 ED             2173                     mov                     a,r5
0C61 F0             2174                     movx            @dptr,a
                    2175                                             
                    2176                                             
                    2177                                             ;jnc                    rnobuf0
0C62 200909         2178                     jb              bitprd,yesprd   ;передать   A3 в буфер
0C65 200A08         2179                     jb              bitbon,yesbuf   ;записать   A3 в буфер
0C68 020000   F     2180                     jmp             gocikle
0C6B 020000   F     2181     rnobuf0:        jmp             nobuf0
0C6E                2182     yesprd: ;передать   A3 в буфер
0C6E 8045           2183                     jmp             goonT
0C70                2184     yesbuf:         ;записать   A3 в буфер
0C70 120000   F     2185                     call            resa_hl;dptr-
0C73 120000   F     2186                     call            loA3_X  ;адрес след ячейки внешн озу храним
                    2187                                                                             ;в ячейке saven_bl
0C76 120000   F     2188                     call            save_hl
0C79 78AE           2189                     mov                     r0,#diap
0C7B E6             2190                     mov                     a,@r0
0C7C 7938           2191                     mov                     r1,#nblok
0C7E B70104         2192                     cjne            @r1,#1,nosav1
0C81 F534           2193                     mov                     sadiap,a
0C83 8012           2194                     jmp                     gotostrob
0C85 B70204         2195     nosav1: cjne            @r1,#2,nosav2
0C88 F532           2196                     mov                     sadiap2,a
0C8A 800B           2197                     jmp                     gotostrob
0C8C B70304         2198     nosav2: cjne            @r1,#3,nosav3
0C8F F531           2199                     mov                     sadiap3,a
0C91 8004           2200                     jmp                     gotostrob
0C93                2201     nosav3:         
0C93 F530           2202                     mov                     sadiap4,a
0C95 8000           2203                     jmp                     gotostrob
                    2204     
                    2205                             ;строб
0C97                2206     gotostrob:
0C97 E586           2207                     mov             a,P6            ;p6.4=0
0C99 54EF           2208                     anl             a,#0efh
0C9B F586           2209                     mov             P6,a
0C9D 00             2210                     nop
0C9E 00             2211                     nop
0C9F E586           2212                     mov             a,P6                    ;p6.4=1 
0CA1 4410           2213                     orl             a,#10h
0CA3 F586           2214                     mov             P6,a
                    2215                                     ;;;;;;;;;
0CA5 E5DA           2216                     mov             a,PCA0CPM0;     
0CA7 4446           2217                     orl             a,#46h;anl              a,#0fbh
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    35

0CA9 F5DA           2218                     mov             PCA0CPM0,a
0CAB 75CDD0         2219                     mov             TH2,#0d0h
0CAE 75CC00         2220                     mov             TL2,#00
                    2221     
0CB1 D2CA           2222                     setb            T2CON.2
0CB3 D2AD           2223                     setb            ET2;IE.5                            
0CB5 78CD           2224     goonT:  mov             r0,#interva;high  byte loadr2
0CB7 E6             2225                     mov             a,@r0
0CB8 FC             2226                     mov             r4,a
0CB9 08             2227                     inc             r0
0CBA E6             2228                     mov             a,@r0
0CBB FD             2229                     mov             r5,a
0CBC E4             2230                     clr             a
0CBD FB             2231                     mov             r3,a
0CBE FA             2232                     mov             r2,a                            ;r2..r5-interval(hex)
0CBF 120402         2233                     call            altof                   ;r2..r5->interval (float)
                    2234     
0CC2 789A           2235                     mov             r0,#parT
0CC4 B60108         2236                     cjne            @r0,#1,nott1
0CC7 900000   F     2237                     mov             dptr,#ch_2       
0CCA 120000   F     2238                     call            ldc_ltemp
0CCD 8009           2239                     jmp             intmul
                    2240     
0CCF B60225         2241     nott1:  cjne    @r0,#2,nott2
0CD2 900000   F     2242                     mov             dptr,#ch_10      
0CD5 120000   F     2243                     call            ldc_ltemp
                    2244                                                                             
0CD8 120203         2245     intmul: call            flmul                                   ;*10
0CDB 900E00         2246     intmul1:        mov             dptr,#chbuf1    ;СБ1
0CDE E0             2247                     movx    a,@dptr
0CDF F508           2248                     mov             r8,a
0CE1 A3             2249                     inc             dptr
0CE2 E0             2250                     movx    a,@dptr
0CE3 F509           2251                     mov             r9,a
0CE5 A3             2252                     inc             dptr
0CE6 E0             2253                     movx    a,@dptr
0CE7 F50A           2254                     mov             r10,a
0CE9 A3             2255                     inc             dptr
0CEA E0             2256                     movx    a,@dptr
0CEB F50B           2257                     mov             r11,a
0CED 120166         2258                     call            fladd           ;СБ+СБ1
0CF0 78CF           2259     intmul2:        mov                     r0,#chbuf
0CF2 120000   F     2260                     call            saver2          ;*2
                    2261                                     
0CF5 8035           2262                     jmp             gocikle
                    2263     
0CF7 B6030B         2264     nott2:  cjne    @r0,#3,nott3
0CFA 900000   F     2265                     mov                     dptr,#ch_2       
0CFD 120000   F     2266                     call            ldc_ltemp
0D00 120203         2267                     call            flmul
0D03 80EB           2268                     jmp                     intmul2                                 ;*2
                    2269     
                    2270     
0D05 B60414         2271     nott3:  cjne    @r0,#4,nott4
0D08 900000   F     2272                     mov                     dptr,#ch_10      
0D0B 120000   F     2273                     call            ldc_ltemp       ;/10*4
0D0E 1202B7         2274                     call            fldiv
0D11 900000   F     2275                     mov                     dptr,#ch_4       
0D14 120000   F     2276                     call            ldc_ltemp
0D17 120203         2277                     call            flmul
0D1A 80D4           2278                     jmp             intmul2
                    2279     
0D1C B6050B         2280     nott4:  cjne    @r0,#5,nott5
0D1F 900000   F     2281                     mov             dptr,#ch_2       
0D22 120000   F     2282                     call            ldc_ltemp;*2
0D25 120203         2283                     call            flmul
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    36

0D28 80C6           2284                     jmp             intmul2;T=5
0D2A                2285     nott5:  ;       mov             dptr,#ch_1       
                    2286                     ;       call            ldc_ltemp
                    2287                     ;       call            flmul
0D2A 80C4           2288                     jmp     intmul2                                 ;*1
                    2289     
                    2290     
0D2C 300708         2291     gocikle:        jnb     bitzus,nofz                     
0D2F 120000   F     2292                     call    z_05s    ;0,5c
0D32 120000   F     2293                     call    z_05s    ;0,5c
0D35 C207           2294                     clr     bitzus  ;bitbuf бит задержки засылки us
0D37 020000   F     2295     nofz:           jmp     labelA;rebyte
                    2296     
                    2297     
0D3A 80F0           2298     yestt5: jmp             gocikle
                    2299     
0D3C 78CF           2300     nobuf0: mov             r0,#chbuf
0D3E 120000   F     2301                     call            resar2
0D41 900000   F     2302                     mov                     dptr,#ch_1       
0D44 120000   F     2303                     call            ldc_ltemp
0D47 1201D1         2304                     call            flsub
0D4A 78CF           2305                     mov                     r0,#chbuf       
0D4C 120000   F     2306                     call            saver2  
0D4F 80DB           2307                     jmp             gocikle
                    2308     
                    2309     
0D51 B60205         2310     not1in: cjne    @r0,#2,not2in
0D54 7701           2311                     mov             @r1,#1           ;T=2
0D56 020000   F     2312                     jmp     labelB
                    2313     
0D59 B60305         2314     not2in: cjne    @r0,#3,not3in
0D5C 7701           2315                     mov             @r1,#1;9                ;T=3
0D5E 020000   F     2316                     jmp     labelB
0D61 7703           2317     not3in: mov             @r1,#3;19
0D63 020000   F     2318                     jmp     labelB
                    2319     
                    2320     
                    2321     ;;;;;;;;;;;3.11.06
                    2322     
                    2323     ;;коррекция 0
0D66 7883           2324     KORnul: mov             r0,#chdel
0D68 B60010         2325                     cjne    @r0,#0,nonuldel
                    2326                                     
0D6B E584           2327                     mov             a,p4                    ;сохр  us
0D6D F536           2328                     mov             saus,a
0D6F E585           2329                     mov             a,p5
0D71 F537           2330                     mov             saus+1,a
                    2331     
0D73 900000   F     2332                     mov             dptr,#kor0us
0D76 120000   F     2333                     call    lospus          ;упр слово коррекции 0
0D79 8018           2334                     jmp     chdelmo
                    2335     
0D7B                2336     nonuldel:       ;cjne   @r0,#7,no4del
0D7B B6031B         2337                     cjne    @r0,#3,no4del
                    2338                             ;рез ->AN
0D7E 7862           2339                     mov     r0,#rez_A;->r2..r5
0D80 120000   F     2340                     call    resar2
                    2341                                             ;;;;;;;;;;
0D83 120402         2342                     call    altof           ;r2..r5->float
0D86 7884           2343                     mov     r0,#kor0_AN;->kor0_AN
0D88 120000   F     2344                     call    saver2
                    2345                                     
0D8B E536           2346                     mov             a,saus                  ;восстан исходное упр слово
0D8D F584           2347                     mov             p4,a
0D8F E537           2348                     mov             a,saus+1
0D91 F585           2349                     mov             p5,a            
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    37

0D93 7883           2350     chdelmo:        mov             r0,#chdel
0D95 06             2351                     inc             @r0             ;chdel+1
0D96 020000   F     2352                     jmp              rebyte
                    2353     
0D99                2354     no4del:         ;cjne   @r0,#14,chdelmo
0D99 B606F7         2355                     cjne    @r0,#6,chdelmo
0D9C 7600           2356                     mov             @r0,#0          ;chdel
0D9E 7898           2357                     mov             r0,#chinkor
0DA0 7602           2358                     mov             @r0,#2;00;
0DA2 08             2359                     inc             r0
0DA3 7658           2360                     mov             @r0,#58h;0c8h
0DA5 120000   F     2361                     call    clmassix;сбросить массив скольз среднего
0DA8                2362     bonpart:
0DA8 300A20         2363                     jnb             bitbon,rebyter
0DAB 78CF           2364                     mov             r0,#chbuf
0DAD 120000   F     2365                     call            resar2
0DB0 799A           2366                     mov             r1,#parT
0DB2 B70211         2367                     cjne            @r1,#2,no6del
0DB5 900000   F     2368                     mov             dptr,#ch_7;5
0DB8                2369     no5del:
0DB8 120000   F     2370                     call            ldc_ltemp
0DBB 1201D1         2371                     call            flsub   
0DBE 78CF           2372                     mov             r0,#chbuf
0DC0 120000   F     2373                     call            saver2
0DC3 020000   F     2374                     jmp             rebyte
0DC6                2375     no6del:
0DC6 900000   F     2376                     mov             dptr,#ch_1
0DC9 80ED           2377                     jmp             no5del
                    2378     
0DCB 020000   F     2379     rebyter:        jmp             rebyte
                    2380     
0DCE 7981           2381     tekaout:        mov             r1,#chavt
0DD0 770C           2382                     mov             @r1,#0ch;6;1;
0DD2 09             2383                     inc             r1
0DD3 7780           2384                     mov             @r1,#80h;40h;
0DD5 020000   F     2385                     jmp             noavk
                    2386     
                    2387     ;автокалибровка
0DD8 200AF3         2388     autoka: jb              bitbon,tekaout;rebyter
0DDB                2389     nulavt:  ;;;;;
0DDB 7883           2390                     mov             r0,#chdel
0DDD B60016         2391                     cjne    @r0,#0,nndelch
0DE0 E584           2392                     mov             a,p4                    ;сохр  us
0DE2 F536           2393                     mov             saus,a
0DE4 E585           2394                     mov             a,p5
0DE6 F537           2395                     mov             saus+1,a
                    2396     
0DE8 E585           2397                     mov   a,p5
0DEA 4404           2398                     orl             a,#04              ;p5.2=1
0DEC 00             2399                     nop
0DED 00             2400                     nop
0DEE 543F           2401                     anl             a,#3fh          ;p5.6,p5.7=0
0DF0 F585           2402                     mov   p5,a
0DF2 06             2403                     inc             @r0
0DF3 020000   F     2404                     jmp              rebyte
0DF6 B6033D         2405     nndelch:        cjne    @r0,#3,n4delch
                    2406                             ;pez->A+
                    2407                             ;K+=000/(A+-AN)
                    2408                             ;mov            r0,#rez_A;->r2..r5
                    2409                             ;call   resar2
0DF9 E577           2410                     mov             a,reacp         ;r2..r5 &&&&&&&&&&&
0DFB FA             2411                     mov             r2,a
0DFC E578           2412                     mov             a,reacp+1
0DFE FB             2413                     mov             r3,a
0DFF E579           2414                     mov             a,reacp+2
0E01 FC             2415                     mov             r4,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    38

0E02 E57A           2416                     mov             a,reacp+3
0E04 FD             2417                     mov             r5,a
                    2418                             ;;;;;;;;;;;;;;;
0E05 120402         2419                     call    altof                   ;r2..r5->float
0E08 7888           2420                     mov     r0,#rezAp;->rezAp
0E0A 120000   F     2421                     call    saver2                          
0E0D 7884           2422                     mov     r0,#kor0_AN;kor0_AN->r8..r11
0E0F 120000   F     2423                     call    resar8                          
0E12 1201D1         2424                     call    flsub           ; r2..r5(A+-AN)
0E15 120000   F     2425                     call    move28     ;r2..r5->r8..r11
0E18 900000   F     2426                     mov     dptr,#CH2tho;000->r2..r5 float
0E1B 120000   F     2427                     call    ldc_long                
0E1E 1202B7         2428                     call    fldiv
0E21 EA             2429                     mov     a,r2
0E22 547F           2430                     anl     a,#7fh
0E24 FA             2431                     mov     r2,a
0E25 7890           2432                     mov     r0,#koefKp;->koefKp
0E27 120000   F     2433                     call    saver2
                    2434                      
                    2435                     ;anl            P5,#0feh                ;p5.0=0 
0E2A E585           2436                     mov     a,P5
0E2C 543B           2437                     anl     a,#3bh;acp-
0E2E F585           2438                     mov     P5,a
0E30 7883           2439                     mov     r0,#chdel
0E32 06             2440                     inc     @r0                       ;ch+1
0E33 020000   F     2441                     jmp     rebyte
                    2442     
0E36 B6063F         2443     n4delch:        cjne    @r0,#6,n8delch
                    2444                     ; pez->A-
                    2445                     ;K-=000/(A--AN)
                    2446                     ;       mov     r0,#rez_A;->r2..r5
                    2447                     ;       call    resar2
0E39 E577           2448                     mov     a,reacp         ;r2..r5 &&&&&&&&&&&
0E3B FA             2449                     mov     r2,a
0E3C E578           2450                     mov     a,reacp+1
0E3E FB             2451                     mov     r3,a
0E3F E579           2452                     mov     a,reacp+2
0E41 FC             2453                     mov     r4,a
0E42 E57A           2454                     mov     a,reacp+3
0E44 FD             2455                     mov     r5,a
                    2456                                     ;;;;;;;;;;;;;;;
0E45 120402         2457                     call    altof                   ;r2..r5->float
0E48 788C           2458                     mov     r0,#rezAm;->rezAm
0E4A 120000   F     2459                     call    saver2                          
0E4D 7884           2460                     mov     r0,#kor0_AN;kor0_AN->r8..r11
0E4F 120000   F     2461                     call    resar8                          
0E52 1201D1         2462                     call    flsub                   ; r2..r5(A--AN)
0E55 120000   F     2463                     call    move28                  ;r2..r5->r8..r11
0E58 900000   F     2464                     mov     dptr,#CH2tho    ;000->r2..r5 float
0E5B 120000   F     2465                     call    ldc_long                
0E5E 1202B7         2466                     call    fldiv
0E61 EA             2467                     mov     a,r2
0E62 547F           2468                     anl     a,#7fh
0E64 FA             2469                     mov     r2,a
0E65 7894           2470                     mov     r0,#koefKm;->koefKm
0E67 120000   F     2471                     call    saver2
                    2472                      
0E6A E536           2473                     mov     a,saus                  ;восстан исходное упр слово
0E6C F584           2474                     mov     p4,a
0E6E E537           2475                     mov     a,saus+1
0E70 F585           2476                     mov     p5,a            
0E72 7883           2477                     mov     r0,#chdel
0E74 06             2478                     inc     @r0                       ;ch+1
0E75 020000   F     2479                     jmp     rebyte
                    2480     
0E78 B6090F         2481     n8delch:        cjne            @r0,#9,n12delch
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    39

0E7B 7600           2482                     mov             @r0,#0
0E7D 7981           2483                     mov             r1,#chavt
0E7F 773E           2484                     mov             @r1,#3eh;0ch;
0E81 09             2485                     inc             r1
0E82 7780           2486                     mov             @r1,#80h;
0E84 120000   F     2487                     call            clmassix     ;сбросить массив среднего
0E87 020000   F     2488                     jmp             rebyte; bonpart;
0E8A 06             2489     n12delch:       inc             @r0
0E8B 020000   F     2490                     jmp             rebyte
                    2491     
                    2492     
                    2493     
                    2494                                 
0E8E 020000   F     2495     rout6:  jmp             out6
0E91                2496     rlabelF:        
0E91 E5DA           2497                     mov             a,PCA0CPM0;     
0E93 4446           2498                     orl             a,#46h;anl              a,#0fbh
0E95 F5DA           2499                     mov             PCA0CPM0,a
                    2500     
0E97 020000   F     2501                             jmp             labelF  
0E9A                2502     rknrazr:        
0E9A 301103         2503                             jnb     bitmenu,rokclr  ;9.02.10
0E9D 020000   F     2504                             jmp     rviout                  ;
0EA0                2505     rokclr:
                    2506     
0EA0 E5DA           2507                     mov             a,PCA0CPM0;     
0EA2 4446           2508                     orl             a,#46h;anl              a,#0fbh
0EA4 F5DA           2509                     mov             PCA0CPM0,a
                    2510                     
0EA6 020000   F     2511                     jmp             knrazr  
0EA9                2512     rknopt: 
                    2513     
                    2514     ;;              mov             a,PCA0CPM0;     
                    2515     ;;              orl             a,#46h;anl              a,#0fbh
                    2516     ;;              mov             PCA0CPM0,a
                    2517     
0EA9 020000   F     2518                     jmp             knopt
0EAC                2519     rizman: 
0EAC 020000   F     2520                     jmp             izman
                    2521             
0EAF 020000   F     2522     no0chkl:        jmp             kkout6
                    2523     ;?never here
0EB2 75AD00         2524                     mov             P3IF,#00;               обязательно сбросить опять приходит
                              на обработку прерывания
0EB5 75B0C0         2525                     mov             P3,#0c0h
0EB8 32             2526                     reti
0EB9                2527     keyb1:  ;IE6
                    2528     ;;;;;
                    2529                     ;       mov                     a,chkl+1                ;low
                    2530                     ;       jnz                     no0chkl
                    2531                     ;       mov                     a,chkl                          ;high
                    2532                     ;       jnz                     no0chkl
                    2533     ;;;;;
0EB9 75E700         2534                     mov             EIE2,#00H
0EBC 75AD00         2535                     mov             P3IF,#00
                    2536                                     
0EBF C0E0           2537                     push    acc
0EC1 C0D0           2538                     push    psw
0EC3 C000           2539                     push    rr0
0EC5 C001           2540                     push    rr1
0EC7 C002           2541                     push    rr2
0EC9 C003           2542                     push    rr3
0ECB C004           2543                     push    rr4
0ECD C005           2544                     push    rr5
0ECF C006           2545                     push    rr6
0ED1 C007           2546                     push    rr7
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    40

0ED3 C082           2547                     push    dpl
0ED5 C083           2548                     push    dph
                    2549                                     ;clr            bitmig
                    2550                       ;;;;;;;;;;;;;;
0ED7 120000   F     2551                      call   z_01s;0,1s
                    2552     ;;                                      call    z_15
                    2553                                     ;восстан знакоместо при мигании
                    2554                                     ;т к в соотв яч буфера индикации пишется 20h(пробел)
0EDA 78B2           2555                     mov             r0,#marker
0EDC 7440           2556                     mov             a,#bufind
0EDE 26             2557                     add             a,@r0                   ;a=bufind+marker
0EDF F9             2558                     mov             r1,a
0EE0 A73C           2559                     mov             @r1,savba
                    2560                                     ;;;;;;;;;;;
                    2561     ;???
                    2562                     
0EE2 301F05         2563                     jnb             is_izm,gout6__
0EE5 C21F           2564                     clr             is_izm
0EE7 020000   F     2565                             jmp     izman   ;button 'izm'?
                    2566     
                    2567     ;gout6_:
                    2568     ;               jnb             is_mem,gout6__
                    2569     ;               clr             is_mem
                    2570     ;                       jmp     findmem ;button 'mem'?
                    2571     
0EEA                2572     gout6__:        ;usual
                    2573     
                    2574     ;;              mov             a,PCA0CPM0;     
                    2575     ;;              orl             a,#46h;anl              a,#0fbh
                    2576     ;;              mov             PCA0CPM0,a
0EEA E5B0           2577                     mov             a,p3
0EEC 20E644         2578                     jb              acc.6,outviR;выход из режима выч R
0EEF E5B0           2579     gout6:  mov             a,p3
0EF1 44FF           2580                     orl             a,#0ffh         ; p3.(5-0)<-3f
0EF3 F5B0           2581                     mov             p3,a
0EF5 E5B0           2582                     mov             a,p3
0EF7 30E694         2583                     jnb             acc.6,rout6             ;error
0EFA 300494         2584                     jnb             bitizm,rlabelF
0EFD 75B0FE         2585                     mov             p3,#0feh                ;реж IZM
0F00 E5B0           2586                     mov             a,p3
0F02 30E6A7         2587                     jnb             acc.6,rizman
                    2588                                     ;;;;;;
0F05 201235         2589                     jb              bitklb,goklb
0F08 75B0FD         2590                     mov             p3,#0fdh
0F0B E5B0           2591                     mov             a,p3
0F0D 30E68A         2592                     jnb             acc.6,rknrazr             ;labelC
0F10 75B0FB         2593                     mov             p3,#0fbh
0F13 E5B0           2594                     mov             a,p3
0F15 30E652         2595                     jnb             acc.6,knright           ;->
0F18 75B0F7         2596                     mov             p3,#0f7h
0F1B E5B0           2597                     mov             a,p3
0F1D 30E689         2598                     jnb             acc.6,rknopt                    ;T
0F20 75B0EF         2599                     mov             p3,#0efh
0F23 E5B0           2600                     mov             a,p3
0F25 30E618         2601                     jnb             acc.6,pyskst                    ;pysk/stop
0F28 75B0DF         2602                     mov             p3,#0dfh
0F2B E5B0           2603                     mov             a,p3
0F2D 30E662         2604                     jnb             acc.6,knvich
                    2605     
                    2606     ;;;             mov             a,PCA0CPM0;     
                    2607     ;;;             orl             a,#46h;anl              a,#0fbh
                    2608     ;;;             mov             PCA0CPM0,a
                    2609     
0F30 020000   F     2610                     jmp             izmpaT
                    2611     
0F33                2612     outviR: 
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    41

                    2613     
0F33 020000   F     2614                                     jmp             out6
                    2615     
                    2616     ;;              mov             a,PCA0CPM0;     
                    2617     ;;              orl             a,#46h;anl              a,#0fbh
                    2618     ;;              mov             PCA0CPM0,a
                    2619     
0F36 3006B6         2620                     jnb             bitvi11,gout6   
0F39 C214           2621                     clr             bitvich                         ;выход из режима выч R  
0F3B C206           2622                     clr             bitvi11
                    2623                                     
0F3D 020000   F     2624     goklb:  jmp             out6
                    2625     
0F40                2626     pyskst: 
                    2627     
0F40 200A0B         2628                     jb      bitbon,bufon            ;pysk/stop
0F43 D20A           2629                     setb    bitbon  ;уст реж буфер вкл
                    2630     ;?              mov     r1,#volume      ;work   обьем блока
                    2631     ;               mov     @r1,#00
                    2632     ;               inc     r1
                    2633     ;?              mov     @r1,#0c7h               ;320h/4
0F45 434B02         2634                     orl     bufind+11,#02h  ; on pysk
0F48 120000   F     2635                     call    ind
0F4B 020000   F     2636                     jmp     izmpaT
0F4E C20A           2637     bufon:  clr     bitbon  ;уст реж буфер выкл
0F50 534BFD         2638                     anl     bufind+11,#0fdh; off pysk
0F53 120000   F     2639                     call    ind
0F56 020000   F     2640                     jmp     izmpaT
                    2641     
0F59 79B0           2642     tizmri: mov     r1,#level
0F5B B70102         2643                     cjne    @r1,#1,right2
                    2644                                     ;10s->HET
0F5E 8004           2645                     jmp             right3
                    2646     
0F60 07             2647     right2: inc             @r1
0F61 120000   F     2648                     call            lolevT
                    2649                     ;call   loadT   ;нажата кн-> в реж Tизм 
0F64 120000   F     2650     right3: call            ind
0F67 020000   F     2651                     jmp             izmfun
                    2652     
                    2653                             
                    2654                             
0F6A                2655     knright:        
0F6A E5DA           2656                     mov             a,PCA0CPM0;     
0F6C 4446           2657                     orl             a,#46h;anl              a,#0fbh
0F6E F5DA           2658                     mov             PCA0CPM0,a
0F70 79AE           2659                     mov             r1,#diap
                    2660                     ;перекл диапазон 1 поз вверх сбр массив
0F72 17             2661                     dec             @r1
0F73 B7FF05         2662                     cjne    @r1,#0ffh,diinc
0F76 7700           2663                     mov             @r1,#0
0F78 020000   F     2664                     jmp             izmfun
0F7B 120000   F     2665     diinc:  call            clmassix
0F7E 78B3           2666                     mov             r0,#summa
0F80 120000   F     2667                     call            clear4
0F83 786A           2668                     mov             r0,#rez_A0
0F85 120000   F     2669                     call            clear4
0F88 C20F           2670                     clr             bitnul          ;гасить светодиод НУЛЬ  
0F8A 120000   F     2671                     call            loadUS
0F8D 8073           2672                     jmp             izmfun
                    2673     
0F8F 020000   F     2674     vit2_10:        jmp             out6
                    2675     
                    2676     
0F92                2677     knvich: ;12.02.07
                    2678     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    42

0F92 E5DA           2679                     mov             a,PCA0CPM0;     
0F94 4446           2680                     orl             a,#46h;anl              a,#0fbh
0F96 F5DA           2681                     mov             PCA0CPM0,a
                    2682     
0F98 789A           2683                     mov             r0,#parT
0F9A C3             2684                     clr             c
0F9B 7404           2685                     mov             a,#4 
0F9D 96             2686                     subb            a,@r0
0F9E 40EF           2687                     jc              vit2_10;не нажимать кнопку ВЫЧ R T=10ms,2ms
0FA0 2015EC         2688                     jb              biteizm,vit2_10;не нажимать кнопку ВЫЧ во время теста
0FA3 200614         2689                     jb              bitvi11,onvich
0FA6 C204           2690                     clr             bitizm
0FA8 D214           2691                     setb            bitvich
                    2692                                     
0FAA 78B1           2693                     mov             r0,#vichR
0FAC 7611           2694                     mov             @r0,#11h;;????????or 0
                    2695                             ;ВЫЧИСЛИТЬ
0FAE 900000   F     2696                     mov             dptr,#teVICH
0FB1 120000   F     2697                     call            lotext
0FB4 120000   F     2698                     call            z_1s;;;;;;;
0FB7 020000   F     2699                     jmp             viout;izmpaT
                    2700     
0FBA C214           2701     onvich: clr             bitvich ;???
                    2702                                                     ;;;;;;;;28.02
0FBC C206           2703                     clr             bitvi11
0FBE D204           2704                     setb            bitizm
                    2705                                                     ;;;;;;;;;
0FC0 78B1           2706                     mov             r0,#vichR
0FC2 7600           2707                     mov             @r0,#0
0FC4 8040           2708                     jmp             izmpaT
                    2709     ; изм упр слова при нажатии ИЗМ d3(k5 p4),d3(u5 p5)
0FC6 301820         2710     louizm: jnb             knizm,lou
0FC9 79AE           2711                     mov             r1,#diap
0FCB C3             2712                     clr             c
0FCC 7403           2713                     mov             a,#3
0FCE 97             2714                     subb            a,@r1
0FCF 5006           2715                     jnc             lldi23  ;10-2..10-5
                    2716                             ;10-6..10-11
0FD1 E584           2717                     mov             a,p4
0FD3 54F7           2718                     anl             a,#0f7h ;d3
0FD5 F584           2719                     mov             p4,a
0FD7 E7             2720     lldi23: mov             a,@r1
0FD8 6403           2721                     xrl             a,#3
0FDA 7002           2722                     jnz             lldi3
0FDC 8005           2723                     jmp             lldi2           ;10-5
0FDE E7             2724     lldi3:  mov             a,@r1
0FDF 6402           2725                     xrl             a,#2            ;
0FE1 7006           2726                     jnz             lou             
0FE3 E585           2727     lldi2:  mov             a,p5            ;10-4
0FE5 4408           2728                     orl             a,#08
0FE7 F585           2729                     mov             p5,a
0FE9 22             2730     lou:            ret
                    2731                               ;;;;;;
0FEA                2732     izman:
0FEA E5DA           2733                     mov             a,PCA0CPM0;     
0FEC 4446           2734                     orl             a,#46h;anl              a,#0fbh
0FEE F5DA           2735                     mov             PCA0CPM0,a
                    2736     
0FF0 201511         2737                     jb              biteizm,ontest  
0FF3 201807         2738                     jb              knizm,knizmon
0FF6                2739     izman1:
0FF6 D218           2740                     setb            knizm           ;уст реж ИЗМ ВКЛ
                    2741                     ;       d3(k5 p4),d3(u5 p5)заслать us
0FF8 120000   F     2742                     call            louizm 
0FFB 8005           2743                     jmp             izmfun
                    2744     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    43

                    2745     
0FFD C218           2746     knizmon:        clr             knizm           ;уст реж ИЗМ ВЫКЛ
0FFF 120000   F     2747                     call            loadUS;восстановить us
1002                2748     izmfun:                 
1002 D207           2749                     setb            bitzus;bitbuf
1004 8000           2750     ontest: jmp             labelE;;;;;;;;;;;;
                    2751                                     ;;;;;;;;;;;;;;
1006                2752     izmpaT:
                    2753     
                    2754     
                    2755     ;;;;;;;;;;;;;;;;;
                    2756                     ;       clr             c 
                    2757                     ;       mov             r1,#parN
                    2758     
                    2759                     ;       mov             r0,#diap
                    2760                     ;       mov             a,#6            
                    2761                     ;       subb    a,@r0
                    2762                     ;       jnc             labelE          ;         ;10-2..10-8
                    2763                               
                    2764                     ;       mov             @r1,#2          ;10-9..10-11            
                    2765                     ;       jmp             labelE
                    2766     
                    2767     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1006                2768     labelE: 
                    2769     
                    2770     ;;              mov             a,PCA0CPM0;     
                    2771     ;;              orl             a,#46h;anl              a,#0fbh
                    2772     ;;              mov             PCA0CPM0,a
                    2773     
1006 789A           2774                     mov             r0,#parT
1008 793D           2775                     mov             r1,#chkl
100A B60108         2776                     cjne    @r0,#1,izmt2
                    2777     
100D 7700           2778                     mov             @r1,#0
100F 09             2779                     inc             r1
1010 7701           2780                     mov             @r1,#1;2
1012 020000   F     2781                     jmp             out6
1015 B60208         2782     izmt2:  cjne    @r0,#2,izmt3
1018 7700           2783                     mov             @r1,#0
101A 09             2784                     inc             r1
101B 7702           2785                     mov             @r1,#2;10;20
                    2786     
101D 020000   F     2787                     jmp             out6
                    2788     
1020 7700           2789     izmt3:  mov             @r1,#0
1022 09             2790                     inc             r1
1023 770A           2791                     mov             @r1,#10;20;0
                    2792     
1025 020000   F     2793                     jmp             out6
                    2794     
                    2795     
                    2796     ;=======================Tau===================
                    2797     
1028                2798     knopt: ;кнопка T                                ???
1028 E5DA           2799                     mov             a,PCA0CPM0;     
102A 4446           2800                     orl             a,#46h;anl              a,#0fbh
102C F5DA           2801                     mov             PCA0CPM0,a
                    2802     
                    2803     
102E C204           2804                     clr             bitizm
1030 D210           2805                     setb            bitt2
1032 79B7           2806                     mov             r1,#load
1034 7704           2807                     mov             @r1,#4;1s
1036 120000   F     2808                     call            loadT           ;T=1S,10S,HET,0.1S,50mS,
                    2809                     
1039 793D           2810     viout:  mov             r1,#chkl
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    44

103B 7703           2811                     mov             @r1,#03
103D 09             2812                     inc             r1
103E 77E8           2813                     mov             @r1,#0e8h               ;1000
1040 020000   F     2814                     jmp             out6
                    2815     
1043                2816     knrazr:          ;???
                    2817     
                    2818     
                    2819     
1043                2820     labelC: 
                    2821     ;;;             mov             a,PCA0CPM0;     
                    2822     ;;;             orl             a,#46h;anl              a,#0fbh
                    2823     ;;;             mov             PCA0CPM0,a
                    2824     
                    2825     
                    2826                                                             ;       
1043 C3             2827                     clr             c
1044 78AF           2828                     mov             r0,#parN
1046 799A           2829                     mov             r1,#parT
1048 7402           2830                     mov             a,#2
104A 97             2831                     subb            a,@r1
104B 40B9           2832                     jc              labelE          ;T>2
104D B60104         2833                     cjne            @r0,#1,noN1c
1050 7602           2834                     mov             @r0,#2          ;N=2
1052 80B2           2835                     jmp             labelE
                    2836     
1054 B60204         2837     noN1c:  cjne            @r0,#2,not_1
1057 7603           2838                     mov             @r0,#3          ;N=3      ;10-2..10-8
1059 80AB           2839                     jmp             labelE
                    2840     
105B                2841     not_10: 
105B 7601           2842     not_1:  mov             @r0,#1                          ;N=1
105D 80A7           2843                     jmp             labelE 
                    2844     
105F 020000   F     2845     rtizmri:        jmp             tizmri
                    2846     
1062 75B0F7         2847     ttout:  mov             p3,#0f7h
1065 20B6D1         2848                     jb              p3.6,viout
1068 D204           2849                     setb            bitizm  ;отжатие кнопки t
106A C210           2850                     clr             bitt2
106C 8098           2851                     jmp             labelE
106E                2852     labelf:                 
                    2853     ;               mov             a,PCA0CPM0;     
                    2854     ;               orl             a,#46h;anl              a,#0fbh
                    2855     ;               mov             PCA0CPM0,a
                    2856     
106E 301035         2857                     jnb             bitt2,nofizm
1071 75B0FB         2858                     mov             p3,#0fbh
1074 E5B0           2859                     mov             a,p3
1076 20E6E9         2860                     jb              acc.6,ttout;outF
1079 79B7           2861                     mov             r1,#load;parT
107B B70502         2862                     cjne            @r1,#5,noft1
                    2863                        ;t=10s
107E 80B9           2864                     jmp             viout;out6;ft1izm
                    2865     
1080 07             2866     noft1:  inc             @r1;dec         @r1
1081 120000   F     2867     ft1izm: call    loadT;в буфер 2 записать текст с соотв load(parT)
                    2868                             ;call   ind
1084 80B3           2869                     jmp             viout;out6;??????????????/
                    2870     
                    2871                     ;увеличить счетчик задержки клавиатуры
1086 783D           2872     outF:           mov             r0,#chkl
1088 7627           2873                     mov             @r0,#27h
108A 08             2874                     inc             r0
108B 7610           2875                     mov             @r0,#10h
108D 020000   F     2876                     jmp             out6;out7
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    45

                    2877     
1090 020000   F     2878     noviR1: jmp             noviR
1093 78B1           2879     outvich:        mov             r0,#vichR
1095 7600           2880                     mov             @r0,#0
1097 C214           2881                     clr             bitvich
1099 C206           2882                     clr             bitvi11
109B C211           2883                     clr             bitmenu
109D D204           2884                     setb            bitizm
109F 78B2           2885                     mov             r0,#marker
10A1 76FF           2886                     mov             @r0,#0ffh
10A3 020000   F     2887                     jmp             labelE;out6     
                    2888     
10A6 3014E7         2889     nofizm: jnb             bitvich,noviR1
10A9 75B0DF         2890                     mov             p3,#0dfh
10AC 30B6E4         2891                     jnb             p3.6,outvich;отжатие кнопки вычR
10AF 78B1           2892                     mov             r0,#vichR
10B1 B61111         2893                     cjne    @r0,#11h,no11v6
10B4 75B0FB         2894                     mov             p3,#0fbh;->
10B7 20B61C         2895                     jb              p3.6,rviout;outF
10BA 7612           2896                     mov             @r0,#12h                ;11= вычислить
10BC 900000   F     2897     vvrr6:  mov             dptr,#teIZMK    ;       изм конст;teVICH
10BF 120000   F     2898                     call            lotext
10C2 020000   F     2899                     jmp             viout   ;outF
                    2900             
10C5 B61211         2901     no11v6: cjne    @r0,#12h,no12v6
10C8 75B0FB         2902                     mov             p3,#0fbh;->
10CB 20B608         2903                     jb              p3.6,rviout;outF
10CE 7611           2904                     mov             @r0,#11h;13h
10D0 900000   F     2905                     mov             dptr,#teVICH;teOUT
10D3 120000   F     2906                     call            lotext
10D6 020000   F     2907     rviout: jmp             viout;outF
                    2908                     
10D9 B61311         2909     no12v6: cjne    @r0,#13h,no13v6
10DC 75B0FB         2910                     mov             p3,#0fbh;->
10DF 20B6F4         2911                     jb              p3.6,rviout;outF
10E2 7611           2912                     mov             @r0,#11h
10E4 900000   F     2913                     mov             dptr,#teVICH
10E7 120000   F     2914                     call            lotext
10EA 020000   F     2915                     jmp             viout;outF
                    2916     
                    2917     ;кн -> A= 0000          ???
                    2918     ;кн -> B= +00000
10ED 75B0FB         2919     no13v6: mov             p3,#0fbh
10F0 E5B0           2920                     mov             a,p3
10F2 20E635         2921                     jb              acc.6,chanZ
10F5 E53B           2922                     mov             a,movrig
10F7 B40714         2923                     cjne    a,#7,kon_B      
10FA 78B2           2924                     mov             r0,#marker      ;A= 0000
10FC B60716         2925                     cjne    @r0,#7,mark0_8  ;курсор справа ?
10FF E53A           2926     rikn:           mov             a,movleft
1101 F6             2927                     mov             @r0,a           ; уст курсор в кр левую поз+1
                    2928     ;                       29.12.06
                    2929     ;необходимо не портить цифру в следуюем справа знакоместе
                    2930     ;т е сохранить ее в ячейке для мигания в противном случае
                    2931     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего знакоместа
1102 78B2           2932                     mov             r0,#marker
1104 7440           2933                     mov             a,#bufind
1106 26             2934                     add             a,@r0                   ;a=bufind+marker
1107 F9             2935                     mov             r1,a
1108 09             2936                     inc             r1              
1109 873C           2937                     mov             savba,@r1
110B 020000   F     2938                     jmp             viout;outF
                    2939     
110E 78B2           2940     kon_B:  mov             r0,#marker      ;B= +00000
1110 B60802         2941                     cjne    @r0,#8,mark0_8          ;курсор справа ?
1113 80EA           2942                     jmp             rikn
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    46

1115                2943     mark0_8:
                    2944     ;                               29.12.06
                    2945     ;;;;;;;;;;;;;;;;;;
                    2946     ;необходимо не портить цифру в следуюем справа знакоместе
                    2947     ;т е сохранить ее в ячейке для мигания в противном случае
                    2948     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    2949     ;       знакоместа ->B=+00000
1115 78B2           2950                     mov             r0,#marker
1117 7440           2951                     mov             a,#bufind
1119 26             2952                     add             a,@r0                   ;a=bufind+marker
111A F9             2953                     mov             r1,a
111B 09             2954                     inc             r1
111C 873C           2955                     mov             savba,@r1
111E 78B2           2956                     mov             r0,#marker
1120 06             2957                     inc             @r0             ;       сдвинуть курсор вправо на 1
1121 C219           2958                     clr             bitmig
1123 B60901         2959                     cjne    @r0,#9,outma
1126 18             2960                     dec             r0;ppp
1127 020000   F     2961     outma:  jmp             viout;outF
                    2962     
112A 75B0FE         2963     chanZ:  mov             p3,#0feh
112D E5B0           2964                     mov             a,p3
112F 20E611         2965                     jb              acc.6,chanma
                    2966                             ;изм знак в старшем разряде на противоположн
1132 E543           2967                     mov             a,bufind+3
1134 B42B06         2968                     cjne            a,#2bh,noplus
1137 75432D         2969                     mov             bufind+3,#2dh           ;+->-   
113A 020000   F     2970                     jmp             viout;outF
113D                2971     noplus:
113D 75432B         2972                     mov             bufind+3,#2bh           ;-/+-
1140 020000   F     2973                     jmp             viout;outF
1143 75B0FD         2974     chanma: mov             p3,#0fdh
1146 E5B0           2975                     mov             a,p3
1148 20E603         2976                     jb              acc.6,outFl;labelL1
                    2977                     ;clr            bitmig
114B 120000   F     2978     labelL1:        call            vvchibl;f       ;увеличить цифру 
                    2979     
114E 793D           2980     outFl:  mov             r1,#chkl
1150 7701           2981                     mov             @r1,#01
1152 09             2982                     inc             r1
1153 77F4           2983                     mov             @r1,#0f4h               ;1000
1155 020000   F     2984                     jmp             out6
                    2985                     
                    2986     ;;;;;;;;;кнопка -> в режиме кнопки меню
                    2987     
1158 020000   F     2988     rlabelL:        jmp             labelL
                    2989     
115B 020000   F     2990     rfindmem:       jmp             findmem
                    2991     
115E 3011FA         2992     noviR:  jnb             bitmenu,rfindmem;17.01.07
                    2993     ;;;;;;;;;;;;;
1161 78B1           2994                     mov             r0,#vichR
1163 7415           2995                     mov             a,#15h
1165 C3             2996                     clr             c
1166 96             2997                     subb            a,@r0
1167 4016           2998                     jc              ri21_23
                    2999     
1169 75B0FB         3000                     mov             p3,#0fbh; реж кн меню ->
116C 20B60A         3001                     jb              p3.6,ri6
116F 78B1           3002                     mov             r0,#vichR
1171 B61508         3003                     cjne    @r0,#15h,norime
1174 7611           3004                     mov             @r0,#11h
1176 120000   F     3005     norime1:        call            lomenu
1179 020000   F     3006     ri6:            jmp             viout;out6
117C 06             3007     norime: inc             @r0
117D 80F7           3008                     jmp             norime1
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    47

                    3009             
117F 7423           3010     ri21_23:        mov             a,#23h          ;->
1181 C3             3011                     clr             c
1182 96             3012                     subb            a,@r0
1183 4014           3013                     jc              ri_31
1185 75B0FB         3014                     mov             p3,#0fbh
1188 20B6EE         3015                     jb              p3.6,ri6
118B B62308         3016                     cjne            @r0,#23h,no23ri
118E 7621           3017                     mov             @r0,#21h
1190 120000   F     3018                     call            lomenu
1193 020000   F     3019                     jmp             viout;out6
1196 06             3020     no23ri: inc             @r0
1197 80DD           3021                     jmp             norime1
1199 B63130         3022     ri_31:  cjne            @r0,#31h,no31ri;->19.2->57.6->19.2
                    3023     
                    3024     ;;
119C 75B0FB         3025                     mov             p3,#0fbh
119F 20B6D7         3026                     jb              p3.6,ri6
                    3027     ;;
11A2 301312         3028                     jnb             bitv19,gosk19
11A5 900000   F     3029                     mov             dptr,#teS57_6;57,6
11A8 120000   F     3030                     call            lotext
11AB 534B03         3031                     anl             bufind+11,#03h
11AE 434B80         3032                     orl             bufind+11,#80h
11B1 C213           3033                     clr             bitv19
11B3 7800           3034             mov     R0,#0           ;?
11B5 8010           3035             sjmp    viout2  ;?
                    3036     
11B7 900000   F     3037     gosk19: mov             dptr,#teS19_2
11BA 120000   F     3038                     call            lotext
11BD 534B03         3039                     anl             bufind+11,#03h
11C0 434B80         3040                     orl             bufind+11,#80h
11C3 D213           3041                     setb            bitv19
11C5 7800           3042             mov     R0,#0   ;?
                    3043     
11C7                3044     viout2:
                    3045     ;               mov             r0,#chkl                        ;???
                    3046     ;               mov             @r0,#3
                    3047     ;               inc             r0
                    3048     ;               mov             @r0,#0e8h               ;1000
                    3049     ;               jmp             viout;out6
11C7 D208           3050             setb    speed_rs                ;?
11C9 020000   F     3051             jmp     viout   ;begin  ;?
                    3052     
                    3053     
                    3054     
                    3055     ;labelS2:       jmp             out6
                    3056     
11CC 7452           3057     no31ri: mov             a,#52h;42h              ;->
11CE C3             3058                     clr             c
11CF 96             3059                     subb            a,@r0
11D0 40A7           3060                     jc              ri6
11D2 75B0FB         3061                     mov             p3,#0fbh                        ;41,42
11D5 30B609         3062                     jnb             p3.6,rlabelN    ;кнопка ->(пароль 000)
11D8 75B0FD         3063                     mov             p3,#0fdh
11DB 20B69B         3064                     jb              p3.6,ri6
11DE 020000   F     3065                     jmp             labelL1                                 ;кнопка 0..9  (паро
                             ль 000)
11E1 020000   F     3066     rlabelN:        jmp             labelN
11E4 020000   F     3067     moutF:  jmp             viout;outF
                    3068     ;;;;;;;;;;;;;;;;;;;;;;;;;
11E7 020000   F     3069     rnnmemb:        jmp             nnmemb
                    3070     
11EA                3071     nbimenu:
11EA 300BFA         3072     findmem:        jnb             bitmem,rnnmemb
11ED 79B0           3073                     mov             r1,#level                                                  
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    48

                                  ;-> кн ПАМЯТЬ (ОЧИСТКА ->ЗАПИСЬ-> ПРОСМОТР)
11EF B71113         3074                     cjne            @r1,#11h,nomem11
                    3075                                             
11F2 75B0FB         3076                     mov             p3,#0fbh
11F5 E5B0           3077                     mov             a,p3
11F7 20E6EA         3078                     jb              acc.6,moutF
11FA 7712           3079                     mov             @r1,#12h
11FC 900000   F     3080                     mov             dptr,#teWR      ;                       ЗАПИСЬ
11FF 120000   F     3081                     call            lotext
1202 020000   F     3082                     jmp             viout;outF
                    3083     
1205 B71213         3084     nomem11:   cjne         @r1,#12h,nomem12
1208 75B0FB         3085                     mov             p3,#0fbh
120B E5B0           3086                     mov             a,p3
120D 20E6D4         3087                     jb              acc.6,moutF
1210 7713           3088                     mov             @r1,#13h
1212 900000   F     3089                     mov             dptr,#teLIST            ;ПРОСМОТР
1215 120000   F     3090                     call            lotext
1218 020000   F     3091                     jmp             viout;outF
121B B71313         3092     nomem12:        cjne            @r1,#13h,nomem13
121E 75B0FB         3093                     mov             p3,#0fbh
1221 E5B0           3094                     mov             a,p3
1223 20E6BE         3095                     jb              acc.6,moutF
1226 7714           3096                     mov             @r1,#14h
1228 900000   F     3097                     mov             dptr,#teSTAT                    ;СТАТИСТИКА
122B 120000   F     3098                     call            lotext
122E 020000   F     3099                     jmp             viout;outF
                    3100                             
1231 B71413         3101     nomem13:        cjne            @r1,#14h,labelL
1234 75B0FB         3102                     mov             p3,#0fbh
1237 E5B0           3103                     mov             a,p3
1239 20E6A8         3104                     jb              acc.6,moutF
123C 7711           3105                     mov             @r1,#11h
123E 900000   F     3106                     mov             dptr,#teCLE                     ;ОЧИСТКА
1241 120000   F     3107                     call            lotext
1244 020000   F     3108                     jmp             viout;outF
1247                3109     labelL: 
                    3110                     ;;;;;
                    3111     
1247 75B0DF         3112                     mov                     p3,#0dfh
124A 30B697         3113                     jnb                     p3.6,moutF;в реж очистка полная не отрабатывать ВЫЧ
                              R
                    3114                     
                    3115                     ;ПОЛНАЯ->БЛОК 00(level 21->22)  ???
124D 78B0           3116                     mov             r0,#level
124F B6210E         3117                     cjne            @r0,#21h,nobl21
1252 7622           3118                     mov             @r0,#22h                ;->БЛОК 
1254 900000   F     3119                     mov             dptr,#teBL
1257 120000   F     3120     me21_22:        call            lotext
                    3121                             
125A 120000   F     3122                     call            z_05s;задержка чтобы не проскакивала пргр на следующий уров
                             ень
125D 020000   F     3123                     jmp             viout;outF
                    3124     
1260 B62207         3125     nobl21: cjne            @r0,#22h,nobl22
1263 900000   F     3126                     mov             dptr,#teFULL
1266 7621           3127                     mov             @r0,#21h                ;->ПОЛНАЯ
                    3128     
1268 80ED           3129                     jmp             me21_22
                    3130     
                    3131     ;labl21:           cjne @r0,#21h,nolev1
                    3132     ;                       mov             p3,#0fbh
                    3133     ;                       mov             a,p3
                    3134     ;                       jb              acc.6,loutF
                    3135     ;                       cjne    @r0,#21h,labl22
                    3136     ;                       mov             @r0,#22h
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    49

                    3137                             ;БЛОК
                    3138     ;                       call    lotext
                    3139     ;                       jmp             outF
                    3140     ;labl22:                mov             @r0,#21h
                    3141                             ;ПОЛНАЯ
                    3142     ;                       call    lotext
                    3143     ;                       jmp             outF
                    3144                      
126A B62333         3145     nobl22: cjne    @r0,#23h,go31l
126D 75B0FB         3146     rigblo: mov             p3,#0fbh
1270 20B637         3147                     jb              p3.6,llev2
                    3148     
1273                3149     labL2:    ;  уст курсор в правую позицию 
                    3150                                     ;       кнопка                  ->
                    3151     ;;;;;;;;;;;;;;;;;;
                    3152     ;необходимо не портить цифру в следуюем справа знакоместе
                    3153     ;т е сохранить ее в ячейке для мигания в противном случае
                    3154     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3155     ;       знакоместа
                    3156     
                    3157     ;-----------------------------------------
1273 78B0           3158                             mov     r0,#level
                    3159     
1275 B74103         3160                             cjne            @r1,#41h,labLov                 ;Блок при ПРОСМОТР
1278 020000   F     3161                             jmp             out6
                    3162     
127B                3163     labLov:
127B B73103         3164                             cjne            @r1,#31h,labLLL                 ;Блок при ЗАПИСЬ
127E 020000   F     3165                             jmp             out6
                    3166     
                    3167     
                    3168     
1281                3169     labLLL:
                    3170     ;-------------------------------------------27.09.10
                    3171     
                    3172     
1281 78B2           3173                     mov             r0,#marker
1283 7440           3174                     mov             a,#bufind
1285 26             3175                     add             a,@r0                   ;a=bufind+marker
1286 F9             3176                     mov             r1,a
1287 09             3177                     inc             r1
1288 873C           3178                     mov             savba,@r1
128A C219           3179                     clr             bitmig
                    3180     ;;;;;;;;;;;;;;;;
128C 78B2           3181                     mov             r0,#marker      ;курсор справа  ?
128E E53B           3182                     mov             a,movrig
1290 C3             3183                     clr             c
1291 96             3184                     subb            a,@r0
1292 6006           3185                     jz              equ1l
1294 E53B           3186                     mov             a,movrig;уст в правую позицию
1296 F6             3187                     mov             @r0,a
1297 020000   F     3188                     jmp             viout;outF                                       
129A E53A           3189     equ1l:  mov             a,movleft;уст в левую позицию
129C F6             3190                     mov             @r0,a   
129D 020000   F     3191     loutF:  jmp             viout;outF
                    3192                     
                    3193     
12A0 B63102         3194     go31l:  cjne    @r0,#31h,go41l
12A3 80C8           3195                     jmp             rigblo
12A5 B6410B         3196     go41l:  cjne    @r0,#41h,norig2
12A8 80C3           3197                     jmp             rigblo
                    3198     
12AA 75B0FD         3199     llev2:  mov             p3,#0fdh
12AD 20B6ED         3200                     jb              p3.6,loutF
12B0 020000   F     3201                     jmp             labelL1
                    3202     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    50

                    3203     ;->
12B3 C3             3204     norig2: clr             c               ;32,33,34,42
12B4 7431           3205                     mov             a,#31h
12B6 96             3206                     subb            a,@r0
12B7 50E4           3207                     jnc             loutF
12B9 75B0FB         3208     rigblok:        mov             p3,#0fbh  ;32,33,34,42
12BC 20B63F         3209                     jb              p3.6,lev2go
12BF B64302         3210     labelN: cjne            @r0,#43h,labN_2
12C2 80D9           3211                     jmp             loutF
12C4 B64402         3212     labN_2: cjne            @r0,#44h,labN_1 
12C7 80D4           3213                     jmp             loutF                           
                    3214                             ;                               29.12.06
                    3215     ;;;;;;;;;;;;;;;;;;
                    3216     ;необходимо не портить цифру в следуюем справа знакоместе
                    3217     ;т е сохранить ее в ячейке для мигания в противном случае
                    3218     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3219     ;       знакоместа
12C9                3220     labN_1: 
                    3221     ;--------------------------------------------
                    3222     ;В режиме статистика min,max,sred игнорировать -->
                    3223     ;7.09.10
12C9 B66102         3224                             cjne            @r0,#61h,labN_1_1
12CC 803C           3225                             jmp             out6
12CE                3226     labN_1_1:
12CE B66202         3227                             cjne            @r0,#62h,labN_1_2
12D1 8037           3228                             jmp             out6
12D3                3229     labN_1_2:
12D3 B66302         3230                             cjne            @r0,#63h,labN_1_3
12D6 8032           3231                             jmp             out6
12D8                3232     labN_1_3:
                    3233     ;--------------------------------------------
12D8 78B2           3234                     mov             r0,#marker
12DA 7440           3235                     mov             a,#bufind
12DC 26             3236                     add             a,@r0                   ;a=bufind+marker
12DD F9             3237                     mov             r1,a
12DE 09             3238                     inc             r1
12DF 873C           3239                     mov             savba,@r1
                    3240     ;;;;;;;;;;;;;;;;;;;
12E1 78B2           3241                     mov             r0,#marker      ;курсор справа  ?
12E3 E53B           3242                     mov             a,movrig
12E5 C3             3243                     clr             c
12E6 96             3244                     subb            a,@r0
12E7 7006           3245                     jnz             noequ1
12E9 E53A           3246                     mov             a,movleft;уст в крайнюю левую позицию
12EB F6             3247                     mov             @r0,a
12EC 020000   F     3248                     jmp             viout;outF
12EF                3249     noequ1: ;29.12.06
                    3250     ;;;;;;;;;;;;;;;;;;
                    3251                             ;восстан знакоместо при мигании
                    3252                               ;т к в соотв яч буфера индикации пишется 20h(пробел)
12EF 78B2           3253                     mov             r0,#marker
12F1 7440           3254                     mov             a,#bufind
12F3 26             3255                     add             a,@r0                   ;a=bufind+marker
12F4 F9             3256                     mov             r1,a
                    3257                     ;mov            @r1,savba
12F5 09             3258                     inc             r1
12F6 873C           3259                     mov             savba,@r1
                    3260     ;;;;;;;;;;;;;;; 
12F8 120000   F     3261                     call            marri;уст сдвиг в правую        позицию
12FB 020000   F     3262                     jmp             viout;outF
12FE 75B0FD         3263     lev2go: mov             p3,#0fdh
1301 30B603         3264                     jnb             p3.6,rlabelL1
1304 020000   F     3265                     jmp             viout;outF
                    3266     
1307 020000   F     3267     rlabelL1:       jmp             labelL1
                    3268     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    51

130A                3269     nnmemb:
                    3270     
130A                3271     norim6:    ;kn menu
130A D083           3272     out6:           pop             dph
130C D082           3273                     pop             dpl
130E D007           3274                     pop             rr7     
1310 D006           3275                     pop             rr6
1312 D005           3276                     pop             rr5
1314 D004           3277                     pop             rr4
1316 D003           3278                     pop             rr3
1318 D002           3279                     pop             rr2
131A D001           3280                     pop             rr1                             
131C D000           3281                     pop             rr0
131E D0D0           3282                     pop             psw
1320 D0E0           3283                     pop             acc
                    3284             ;clr            bitmig
1322 75E730         3285                             mov             EIE2,#30H               ;;;1.02.10
                    3286             ;mov            a,P3IF
                    3287             ;anl            a,#0bfh
                    3288             ;mov            P3IF,a
                    3289             ;mov            P3,#0c0h
                    3290             ;;;;;;
1325                3291     kkout6:
1325 75AD00         3292                     mov             P3IF,#00 ;обязательно сбросить опять приходит на обработку 
                             прерывания
1328 75B0C0         3293                     mov             P3,#0c0h
132B C219           3294                     clr             bitmig
132D E586           3295                     mov             a,P6            ;p6.4=0
132F 54EF           3296                     anl             a,#0efh
1331 F586           3297                     mov             P6,a
1333 00             3298                     nop
1334 00             3299                     nop
1335 E586           3300                     mov             a,P6                    ;p6.4=1 
1337 4410           3301                     orl             a,#10h
1339 F586           3302                     mov             P6,a    
                    3303                             ;;;;;;;;;
                    3304     ;;;                             mov             a,PCA0CPM0;     
                    3305     ;;;                             orl             a,#46h;anl              a,#0fbh
                    3306     ;;;                             mov             PCA0CPM0,a
                    3307     
133B 75CDD0         3308                     mov             TH2,#0d0h
133E 75CC00         3309                     mov             TL2,#00
                    3310     
1341 D2CA           3311                     setb            T2CON.2
1343 D2AD           3312                     setb            ET2;IE.5
                    3313                             ;;;;;;;;                    
1345 32             3314                     reti
                    3315     
                    3316     
1346 020000   F     3317     knKMP:  jmp             out7
1349 020000   F     3318     rout7:  jmp             out7    
134C 020000   F     3319     rlabelH:        jmp             labelH
134F 020000   F     3320     rknNUL: jmp             knNUL
1352                3321     rknleft:        
1352 E5DA           3322                     mov             a,PCA0CPM0;     
1354 4446           3323                     orl             a,#46h;anl              a,#0fbh
1356 F5DA           3324                     mov             PCA0CPM0,a
                    3325     
1358 020000   F     3326                                     jmp             knleft
                    3327     
135B 75AD00         3328     no0chk: mov             P3IF,#00;               обязательно сбросить опять приходит на обра
                             ботку прерывания
135E 75B0C0         3329                     mov             P3,#0c0h
1361 32             3330                     reti
                    3331     
1362 020000   F     3332     rknMEM: jmp             knMEM
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    52

                    3333     
1365                3334     keyb2:  ;IE7
                    3335     ;;;;;
                    3336                     ;       mov                     a,chkl          ;low
                    3337                     ;       jb                      acc.7,no0chk;
                    3338                             ;jnz                    no0chk
                    3339                             ;mov                    a,chkl                          ;high
                    3340                             ;jnz                    no0chk
                    3341     ;;;;
1365 75E700         3342                     mov             EIE2,#00H
1368 75AD00         3343                     mov             P3IF,#00
                    3344     
136B C0E0           3345                     push    acc
136D C0D0           3346                     push    psw
136F C000           3347                     push    rr0
1371 C001           3348                     push    rr1
1373 C002           3349                     push    rr2
1375 C003           3350                     push    rr3
1377 C004           3351                     push    rr4
1379 C005           3352                     push    rr5
137B C006           3353                     push    rr6
137D C007           3354                     push    rr7
137F C082           3355                     push    dpl
1381 C083           3356                     push    dph
                    3357                             ;clr            bitmig
                    3358                       ;;;;;;;;;;;;;;
1383 120000   F     3359                     call    z_01s   ;0,1s
                    3360     ;;              call    z_15    ;0,15s
                    3361                               ;восстан знакоместо при мигании
                    3362                               ;т к в соотв яч буфера индикации пишется 20h(пробел)
1386 78B2           3363                     mov             r0,#marker
1388 7440           3364                     mov             a,#bufind
138A 26             3365                     add             a,@r0                   ;a=bufind+marker
138B F9             3366                     mov             r1,a
138C A73C           3367                     mov             @r1,savba
                    3368                                     ;;;;;;;;;;;
                    3369     
138E E5B0           3370                     mov             a,p3
1390 20E7B6         3371                     jb              acc.7,rout7
1393 E5B0           3372                     mov             a,p3
1395 74FF           3373                     mov             a,#0ffh         ; p3.(5-0)<-3f
1397 F5B0           3374                     mov             p3,a
1399 E5B0           3375                     mov             a,p3
139B 30E7AB         3376                     jnb             acc.7,rout7             ;error
139E 3004AB         3377                     jnb             bitizm,rlabelH
13A1 75B0FE         3378                     mov             p3,#0feh                ;реж IZM
13A4 E5B0           3379                     mov             a,p3
13A6 30E7A6         3380                     jnb             acc.7,rknNUL
13A9 75B0FD         3381                     mov             p3,#0fdh
13AC E5B0           3382                     mov             a,p3
13AE 30E795         3383                     jnb             acc.7,knKMP
13B1 75B0FB         3384                     mov             p3,#0fbh
13B4 E5B0           3385                     mov             a,p3
13B6 30E799         3386                     jnb             acc.7,rknleft
13B9 75B0F7         3387                     mov             p3,#0f7h
13BC 00             3388                     nop
13BD 00             3389                     nop
13BE 00             3390                     nop
13BF 00             3391                     nop
13C0 E5B0           3392                     mov             a,p3
13C2 30E775         3393                     jnb             acc.7,knAVP
13C5 75B0EF         3394                     mov             p3,#0efh
13C8 E5B0           3395                     mov             a,p3
13CA 30E795         3396                     jnb             acc.7,rknMEM
13CD 75B0DF         3397                     mov             p3,#0dfh
13D0 E5B0           3398                     mov             a,p3    
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    53

13D2 30E722         3399                     jnb             acc.7,knmenu
13D5                3400     an_t7:             ;;;;;;;;;;;;
                    3401                     
                    3402     ;       clr             c
                    3403     ;       mov             r1,#parN
                    3404     ;
                    3405     ;                       mov             r0,#diap
                    3406     ;                       mov             a,#6            
                    3407     ;                       subb    a,@r0
                    3408     ;                       jnc             goto7           ;         ;10-2..10-8
                    3409                               
                    3410     ;                       mov             @r1,#2          ;10-9..10-11            
                    3411                             
                    3412                             ;;;;;;;;;;;;
13D5                3413     goto7:  
                    3414     
13D5 799A           3415                     mov             r1,#parT
13D7 783D           3416                             mov             r0,#chkl
13D9 B70108         3417                     cjne            @r1,#1,not1_7
13DC 7600           3418                     mov             @r0,#00
13DE 08             3419                     inc             r0
13DF 7601           3420                     mov             @r0,#1;2
13E1 020000   F     3421                     jmp             out7
                    3422                             
                    3423     
13E4 B70208         3424     not1_7: cjne            @r1,#2,not2_7
13E7 7600           3425                     mov             @r0,#00
13E9 08             3426                     inc             r0
13EA 7602           3427                     mov             @r0,#2;10;20
13EC 020000   F     3428                     jmp             out7
13EF 7600           3429     not2_7: mov             @r0,#00
13F1 08             3430                     inc             r0
13F2 760A           3431                     mov             @r0,#10;20;0
13F4 020000   F     3432     merr:           jmp             out7
                    3433     
                    3434     
13F7                3435     knmenu:
                    3436     
13F7 E5DA           3437                     mov             a,PCA0CPM0;     
13F9 4446           3438                     orl             a,#46h;anl              a,#0fbh
13FB F5DA           3439                     mov             PCA0CPM0,a
                    3440     ;               mov             TH2,#0d0h
                    3441     ;               mov             TL2,#00
                    3442     ;               setb            T2CON.2
                    3443     ;               setb            ET2;IE.5
                    3444     
                    3445     
                    3446     ;               mov     cnt_out,#33             ;+
                    3447     ;               mov     p_out,#0DAh
                    3448     
                    3449     
13FD 2006F4         3450                     jb              bitvi11,merr
1400 20151C         3451                     jb              biteizm,menuoff
                    3452                                     ;;;;;
1403 201225         3453                     jb              bitklb,klboff
1406 C204           3454                     clr             bitizm          ;off IZM
1408 D211           3455                     setb            bitmenu
140A C217           3456                     clr             bitoll
140C 900000   F     3457                     mov             dptr,#teTESI    ;в буф2 записать ТЕСТ-ИЗМЕР
140F 120000   F     3458                     call            lotext
1412 534B03         3459                     anl             bufind+11,#03h  ;погасить запятые
1415 120000   F     3460                     call            ind
1418 78B1           3461                     mov             r0,#vichR
141A 7611           3462                     mov             @r0,#11h
141C 020000   F     3463                     jmp             onmem11
141F                3464     menuoff:
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    54

141F 78B1           3465                     mov             r0,#vichR
1421 7600           3466                     mov             @r0,#00
1423 C215           3467                     clr             biteizm
1425 120000   F     3468                     call            loadus
1428 020000   F     3469                     jmp             out7
                    3470     
142B C212           3471     klboff: clr             bitklb
142D 120000   F     3472                     call            loadUS
1430 78B1           3473                     mov             r0,#vichR
1432 7600           3474                     mov             @r0,#00
1434 020000   F     3475                     jmp             out7
                    3476     
1437 020000   F     3477     rendkalib:      jmp             endkalib
                    3478     
143A                3479     knAVP:  
143A E5DA           3480                     mov             a,PCA0CPM0;     
143C 4446           3481                     orl             a,#46h;anl              a,#0fbh
143E F5DA           3482                     mov             PCA0CPM0,a
                    3483     
1440 2012F4         3484                     jb              bitklb,rendkalib        
1443 200504         3485                     jb              bitavp,meavp
1446 D205           3486                     setb            bitavp
1448 808B           3487                     jmp             an_t7;onmem11
144A C205           3488     meavp:  clr             bitavp
144C 8087           3489                     jmp             an_t7;onmem11
                    3490     
144E                3491     knleft: 
                    3492     ;               mov             a,PCA0CPM0;     
                    3493     ;               orl             a,#46h;anl              a,#0fbh
                    3494     ;               mov             PCA0CPM0,a
                    3495     
144E 201207         3496                     jb              bitklb,lefkl
                    3497                                     ;;;;;;;;
1451 79AE           3498                     mov             r1,#diap
1453 07             3499                     inc             @r1             ;перекл диапазон 1 поз в сбр массив
1454 B70A04         3500                     cjne    @r1,#0ah,nodi6
1457 17             3501                     dec             @r1
1458 020000   F     3502     lefkl:  jmp             an_t7
                    3503     
145B                3504     nodi6:             ;    cjne    @r1,#0,an_t7
145B 120000   F     3505                     call            clmassix
145E 78B3           3506                     mov             r0,#summa
1460 120000   F     3507                     call            clear4  
1463 786A           3508                     mov             r0,#rez_A0
1465 120000   F     3509                     call            clear4
1468 C20F           3510                     clr             bitnul          ;гасить светодиод НУЛЬ  
146A 120000   F     3511                     call            loadUS
146D 020000   F     3512                     jmp             an_t7
                    3513     
1470                3514     knNUL:  
                    3515     
                    3516     
1470 201125         3517                             jb      bitmenu,jmpgoto7        ;9.02.10
                    3518     
1473 E5DA           3519                     mov             a,PCA0CPM0;     
1475 4446           3520                     orl             a,#46h;anl              a,#0fbh
1477 F5DA           3521                     mov             PCA0CPM0,a
                    3522     
1479 200F0F         3523                     jb              bitnul,ybnul
147C D20F           3524                     setb            bitnul
147E 789C           3525                     mov             r0,#rez_A3      ;A3
1480 120000   F     3526                     call            resar2
1483 786A           3527                     mov             r0,#rez_A0      
1485 120000   F     3528                     call            saver2;A0<-A3
1488 020000   F     3529                     jmp             goto7;an_t7
                    3530     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    55

148B C20F           3531     ybnul:  clr             bitnul
148D 900000   F     3532                     mov             DPTR,#ch0 
1490 120000   F     3533                     CALL    ldc_long                 ; r2..r5 <-- 0
1493 786A           3534                     mov             r0,#rez_A0      ;A0=0
1495 120000   F     3535                     call            saver2
                    3536     
1498                3537     jmpgoto7:
1498 020000   F     3538                     jmp             goto7;an_t7
                    3539     
149B                3540     labelH: 
149B E5DA           3541                             mov             a,PCA0CPM0;     
149D 4446           3542                             orl             a,#46h;anl              a,#0fbh
149F F5DA           3543                             mov             PCA0CPM0,a
14A1 301021         3544                     jnb             bitt2,nolah
14A4 75B0FB         3545                     mov             p3,#0fbh   ;вход в режим изм Т
14A7 534A8F         3546                     anl             bufind+10,#8fh
14AA 79B7           3547                     mov             r1,#load;parT
14AC 20B70D         3548                     jb              p3.7,rhnot1
14AF B70003         3549                     cjne    @r1,#0,inct;
14B2 020000   F     3550                     jmp             out7;hyest6
14B5 17             3551     inct:           dec             @r1                     ;Tизм+1
                    3552                             
14B6 120000   F     3553                     call            loadT   ;в буфер2 записать текст  в соотв с     Tизм
14B9                3554     hnot2:          ;       call    ind
14B9 020000   F     3555                     jmp             onmem11;out7
14BC 020000   F     3556     rhnot1: jmp             hnot1
                    3557      ;rnoviR:               jmp             noviR
14BF 020000   F     3558     rlabelK:        jmp             labelK
14C2 020000   F     3559     rlabelI:        jmp             labelI          
                    3560      ;;;;;;;;;;;;;;;;;;;
                    3561     
14C5 3014F7         3562     nolah:  jnb             bitvich,rlabelK 
                    3563                     ;увеличить счетчик задержки клавиатуры
                    3564     ;;                              mov             r0,#chkl
                    3565     ;;                              mov             @r0,#27h
                    3566     ;;                              inc             r0
                    3567     ;;                              mov             @r0,#10h
                    3568     ;-------------------------------------------------
14C8 78B1           3569                     mov             r0,#vichR
14CA B61128         3570                     cjne    @r0,#11h,rhnor11;rlabelI;;
14CD 75B0FB         3571                     mov             p3,#0fbh   ;<-
14D0 20B730         3572                     jb              p3.7,noh37;routF
14D3 B6110B         3573                     cjne    @r0,#11h,hr12
14D6 7612           3574                     mov             @r0,#12h;11h;= вычислить
14D8 900000   F     3575                     mov             dptr,#teIZMK    ;       изм конст;teVICH
14DB 120000   F     3576     hvi1113:        call            lotext  ;в буфер 2 записать текст в соотв с состоянием
14DE 020000   F     3577                     jmp             onmem11;goto7
                    3578     
14E1 B61207         3579     hr12:           cjne    @r0,#12h,hnor12                 ;???
14E4 7611           3580     lovich: mov             @r0,#11h
14E6 900000   F     3581                     mov             dptr,#teVICH
14E9 80F0           3582                     jmp             hvi1113         
14EB B61307         3583     hnor12: cjne    @r0,#13h,rhnor11
14EE 7612           3584     loizmk: mov             @r0,#12h
14F0 900000   F     3585                     mov             dptr,#teIZMK    ;       изм конст
                    3586                                        
14F3 80E6           3587                     jmp             hvi1113
                    3588     
14F5 804C           3589     rhnor11:        jmp             hnor11
                    3590     
14F7 8057           3591     rvvizko:        jmp             vvizko
14F9 C214           3592     vioutF: clr             bitvich
14FB C206           3593                     clr             bitvi11
14FD 020000   F     3594                     jmp             viout;outF
1500 020000   F     3595     toutF:  jmp             viout;outF
                    3596     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    56

1503 75B0F7         3597     noh37:  mov             p3,#0f7h
1506 20B7F7         3598                     jb              p3.7,toutF;vioutF
1509 B611EB         3599                     cjne    @r0,#11h,rvvizko
150C D206           3600                     setb            bitvi11    ;нажат ввод ВЫЧИСЛИТЬ
150E D204           3601                     setb            bitizm
1510 534B07         3602                     anl             bufind+11,#07h
1513 434B10         3603                     orl             bufind+11,#10h;точка после 1 знакоместа
1516 020000   F     3604                     jmp             goto7;
                    3605     
                    3606     
1519 80E8           3607     rnoh37: jmp             noh37
151B B6120D         3608     norr11: cjne    @r0,#12h,norr12
151E 75B0FB         3609                     mov             p3,#0fbh   ;<-
1521 20B7F5         3610                     jb              p3.7,rnoh37;routF
1524 760B           3611                     mov             @r0,#11;12->11
1526 80BC           3612                     jmp             lovich
                    3613     
1528 020000   F     3614     labelI2:        jmp             labelI
152B B613FA         3615     norr12: cjne    @r0,#13h,labelI2
152E 75B0FB         3616                     mov             p3,#0fbh   ;<-
1531 20B7E5         3617                     jb              p3.7,rnoh37
1534 7612           3618                     mov             @r0,#12h
1536 80B6           3619                     jmp             loizmk
                    3620                             ;;;;
1538 C214           3621     clrvich:        clr             bitvich
153A D204           3622                     setb            bitizm
153C A8B2           3623                     mov             r0,marker
153E 76FF           3624                     mov             @r0,#0ffh
1540 020000   F     3625                     jmp             goto7;  routF
                    3626     
                    3627     ;rnoh37:        jmp             noh37
                    3628      ;ввод изм конст
1543 B612E5         3629     hnor11: cjne    @r0,#12h,norr12;clrvich
1546 75B0FB         3630                     mov             p3,#0fbh   
1549 20B7CD         3631                     jb              p3.7,rnoh37;lovich;;изм конст <-  выч
154C 7611           3632                     mov             @r0,#11h
154E 8094           3633                     jmp             lovich
                    3634     
1550 78B1           3635     vvizko: mov             r0,#vichR
1552 E6             3636                     mov             a,@r0
                    3637                     ;       cjne    @r0,#12h,clrvich
1553 B412E2         3638                     cjne    a,#12h,clrvich
1556 7621           3639                     mov             @r0,#21h                ;изм конст->U=+0000     (vvod)
1558 78B2           3640                     mov             r0,#marker
155A 7604           3641                     mov             @r0,#4;9
155C 753A04         3642                     mov             movleft,#4
155F 753B07         3643                     mov             movrig,#7
1562 900000   F     3644                     mov             dptr,#teAequ0
1565 120000   F     3645                     call            lotext
1568 120000   F     3646                     call            outA
156B 534B0F         3647                     anl             bufind+11,#0fh
                    3648             ;       mov             a,bufind+11
                    3649             ;       anl             a,#0f0h
                    3650             ;       mov             bufind+11,a
156E 434B40         3651                     orl             bufind+11,#40h;бит точки после 7 знакоместа(a=000.0 v)
1571 020000   F     3652                     jmp             goto7;routF
                    3653     ;hnor13:        jmp             hnor12          
1574 B6210C         3654     izchi:  cjne    @r0,#21h,tlabelI
                    3655     ;<- при вводе цифр А                            
                    3656                     ;mov            p3,#0fbh   
                    3657                     ;jnb            p3.7,li21
                    3658                     ;clr            bitmig
1577 78B2           3659                     mov             r0,#marker
1579 16             3660                     dec             @r0
157A B60201         3661                     cjne    @r0,#2,li21
157D 06             3662                     inc             @r0;marker=3 +/-
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    57

157E C219           3663     li21:           clr             bitmig
1580 020000   F     3664                     jmp             goto7;outF
                    3665     
1583 020000   F     3666     tlabelI:        jmp             labelI
                    3667     
                    3668     ;                       load    0 1 2 3 4 5             
1586 06050403       3669     sootv:  db              6,5,4,3,2,1;parT
158A 0201                    
                    3670     ;
158C 020000   F     3671     nnnott: jmp             viout
                    3672     ;нажата кн ввод при наборе Т
158F 75B0F7         3673     hnot1:  mov             p3,#0f7h
1592 20B7F7         3674                     jb              p3.7,nnnott;routF;out7
1595 B70549         3675                     cjne    @r1,#5,nohnot1  ;r1=load        load=5(10s)?
1598 794A           3676                     mov             r1,#bufind+10;в буфере 1 зажечь 10s
159A E7             3677                     mov             a,@r1
159B 548F           3678                     anl             a,#8fh
159D 4440           3679                     orl             a,#40h;.6
159F F7             3680                     mov             @r1,a
15A0 8000           3681                     jmp             loadb
                    3682                             
                    3683                                     
15A2 789A           3684     loadB:  mov             r0,#parT
15A4 900000   F     3685                     mov             dptr,#sootv
15A7 79B7           3686                     mov             r1,#load                
15A9 E7             3687                     mov             a,@r1;load
15AA 93             3688                     movc    a,@a+dptr
15AB F6             3689                     mov             @r0,a
15AC 120000   F     3690                     call            loab12  ;установить B1,B2 в соотв с Tизм
                    3691                              ;r4=b1 r5=b2
15AF 120000   F     3692                     call            iniacp;инициализация АЦП
15B2 120000   F     3693                     call            loadUS
15B5 120000   F     3694                     call            clmassix        
15B8 D204           3695                     setb            bitizm
15BA C210           3696                     clr             bitt2
15BC 534A8F         3697                     anl             bufind+10,#8fh
15BF C3             3698                     clr             c
15C0 789A           3699                     mov             r0,#parT
15C2 79AF           3700                     mov             r1,#parN
15C4 7402           3701                     mov             a,#2
15C6 96             3702                     subb            a,@r0
15C7 5005           3703                     jnc             loadB2
15C9 7701           3704                     mov             @r1,#1;N=1         ;T>=2
15CB 020000   F     3705     bout7:  jmp             goto7;out7
                    3706     
15CE B702FA         3707     loadB2: cjne    @r1,#2,bout7
15D1 7702           3708                     mov             @r1,#2;N=2
15D3 020000   F     3709                     jmp             goto7;out7
15D6                3710     nohnot2:        ;в буфере 1 зажечь <=0,1s
15D6 794A           3711                     mov             r1,#bufind+10
15D8 E7             3712                     mov             a,@r1
15D9 4410           3713                     orl             a,#10h;.4
15DB F7             3714                     mov             @r1,a
15DC 120000   F     3715                     call            ind
15DF 80C1           3716                     jmp             loadB
15E1 B704F2         3717     nohnot1:        cjne    @r1,#4,nohnot2  ;ввод кнопка Т  
15E4 794A           3718                     mov             r1,#bufind+10;в буфере 1 зажечь 1s
15E6 E7             3719                     mov             a,@r1
15E7 4420           3720                     orl             a,#20h;.5
15E9 F7             3721                     mov             @r1,a
15EA 80B6           3722                     jmp             loadB
                    3723     
                    3724     ;кнопка ПАМЯТЬ                  ???
15EC                3725     knMEM:  
15EC E5DA           3726                     mov             a,PCA0CPM0;     
15EE 4446           3727                     orl             a,#46h;anl              a,#0fbh
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    58

15F0 F5DA           3728                     mov             PCA0CPM0,a
                    3729     
15F2 2012D6         3730                     jb              bitklb,bout7    ;в реж калибровки не нажимать память
15F5 C204           3731                     clr             bitizm          ;off IZM
15F7 900000   F     3732                     mov             dptr,#teLIST    ;CLE
15FA 120000   F     3733                     call            lotext          ;в буф2 записать ОЧИСТКА
15FD D20B           3734                     setb            bitmem          ;нажата кнопка ПАМЯТЬ
15FF 534BEF         3735                     anl             bufind+11,#0efh ;убрать точку с 1го знакоместа
1602 434B01         3736                     orl             bufind+11,#01   ;зажечь светодиод память
1605 120000   F     3737                     call            ind
1608 78B0           3738                     mov             r0,#level
160A 7613           3739                     mov             @r0,#13h;11h
                    3740     
160C 783D           3741     onmem11:        mov             r0,#chkl
160E 7603           3742                     mov             @r0,#03
1610 08             3743                     inc             r0
1611 76E8           3744                     mov             @r0,#0e8h       ;1000
1613 020000   F     3745                     jmp             out7            ;goto7
                    3746     
1616 020000   F     3747     rnomemk:        jmp             nomemk          ;
1619 78B0           3748     outkmem:        mov             r0,#level
161B 7600           3749                     mov             @r0,#0
161D 78B1           3750                     mov             r0,#vichR
161F 7600           3751                     mov             @r0,#0
1621 C20B           3752                     clr             bitmem
1623 C214           3753                     clr             bitvich
1625 C206           3754                     clr             bitvi11
1627 C211           3755                     clr             bitmenu
1629 D204           3756                     setb            bitizm
162B 78B2           3757                     mov             r0,#marker
162D 76FF           3758                     mov             @r0,#0ffh
162F 020000   F     3759                     jmp             vvod2_10
                    3760                                     
1632 020000   F     3761     offmenum:       jmp     goto7   
                    3762     
1635                3763     labelK:
1635 300BDE         3764                     jnb     bitmem,rnomemk          ;кн память (ввод и <-)
                    3765                             ;;;;;;;
1638 75B0DF         3766                     mov     p3,#0dfh;(код кнопки меню)
163B 30B7F4         3767                     jnb     p3.7,offmenum
                    3768                             ;;;;;;;
163E 75B0EF         3769                     mov     p3,#0efh
1641 30B7D5         3770                     jnb     p3.7,outkmem            ;отжатие кн память на любом уровне обработк
                             и памяти
1644 78B0           3771                     mov     r0,#level
1646 B6114A         3772                     cjne    @r0,#11h,klev1;nome11
1649 75B0FB         3773     lefmem11:       mov     p3,#0fbh
164C E5B0           3774                     mov     a,p3
164E 20E70D         3775                     jb      acc.7,rkvvod0
1651 B6110D         3776                     cjne    @r0,#11h,locle          ;<-memory
1654 7614           3777                     mov     @r0,#14h
1656 900000   F     3778     lolist: mov     dptr,#teSTAT
1659 120000   F     3779                     call    lotext           ;СТАТИСТИКА
165C 80AE           3780                     jmp     onmem11;goto7;
165E 020000   F     3781     rkvvod0:        jmp     kvvod0
                    3782     
                    3783     
1661 B6120A         3784     locle:  cjne            @r0,#12h,lowr           ;<-memory
1664 7611           3785                     mov             @r0,#11h                   ;ОЧИСТКА
1666 900000   F     3786     loadcle:        mov             dptr,#teCLE
1669 120000   F     3787                     call            lotext
166C 809E           3788                     jmp             onmem11;goto7
                    3789     
166E B6130A         3790     lowr:           cjne    @r0,#13h,lostat
1671 7612           3791                     mov             @r0,#12h
1673 900000   F     3792     lowr1:  mov             dptr,#teWR                ;ЗАПИСЬ
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    59

1676 120000   F     3793                     call            lotext
1679 8091           3794                     jmp             onmem11;goto7
                    3795     
167B 7613           3796     lostat: mov             @r0,#13h
167D 900000   F     3797                     mov             dptr,#teLIST              ;ПРОСМОТР
1680 120000   F     3798                     call            lotext
1683 8087           3799                     jmp             onmem11;goto7
1685 B6141A         3800     me_14:  cjne    @r0,#14h,klev22
1688 7613           3801                     mov             @r0,#13h
168A 900000   F     3802                     mov             dptr,#teLIST              ;;ПРОСМОТР
168D 120000   F     3803                     call            lotext
1690 020000   F     3804                     jmp             goto7
1693 B61202         3805      klev1: cjne    @r0,#12h,klev2
1696 80B1           3806                     jmp             lefmem11
1698 B61302         3807     klev2:  cjne    @r0,#13h,klev3;11-14   klev22     ;11-13 нет
169B 80AC           3808                     jmp             lefmem11
169D B61402         3809     klev3:  cjne    @r0,#14h,klev22;
16A0 80A7           3810                     jmp             lefmem11
                    3811     ;<- vvod на более низких уровнях
16A2 B62117         3812     klev22: cjne    @r0,#21h,klev21
16A5 75B0FB         3813     lev220: mov             p3,#0fbh
16A8 20B776         3814                     jb              p3.7,kgo23
16AB B6210B         3815                     cjne    @r0,#21h,kfullr
16AE 7622           3816                     mov             @r0,#22h
16B0 900000   F     3817                     mov             dptr,#teBL
16B3 120000   F     3818                     call            lotext
16B6 020000   F     3819                     jmp             goto7;outF
16B9 020000   F     3820     kfullr: jmp             kfull                           
16BC B6220E         3821     klev21: cjne    @r0,#22h,klev23
16BF 80E4           3822                     jmp             lev220
                    3823     
16C1 020000   F     3824     rlabL2: jmp             labL2
16C4 020000   F     3825     rlabM:  jmp             labM
16C7 020000   F     3826     ques:           jmp             out7
16CA 020000   F     3827     ddoutfr:        jmp             ddoutf
                    3828     
16CD B623F4         3829     klev23: cjne    @r0,#23h,rlabM
16D0 75B0FB         3830                     mov     p3,#0fbh
16D3 30B7F1         3831                     jnb             p3.7,ques;errr labL2
16D6 75B0F7         3832                     mov     p3,#0f7h
16D9 20B7EE         3833                     jb              p3.7,ddoutfr
                    3834                                     ;       считать с индикатора  
16DC C3             3835                     clr                     c
16DD E547           3836                     mov             a,bufind+7      
16DF 9430           3837                     subb            a,#30h
16E1 B40002         3838                     cjne            a,#0,chaibl
16E4 7401           3839                     mov             a,#1                    ;номера блоков 1..4
16E6 F538           3840     chaibl: mov             nblok,a
                    3841                                      ;очистить блок памяти с набранным номером
                    3842                                     ;150h..1000h( 150h+nblok*320h)
16E8 120000   F     3843                     call            adrblok         ;dptr-
16EB 79B8           3844                     mov                     r1,#work                ;обьем блока
16ED 7703           3845                     mov                     @r1,#03
16EF 09             3846                     inc                     r1
16F0 7720           3847                     mov                     @r1,#20h                        ;320h
                    3848     
16F2 79D5           3849             mov     r1,#volume      ;?обьем блока for write
16F4 7700           3850             mov     @r1,#00
16F6 09             3851             inc     r1
16F7 77C7           3852             mov     @r1,#0c7h       ;?320h/4
                    3853     
16F9                3854     goonoff:
16F9 E4             3855                     clr             a
16FA F0             3856                     movx            @dptr,a
16FB A3             3857                     inc             dptr
16FC 79B9           3858                     mov             r1,#work+1
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    60

16FE 120000   F     3859                     call            chminus
1701 78B8           3860                     mov             r0,#work
1703 E6             3861                     mov             a,@r0
1704 30E7F2         3862                     jnb             acc.7,goonoff
1707 C20B           3863                     clr     bitmem  ;сбр признак памяти 
1709 D204           3864                     setb    bitizm
                    3865                     ;после очистки блока сохраняем в saven_bl 
                    3866                     ;адрес второго с конца измерения потому добавляем 8
170B 120000   F     3867                     call            adrblok;dptr-начало блока
                    3868                     ;       mov                     a,dpl
                    3869                     ;       add                     a,#8
                    3870                     ;       mov                     dpl,a
                    3871                     ;       mov                     a,dph
                    3872                     ;       addc            a,#0
                    3873                     ;       mov                     dph,a
170E 120000   F     3874                     call            save_hl;подготовка записи в начало блока
1711 78B2           3875                     mov             r0,#marker
1713 76FF           3876                     mov             @r0,#0ffh
1715 020000   F     3877                     jmp                     vvod2_10
1718 020000   F     3878                     jmp     goto7
                    3879     
171B 020000   F     3880     rddoutf:        jmp             ddoutf
171E 020000   F     3881     rgo23no:        jmp             go23no
                    3882     
                    3883     ;vvod   БЛОК->БЛОК 00           
1721 75B0F7         3884     kgo23:  mov     p3,#0f7h
1724 20B7F4         3885                     jb              p3.7,rddoutf
1727 B621F4         3886                     cjne    @r0,#21h,rgo23no
                    3887                     ;очистить память 150..dd0h
                    3888                             ;1й блок
172A 900150         3889                     mov                     dptr,#150h
172D 79B8           3890                     mov                     r1,#work                ;обьем блока
172F 7703           3891                     mov                     @r1,#03
1731 09             3892                     inc                     r1
1732 7720           3893                     mov                     @r1,#20h                        ;320h
1734                3894     gooff1:
1734 E4             3895                     clr                     a
1735 F0             3896                     movx            @dptr,a
1736 A3             3897                     inc                     dptr
1737 79B9           3898                     mov                     r1,#work+1
1739 120000   F     3899                     call            chminus
173C 78B8           3900                     mov             r0,#work
173E E6             3901                     mov             a,@r0
173F 30E7F2         3902                     jnb             acc.7,gooff1
1742 900150         3903                     mov                     dptr,#150h;начало 1 го блока
                    3904                     ;после очистки блока сохраняем в saven_bl 
                    3905                     ;адрес второго с конца измерения потому добавляем 8
                    3906     ;                               call            save_hl;подготовка записи в начало блока
                    3907     ;2й блок
1745 900470         3908                     mov                     dptr,#470h
1748 79B8           3909                     mov                     r1,#work                ;обьем блока
174A 7703           3910                     mov                     @r1,#03
174C 09             3911                     inc                     r1
174D 7720           3912                     mov                     @r1,#20h                        ;320h
174F                3913     gooff2:
174F E4             3914                     clr                     a
1750 F0             3915                     movx            @dptr,a
1751 A3             3916                     inc                     dptr
1752 79B9           3917                     mov                     r1,#work+1
1754 120000   F     3918                     call            chminus
1757 78B8           3919                     mov             r0,#work
1759 E6             3920                     mov             a,@r0
175A 30E7F2         3921                     jnb             acc.7,gooff2
175D 900470         3922                     mov                     dptr,#470h;начало 2 го блока
                    3923     ;                       call            save_hl;подготовка записи в начало блока
                    3924     ;3й блок
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    61

1760 900790         3925                     mov                     dptr,#790h
1763 79B8           3926                     mov                     r1,#work                ;обьем блока
1765 7703           3927                     mov                     @r1,#03
1767 09             3928                     inc                     r1
1768 7720           3929                     mov                     @r1,#20h                        ;320h
                    3930     
176A                3931     gooff3:
176A E4             3932                     clr                     a
176B F0             3933                     movx            @dptr,a
176C A3             3934                     inc                     dptr    
176D 79B9           3935                     mov                     r1,#work+1
176F 120000   F     3936                     call            chminus
1772 78B8           3937                     mov             r0,#work
1774 E6             3938                     mov             a,@r0
1775 30E7F2         3939                     jnb             acc.7,gooff3
1778 900790         3940                     mov                     dptr,#790h;начало 3 го блока
                    3941                     ;после очистки блока сохраняем в saven_bl 
                    3942                     ;адрес второго с конца измерения потому добавляем 8
                    3943                     ;       call            save_hl;подготовка записи в начало блока
                    3944     ;4й блок
177B 900AB0         3945                     mov                     dptr,#0ab0h
177E 79B8           3946                     mov                     r1,#work                ;обьем блока
1780 7703           3947                     mov                     @r1,#03h
1782 09             3948                     inc                     r1
1783 7720           3949                     mov                     @r1,#20h                        ;320h
1785                3950     gooff4:
1785 E4             3951                     clr                     a
1786 F0             3952                     movx            @dptr,a
1787 A3             3953                     inc                     dptr
1788 79B9           3954                     mov                     r1,#work+1
178A 120000   F     3955                     call            chminus
178D 78B8           3956                     mov             r0,#work
178F E6             3957                     mov             a,@r0
1790 30E7F2         3958                     jnb             acc.7,gooff4
1793 900AB0         3959                     mov                     dptr,#0ab0h;начало 4 го блока
                    3960                     ;после очистки блока сохраняем в saven_bl 
                    3961                     ;адрес второго с конца измерения потому добавляем 8
                    3962     ;                       call            save_hl;подготовка записи в начало блока
                    3963                             ;;;;26.02.07
1796 E538           3964                     mov             a,nblok
1798 B40117         3965                     cjne    a,#1,cl_hl1
179B 900150         3966                     mov             dptr,#150h
179E 79D3           3967                     mov             r1,#saven_bl
17A0 E583           3968     cl_hl:  mov             a,dph
17A2 F7             3969                     mov             @r1,a
17A3 09             3970                     inc             r1
17A4 E582           3971                     mov             a,dpl
17A6 F7             3972                     mov             @r1,a
                    3973                     ;;;;;;;;
17A7 C20B           3974                     clr             bitmem
17A9 D204           3975                     setb    bitizm
17AB 78B2           3976                     mov             r0,#marker
17AD 76FF           3977                     mov             @r0,#0ffh
17AF 020000   F     3978                     jmp                     vvod2_10;jmp            goto7
17B2 B40207         3979     cl_hl1: cjne            a,#2,cl_hl2
17B5 900470         3980                     mov                     dptr,#470h
17B8 79C0           3981                     mov             r1,#saven_bl2
17BA 80E4           3982                     jmp                     cl_hl
                    3983     
17BC B40307         3984     cl_hl2: cjne            a,#3,cl_hl3
17BF 900790         3985                     mov                     dptr,#790h
17C2 79C2           3986                     mov             r1,#saven_bl3
17C4 80DA           3987                     jmp                     cl_hl
                    3988     
17C6 900AB0         3989     cl_hl3: mov                     dptr,#0ab0h
17C9 79D9           3990                     mov             r1,#saven_bl4
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    62

17CB 80D3           3991                     jmp                     cl_hl
                    3992     
17CD 7623           3993     go23no: mov             @r0,#23h
17CF 753B08         3994                     mov                     movrig,#8
17D2 753A07         3995                     mov             movleft,#7
17D5 8053           3996                     jmp             loblok;БЛОК 00
17D7 7621           3997     kfull:  mov             @r0,#21h
17D9 8025           3998                     jmp             gofull
                    3999                             
                    4000                                             
17DB 020000   F     4001     nomemk: jmp             labelS                  ;нажат ввод меню
                    4002                             
17DE 75B0FB         4003     nome11: mov             p3,#0fbh
17E1 E5B0           4004                     mov             a,p3
17E3 20E70D         4005                     jb              acc.7,kvvod0
17E6 B61205         4006                     cjne            @r0,#12h,mem12no        
17E9 7611           4007                     mov             @r0,#11h                ;ОЧИСТКА
17EB 020000   F     4008                     jmp              loadcle
                    4009     
17EE                4010     mem12no:        ;cjne           @r0,#13h,lowr           
17EE 7612           4011                     mov             @r0,#12h                   ;
17F0 020000   F     4012                     jmp             lowr1                     ;ЗАПИСЬ
17F3 75B0F7         4013     kvvod0: mov             p3,#0f7h                        ;knopka vvod
17F6 20B710         4014                     jb              p3.7,ddoutf
17F9 78B0           4015                     mov             r0,#level
17FB B61127         4016                     cjne            @r0,#11h,mvv11
17FE 7621           4017                     mov             @r0,#21h                ;ПОЛНАЯ
1800 900000   F     4018     gofull: mov             dptr,#teFULL
1803 120000   F     4019                     call            lotext
1806 020000   F     4020                     jmp             onmem11;mlabL2  ;<-????????/
                    4021     
1809                4022     ddoutf:         ;<- БЛОК 00(ОЧИСТКА)
                    4023     ;необходимо не портить цифру в следуюем сслева знакоместе
                    4024     ;т е сохранить ее в ячейке для мигания в противном случае
                    4025     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4026     ;       знакоместа
1809 78B2           4027                     mov             r0,#marker
180B 7440           4028                     mov             a,#bufind
180D 26             4029                     add             a,@r0                   ;a=bufind+marker
180E F9             4030                     mov             r1,a
180F 19             4031                     dec             r1      ;       inc             r1
1810 873C           4032                     mov             savba,@r1
1812 C219           4033                     clr             bitmig
                    4034     ;;;;;;;;;;;;;;;;
1814 78B2           4035                     mov             r0,#marker      ;курсор слева   ?
1816 E53A           4036                     mov             a,movleft
1818 C3             4037                     clr             c
1819 96             4038                     subb            a,@r0
181A 7006           4039                     jnz             left21
181C E53B           4040                     mov             a,movrig;уст в правую позицию
181E F6             4041                     mov             @r0,a
                    4042     
181F 020000   F     4043                     jmp             goto7                                            
1822                4044     left21: 
                    4045     ;;;;                                    mov             a,movleft;уст в левую позицию
                    4046     ;;;;                                    mov             @r0,a   
1822 020000   F     4047                     jmp             goto7
                    4048     
                    4049     
1825 B61215         4050     mvv11:  cjne            @r0,#12h,mvv12
1828 7631           4051                     mov             @r0,#31h
182A 900000   F     4052     loblok: mov             dptr,#teBL0;БЛОК 0
182D 120000   F     4053                     call            lotext
1830 E538           4054                     mov             a,nblok
1832 2430           4055                     add             a,#30h
1834 F547           4056                     mov             bufind+7,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    63

1836 78B2           4057                     mov             r0,#marker
1838 7607           4058                     mov             @r0,#7
                    4059                                     ;mov            movrig,#9
                    4060                                     ;mov            movleft,#6
183A 020000   F     4061                     jmp             onmem11
183D B61411         4062     mvv12:  cjne            @r0,#14h,bl_li
1840 7661           4063                     mov             @r0,#61h
1842 900000   F     4064                     mov             dptr,#teMIN;
1845 120000   F     4065                     call    lotext
1848 120000   F     4066                     call    vichmin
184B 120000   F     4067                     call    z_1s
184E 020000   F     4068                     jmp             onmem11
                    4069     
1851 7641           4070     bl_li:  mov             @r0,#41h                ; БЛОК 00(ЗАПИСЬ И ПРОСМОТР)
1853 80D5           4071                     jmp             loblok
                    4072     
                    4073     
                    4074     
1855                4075     mlabL2:         ;jmp            labL2
                    4076                                             ;  уст курсор в правую позицию 
                    4077                                     ;                               29.12.06
                    4078     ;;;;;;;;;;;;;;;;;;
                    4079     ;необходимо не портить цифру в следуюем справа знакоместе
                    4080     ;т е сохранить ее в ячейке для мигания в противном случае
                    4081     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4082     ;       знакоместа
1855 78B2           4083                     mov             r0,#marker
1857 7440           4084                     mov             a,#bufind
1859 26             4085                     add             a,@r0                   ;a=bufind+marker
185A F9             4086                     mov             r1,a
185B 09             4087                     inc             r1
185C 873C           4088                     mov             savba,@r1
                    4089     ;;;;;;;;;;;;;;;;
185E 78B2           4090                     mov             r0,#marker      ;курсор справа  ?
1860 E53B           4091                     mov             a,movrig
1862 C3             4092                     clr             c
1863 96             4093                     subb    a,@r0
1864 6006           4094                     jz         equ2l
1866 E53B           4095                     mov             a,movrig;уст в правую позицию
1868 F6             4096                     mov             @r0,a
                    4097     ;                       lool
1869 020000   F     4098                     jmp             goto7                                            
186C E53A           4099     equ2l:  mov             a,movleft;уст в левую позицию
186E F6             4100                     mov             @r0,a   
186F 020000   F     4101                     jmp             goto7
                    4102                     
1872 020000   F     4103     rnom31: jmp                     nom31
1875 B631FA         4104     labM:           cjne    @r0,#31h,rnom31
1878 75B0FB         4105                     mov             p3,#0fbh
187B 30B7D7         4106                     jnb             p3.7,mlabL2
187E 75B0F7         4107                     mov             p3,#0f7h
1881 20B785         4108                     jb              p3.7,ddoutf
                    4109                                
1884 7632           4110                     mov             @r0,#32h                        ;ИНТ 0000
                    4111                                     ;       считать с индикатора  
1886 C3             4112     blokvv: clr             c
1887 E547           4113                     mov             a,bufind+7      
1889 9430           4114                     subb            a,#30h
188B B40002         4115                     cjne            a,#0,blokvvc
188E 7401           4116                     mov             a,#1                    ;номера блоков 1..4
                    4117     
1890 F538           4118     blokvvc:        mov             nblok,a
1892 900000   F     4119                     mov             dptr,#teINT;ИНТ 0000c
1895 120000   F     4120                     call            lotext
1898 78CE           4121                     mov             r0,#interva+1
189A 7952           4122                     mov             r1,#abin+3
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    64

189C E6             4123                     mov             a,@r0
189D F7             4124                     mov             @r1,a
189E 18             4125                     dec                     r0
189F 19             4126                     dec                     r1
18A0 E6             4127                     mov             a,@r0
18A1 F7             4128                     mov             @r1,a
18A2 19             4129                     dec             r1
18A3 E4             4130                     clr             a
18A4 F7             4131                     mov             @r1,a
18A5 19             4132                     dec             r1
18A6 F7             4133                     mov             @r1,a
                    4134                                                                             
18A7 7853           4135                     mov             r0,#adec
18A9 7952           4136                     mov             r1,#abin+3      ;hex->10
18AB 120000   F     4137                     call    bindec
                    4138                                     
18AE 785C           4139                     mov             r0,#adec+9;разместить в буфер индикации
18B0 7948           4140                     mov             r1,#bufind+8
18B2 7F04           4141                     mov             r7,#4
18B4 E6             4142     bloin:  mov             a,@r0
18B5 2430           4143                     add             a,#30h
18B7 F7             4144                     mov             @r1,a
18B8 19             4145                     dec             r1
18B9 18             4146                     dec             r0
18BA DFF8           4147                     djnz    r7,bloin
18BC 78B2           4148                     mov             r0,#marker
18BE 7605           4149                     mov             @r0,#5
18C0 753B08         4150                     mov             movrig,#8
18C3 753A05         4151                     mov             movleft,#5
18C6 789A           4152                     mov             r0,#parT
18C8 B60609         4153                     cjne            @r0,#6,innot6
18CB 534BF0         4154                     anl             bufind+11,#0f0h;after 5- 0.000c
18CE 434B04         4155                     orl             bufind+11,#04h
                    4156                             
18D1 020000   F     4157                     jmp             goto7
18D4 B60309         4158     innot6: cjne            @r0,#3,innot3
18D7 534BF0         4159                     anl             bufind+11,#0f0h;after 7- 000.0c
18DA 434B20         4160                     orl             bufind+11,#20h
                    4161                                     ;call           ind
18DD 020000   F     4162                     jmp             out7;goto7
18E0 C3             4163     innot3: clr             c
18E1 7403           4164                     mov             a,#3
18E3 96             4165                     subb            a,@r0
18E4 5009           4166                     jnc             innot1_2
18E6 534BF0         4167                     anl             bufind+11,#0f0h;after 6- 00.00c
18E9 434B40         4168                     orl             bufind+11,#40h
18EC 020000   F     4169                     jmp             goto7
                    4170     
18EF                4171     innot1_2:
18EF 534B0F         4172                     anl             bufind+11,#0fh;0h;0000c
18F2 C219           4173                     clr             bitmig
                    4174                                     ;call           ind             нет необходимости пришет пр
                             обел         
18F4 020000   F     4175     rgoto7: jmp        goto7;outF
                    4176     
18F7 B63276         4177     nom31:  cjne            @r0,#32h,nom32
18FA 75B0FB         4178                     mov             p3,#0fbh
18FD 20B71F         4179                     jb              p3.7,vvinte             ;ввод интервал;no31n
                    4180                                     
1900                4181     lefcur:         ;;кн <- 32 нач блок 000
                    4182     ;необходимо не портить цифру в следуюем сслева знакоместе
                    4183     ;т е сохранить ее в ячейке для мигания в противном случае
                    4184     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4185     ;       знакоместа
1900 C219           4186                     clr             bitmig
1902 78B2           4187                     mov             r0,#marker;нажата кн <- при вводе цифр нач блок 000
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    65

1904 7440           4188                     mov             a,#bufind
1906 26             4189                     add             a,@r0                   ;a=bufind+marker
1907 F9             4190                     mov             r1,a
1908 19             4191                     dec             r1;;;;;;;;;;;
1909 873C           4192                     mov             savba,@r1
                    4193                                             
190B 78B2           4194                     mov             r0,#marker      ;курсор слева?
190D E53A           4195                     mov             a,movleft
190F C3             4196                     clr             c
1910 96             4197                     subb    a,@r0
1911 7006           4198                     jnz        noequ2
1913 E53B           4199                     mov             a,movrig
1915 F6             4200                     mov             @r0,a;уст в крайнюю правую позицию
1916 020000   F     4201                     jmp             goto7
1919 120000   F     4202     noequ2: call    marle;сдвинуть курсор в  лево на 1позицию       
191C 020000   F     4203                     jmp        goto7        
                    4204                                                                       
                    4205     
                    4206     ;;;;;;;;;;;;;;;;;;
191F                4207     vvinte:         ;ввод интервал                          
191F 75B0F7         4208     no31n:  mov             p3,#0f7h
1922 20B7CF         4209                     jb              p3.7,rgoto7
1925 7633           4210                     mov             @r0,#33h
                    4211                                     ;считать с индикатора введенный интервал
1927 7F0A           4212                     mov             r7,#10
1929 7853           4213                     mov             r0,#adec
192B 120000   F     4214                     call    clearN
192E 120000   F     4215                     call    upak4                   
1931 784F           4216                     mov             r0,#abin
1933 7953           4217                     mov             r1,#adec                        ;мл         ст
1935 120000   F     4218                     call    decbin                  ;abin..abin+3 (hex)
1938 794F           4219                     mov             r1,#abin
193A 78CE           4220                     mov             r0,#interva+1
193C E7             4221                     mov             a,@r1
193D F6             4222                     mov             @r0,a
193E 18             4223                     dec             r0
193F 09             4224                     inc             r1
1940 E7             4225                     mov             a,@r1
1941 F6             4226                     mov             @r0,a
                    4227                                     
1942 78D5           4228                     mov             r0,#volume                      ;объем блока
1944 7600           4229                     mov             @r0,#0
1946 08             4230                     inc             r0
1947 76C7           4231                     mov             @r0,#0c7h
1949 120000   F     4232                     call            adrblok;dptr
194C 120000   F     4233                     call            save_hl;1я ячейка блока
194F 78B2           4234                     mov             r0,#marker
1951 76FF           4235                     mov             @r0,#0ffh
1953 D204           4236                     setb            bitizm
1955 C20B           4237                     clr             bitmem
1957 789A           4238     vvod2_10:       mov             r0,#parT
1959 B6050C         4239                     cjne            @r0,#5,no10msv
195C 900000   F     4240                     mov                     dptr,#te10ms
195F 120000   F     4241     t2msme: call            lotext
                    4242                                             
1962 120000   F     4243                     call            ind
1965 020000   F     4244     no2msv:         jmp        goto7;
1968 B606FA         4245     no10msv:        cjne            @r0,#6,no2msv   
196B 900000   F     4246                     mov                     dptr,#te2ms
196E 80EF           4247                     jmp                     t2msme
                    4248     
                    4249     
                    4250     
1970 B6332B         4251     nom32:  cjne            @r0,#33h,nom33
1973 75B0FB         4252                     mov             p3,#0fbh
1976 30B787         4253                     jnb             p3.7,lefcur
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    66

1979 75B0F7         4254                     mov             p3,#0f7h
197C 20B7E6         4255                     jb              p3.7,no2msv;rgoto7
                    4256                     ;запомнить номер ячейки конца блока
197F 7634           4257                     mov     @r0,#34h
1981 7F0A           4258     INTn:           mov             r7,#10
1983 7853           4259                     mov             r0,#adec
1985 120000   F     4260                     call    clearN
1988 120000   F     4261                     call    upak3                   
198B 784F           4262                     mov             r0,#abin
198D 7953           4263                     mov             r1,#adec                        ;мл         ст
198F 120000   F     4264                     call    decbin                  ;abin..abin+3 (hex)
1992 120000   F     4265                     call    loadr2                  ;r2..r5
1995 120402         4266                     call    altof                   ;r2..r5->int
1998 020000   F     4267     dgoto7: jmp             goto7
                    4268     
199B 020000   F     4269     rlefcur:        jmp             lefcur
                    4270     
199E B63464         4271     nom33:  cjne            @r0,#34h,labelP
19A1 75B0FB         4272                     mov             p3,#0fbh
19A4 30B7F4         4273                     jnb             p3.7,rlefcur
19A7 75B0F7         4274                     mov             p3,#0f7h
19AA 20B7EB         4275                     jb              p3.7,dgoto7
19AD 7635           4276                     mov             @r0,#35h
19AF 78B2           4277                     mov             r0,#marker
19B1 76FF           4278                     mov             @r0,#0ffh
                    4279                     ;T1<-число на индикаторе
                    4280                     ;vvod КОН БЛ 000
19B3 78CF           4281                     mov             r0,#chbuf               ;счетчик периода загрузки в буфер и
                              интерфейс
19B5 7630           4282                     mov             @r0,#30h  
19B7 C20B           4283                     clr             bitmem
19B9 D204           4284                     setb            bitizm;;;;      
19BB 020000   F     4285                     jmp        goto7
19BE 020000   F     4286     vodm11_15:      jmp             vvodm11_15
19C1 020000   F     4287     me11_15de:      jmp             me11_15dec
19C4 020000   F     4288     moutkmem:       jmp             outkmem
                    4289     
19C7 020000   F     4290     nmem_menu:      jmp             out7                    ;нажата память в режиме меню
                    4291     ;обработка кнопки меню ввод
19CA 301138         4292     labelS: jnb                     bitmenu,labelP
19CD 75B0EF         4293                     mov                     p3,#0efh
19D0 30B7F4         4294                     jnb                     p3.7,nmem_menu
19D3 75B0DF         4295                     mov                     p3,#0dfh
19D6 30B7EB         4296                     jnb                     p3.7,moutkmem
                    4297     
                    4298     ;;                      mov             p3,#0fbh
                    4299     ;;                      jb              p3.7,vodm11_15
                    4300     
                    4301     
19D9 78B1           4302                     mov                     r0,#vichR
19DB 7415           4303                     mov                     a,#15h
19DD C3             4304                     clr                     c
19DE 96             4305                     subb            a,@r0
19DF 4021           4306                     jc              rme21_23
                    4307                             
19E1 75B0FB         4308                     mov             p3,#0fbh
19E4 20B7D7         4309                     jb              p3.7,vodm11_15
19E7 78B1           4310                     mov             r0,#vichR
19E9 B611D5         4311                     cjne            @r0,#11h,me11_15de;<-
19EC 7615           4312                     mov             @r0,#15h
19EE 900000   F     4313                     mov             dptr,#teKALIB
19F1 120000   F     4314                     call            lotext
19F4 020000   F     4315                     jmp             onmem11
19F7 C211           4316     menuon: clr             bitmenu                 ;off menu
19F9 D204           4317                     setb            bitizm
                    4318     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    67

19FB 78B1           4319                     mov             r0,#vichR
19FD 7600           4320                     mov             @r0,#0
19FF 020000   F     4321                     jmp             onmem11
                    4322     
                    4323                                             ;;;;;
                    4324             
1A02 020000   F     4325     rme21_23:       jmp             me21_23 
                    4326                             
                    4327     ;режим просмотра
1A05 B64130         4328     labelP:         cjne            @r0,#41h,govvlist
1A08 7642           4329                     mov             @r0,#42h
                    4330                             ;       считать с индикатора  
1A0A C3             4331                     clr             c
1A0B E547           4332                     mov             a,bufind+7      
1A0D 9430           4333                     subb            a,#30h
1A0F B40002         4334                     cjne            a,#0,chaipr
1A12 7401           4335                     mov             a,#1
                    4336     ;;;;;;;;;;;22.09.10             mov             nblok,a
1A14                4337     chaipr:         
1A14 F538           4338                     mov             nblok,a
1A16 900000   F     4339                             mov             dptr,#teCH;ОТСЧЕТ 000
1A19 120000   F     4340                     call            lotext
1A1C 534BEF         4341                     anl             bufind+11,#0efh;убрать точку с 1го знакоместа
1A1F 78B2           4342                     mov             r0,#marker
1A21 7607           4343                     mov             @r0,#7
1A23 753B09         4344                     mov             movrig,#9
1A26 753A07         4345                     mov             movleft,#7
1A29 120000   F     4346                     call            z_1s            ;17.04.10
                    4347     
                    4348     ;;                              call            z_1s            ;17.09.10
                    4349     ;;                              call            z_1s            ;17.09.10                  
                                          
                    4350     ;;                              call            z_1s            ;17.09.10
                    4351     ;;
1A2C 020000   F     4352                     jmp        goto7;outF
1A2F 020000   F     4353     label43:        jmp             label7
                    4354     
1A32 020000   F     4355     rlist_43:       jmp                     list_43                                 
1A35 020000   F     4356     mlabL2r:        jmp                     mlabL2
1A38 B642F7         4357     govvlist:       cjne            @r0,#42h,rlist_43       ;?button
1A3B 75B0FB         4358                     mov                     p3,#0fbh
1A3E 30B7F4         4359                     jnb                     p3.7,mlabL2r;кн <- ОТСЧЕТ 000
1A41 75B0F7         4360                     mov                     p3,#0f7h
1A44 20B7E8         4361                     jb                      p3.7,label43
1A47 7643           4362                     mov                     @r0,#43h;vvod 
1A49 78B2           4363                     mov                     r0,#marker
1A4B 76FF           4364                     mov                     @r0,#0ffh
1A4D 7F0A           4365                     mov             r7,#10
1A4F 7853           4366                     mov             r0,#adec
1A51 120000   F     4367                     call    clearN
1A54 120000   F     4368                     call    upak3                   
1A57 784F           4369                     mov             r0,#abin
1A59 7953           4370                     mov             r1,#adec                        ;мл         ст
1A5B 120000   F     4371                     call    decbin                  ;abin..abin+3 (hex)
1A5E 120000   F     4372                     call    loadr2                  ;r2..r5
1A61 ED             4373                     mov             a,r5                            ;сохр номер лемента
1A62 F537           4374                     mov             nelem,a
1A64 120402         4375                     call    altof                   ;r2..r5->int
1A67 900000   F     4376                     mov             dptr,#ch_1;
1A6A 120000   F     4377                     call    ldc_ltemp                       ;r8..r11
1A6D 1201D1         4378                     call    flsub
1A70 900000   F     4379                     mov             dptr,#ch_4;
1A73 120000   F     4380                     call    ldc_ltemp                       ;r8..r11
1A76 120203         4381                     call    flmul                           ;(n(номер отсчета)-1)*4+адр нач бло
                             ка
1A79 120343         4382                     call            ftol                    ;r2..r5->hex
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    68

1A7C C002           4383                     push            rr2
1A7E C003           4384                     push            rr3
1A80 C004           4385                     push            rr4
1A82 C005           4386                     push            rr5
1A84 120000   F     4387                     call            adrblok;dptr-
1A87 D005           4388                     pop                     rr5
1A89 D004           4389                     pop                     rr4
1A8B D003           4390                     pop                     rr3
1A8D D002           4391                     pop                     rr2
1A8F 79D8           4392                     mov                     r1,#copy_hl+1;saven_bl+1;сохр адрес внешн озу введе
                             нного лемента
1A91 E582           4393                     mov                     a,dpl
1A93 2D             4394                     add                     a,r5
1A94 F582           4395                     mov                     dpl,a
1A96 F7             4396                     mov                     @r1,a           ;low
1A97 E583           4397                     mov                     a,dph
1A99 3C             4398                     addc            a,r4
1A9A F583           4399                     mov                     dph,a
1A9C 19             4400                     dec                     r1
1A9D F7             4401                     mov                     @r1,a                   ;high
1A9E                4402     li42_43:
1A9E 120000   F     4403                     call            reA3_X          ;r2..r5/выдать рез из внешн пам на индикато
                             р
1AA1 900000   F     4404                     mov             dptr,#ch10
1AA4 120000   F     4405                     call    ldc_ltemp
1AA7 120000   F     4406                     call    zdiv                    ;form4=invertif <0; divide
1AAA 120000   F     4407                     call    maform          ;setb/clr       znmat
1AAD 784F           4408                     mov             r0,#abin
1AAF 120000   F     4409                     call    saver2          ;r2..r5-> @r0..@r0+3
1AB2 7853           4410                     mov             r0,#adec
1AB4 7952           4411                     mov             r1,#abin+3      ;hex->10
1AB6 120000   F     4412                     call    bindec
                    4413                             
1AB9 785C           4414                     mov             r0,#adec+9;разместить в буфер индикации
1ABB 7945           4415                     mov             r1,#bufind+5
1ABD 7F07           4416                     mov             r7,#7
1ABF E6             4417     ch43:           mov             a,@r0
1AC0 2430           4418                     add             a,#30h
1AC2 F7             4419                     mov             @r1,a
1AC3 19             4420                     dec             r1
1AC4 18             4421                     dec             r0
1AC5 DFF8           4422                     djnz    r7,ch43
1AC7 7847           4423                     mov             r0,#bufind+7
1AC9 762D           4424                     mov             @r0,#2dh          ;-2..-9
1ACB 7840           4425                     mov             r0,#bufind
1ACD 762B           4426                     mov             @r0,#2bh
1ACF 300202         4427                     jnb             znmat,nozzmi43;bitznak,nozzmi
1AD2 762D           4428                     mov             @r0,#2dh        ;'-'
                    4429     
1AD4 E538           4430     nozzmi43:       mov             a,nblok
1AD6 B40104         4431                     cjne    a,#1,nozzmi1            
1AD9 7934           4432                     mov             r1,#sadiap;diap
1ADB 8010           4433                     jmp             nozzbl
1ADD B40204         4434     nozzmi1:        cjne    a,#2,nozzmi2            
1AE0 7932           4435                     mov             r1,#sadiap2;diap
1AE2 8009           4436                     jmp             nozzbl
1AE4 B40304         4437     nozzmi2:        cjne    a,#3,nozzmi3            
1AE7 7931           4438                     mov             r1,#sadiap3;diap
1AE9 8002           4439                     jmp             nozzbl
                    4440     
1AEB 7930           4441     nozzmi3: mov            r1,#sadiap4;diap
1AED 7848           4442     nozzbl:  mov            r0,#bufind+8
1AEF E7             4443                                     mov             a,@r1
1AF0 B40808         4444                     cjne    a,#8,nodi8_43
1AF3 7630           4445                     mov             @r0,#30h                 ;10-10
1AF5 18             4446                     dec             r0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    69

1AF6 7663           4447                     mov             @r0,#63h;31h
1AF8 08             4448                     inc             r0
1AF9 800E           4449                     jmp             see_l43
                    4450     
1AFB B40908         4451     nodi8_43:       cjne    a,#9,nodi9_43
1AFE 7631           4452                     mov             @r0,#31h           ;10-11
1B00 18             4453                     dec             r0
1B01 7663           4454                     mov             @r0,#63h;31h
1B03 08             4455                     inc             r0
1B04 8003           4456                     jmp             see_l43
                    4457     
1B06 2432           4458     nodi9_43:       add             a,#32h
1B08 F6             4459                     mov             @r0,a;
1B09 08             4460     see_l43:        inc             r0
1B0A 7641           4461                     mov             @r0,#"A";"E";
                    4462                     ;       inc             r0
                    4463                     ;       mov             @r0,#00h ;=feh в нач установе для поджига всех сегм
                    4464                     ;       inc             r0;             mov             bufind+11
                    4465                     ;       mov             @r0,#0d0h               ;bufind+11.4 точка после пе
                             рвой цифры
1B0C 434B10         4466                     orl             bufind+11,#10h
1B0F 120000   F     4467     out43:  call            ind
1B12 120000   F     4468                     call            z_1s
1B15 020000   F     4469                     jmp             out7                                    
                    4470     
                    4471                     ;;;;;;;;        
1B18 783D           4472     label7: mov             r0,#chkl
1B1A 7603           4473                     mov             @r0,#3
1B1C 08             4474                     inc             r0
1B1D 76E8           4475                     mov             @r0,#0e8h               ;1000
1B1F 020000   F     4476                     jmp             out7;
1B22 B64352         4477     list_43:        cjne    @r0,#43h,noli_43
1B25 75B0FB         4478                     mov             p3,#0fbh                ;43h <-
1B28 20B70B         4479                     jb              p3.7,vvod43             ;vvod
1B2B C20B           4480                     clr             bitmem
1B2D D204           4481                     setb    bitizm
1B2F 78B2           4482                     mov             r0,#marker
1B31 76FF           4483                     mov             @r0,#0ffh
1B33 020000   F     4484                     jmp             goto7;6.03.07;label7;по кн <- выход из просмотра
                    4485     
1B36 7644           4486     vvod43: mov             @r0,#44h
1B38 E537           4487                     mov             a,nelem;вывод порядкового номера в блоке 
1B3A 04             4488                     inc             a
1B3B F552           4489                     mov             abin+3,a
                    4490                                                     
1B3D F537           4491                     mov             nelem,a
1B3F E4             4492                     clr             a
1B40 F551           4493                     mov             abin+2,a
1B42 F550           4494                     mov             abin+1,a
1B44 F54F           4495                     mov             abin,a
                    4496                                             
1B46 7853           4497                     mov             r0,#adec
1B48 7952           4498                     mov             r1,#abin+3      ;hex->10
1B4A 120000   F     4499                     call    bindec
1B4D 7840           4500                     mov             r0,#bufind;почистить индикатор
1B4F 7F0A           4501                     mov             r7,#10
1B51 7420           4502                     mov             a,#20h
1B53 F6             4503     cle20:  mov             @r0,a
1B54 08             4504                     inc             r0
1B55 DFFC           4505                     djnz    r7,cle20
                    4506                             ;;;;;;
1B57 900000   F     4507                     mov             dptr,#teCH;ОТСЧЕТ 000
1B5A 120000   F     4508                     call            lotext
1B5D 534BEF         4509                     anl             bufind+11,#0efh;убрать точку с 1го знакоместа
1B60 785C           4510                     mov             r0,#adec+9;разместить в буфер индикации
1B62 7949           4511                     mov             r1,#bufind+9
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    70

1B64 7F03           4512                     mov             r7,#3
1B66 E6             4513     ch43_42:        mov             a,@r0
1B67 2430           4514                     add             a,#30h
1B69 F7             4515                     mov             @r1,a
1B6A 19             4516                     dec             r1
1B6B 18             4517                     dec             r0
1B6C DFF8           4518                     djnz    r7,ch43_42
1B6E 120000   F     4519                     call            ind
1B71 120000   F     4520                     call            z_1s
1B74 020000   F     4521                     jmp             out7
1B77 B64419         4522     noli_43:        cjne            @r0,#44h,vvosta
1B7A 7643           4523                     mov                     @r0,#43h
1B7C 79D8           4524                     mov                     r1,#copy_hl+1;saven_bl+1
1B7E E7             4525                     mov                     a,@r1
1B7F F582           4526                     mov                     dpl,a
1B81 19             4527                     dec                     r1
1B82 E7             4528                     mov                     a,@r1;high
1B83 F583           4529                     mov                     dph,a
1B85 A3             4530                     inc                     dptr
1B86 A3             4531                     inc                     dptr
1B87 A3             4532                     inc                     dptr
1B88 A3             4533                     inc                     dptr
1B89 E583           4534                     mov                     a,dph
1B8B F7             4535                     mov                     @r1,a
1B8C 09             4536                     inc                     r1
1B8D E582           4537                     mov                     a,dpl
1B8F F7             4538                     mov                     @r1,a                           ;сохр адр внешн озу
1B90 020000   F     4539                     jmp                     li42_43;вывод значения следующего в блоке
                    4540     
1B93 B66111         4541     vvosta: cjne            @r0,#61h,vvostad
1B96 7662           4542                     mov                     @r0,#62h
1B98 900000   F     4543                     mov                     dptr,#teMAX;
1B9B 120000   F     4544                     call            lotext
1B9E 120000   F     4545                     call            vichmax
1BA1 120000   F     4546                     call            z_05s;z_1s
1BA4 020000   F     4547                     jmp             goto7
                    4548     
1BA7 B66211         4549     vvostad:        cjne            @r0,#62h,rousta
1BAA 7663           4550                     mov                     @r0,#63h
1BAC 900000   F     4551                     mov             dptr,#teMid;
1BAF 120000   F     4552                     call    lotext
1BB2 120000   F     4553                     call            vichmean
1BB5 120000   F     4554                     call            z_05s
1BB8 020000   F     4555                     jmp             goto7
                    4556     
1BBB B6630E         4557     rousta: cjne            @r0,#63h,rousta1
1BBE 7661           4558                     mov                     @r0,#61h
1BC0 900000   F     4559                     mov             dptr,#teMin;
1BC3 120000   F     4560                     call    lotext
1BC6 120000   F     4561                     call            vichmin
1BC9 120000   F     4562                     call            z_05s
1BCC 020000   F     4563     rousta1:        jmp             goto7
                    4564     
1BCF 020000   F     4565     rLABELP:        jmp             LABELP
1BD2 78B1           4566     vvodm11_15:     mov             r0,#vichR;vvod
1BD4 75B0F7         4567                     mov             p3,#0f7h
1BD7 20B7F5         4568                     jb              p3.7,rLABELP;????
                    4569                                     
1BDA B61115         4570                     cjne            @r0,#11h,tome21
1BDD 7621           4571                     mov             @r0,#21h;vvod
1BDF 900000   F     4572                     mov             dptr,#teTE11
1BE2 120000   F     4573                     call            lotext
1BE5 534B03         4574                     anl             bufind+11,#03h ;погасить запятые
1BE8 020000   F     4575                     jmp             onmem11
                    4576     
1BEB 16             4577     me11_15dec:     dec             @r0                             ;<-
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    71

1BEC 120000   F     4578     lokame1:        call            lomenu
1BEF 020000   F     4579                     jmp             onmem11
                    4580     
1BF2 B61206         4581     tome21: cjne            @r0,#12h,tome13
                    4582                     ;вкл тест интерфейса
1BF5 020000   F     4583                     jmp             testrs;??????????
1BF8 020000   F     4584                     jmp             onmem11
                    4585     
1BFB B61325         4586     tome13: cjne            @r0,#13h,tome14
                    4587     ;;;             mov             @r0,#31h
                    4588                                             
                    4589     ;;;             mov             r2,#50h                         ;57.6->19.2
                    4590     ;;;             mov             r3,#2ch
                    4591     ;;;             call            re4byte                 ;28..2bh 3bait-parol,1 bait skor
                    4592     ;;;             mov             a,r8
                    4593     ;;;             cjne            a,#00,skor19
1BFE 301311         4594                             jnb             bitv19,skor19   ;;;;
1C01 900000   F     4595                     mov             dptr,#teS57_6;57,6
1C04 120000   F     4596                     call            lotext
1C07 434B80         4597                     orl             bufind+11,#80h
1C0A 758DF4         4598                                     mov             TH1,#244
1C0D C213           4599                     clr             bitv19
1C0F 020000   F     4600                     jmp             onmem11
1C12 900000   F     4601     skor19: mov             dptr,#teS19_2
1C15 120000   F     4602                     call            lotext
1C18 758DDC         4603                                     mov             TH1,#220
1C1B D213           4604                     setb            bitv19
1C1D 434B80         4605                     orl             bufind+11,#80h
1C20 020000   F     4606                     jmp             onmem11
                    4607                                             
                    4608     
1C23 B61415         4609     tome14: cjne            @r0,#14h,tome15
1C26 D204           4610                     setb            bitizm
1C28 7881           4611                     mov             r0,#chavt
1C2A 7600           4612                     mov             @r0,#0
1C2C 08             4613                     inc             r0
1C2D 7600           4614                     mov             @r0,#0
1C2F C211           4615     outmenu:        clr             bitmenu
1C31 020000   F     4616                     jmp             out7
                    4617     
1C34 78B1           4618     goparom:        mov             r0,#vichR               ;режим меню 52
1C36 7652           4619                     mov             @r0,#52h                        ;пароль уже ввели
1C38 020000   F     4620                     jmp             goparol
1C3B 3090F6         4621     tome15: jnb             p1.0,goparom
1C3E 753936         4622                     mov             nuerr,#36h
1C41 120000   F     4623                     call            error
1C44 120000   F     4624                     call            ind
1C47 120000   F     4625                     call            z_01s
1C4A 80EF           4626                     jmp             tome15; onmem11
                    4627     
1C4C 80E6           4628                     jmp             goparom;jb              bitpar,goparom  
1C4E 7651           4629                     mov             @r0,#51h;ПАРОЛЬ 000
1C50 120000   F     4630                     call            lomenu
1C53 78B2           4631                     mov             r0,#marker
1C55 7607           4632                     mov             @r0,#7
1C57 753B09         4633                     mov             movrig,#9
1C5A 753A07         4634                     mov             movleft,#7
                    4635                     ;setb           bitizm
1C5D 020000   F     4636                     jmp             onmem11
                    4637     
                    4638     
1C60 78B1           4639     me21_23:        mov             r0,#vichR               ;<-
1C62 7423           4640                     mov             a,#23h
1C64 C3             4641                     clr             c
1C65 96             4642                     subb            a,@r0
1C66 403F           4643                     jc              labelS1
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    72

1C68 75B0FB         4644                     mov             p3,#0fbh
1C6B 20B715         4645                     jb              p3.7,vv21_23
1C6E B6210B         4646                     cjne            @r0,#21h,me21_23dec;-<
1C71 7623           4647                     mov             @r0,#23h
1C73 900000   F     4648                     mov             dptr,#teTE7
1C76 120000   F     4649                     call            lotext
1C79 020000   F     4650                     jmp             onmem11
1C7C 16             4651     me21_23dec:     dec             @r0
1C7D 120000   F     4652                     call            lomenu
1C80 020000   F     4653                     jmp             onmem11
                    4654     ;onmem12:       jmp             viout;  outF    ;(ie7)
                    4655                                                     
1C83 75B0F7         4656     vv21_23:        mov             p3,#0f7h                ;vvod
1C86 20B719         4657                     jb              p3.7,onmem12
                    4658     
                    4659     ;=================== ТЕСТЫ T1,T2,T3 ======================
                    4660     ;vichR=21h,22h,23h
                    4661     ;из кнопки АВП keyb2
                    4662     ;=========================================================
1C89 B6210C         4663                     cjne            @r0,#21h,test22
                    4664                     ;mov            dptr,#tabt11;заслать ус 11А
1C8C 120000   F     4665     tests:  call            lotpus
1C8F D215           4666                     setb            biteizm;запомнить режим ТИ
1C91 D204           4667                     setb            bitizm
1C93 C211           4668                     clr             bitmenu;обнулить т к не будет индикации измерения       
1C95 020000   F     4669                     jmp             goto7;onmem11
1C98 B62202         4670     test22: cjne            @r0,#22h,test23
                    4671                     ;       mov                     dptr,#tabt9;заслать ус 9А
1C9B 80EF           4672                     jmp             tests   
1C9D                4673     test23:
                    4674                     ;       mov                     dptr,#tabt7;заслать ус 7А
1C9D 80ED           4675                     jmp             tests   
1C9F 020000   F     4676     left_s: jmp             left_sk
                    4677     
1CA2                4678     onmem12:
1CA2 7FFF           4679                     mov             r7,#0ffh        ;?
1CA4 020000   F     4680                     jmp             viout           ;?
                    4681     
1CA7 B6317C         4682     labelS1:        cjne            @r0,#31h,me_41
1CAA 75B0FB         4683                     mov                     p3,#0fbh                        ;<-
1CAD 30B7EF         4684                     jnb                     p3.7,left_s
1CB0 75B0F7         4685                     mov                     p3,#0f7h
1CB3 20B7EC         4686                     jb                      p3.7,onmem12
                    4687                     ;запомнить признак установленной скорости в рпзу
                    4688     ;чтение пам прогр(5000h) 1 страница(ffh)
                    4689     ;и запись во внешнее озу(0000h)
1CB6 7900           4690                     mov             r1,#0                   ;
1CB8 7A50           4691                     mov             r2,#50h
1CBA 7B00           4692                     mov             r3,#00
1CBC 120499         4693                     call    copyPP
                    4694                     ;внести изменения во внешн озу
                    4695                     ;KD=00 01 86 A0 (KD=1)
                    4696                     ;кофф *100000 и переведенный в hex формат
                    4697                     ;согласно адресов диапазонов и адресов яч вн озу 
1CBF 792C           4698                     mov             r1,#2ch
1CC1 7400           4699                     mov             a,#0;57,6
1CC3 301302         4700                     jnb             bitv19,spwri
1CC6 7401           4701                     mov             a,#1;19.6
1CC8 F3             4702     spwri:  movx    @r1,a
                    4703     ;стереть страницу пап прогр 
1CC9 905000         4704                     mov             dptr,#5000h
1CCC 7FFF           4705                     mov             r7,#0ffh
1CCE 12043E         4706                     call    cle256
                    4707     ;и запись в ячейки кофф памяти прогр (3000h) 
1CD1 7FFF           4708                     mov             r7,#0ffh
1CD3 7900           4709                     mov             r1,#0                           ;external ram
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    73

1CD5 905000         4710                     mov             dptr,#5000h
1CD8 120480         4711                     call    wrpage
                    4712             
1CDB 75EF10         4713                     mov     RSTSRC,#10h             ;?reset
1CDE C28E           4714                     clr     TR1                     ;?stop Timer1
1CE0 201305         4715                     jb      bitv19,outsko1  ;загр Т1 в соотв с установленной скоростью
1CE3 758DF4         4716                     mov     TH1,#244                ;57.6
1CE6 8005           4717                     jmp     outsko
1CE8 758DDC         4718     outsko1:        mov     TH1,#220                ;19.6
1CEB D28E           4719                     setb    TR1     ;start Timer1
                    4720     
1CED C211           4721     outsko: clr     bitmenu
1CEF D204           4722                     setb    bitizm
1CF1 020000   F     4723                     jmp     out7
                    4724     
1CF4 020000   F     4725     rlabels4:       jmp             labels4
1CF7 020000   F     4726     rlabelS13:      jmp             labelS13
                    4727     
1CFA B652F7         4728     me_52:  cjne            @r0,#52h,rlabels4
1CFD 75B0FB         4729                     mov                     p3,#0fbh;<-
1D00 20B717         4730                     jb                      p3.7,vv_52v     ;ввод в калибровке
1D03 78B2           4731                     mov             r0,#marker              ;сдвиг маркера влево при калибр
1D05 7440           4732                     mov             a,#bufind
1D07 26             4733                     add             a,@r0                   ;a=bufind+marker
1D08 F9             4734                     mov             r1,a
1D09 19             4735                     dec             r1;inc          r1
1D0A 873C           4736                     mov             savba,@r1
                    4737                                                     
1D0C 78B2           4738                     mov             r0,#marker
1D0E 16             4739                     dec             @r0                             
1D0F C219           4740                     clr             bitmig
1D11 E53A           4741                     mov             a,movleft
1D13 B60001         4742                     cjne    @r0,#0,me_52v;ажата кн <- при вводе цифр калибровки
1D16 06             4743                     inc                     @r0
1D17 020000   F     4744     me_52v: jmp                     goto7
                    4745             
1D1A 75B0F7         4746     vv_52v: mov             p3,#0f7h
1D1D 30B703         4747                     jnb             p3.7,rvvkali52
1D20 020000   F     4748                     jmp                     goto7
1D23 020000   F     4749     rvvkali52:      jmp             vvkali52
                    4750     
                    4751     
1D26 B651D1         4752     me_41:  cjne            @r0,#51h,me_52;rlabels4
1D29 75B0FB         4753                     mov             p3,#0fbh;<-
1D2C 30B7C8         4754                     jnb             p3.7,rlabelS13
1D2F 75B0F7         4755                     mov             p3,#0f7h
1D32 20B773         4756                     jb              p3.7,vvmenu
                    4757                     ;ввод пароля
                    4758                             
                    4759     ;       считать с индикатора 
1D35 7F0E           4760                     mov             r7,#14
1D37 784F           4761                     mov             r0,#abin
1D39 120000   F     4762                     call    clearN                  
                    4763                             
                    4764     ;чтение номера байта с индикатора(3байта)
                    4765     ;bufind+3..bufind+9
                    4766     ;-  - - -
                    4767     ;- - - - - - - - - -
                    4768     ;adec..adec+9
                    4769     ;ст            мл
1D3C 7849           4770                     mov             r0,#bufind+9;
1D3E 795C           4771                     mov             r1,#adec+9
1D40 7F03           4772                     mov             r7,#3;3bait
1D42 C3             4773     upav1:          clr             c
1D43 E6             4774                     mov             a,@r0
1D44 9430           4775                     subb    a,#30h
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    74

1D46 F7             4776                     mov             @r1,a
1D47 18             4777                     dec             r0
1D48 19             4778                     dec             r1
1D49 DFF7           4779                     djnz    r7,upav1;adec+7..adec+9
1D4B 7A50           4780                     mov             r2,#50h                         ;parol 000x    (5028h )
1D4D 7B28           4781                     mov             r3,#28h
1D4F 120454         4782                     call            re4byte                 ;r8..r11(3 bait parol)
1D52 800F           4783                     jmp                     goparol
                    4784     
1D54 E508           4785                     mov                     a,r8                    ;сравнить пароль с индикато
                             ром
1D56 B55A52         4786                     cjne            a,adec+7,parerr
1D59 E509           4787                     mov                     a,r9    
1D5B B55B4D         4788                     cjne            a,adec+8,parerr
1D5E E50A           4789                     mov                     a,r10
1D60 B55C48         4790                     cjne            a,adec+9,parerr
                    4791                                     ;равны
1D63 78B1           4792     goparol:        mov             r0,#vichR               ;режим меню 52
1D65 7652           4793                     mov             @r0,#52h                ;0000-n
1D67 900000   F     4794                     mov             dptr,#teKD;00000-nA
1D6A 120000   F     4795                     call            lotext
                    4796                     ;;;;;;;;;
                    4797                     ;n(hex)->abin
1D6D 120000   F     4798                     call    findR                           ;a=2(10-2)...11(10-11)
1D70 2552           4799                     add             a,abin+3
1D72 F552           4800                     mov             abin+3,a
1D74 7853           4801                     mov             r0,#adec
1D76 7952           4802                     mov             r1,#abin+3      ;hex->10
1D78 120000   F     4803                     call    bindec
1D7B 855C48         4804                     mov             bufind+8,adec+9
1D7E 75472D         4805                     mov             bufind+7,#2dh
1D81 434A80         4806                     orl                     bufind+10,#80h;зажечь KMП
1D84 434B10         4807                     orl                     bufind+11,#10h;точка после 1 знакоместа
1D87 79AE           4808                     mov             r1,#diap
1D89 7848           4809                     mov             r0,#bufind+8
1D8B E7             4810                     mov             a,@r1
1D8C B40807         4811                     cjne    a,#8,nodi8k
1D8F 7630           4812                     mov             @r0,#30h                 ;10-10
1D91 18             4813                     dec             r0
1D92 7663           4814                     mov             @r0,#63h;31h
1D94 8008           4815                     jmp             nodisk9
1D96 B40905         4816     nodi8k: cjne    a,#9,nodisk9
                    4817                                     
1D99 7631           4818                     mov             @r0,#31h           ;10-11
1D9B 18             4819                     dec             r0
1D9C 7663           4820                     mov             @r0,#63h;31h
                    4821                                     
                    4822     
1D9E 78B2           4823     nodisk9:        mov             r0,#marker
1DA0 7601           4824                     mov             @r0,#1
1DA2 753A01         4825                     mov             movleft,#1
1DA5 753B05         4826                     mov             movrig,#5
                    4827                                             
1DA8 020000   F     4828     vvmenu: jmp             goto7
                    4829     
1DAB 753932         4830     parerr: mov             nuerr,#32h
1DAE 120000   F     4831                     call            error
1DB1 120000   F     4832                     call            ind
1DB4 120000   F     4833                     call            z_1s
1DB7 C211           4834                     clr             bitmenu
1DB9 D204           4835                     setb            bitizm
1DBB 78B2           4836                     mov             r0,#marker
1DBD 76FF           4837                     mov             @r0,#0ffh
1DBF 020000   F     4838                     jmp             goto7
                    4839     
1DC2 30130E         4840     left_sk:        jnb             bitv19,tosk19;<-
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    75

1DC5 900000   F     4841                     mov             dptr,#teS57_6;57,6
1DC8 120000   F     4842                     call            lotext
1DCB 434B80         4843                     orl             bufind+11,#80h
1DCE C213           4844                     clr             bitv19
1DD0 020000   F     4845                     jmp             onmem11;goto7
1DD3 900000   F     4846     tosk19: mov             dptr,#teS19_2
1DD6 120000   F     4847                     call            lotext
1DD9 434B80         4848                     orl             bufind+11,#80h
1DDC D213           4849                     setb            bitv19
1DDE 020000   F     4850                     jmp             onmem11;goto7
                    4851     
1DE1                4852     labelS13:;<- MENU(ПАРОЛЬ 000)
                    4853             
                    4854     ;;;;;;;;;;;;;;;;;;
                    4855     ;необходимо не портить цифру в следуюем слева знакоместе
                    4856     ;т е сохранить ее в ячейке для мигания в противном случае
                    4857     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4858     ;       знакоместа
1DE1 78B2           4859                     mov             r0,#marker
1DE3 7440           4860                     mov             a,#bufind
1DE5 26             4861                     add             a,@r0                   ;a=bufind+marker
1DE6 F9             4862                     mov             r1,a
1DE7 19             4863                     dec             r1;inc          r1
1DE8 873C           4864                     mov             savba,@r1
                    4865                                             
1DEA 78B2           4866                     mov             r0,#marker
1DEC 16             4867                     dec             @r0                             
1DED C219           4868                     clr             bitmig
1DEF E53A           4869                     mov             a,movleft
1DF1 B60652         4870                     cjne            @r0,#6,onmem13;;нажата кн <- при вводе цифр ПАРОЛЬ 000
1DF4 06             4871                     inc             @r0
1DF5 020000   F     4872                     jmp             goto7
                    4873     ;;;;;;;
                    4874     
1DF8                4875     vvkali52:       ;введено значение для калибровки
                    4876                                             ;число на индикаторе ->Ak  (52h)
                    4877                                             ;       считать с индикатора 
1DF8 7F0E           4878                     mov             r7,#14
1DFA 784F           4879                     mov             r0,#abin
1DFC 120000   F     4880                     call    clearN                  
                    4881                                     
                    4882     ;чтение номера байта с индикатора(3байта)
                    4883     ;bufind+1..bufind+5
                    4884     ;-  - - -
                    4885     ;- - - - - - - - - -
                    4886     ;adec..adec+9
                    4887     ;ст            мл
1DFF 7845           4888                     mov             r0,#bufind+5;
1E01 795C           4889                     mov             r1,#adec+9
1E03 7F05           4890                     mov             r7,#5;5bait
1E05 C3             4891     upav2:  clr             c
1E06 E6             4892                     mov             a,@r0
1E07 9430           4893                     subb    a,#30h
1E09 F7             4894                     mov             @r1,a
1E0A 18             4895                     dec             r0
1E0B 19             4896                     dec             r1
1E0C DFF7           4897                     djnz    r7,upav2;adec+7..adec+9
                    4898     
1E0E 784F           4899                     mov             r0,#abin
1E10 7953           4900                     mov             r1,#adec                        ;мл         ст
1E12 120000   F     4901                     call    decbin                  ;abin..abin+3 (hex)
1E15 120000   F     4902                     call    loadr2                  ;r2..r5
1E18 120402         4903                     call    altof   ;r2..r5->float
1E1B 900000   F     4904                     mov     dptr,#ch_10;10
1E1E 120000   F     4905                     call    ldc_ltemp                       ;r8..r11=8
1E21 120203         4906                     call    flmul
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    76

1E24 78A4           4907                     mov             r0,#rez_Ak
1E26 120000   F     4908                     call    saver2
1E29 C211           4909                     clr                     bitmenu
1E2B D212           4910                     setb            bitklb
1E2D 434A80         4911                     orl             bufind+10,#80h;зажечь KMП
1E30 D204           4912                     setb            bitizm;бит калибровки уже установлен
1E32 78B2           4913                     mov             r0,#marker
1E34 76FF           4914                     mov             @r0,#0ffh
1E36 783D           4915                     mov             r0,#chkl
1E38 76FF           4916                     mov             @r0,#0ffh
1E3A 08             4917                     inc             r0
1E3B 76FF           4918                     mov             @r0,#0ffh;38h
1E3D 120000   F     4919                     call            z_1s
1E40 020000   F     4920                     jmp             out7
                    4921     
                    4922     
1E43 020000   F     4923                     jmp             goto7
                    4924                                              
1E46 020000   F     4925     onmem13:        jmp             goto7   ;(ie7)
                    4926     
1E49 B642AC         4927     labels4:        cjne            @r0,#42h,vvkali52
1E4C 75B0FB         4928                     mov                     p3,#0fbh;<-
1E4F 30B7F4         4929                     jnb             p3.7,onmem13
1E52 75B0F7         4930                     mov             p3,#0f7h;vvod
1E55 20B7EE         4931                     jb              p3.7,onmem13
1E58 020000   F     4932                     jmp             out7                                                    
                    4933     ;;;;;;;
1E5B                4934     labelI:
1E5B 75B0FE         4935                     mov             p3,#0feh
1E5E E5B0           4936                     mov             a,p3
1E60 20E703         4937                     jb              acc.7,nopoint
                    4938                     ;
1E63 020000   F     4939                     jmp             goto7;out7
                    4940     
1E66 75B0FB         4941     nopoint:        mov             p3,#0fbh
1E69 E5B0           4942                     mov             a,p3
1E6B 20E72C         4943                     jb              acc.7,nopoin7
1E6E 78B2           4944     labelS3:        mov             r0,#marker
1E70 E53A           4945                     mov             a,movleft
1E72 B40309         4946                     cjne            a,#3,poina1
1E75 B6030B         4947                     cjne            @r0,#3,nomarl;26
                    4948                     ;mov            @r0,#9
1E78 E53B           4949     poina2: mov             a,movrig                ;кн <- B=+00000
1E7A F6             4950                     mov             @r0,a
1E7B 020000   F     4951                     jmp             goto7;  out7
                    4952     
1E7E B60402         4953     poina1: cjne            @r0,#4,nomarl;кн <- A= 0000
1E81 80F5           4954                     jmp             poina2
                    4955     
                    4956     
1E83                4957     nomarl:                 ;                               29.12.06
                    4958     ;;;;;;;;;;;;;;;;;;
                    4959     ;необходимо не портить цифру в следуюем справа знакоместе
                    4960     ;т е сохранить ее в ячейке для мигания в противном случае
                    4961     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4962     ;       знакоместа
1E83 78B2           4963                     mov             r0,#marker
1E85 7440           4964                     mov             a,#bufind
1E87 26             4965                     add             a,@r0                   ;a=bufind+marker
1E88 F9             4966                     mov             r1,a
1E89 09             4967                     inc             r1
1E8A 873C           4968                     mov             savba,@r1
                    4969                                                     
1E8C 78B2           4970                     mov             r0,#marker
1E8E 16             4971                     dec             @r0                             
1E8F C219           4972                     clr             bitmig
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    77

1E91 E53A           4973                     mov                     a,movleft
1E93 B4036B         4974                     cjne            a,#3,poinA
1E96 B60266         4975                     cjne    @r0,#2,gogo7;out7;;нажата кн <- при вводе цифр B=+00000
1E99 06             4976     poin3:  inc             @r0
                    4977     ;нажат ввод А =000000 запомнить константу А
1E9A 75B0F7         4978     nopoin7:        mov             p3,#0f7h
1E9D E5B0           4979                     mov             a,p3
1E9F 20E75D         4980                     jb              acc.7,gogo7;out7
1EA2 78B1           4981                     mov             r0,#vichR
1EA4 E6             4982                     mov             a,@r0
1EA5 B6215E         4983                     cjne    @r0,#21h,no21p7
1EA8 7611           4984                     mov             @r0,#11h
                    4985                             ;       считать с индикатора  упаковать в плавающий формат
                    4986                             ;   сохранить
1EAA 7F0E           4987                     mov             r7,#14
1EAC 784F           4988                     mov             r0,#abin
1EAE 120000   F     4989                     call    clearN                  
1EB1 120000   F     4990                     call    upakA
                    4991                                     
1EB4 784F           4992                     mov             r0,#abin
1EB6 7953           4993                     mov             r1,#adec                        ;мл         ст
1EB8 120000   F     4994                     call    decbin                  ;abin..abin+3 (hex)
1EBB 120000   F     4995                     call    loadr2                  ;r2..r5
1EBE 120402         4996                     call    altof                   ;r2..r5->float
1EC1 78BC           4997                     mov     r0,#konstA
1EC3 120000   F     4998                     call    saver2
1EC6 900000   F     4999                     mov     dptr,#ch0
1EC9 120000   F     5000                     call    ldc_ltemp
1ECC 1201D6         5001                     call            flcmp
1ECF 6010           5002                     jz              erra0
                    5003     ;26
1ED1 78B2           5004                     mov             r0,#marker
1ED3 76FF           5005                     mov             @r0,#0ffh
                    5006                                     
1ED5 900000   F     5007                     mov             dptr,#teVICH;teBequ0
1ED8 120000   F     5008                     call    lotext
                    5009                     ;       call            outB
1EDB 534BBF         5010                     anl             bufind+11,#0bfh         ;гашение точки bufind+7
                    5011                     ;       orl             bufind+11,#80h
1EDE 020000   F     5012                     jmp             goto7
                    5013     
1EE1 78B2           5014     erra0:  mov             r0,#marker
1EE3 76FF           5015                     mov             @r0,#0ffh
1EE5 753934         5016                     mov                     nuerr,#34h;константа не должна быть равна0
1EE8 120000   F     5017                     call            error
1EEB 120000   F     5018                     call            ind
1EEE 120000   F     5019                     call            z_1s
1EF1 78B1           5020                     mov                     r0,#vichR
1EF3 7600           5021                     mov                     @r0,#0
1EF5 C214           5022                     clr                     bitvich
1EF7 C206           5023                     clr                     bitvi11
1EF9 D204           5024                     setb            bitizm
1EFB 78B2           5025                     mov                     r0,#marker
1EFD 76FF           5026                     mov                     @r0,#0ffh
1EFF 802E           5027     gogo7:  jmp                     out7;goto7
                    5028     
1F01 B6032B         5029     poinA:  cjne    @r0,#3,out7;;нажата кн <- при вводе цифр A= 0000
1F04 8093           5030                     jmp             poin3
                    5031     
1F06                5032     no21p7:         ;считать с индикатора  упаковать в плавающий формат
                    5033                             ;сохранить
1F06 7F0E           5034                     mov             r7,#14
1F08 784F           5035                     mov             r0,#abin
1F0A 120000   F     5036                     call    clearN                  
1F0D 120000   F     5037                     call    upakB                   
1F10 784F           5038                     mov             r0,#abin
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    78

1F12 7953           5039                     mov             r1,#adec                        ;мл         ст
1F14 120000   F     5040                     call    decbin                  ;abin..abin+3 (hex)
1F17 120000   F     5041                     call    loadr2                  ;r2..r5
1F1A 120402         5042                     call    altof                   ;r2..r5->int
1F1D 301B04         5043                     jnb             bitznB,pozB
1F20 EA             5044                     mov             a,r2
1F21 4480           5045                     orl             a,#80h
1F23 FA             5046                     mov             r2,a                    ;знак-
1F24                5047     pozB:           ;mov            r0,#konstB
                    5048                     ;call   saver2
                    5049     
1F24 79B2           5050                     mov             r1,#marker       ;B=000000-> ВЫЧИСЛИТЬ
1F26 77FF           5051                     mov             @r1,#0ffh
1F28 78B1           5052                     mov             r0,#vichR
1F2A 7611           5053                     mov             @r0,#11h
1F2C 020000   F     5054                     jmp             lovich     ;3.01.07ВЫЧИСЛИТЬ
                    5055                                     
                    5056     
1F2F                5057     out7:            ;mov           IE,#80h
1F2F D083           5058                     pop             dph
1F31 D082           5059                     pop             dpl
1F33 D007           5060                     pop             rr7     
1F35 D006           5061                     pop             rr6
1F37 D005           5062                     pop             rr5
1F39 D004           5063                     pop             rr4
1F3B D003           5064                     pop             rr3
1F3D D002           5065                     pop             rr2
1F3F D001           5066                     pop             rr1                             
1F41 D000           5067                     pop             rr0
1F43 D0D0           5068                     pop             psw
1F45 D0E0           5069                     pop             acc
1F47 75AD00         5070                     mov             P3IF,#00;               обязательно сбросить опять приходит
                              на обработку прерывания
1F4A 75B0C0         5071                     mov             P3,#0c0h
1F4D 75E730         5072                                     mov             EIE2,#30H               ;;;1.02.10
1F50 C219           5073                     clr             bitmig
1F52 E586           5074                     mov             a,P6            ;p6.4=0
1F54 54EF           5075                     anl             a,#0efh
1F56 F586           5076                     mov             P6,a
1F58 00             5077                     nop
1F59 00             5078                     nop
1F5A E586           5079                     mov             a,P6                    ;p6.4=1 
1F5C 4410           5080                     orl             a,#10h
1F5E F586           5081                     mov             P6,a
                    5082                     ;;;;;;;;;
                    5083     ;;;             mov             a,PCA0CPM0;             TOG0
                    5084     ;;;             orl             a,#46h  ;anl            a,#0fbh
                    5085     ;;;;            mov             PCA0CPM0,a
1F60 75CDD0         5086                     mov             TH2,#0d0h
1F63 75CC00         5087                     mov             TL2,#00
1F66 D2CA           5088                     setb            T2CON.2
1F68 D2AD           5089                     setb            ET2     ;IE.5
                    5090                                                 
1F6A 32             5091                     reti
                    5092     
                    5093             ;;;;
1F6B 78B1           5094     lomenu: mov             r0,#vichR
1F6D B61107         5095                     cjne    @r0,#11h,menu12
1F70 900000   F     5096                     mov             dptr,#teTESI
1F73 120000   F     5097     lome1:  call    lotexT
1F76 22             5098                     ret
1F77 B61205         5099     menu12: cjne    @r0,#12h,menu13
1F7A 900000   F     5100                     mov             dptr,#teTESR
1F7D 80F4           5101                     jmp             lome1
1F7F B61305         5102     menu13: cjne    @r0,#13h,menu14
1F82 900000   F     5103                     mov             dptr,#teSKOR
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    79

1F85 80EC           5104                     jmp             lome1
1F87 B61405         5105     menu14: cjne    @r0,#14h,menu15
1F8A 900000   F     5106                     mov             dptr,#teAVK
1F8D 80E4           5107                     jmp             lome1
1F8F B61505         5108     menu15: cjne    @r0,#15h,menu21
1F92 900000   F     5109                     mov             dptr,#teKALIB
1F95 80DC           5110                     jmp             lome1
                    5111     
1F97 B62105         5112     menu21: cjne    @r0,#21h,menu22
1F9A 900000   F     5113                     mov             dptr,#teTE11
1F9D 80D4           5114                     jmp             lome1
1F9F B62205         5115     menu22: cjne    @r0,#22h,menu23
1FA2 900000   F     5116                     mov             dptr,#teTE9
1FA5 80CC           5117                     jmp             lome1
1FA7 B62305         5118     menu23: cjne    @r0,#23h,menu31
1FAA 900000   F     5119                     mov             dptr,#teTE7
1FAD 80C4           5120                     jmp             lome1
1FAF B63105         5121     menu31: cjne    @r0,#31h,menu41
1FB2 900000   F     5122                     mov             dptr,#teS57_6
1FB5 80BC           5123                     jmp             lome1
                    5124     
1FB7                5125     menu41:         
1FB7 900000   F     5126                     mov             dptr,#tePAR
1FBA 80B7           5127                     jmp             lome1
1FBC 020000   F     5128     yesvi_kr:       jmp             yesvi_km
1FBF                5129     endkalib:;KD=Ak/A3
1FBF 200DFA         5130                     jb              bifl_kt,yesvi_kr;выч кофф Км
1FC2 789C           5131                     mov             r0,#rez_A3
1FC4 120000   F     5132                     call            resar2
                    5133                                     
1FC7 120402         5134                     call            altof                   ;->float
1FCA EA             5135                     mov             a,r2
1FCB 547F           5136                     anl             a,#7fh
1FCD FA             5137                     mov             r2,a
1FCE 120000   F     5138                     call            move28
1FD1 78A4           5139                     mov             r0,#rez_Ak
1FD3 120000   F     5140                     call            resar2
1FD6 1202B7         5141                     call            fldiv
                    5142                                                     
1FD9 900000   F     5143                     mov             dptr,#CHtho;100000
1FDC 120000   F     5144                     call            ldc_ltemp                       ;r8..r11=8
1FDF 120203         5145                     call            flmul
1FE2 120343         5146                     call            ftol            ;r2..r5->hex кофф KD (РЕЗ ИЗМ ЧИСЛО 6разряд
                             ное)
                    5147     
1FE5 78A0           5148                     mov             r0,#koefKD
1FE7 120000   F     5149                     call            saver2
                    5150                     ;запись в рпзу в соотв ячейку
                    5151                             
1FEA 7900           5152                     mov             r1,#0                   ;счит рпзу во внешн озу
1FEC 7A50           5153                     mov             r2,#50h
1FEE 7B00           5154                     mov             r3,#00
1FF0 120499         5155                     call            copyPP
                    5156                     ;внести изменения во внешн озу
1FF3 120000   F     5157                     call            findext                 ;r1-внешн озу
1FF6 78A0           5158                     mov             r0,#koefKD
1FF8 120000   F     5159                     call            resar2
1FFB EA             5160                     mov             a,r2
1FFC F3             5161                     movx            @r1,a
1FFD 09             5162                     inc             r1
1FFE EB             5163                     mov             a,r3
1FFF F3             5164                     movx            @r1,a
2000 09             5165                     inc             r1
2001 EC             5166                     mov             a,r4
2002 F3             5167                     movx            @r1,a
2003 09             5168                     inc             r1
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    80

2004 ED             5169                     mov             a,r5
2005 F3             5170                     movx            @r1,a
                    5171                     ;кофф *100000 и переведенный в hex формат
                    5172                     ;согласно адресов диапазонов и адресов яч вн озу 
                    5173                     ;стереть страницу пап прогр 
2006 905000         5174                     mov             dptr,#5000h
2009 7FFF           5175                     mov             r7,#0ffh
200B 12043E         5176                     call            cle256
                    5177     ;и запись в ячейки кофф памяти прогр (3000h) 
200E 7FFF           5178                     mov             r7,#0ffh
2010 7900           5179                     mov             r1,#0                           ;external ram
2012 905000         5180                     mov             dptr,#5000h
2015 120480         5181                     call            wrpage
                    5182     ;2.2.07
2018 79AE           5183                     mov             r1,#diap
201A B70511         5184                     cjne            @r1,#5,fulkalib
                    5185                     ;jb             bifl_kt,yesvi_km;выч кофф Км
201D D20D           5186                     setb            bifl_kt
                    5187                     ;call           loadus
201F 900000   F     5188                     mov             dptr,#tabt7;заслать ус 7А       
2022 E4             5189                     clr             a
2023 93             5190                     movc            a,@a+dptr                               ;high byte
2024 F584           5191                     mov             p4,a
2026 A3             5192                     inc             dptr
2027 E4             5193                     clr             a
2028 93             5194                     movc            a,@a+dptr                               ;low byte
2029 F585           5195                     mov             p5,a
202B 020000   F     5196                     jmp             goto7;  out_kali
                    5197     
                    5198     ;;;
202E                5199     fulkalib:
202E C212           5200                     clr             bitklb
2030 D216           5201                     setb            bitpar                  ;пароль провели 1 раз успешно
2032 900000   F     5202                     mov             dptr,#teEND
2035 120000   F     5203                     call            lotext
2038 120000   F     5204                     call            ind
203B 120000   F     5205     out_kali:       call            z_1s
203E 120000   F     5206                     call            z_1s
2041 020000   F     5207                     jmp             goto7
2044                5208     yesvi_km:               ;выч кофф Км=(10**5/A2)*K7/K5
2044 7A50           5209                     mov             r2,#50h                 ;-11a
2046 7B14           5210                     mov             r3,#14h                 ;k7
2048 12046C         5211                     call            rebyte2                         ;r2..r5- hex
204B 120402         5212                     call            altof                   ;r2..r5->float
204E C002           5213                     push            rr2
2050 C003           5214                     push            rr3
2052 C004           5215                     push            rr4
2054 C005           5216                     push            rr5
2056 7A50           5217                     mov             r2,#50h                 ;k5
2058 7B0C           5218                     mov             r3,#0ch
205A 12046C         5219                     call            rebyte2                 ;r2..r5
205D 120402         5220                     call            altof                   ;r2..r5->float
2060 120000   F     5221                     call            move28
2063 D005           5222                     pop             rr5
2065 D004           5223                     pop             rr4
2067 D003           5224                     pop             rr3
2069 D002           5225                     pop             rr2
206B 1202B7         5226                     call            fldiv                   ;K7/K5
                    5227     
206E 900000   F     5228                     mov     dptr,#CHtho;100000
2071 120000   F     5229                     call    ldc_ltemp                       ;r8..r11=8
2074 120203         5230                     call    flmul                           ;r2..r5 ;K7/K5*10**5
2077 C002           5231                     push            rr2
2079 C003           5232                     push            rr3
207B C004           5233                     push            rr4
207D C005           5234                     push            rr5
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    81

                    5235                                     
207F 789C           5236                     mov                     r0,#rez_A3
2081 120000   F     5237                     call            resar2
2084 120402         5238                     call            altof                           ;r2..r5->float
2087 120000   F     5239                     call            move28
208A D005           5240                     pop                     rr5
208C D004           5241                     pop                     rr4
208E D003           5242                     pop                     rr3
2090 D002           5243                     pop                     rr2
2092 1202B7         5244                     call            fldiv           ;Km     
                    5245     
2095 900000   F     5246                     mov     dptr,#CHtho;100000
2098 120000   F     5247                     call    ldc_ltemp                       ;r8..r11=8
209B 120203         5248                     call    flmul                           ;r2..r5
209E 120343         5249                     call    ftol                    ;r2..r5->hex кофф Km(РЕЗ ИЗМ ЧИСЛО 6разрядн
                             ое)
20A1 78A0           5250                     mov                     r0,#koefKD;2ое исп ячейки koefKD
20A3 120000   F     5251                     call            saver2
                    5252                     ;запись в рпзу в соотв ячейку
20A6 7900           5253                     mov             r1,#0                   ;счит рпзу во внешн озу
20A8 7A50           5254                     mov             r2,#50h
20AA 7B00           5255                     mov             r3,#00
20AC 120499         5256                     call    copyPP
                    5257                     ;внести изменения во внешн озу
20AF 78A0           5258                     mov                     r0,#koefKD
20B1 120000   F     5259                     call            resar2
20B4 792C           5260                     mov                     r1,#2ch                 ;r1-внешн озу кофф Km
                    5261                             
20B6 EA             5262                     mov                     a,r2
20B7 F3             5263                     movx            @r1,a
20B8 09             5264                     inc                     r1
20B9 EB             5265                     mov                     a,r3
20BA F3             5266                     movx            @r1,a
20BB 09             5267                     inc                     r1
20BC EC             5268                     mov                     a,r4
20BD F3             5269                     movx            @r1,a
20BE 09             5270                     inc                     r1
20BF ED             5271                     mov                     a,r5
20C0 F3             5272                     movx            @r1,a
                    5273                     ;кофф *100000 и переведенный в hex формат
                    5274                     ;согласно адресов диапазонов и адресов яч вн озу 
                    5275     ;стереть страницу пап прогр 
20C1 905000         5276                     mov             dptr,#5000h
20C4 7FFF           5277                     mov             r7,#0ffh
20C6 12043E         5278                     call    cle256
                    5279     ;и запись в ячейки кофф памяти прогр (3000h) 
20C9 7FFF           5280                     mov             r7,#0ffh
20CB 7900           5281                     mov             r1,#0                           ;external ram
20CD 905000         5282                     mov             dptr,#5000h
20D0 120480         5283                     call    wrpage
                    5284     
20D3 C20D           5285                     clr             bifl_kt
20D5 120000   F     5286                     call    loadus
20D8 020000   F     5287                     jmp             fulkalib
                    5288     
                    5289     ;выч среднего по блоку
                    5290     ;вых r2..r5
20DB                5291     vichmean:       
                    5292                                             ;;;;;;;;;;
20DB 120000   F     5293                     call            adrblok;dptr-адр ячейки 1й соотв блока 
20DE E582           5294                     mov                     a,dpl
20E0 FF             5295                     mov                     r7,a
20E1 E583           5296                     mov                     a,dph
20E3 FE             5297                     mov                     r6,a
20E4 120000   F     5298                     call            resa_hl;save_bl->dptr
                    5299     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    82

20E7 C3             5300                     clr             c; в начало блока?
20E8 E582           5301                     mov                     a,dpl
20EA 9F             5302                     subb            a,r7
20EB FF             5303                     mov                     r7,a
20EC 7006           5304                     jnz                     oldmean
20EE E583           5305                     mov                     a,dph
20F0 9E             5306                     subb            a,r6
20F1 FE             5307                     mov                     r6,a
20F2 6065           5308                     jz                      outmea;
                    5309     ;;;;;;;;;;
20F4                5310     oldmean:
20F4 120000   F     5311                     call            resa_hl;save_bl->dptr
20F7 78D7           5312                     mov                     r0,#copy_hl
20F9 E583           5313                     mov                     a,dph
20FB F6             5314                     mov                     @r0,a
20FC 08             5315                     inc                     r0
20FD E582           5316                     mov                     a,dpl
20FF F6             5317                     mov                     @r0,a
2100 78B8           5318                     mov                     r0,#work
2102 120000   F     5319                     call            clear4
2105 78D6           5320                     mov                     r0,#chblok;volume
2107 7600           5321                     mov                     @r0,#0
2109 120000   F     5322     meng:           call            adrblok;dptr-адр ячейки 1й соотв блока 
210C E582           5323                     mov                     a,dpl
210E FF             5324                     mov                     r7,a
210F E583           5325                     mov                     a,dph
2111 FE             5326                     mov                     r6,a
2112 78D7           5327                     mov                     r0,#copy_hl;call                resa_hl;save_bl->dp
                             tr
2114 E6             5328                     mov                     a,@r0
2115 F583           5329                     mov                     dph,a
2117 08             5330                     inc                     r0
2118 E6             5331                     mov                     a,@r0
2119 F582           5332                     mov                     dpl,a
211B C3             5333                     clr                     c;-4
211C E582           5334                     mov                     a,dpl
211E 9404           5335                     subb            a,#4
2120 F582           5336                     mov                     dpl,a
2122 E583           5337                     mov                     a,dph
2124 9400           5338                     subb            a,#0
2126 F583           5339                     mov                     dph,a;dptr-4
                    5340                     ;;;;;;;;
2128 79D7           5341                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
212A E583           5342                     mov             a,dph
212C F7             5343                     mov             @r1,a
212D 09             5344                     inc             r1
212E E582           5345                     mov             a,dpl
2130 F7             5346                     mov             @r1,a
                    5347                     ;;;;;;;;;
2131 C3             5348                     clr             c;пришли в начало блока?
2132 E582           5349                     mov                     a,dpl
2134 9F             5350                     subb            a,r7
2135 FF             5351                     mov                     r7,a
2136 7006           5352                     jnz                     nextmea
2138 E583           5353                     mov                     a,dph
213A 9E             5354                     subb            a,r6
213B FE             5355                     mov                     r6,a
213C 601B           5356                     jz                      outmea;
                    5357                                             
                    5358                     ;продолжаем сравнение
                    5359                     ;;;;;;;;;;;             
213E 120000   F     5360     nextmea:        call            loahl_r2        ;из яч внешн озу ->r2..r5
2141 120402         5361                     call            altof;->float
2144 120000   F     5362                     call            move28                  ;r8..r11
2147 78B8           5363                     mov                     r0,#work
2149 120000   F     5364                     call            resar2
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    83

214C 120166         5365                     call            fladd
214F 78B8           5366                     mov                     r0,#work
2151 120000   F     5367                     call            saver2
2154 78D6           5368                     mov                     r0,#chblok;volume;кол измерений блока
2156 06             5369                     inc                     @r0
2157 80B0           5370                     jmp                     meng
2159                5371     outmea:         
2159 120000   F     5372                     call            loahl_r2        ;из яч внешн озу ->r2..r5
215C 120402         5373                     call            altof;->float
215F 120000   F     5374                     call            move28                  ;r8..r11
2162 78B8           5375                     mov                     r0,#work
2164 120000   F     5376                     call            resar2
2167 120166         5377                     call            fladd
216A 78B8           5378                     mov                     r0,#work
216C 120000   F     5379                     call            saver2
216F E4             5380                     clr                     a
2170 FA             5381                     mov                     r2,a
2171 FB             5382                     mov                     r3,a
2172 FC             5383                     mov                     r4,a
2173 78D6           5384                     mov                     r0,#chblok;volume;кол измерений блока...200d
2175 E6             5385                     mov                     a,@r0
2176 2401           5386                     add                     a,#1
2178 FD             5387                     mov                     r5,a
2179 120402         5388                     call            altof;r2..r5 float
217C 120000   F     5389                     call            move28
217F 78B8           5390                     mov                     r0,#work
2181 120000   F     5391                     call            resar2
2184 1202B7         5392                     call            fldiv
2187 900000   F     5393                     mov                     dptr,#ch_10      
218A 120000   F     5394                     call            ldc_ltemp
218D 1202B7         5395                     call            fldiv
2190 120343         5396                     call            ftol                            ;->hex
2193 120000   F     5397                     call    maform
2196 784F           5398                     mov             r0,#abin
2198 120000   F     5399                     call    saver2
                    5400     ;;;;;;;;
                    5401                                             
219B 7853           5402                     mov             r0,#adec
219D 7952           5403                     mov             r1,#abin+3      ;hex->10
219F 120000   F     5404                     call    bindec
                    5405                                     
21A2 785C           5406                     mov             r0,#adec+9;разместить в буфер индикации
21A4 7949           5407                     mov             r1,#bufind+9
21A6 7F05           5408                     mov             r7,#5
21A8 E6             5409     bufmea: mov             a,@r0
21A9 2430           5410                     add             a,#30h
21AB F7             5411                     mov             @r1,a
21AC 19             5412                     dec             r1
21AD 18             5413                     dec             r0
21AE DFF8           5414                     djnz    r7,bufmea
21B0 7844           5415                     mov             r0,#bufind+4
21B2 762B           5416                     mov             @r0,#2bh          
21B4 300202         5417                     jnb             znmat,nozmea
21B7 762D           5418                     mov             @r0,#2dh
21B9 434B05         5419     nozmea: orl             bufind+11,#05h
21BC 22             5420                     ret
                    5421     
                    5422     
21BD E0             5423     loahl_r2:       movx            a,@dptr         ;из яч внешн озу ->r2..r5
21BE FA             5424                     mov                     r2,a
21BF A3             5425                     inc                     dptr
21C0 E0             5426                     movx            a,@dptr
21C1 FB             5427                     mov                     r3,a
21C2 A3             5428                     inc                     dptr
21C3 E0             5429                     movx            a,@dptr
21C4 FC             5430                     mov                     r4,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    84

21C5 A3             5431                     inc                     dptr
21C6 E0             5432                     movx            a,@dptr
21C7 FD             5433                     mov                     r5,a    
21C8 22             5434                     ret
                    5435     
21C9 C3             5436     min4_hl:        clr                     c;-4
21CA E582           5437                     mov                     a,dpl
21CC 9404           5438                     subb            a,#4
21CE F582           5439                     mov                     dpl,a
21D0 E583           5440                     mov                     a,dph
21D2 9400           5441                     subb            a,#0
21D4 F583           5442                     mov                     dph,a;dptr-4
21D6 22             5443                     ret
                    5444     
21D7 020000   F     5445     routmin:        jmp             outmin
                    5446     ;мин значение по по блоку
21DA                5447     vichmin:        ;;;;;;;;;;
21DA 120000   F     5448                     call            adrblok;dptr-адр ячейки 1й соотв блока 
21DD E582           5449                     mov                     a,dpl
21DF FF             5450                     mov                     r7,a
21E0 E583           5451                     mov                     a,dph
21E2 FE             5452                     mov                     r6,a
21E3 120000   F     5453                     call            resa_hl;save_bl->dptr
                    5454     
21E6 C3             5455                     clr             c; в начало блока?
21E7 E582           5456                     mov                     a,dpl
21E9 9F             5457                     subb            a,r7
21EA FF             5458                     mov                     r7,a
21EB 7006           5459                     jnz                     oldmin
21ED E583           5460                     mov                     a,dph
21EF 9E             5461                     subb            a,r6
21F0 FE             5462                     mov                     r6,a
21F1 60E4           5463                     jz                      routmin;
                    5464     ;;;;;;;;;;
21F3                5465     oldmin:
21F3 120000   F     5466                     call            resa_hl;save_bl->dptr
                    5467                                                                                     
                    5468     ;с конца блока адрес 2го измерение
21F6 120000   F     5469                     call            min4_hl
                    5470                                             
21F9 78B8           5471                     mov             r0,#work        ;блок анализируется с конца 1я измерение за
                             гружается в work
                    5472                                             
21FB E0             5473                     movx            a,@dptr
21FC F6             5474                     mov             @r0,a
21FD 08             5475                     inc             r0
21FE A3             5476                     inc             dptr
21FF E0             5477                     movx            a,@dptr
2200 F6             5478                     mov             @r0,a
2201 08             5479                     inc             r0
2202 A3             5480                     inc             dptr
2203 E0             5481                     movx            a,@dptr
2204 F6             5482                     mov             @r0,a
2205 08             5483                     inc             r0
2206 A3             5484                     inc             dptr
2207 E0             5485                     movx            a,@dptr
2208 F6             5486                     mov             @r0,a
2209 A3             5487                     inc             dptr
                    5488                                             
220A 78B8           5489                     mov             r0,#work
220C 120000   F     5490                     call            resar2
220F 120402         5491                     call            altof;->float;r2..r5
2212 78B8           5492                     mov             r0,#work
2214 120000   F     5493                     call            saver2
                    5494     
2217 120000   F     5495                     call            min4_hl
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    85

                    5496                     ;call           min4_hl
221A 78D7           5497                     mov             r0,#copy_hl
221C E583           5498                     mov             a,dph
221E F6             5499                     mov             @r0,a
221F 08             5500                     inc             r0
2220 E582           5501                     mov             a,dpl
2222 F6             5502                     mov             @r0,a
                    5503                             
2223 78D6           5504                     mov             r0,#chblok;volume
2225 7600           5505                     mov             @r0,#0
2227 120000   F     5506     ming:           call            adrblok;dptr-адр ячейки 1й соотв блока 
222A E582           5507                     mov             a,dpl
222C FF             5508                     mov             r7,a
222D E583           5509                     mov             a,dph
222F FE             5510                     mov             r6,a
                    5511     
2230 78D7           5512                     mov             r0,#copy_hl;call                resa_hl;save_bl->dptr
2232 E6             5513                     mov             a,@r0
2233 F583           5514                     mov             dph,a
2235 08             5515                     inc             r0
2236 E6             5516                     mov             a,@r0
2237 F582           5517                     mov             dpl,a
                    5518                                     
2239 C3             5519                     clr             c;-4
223A E582           5520                     mov             a,dpl
223C 9404           5521                     subb            a,#4
223E F582           5522                     mov             dpl,a
2240 E583           5523                     mov             a,dph
2242 9400           5524                     subb            a,#0
2244 F583           5525                     mov             dph,a;dptr-4
                    5526                     ;;;;;;;;
2246 79D7           5527                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
2248 E583           5528                     mov             a,dph
224A F7             5529                     mov             @r1,a
224B 09             5530                     inc             r1
224C E582           5531                     mov             a,dpl
224E F7             5532                     mov             @r1,a
                    5533                                                     ;;;;;;;;;
224F C3             5534                     clr             c;пришли в начало блока?
2250 E582           5535                     mov                     a,dpl
2252 9F             5536                     subb            a,r7
2253 FF             5537                     mov                     r7,a
2254 7006           5538                     jnz                     nextmin
2256 E583           5539                     mov                     a,dph
2258 9E             5540                     subb            a,r6
2259 FE             5541                     mov                     r6,a
225A 601D           5542                     jz                      outmin;
                    5543                                                     
                    5544                     ;продолжаем сравнение
                    5545                                                     ;;;;;;;;;;;             
225C 78B8           5546     nextmin:        mov                     r0,#work
225E 120000   F     5547                     call            resar2
                    5548                     ;call           altof;->float;r2..r5
2261 120000   F     5549                     call            move28;->r8..r11
2264 120000   F     5550                     call            loahl_r2                ;из яч внешн озу ->r2..r5
                    5551     
2267 120402         5552                     call            altof;->float;r2..r5
                    5553                                             
226A 1201D6         5554                     call            flcmp
226D 5005           5555                     jnc                     nomini
226F 78B8           5556                     mov                     r0,#work;<
2271 120000   F     5557                     call            saver2;r2..r5
2274 78D6           5558     nomini: mov                     r0,#chblok;volume;кол измерений блока
2276 06             5559                     inc                     @r0
2277 80AE           5560                     jmp                     ming
                    5561     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    86

2279 78B8           5562     outmin: mov                     r0,#work;1ое измерение блока
227B 120000   F     5563                     call            resar2
                    5564                     ;call           altof;->float;r2..r5
227E 120000   F     5565                     call            move28;->r8..r11
2281 120000   F     5566                     call            loahl_r2                ;из яч внешн озу ->r2..r5
                    5567     
2284 120402         5568                     call            altof;->float;r2..r5
                    5569                                             
2287 1201D6         5570                     call            flcmp
228A 5005           5571                     jnc                     minivix
228C 78B8           5572                     mov                     r0,#work;<
228E 120000   F     5573                     call            saver2;r2..r5
                    5574                                             ;;;;;;;;;
                    5575     
2291 78B8           5576     minivix:        mov             r0,#work
2293 120000   F     5577                     call            resar2
                    5578                     ;call           altof;->float
2296 900000   F     5579                     mov             dptr,#ch_10      
2299 120000   F     5580                     call            ldc_ltemp
229C 1202B7         5581                     call            fldiv
229F 120343         5582                     call            ftol                            ;->hex
                    5583                     ;;;
22A2 120000   F     5584                     call            maform
22A5 784F           5585                     mov             r0,#abin
22A7 120000   F     5586                     call            saver2
                    5587     ;;;;;;;;
22AA 7853           5588                     mov             r0,#adec
22AC 7952           5589                     mov             r1,#abin+3      ;hex->10
22AE 120000   F     5590                     call            bindec
22B1 785C           5591                     mov             r0,#adec+9;разместить в буфер индикации
22B3 7949           5592                     mov             r1,#bufind+9
22B5 7F05           5593                     mov             r7,#5
22B7 E6             5594     bufmin: mov             a,@r0
22B8 2430           5595                     add             a,#30h
22BA F7             5596                     mov             @r1,a
22BB 19             5597                     dec             r1
22BC 18             5598                     dec             r0
22BD DFF8           5599                     djnz            r7,bufmin
22BF 7844           5600                     mov             r0,#bufind+4
22C1 762B           5601                     mov             @r0,#2bh          
22C3 300202         5602                     jnb             znmat,nozmin
22C6 762D           5603                     mov             @r0,#2dh
22C8 434B05         5604     nozmin: orl             bufind+11,#05h
22CB 22             5605                     ret
                    5606     
                    5607     
22CC 020000   F     5608     routmax:        jmp             outmax
                    5609     ;мин значение по по блоку
22CF                5610     vichmax:        ;;;;;;;;;;
22CF 120000   F     5611                     call            adrblok;dptr-адр ячейки 1й соотв блока 
22D2 E582           5612                     mov             a,dpl
22D4 FF             5613                     mov             r7,a
22D5 E583           5614                     mov             a,dph
22D7 FE             5615                     mov             r6,a
22D8 120000   F     5616                     call            resa_hl;save_bl->dptr
22DB C3             5617                     clr             c; в начало блока?
22DC E582           5618                     mov             a,dpl
22DE 9F             5619                     subb            a,r7
22DF FF             5620                     mov             r7,a
22E0 7006           5621                     jnz             oldmax
22E2 E583           5622                     mov             a,dph
22E4 9E             5623                     subb            a,r6
22E5 FE             5624                     mov             r6,a
22E6 60E4           5625                     jz              routmax;
                    5626     ;;;;;;;;;;
22E8                5627     oldmax:
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    87

22E8 120000   F     5628                     call            resa_hl;save_bl->dptr
                    5629     ;с конца блока адрес 2го измерение
22EB 120000   F     5630                     call            min4_hl
22EE 78B8           5631                     mov             r0,#work        ;блок анализируется с конца 1я измерение за
                             гружается в work
22F0 E0             5632                     movx            a,@dptr
22F1 F6             5633                     mov             @r0,a
22F2 08             5634                     inc             r0
22F3 A3             5635                     inc             dptr
22F4 E0             5636                     movx            a,@dptr
22F5 F6             5637                     mov             @r0,a
22F6 08             5638                     inc             r0
22F7 A3             5639                     inc             dptr
22F8 E0             5640                     movx            a,@dptr
22F9 F6             5641                     mov             @r0,a
22FA 08             5642                     inc             r0
22FB A3             5643                     inc             dptr
22FC E0             5644                     movx            a,@dptr
22FD F6             5645                     mov             @r0,a
22FE A3             5646                     inc             dptr
                    5647                                             
22FF 78B8           5648                     mov             r0,#work
2301 120000   F     5649                     call            resar2
2304 120402         5650                     call            altof;->float;r2..r5
2307 78B8           5651                     mov             r0,#work
2309 120000   F     5652                     call            saver2
230C 120000   F     5653                     call            min4_hl
                    5654                     ;       call            min4_hl
230F 78D7           5655                     mov             r0,#copy_hl
2311 E583           5656                     mov             a,dph
2313 F6             5657                     mov             @r0,a
2314 08             5658                     inc             r0
2315 E582           5659                     mov             a,dpl
2317 F6             5660                     mov             @r0,a
2318 78D6           5661                     mov             r0,#chblok;volume
231A 7600           5662                     mov             @r0,#0
231C 120000   F     5663     maxg:           call            adrblok;dptr-адр ячейки 1й соотв блока 
231F E582           5664                     mov             a,dpl
2321 FF             5665                     mov             r7,a
2322 E583           5666                     mov             a,dph
2324 FE             5667                     mov             r6,a
2325 78D7           5668                     mov             r0,#copy_hl;call                resa_hl;save_bl->dptr
2327 E6             5669                     mov             a,@r0
2328 F583           5670                     mov             dph,a
232A 08             5671                     inc             r0
232B E6             5672                     mov             a,@r0
232C F582           5673                     mov             dpl,a
232E C3             5674                     clr             c;-4
232F E582           5675                     mov             a,dpl
2331 9404           5676                     subb            a,#4
2333 F582           5677                     mov             dpl,a
2335 E583           5678                     mov             a,dph
2337 9400           5679                     subb            a,#0
2339 F583           5680                     mov             dph,a;dptr-4
                    5681                             ;;;;;;;;
233B 79D7           5682                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
233D E583           5683                     mov             a,dph
233F F7             5684                     mov             @r1,a
2340 09             5685                     inc             r1
2341 E582           5686                     mov             a,dpl
2343 F7             5687                     mov             @r1,a
                    5688             ;;;;;;;;;
2344 C3             5689                     clr             c;пришли в начало блока?
2345 E582           5690                     mov             a,dpl
2347 9F             5691                     subb            a,r7
2348 FF             5692                     mov             r7,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    88

2349 7006           5693                     jnz             nextmax
234B E583           5694                     mov             a,dph
234D 9E             5695                     subb            a,r6
234E FE             5696                     mov             r6,a
234F 601D           5697                     jz              outmax;
                    5698                     ;продолжаем сравнение
                    5699                     ;;;;;;;;;;;             
2351 78B8           5700     nextmax:        mov             r0,#work
2353 120000   F     5701                     call            resar2
                    5702                     ;call           altof;->float;r2..r5
2356 120000   F     5703                     call            move28;->r8..r11
2359 120000   F     5704                     call            loahl_r2                ;из яч внешн озу ->r2..r5
235C 120402         5705                     call            altof;->float;r2..r5
235F 1201D6         5706                     call            flcmp
2362 4005           5707                     jc              nomaxi
2364 78B8           5708                     mov             r0,#work;>
2366 120000   F     5709                     call            saver2;r2..r5
2369 78D6           5710     nomaxi: mov             r0,#chblok;volume;кол измерений блока
236B 06             5711                     inc             @r0
236C 80AE           5712                     jmp             maxg
236E 78B8           5713     outmax: mov             r0,#work;1ое измерение блока
2370 120000   F     5714                     call            resar2
                    5715                     ;call           altof;->float;r2..r5
2373 120000   F     5716                     call            move28;->r8..r11
2376 120000   F     5717                     call            loahl_r2                ;из яч внешн озу ->r2..r5
2379 120402         5718                     call            altof;->float;r2..r5
237C 1201D6         5719                     call            flcmp
237F 4005           5720                     jc              maxvix
2381 78B8           5721                     mov             r0,#work;>
2383 120000   F     5722                     call            saver2;r2..r5
2386 020000   F     5723     maxvix: jmp             minivix
                    5724     
                    5725     
2389 78CF           5726     bufl_dec:       mov             r0,#chbuf       
238B 120000   F     5727                     call            resar2  
238E 900000   F     5728                     mov             dptr,#ch_1       
2391 120000   F     5729                     call            ldc_ltemp
2394 1201D1         5730                     call            flsub
2397 78CF           5731                     mov             r0,#chbuf       
2399 120000   F     5732                     call            saver2  
239C 22             5733                     ret
                    5734     
                    5735     ;прерывание таймера Т2
239D                5736     inter2:         
239D E5DA           5737                     mov             a,PCA0CPM0
239F 54BF           5738                     anl             a,#0bfh                         
23A1 F5DA           5739                     mov             PCA0CPM0,a
                    5740                     ;mov            a,T2CON         ;T2CON.2=0
                    5741                     ;anl            a,#0fbh
23A3 75C800         5742                     mov             T2CON,#00;a
23A6 C2AD           5743                     clr             IE.5
23A8 32             5744                     reti
                    5745     
                    5746     ;пп выдачи на индикатор 12 байт   bufind..bufind+11
23A9                5747      ind:   ;;;
23A9 E5E7           5748                     mov             a,EIE2
23AB FA             5749                     mov             r2,a;save
23AC 75E700         5750                     mov             EIE2,#00H
23AF 120000   F     5751                     call            mign
23B2 7840           5752                     mov             r0,#bufind;+11
23B4 7F0C           5753                     mov             r7,#12
23B6 C287           5754      nexin: clr             p0.7;6
23B8 E6             5755                     mov             a,@r0
23B9 F59B           5756                     mov             SPI0DAT,a
23BB 20FBFD         5757                     jb              TXBSY,$
23BE D287           5758                     setb            p0.7;6
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    89

23C0 120000   F     5759                     call            z_9             ;25mks
23C3 08             5760                     inc             r0;dec          r0
23C4 DFF0           5761                     djnz            r7,nexin
23C6 EA             5762                     mov             a,r2
23C7 F5E7           5763                     mov             EIE2,a;#30H
23C9 22             5764                     ret
                    5765     ;;=====================================
23CA                5766     rs_byte:
                    5767     ;               jnb     RI,S_R2
                    5768     ;               clr     RI
                    5769     ;               clr     C
                    5770     ;               mov     A,SBUF
                    5771     
                    5772     ;S_R2:          ;transfer
                    5773     ;               jnb   TI,$
                    5774     ;               clr   TI
                    5775             ;       mov   SBUF0,r2
                    5776             ;       reti
                    5777     ;!!! real interrupt filling
                    5778                     ;jnb    is_2,S_R2       ;256 samples -> clr
                    5779                     ;reti   ;there direct out
23CA                5780     S_R2:
23CA C0D0           5781                     push    PSW     ;?
23CC C0E0           5782                     push    ACC     ;?
                    5783     
23CE E524           5784                     mov     A,cnt_out
23D0 6017           5785                     jz      S_R4    ;after last
23D2 C3             5786                     clr     C
23D3 9401           5787                     subb    A,#1
23D5 4014           5788                     jc      S_R5            ;empty buf
23D7 30990E         5789                     jnb   TI,S_R3
23DA C299           5790                     clr   TI
23DC F524           5791                     mov     cnt_out,A
                    5792     ;??             push    1
23DE 852601         5793                     mov     1,p_out
23E1 E7             5794                     mov     A,@R1
                    5795     ;               pop     1
23E2 0526           5796                     inc     p_out
                    5797     ;S_R_:
                    5798     ;               jnb   TI,S_R_
                    5799     ;               clr   TI
23E4 F599           5800                     mov   SBUF0,A
23E6 8003           5801                     jmp     S_R5
23E8                5802     S_R3:
23E8 00             5803                     nop
                    5804             
23E9                5805     S_R4:
23E9 C299           5806                     clr     TI
                    5807                     
23EB                5808     S_R5:
                    5809     ;?              jb      is_cmd,S_R9             deadloop RS?
23EB E525           5810                     mov     A,cnt_in
23ED C3             5811                     clr     C
23EE 9403           5812                     subb    A,#3
23F0 400A           5813                     jc      S_R7    ;cmd isn't received
23F2 752500         5814     S_R6:           mov     cnt_in,#0
23F5 7527DB         5815                     mov     p_in,#buf_in    ; for new
23F8 D21D           5816                     setb    is_cmd
23FA 8015           5817                     jmp     S_R9;?reti
                    5818     
23FC                5819     S_R7: 
23FC 309812         5820                     jnb     RI,S_R9
23FF C298           5821                     clr     RI
2401 E599           5822                     mov     A,SBUF0
                    5823     ;??             push    1
2403 A927           5824                     mov     R1,p_in
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    90

2405 F7             5825                     mov     @R1,A
2406 0527           5826                     inc     p_in
2408 0525           5827                     inc     cnt_in
240A E525           5828                     mov     A,cnt_in
240C B40302         5829                     cjne    A,#3,S_R9
                    5830     ;??             pop     1
240F 80E1           5831                     jmp     S_R6
                    5832     
2411                5833     S_R9:
2411 D0E0           5834                     pop     ACC     ;?
2413 D0D0           5835                     pop     PSW     ;?
                    5836     
2415 32             5837                     reti
2416                5838     cmd_tree:                                       ;??
2416 754E7F         5839                     mov     cmd_rez,#7Fh
2419 78DB           5840                     mov     r0,#buf_in
                    5841     ;               mov     A,#'B'
                    5842     ;               subb    A,@R0
                    5843     ;               jz      ta0
241B B64202         5844                     cjne    @R0,#'B',tb_0   ;--------------B-----------------
241E 8003           5845                     jmp             ta0
2420                5846     tb_0:
2420 020000   F     5847                             jmp             tb
2423                5848     ta0:
2423 08             5849                     inc     r0
2424 B60005         5850                     cjne    @R0,#0,ta1
2427 C21E           5851                     clr     is_rs           ;B0
2429 020000   F     5852                     jmp     tr9
242C                5853     ta1:
242C B60128         5854                     cjne    @R0,#1,ta2
242F D21E           5855                     setb    is_rs   ;?
                    5856     
2431 020000   F     5857                                                     jmp     tr9
                    5858     
2434 789A           5859                     mov             R0,#parT
2436 E6             5860                     mov             A,@R0
2437 B4060D         5861                     cjne    A,#6,ta2_
243A D20C           5862                     setb    is_2
243C 75A880         5863             mov     IE,#80h ;Снятие enable RS
243F 7524C8         5864                     mov     cnt_out,#200    ;??0
2442 C21E           5865                     clr             is_rs
2444 020000   F     5866                     jmp     tr9
2447                5867     ta2_:
2447 B4050A         5868                     cjne    A,#5,ta3_
244A D20C           5869                     setb    is_2
244C 75A880         5870                     mov     IE,#80h
244F 7524C8         5871                     mov     cnt_out,#200    ;??0
2452 C21E           5872                     clr             is_rs
2454                5873     ta3_:
2454 020000   F     5874                     jmp     tr9
2457                5875     ta2:    ;?#2 real need
2457 78F4           5876                     mov     R0,#0F4h        ;?F8h   ;abin
2459 C2AF           5877                     clr     EA
245B 740A           5878                             mov     A,#0Ah
245D F6             5879                             mov     @R0,A
245E 08             5880                             inc     R0
245F 79AE           5881                     mov     R1,#diap
2461 E7             5882                     mov     A,@R1
2462 F6             5883                     mov     @R0,A
2463 08             5884                     inc     R0
2464 799A           5885                     mov     R1,#parT
2466 E7             5886                     mov     A,@R1
2467 F6             5887                     mov     @R0,A
2468 08             5888                     inc     R0
2469 7938           5889                     mov     R1,#nblok
246B E7             5890                     mov     A,@R1
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    91

246C F6             5891                     mov     @R0,A
246D 08             5892                     inc     R0
246E 79AF           5893                     mov     R1,#parN
2470 E7             5894                     mov     A,@R1
2471 F6             5895                     mov     @R0,A
2472 08             5896                     inc     R0
2473 E520           5897                     mov     A,20h   ;bitizm,AVP,bitvi11 usefool
2475 300F04         5898             jnb             bitnul,ta3
2478 4480           5899                     orl     A,#80h
247A 8002           5900                     jmp     ta4
247C                5901     ta3:
247C 547F           5902                     anl     A,#7Fh
247E                5903     ta4:
247E 301804         5904             jnb             knizm,ta5
2481 4401           5905                     orl     A,#1h
2483 8002           5906                     jmp     ta6
2485                5907     ta5:
2485 54FE           5908                     anl     A,#0FEh
2487                5909     ta6:
2487 F6             5910                     mov     @R0,A
2488 08             5911                     inc     R0
                    5912     
2489 79CD           5913                     mov     R1,#interva
248B E7             5914                     mov     A,@R1
248C F6             5915                     mov     @R0,A
248D 08             5916                     inc     r0
248E 09             5917                     inc     r1
248F E7             5918                     mov     A,@R1
2490 F6             5919                     mov     @R0,A           ;interva+1
2491 08             5920                     inc     r0
                    5921     
2492 79BC           5922                     mov     R1,#konstA      ;?B3 to make
2494 E7             5923                     mov     A,@R1
                    5924     ;               mov     @R0,A
                    5925     ;               inc     r0
                    5926     ;               inc     r1
                    5927     ;               mov     A,@R1
                    5928     ;               mov     @R0,A
                    5929     ;               inc     r0
                    5930     ;               inc     r1
                    5931     ;               mov     A,@R1
                    5932     ;               mov     @R0,A
                    5933     ;               inc     r0
                    5934     ;               inc     r1
                    5935     ;               mov     A,@R1
                    5936     ;               mov     @R0,A
                    5937     ;               mov     p_out,#00F4h    ;abin
                    5938     ;               mov     cnt_out,#11
                    5939     ;               mov     cmd_rez,#7Ah    ;B2 sign
2495 FA             5940                     mov     R2,A            ;?fragment
2496 09             5941                     inc     r1
2497 E7             5942                     mov     A,@R1
2498 FB             5943                     mov     R3,A
2499 09             5944                     inc     r1
249A E7             5945                     mov     A,@R1
249B FC             5946                     mov     R4,A
249C 09             5947                     inc     r1
249D E7             5948                     mov     A,@R1
249E FD             5949                     mov     R5,A
249F 120343         5950                     call    ftol
24A2 EC             5951                     mov     A,R4
24A3 F6             5952                     mov     @R0,A
24A4 08             5953                     inc     r0
24A5 ED             5954                     mov     A,R5
24A6 F6             5955                     mov     @R0,A
24A7 08             5956                             inc     R0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    92

24A8 740A           5957                             mov     A,#0Ah
24AA F6             5958                             mov     @R0,A
24AB 7526F4         5959                     mov     p_out,#00F4h    ;abin
24AE 75240B         5960                             mov     cnt_out,#11             ;#9             ;?was 11
                    5961     
24B1 020000   F     5962                     jmp     tr9
                    5963                     
24B4                5964     tb:
24B4 B64C17         5965                     cjne    @R0,#'L',tc             ;-------------L-------------
24B7 08             5966                     inc     r0
24B8 E6             5967                     mov     A,@R0
24B9 C3             5968                     clr     C
24BA 940A           5969                     subb    A,#10
24BC 500A           5970                     jnc     mtb2    ;
24BE E6             5971                     mov     A,@R0
24BF 78AE           5972                     mov     R0,#diap
24C1 F6             5973                     mov     @R0,A
24C2 120000   F     5974             call    loadUS
24C5 020000   F     5975                     jmp     tr9
                    5976     
24C8 754E7D         5977     mtb2:           mov     cmd_rez,#7Dh    ;Err par
24CB 020000   F     5978                     jmp     tr9
                    5979     
                    5980     
24CE                5981     tc:
24CE B65402         5982                     cjne    @R0,#'T',td11           ;--------------T-------------
24D1 8003           5983                             jmp             tc11
24D3 020000   F     5984     td11:   jmp     td
24D6                5985     tc11:
24D6 08             5986                     inc     r0
24D7 E6             5987                     mov     A,@R0
24D8 C3             5988                     clr     C
24D9 9406           5989                     subb    A,#6    ;#7
24DB 4003           5990                     jc              tc1
24DD 020000   F     5991                     jmp             mtf2    ;
24E0                5992     tc1:
24E0 E6             5993                     mov             A,@R0
24E1 04             5994                             inc     A                       ;igor
24E2 789A           5995                     mov             R0,#parT
24E4 F6             5996                     mov             @R0,A
24E5 B40639         5997                     cjne    A,#6,tc2
                    5998     ;               jnb             is_rs,tc2               yet=0
                    5999     
                    6000     
24E8 79B7           6001                     mov             r1,#load
24EA 7700           6002                     mov             @r1,#0;2ms
24EC 120000   F     6003                     call            loadT           ;T=1S,10S,HET,0.1S,50mS,
                    6004     
                    6005     
                    6006     ;;;             setb    is_2
                    6007     ;;;igor                 mov     IE,#80h
                    6008     ;;;             mov             cnt_out,#200    ;??0
                    6009     ;;;             clr             is_rs
                    6010     
                    6011             ;в буфере 1 зажечь <=0,1s
24EF 794A           6012                     mov             r1,#bufind+10
24F1 E7             6013                     mov             a,@r1
24F2 548E           6014                     anl             a,#8eh                  ;;;#8fh
24F4 4410           6015                     orl             a,#10h;.4
24F6 F7             6016                     mov             @r1,a
24F7 120000   F     6017                     call            ind
                    6018     
24FA 789A           6019                     mov             r0,#parT
24FC 900000   F     6020                     mov             dptr,#sootv
24FF 79B7           6021                     mov             r1,#load                
2501 E7             6022                     mov             a,@r1;load
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    93

2502 93             6023                     movc    a,@a+dptr
2503 F6             6024                     mov             @r0,a
2504 120000   F     6025                     call            loab12  ;установить B1,B2 в соотв с Tизм
                    6026                              ;r4=b1 r5=b2
2507 120000   F     6027                     call            iniacp;инициализация АЦП
250A 120000   F     6028                     call            loadUS
250D 120000   F     6029                     call            clmassix        
2510 D204           6030                     setb            bitizm
2512 C210           6031                     clr             bitt2
2514 534A8F         6032                     anl             bufind+10,#8fh
2517 C3             6033                     clr             c
                    6034     ;               mov             r0,#parT
2518 79AF           6035                     mov             r1,#parN
                    6036     ;               mov             a,#2
251A 7701           6037                     mov             @r1,#1;N=1         ;T>=2
                    6038     
                    6039     
251C C20C           6040                                     clr     is_2
                    6041     
251E 020000   F     6042                     jmp             tr9
2521 B40539         6043     tc2:            cjne    A,#5,tc3
                    6044     ;               jnb             is_rs,tc3
                    6045     
2524 79B7           6046                     mov             r1,#load
2526 7701           6047                     mov             @r1,#1;10ms
2528 120000   F     6048                     call            loadT           ;T=1S,10S,HET,0.1S,50mS,
                    6049     
                    6050     ;;;             setb    is_2
                    6051     ;;;     mov     IE,#80h
                    6052     ;;;             mov             cnt_out,#0              ;#200   ;??0
                    6053     ;;;             clr             is_rs
                    6054             ;в буфере 1 зажечь <=0,1s
252B 794A           6055                     mov             r1,#bufind+10
252D E7             6056                     mov             a,@r1
252E 5400           6057                     anl             a,#00h          ;;;#8fh
2530 4410           6058                     orl             a,#10h;.4
2532 F7             6059                     mov             @r1,a
2533 120000   F     6060                     call            ind
                    6061     
2536 789A           6062                     mov             r0,#parT
2538 900000   F     6063                     mov             dptr,#sootv
253B 79B7           6064                     mov             r1,#load                
253D E7             6065                     mov             a,@r1;load
253E 93             6066                     movc    a,@a+dptr
253F F6             6067                     mov             @r0,a
2540 120000   F     6068                     call            loab12  ;установить B1,B2 в соотв с Tизм
                    6069                              ;r4=b1 r5=b2
2543 120000   F     6070                     call            iniacp;инициализация АЦП
2546 120000   F     6071                     call            loadUS
2549 120000   F     6072                     call            clmassix        
254C D204           6073                     setb            bitizm
254E C210           6074                     clr             bitt2
2550 534A8F         6075                     anl             bufind+10,#8fh
2553 C3             6076                     clr             c
                    6077     ;               mov             r0,#parT
2554 79AF           6078                     mov             r1,#parN
                    6079     ;               mov             a,#2
2556 7701           6080                     mov             @r1,#1;N=1         ;T>=2
                    6081     
2558 C20C           6082                             clr     is_2    ;;;
                    6083     
255A 020000   F     6084                     jmp             tr9
255D                6085     tc3: 
                    6086     ;-----------------16.12.09
                    6087     
255D 789A           6088                     mov             r0,#parT
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    94

255F 900000   F     6089                     mov             dptr,#sootv
2562 79B7           6090                     mov             r1,#load
2564 B60404         6091                             cjne    @r0,#4,ttr3                             ;50ms?
2567 7702           6092                             mov     @r1,#2                                          ;load=2
2569 8010           6093                             jmp             trload
256B                6094     ttr3:
256B B60304         6095                             cjne    @r0,#3,ttr4                             ;0.1s?
256E 7703           6096                             mov     @r1,#3                                          ;load=3
2570 8009           6097                             jmp             trload
2572                6098     ttr4:
2572 B60204         6099                             cjne    @r0,#2,ttr5                             ;1s?
2575 7704           6100                             mov     @r1,#4                                          ;load=4
2577 8002           6101                             jmp             trload
2579                6102     ttr5:
                    6103     ;                       cjne    @r0,#1,ttr3                             ;10s?
2579 7705           6104                             mov     @r1,#5                                          ;load=5
                    6105     ;                       jmp             trload
                    6106                     
257B                6107     trload:
257B E7             6108                     mov             a,@r1;load
257C 93             6109                     movc    a,@a+dptr
257D F6             6110                     mov             @r0,a
257E 120000   F     6111                     call            loab12  ;установить B1,B2 в соотв с Tизм
                    6112                              ;r4=b1 r5=b2
2581 120000   F     6113                     call            iniacp;инициализация АЦП
                    6114     ;               call            loadUS
                    6115     ;               call            clmassix        
                    6116     ;               setb            bitizm
                    6117     ;               clr             bitt2
                    6118     ;               anl             bufind+10,#8fh
                    6119     ;               clr             c
                    6120     ;               mov             r0,#parT
                    6121     ;               mov             r1,#parN
                    6122     ;               mov             a,#2
                    6123     ;               subb            a,@r0
                    6124     ;               jnc             loadB2rs
                    6125     ;               mov             @r1,#1;N=1         ;T>=2
                    6126     ;bout7rs:       jmp             tr9rs           ;goto7;out7
                    6127     ;
                    6128     ;loadB2rs:      cjne    @r1,#2,bout7rs
                    6129     ;               mov             @r1,#2;N=2
                    6130     ;;              jmp             goto7;out7
                    6131     
                    6132     
                    6133     ;tr9rs:
2584 C20C           6134                     clr     is_2
2586 020000   F     6135                     jmp             tr9
                    6136     ;---------------------------------
2589                6137     td:
2589 B65245         6138                     cjne    @R0,#'R',te
258C 08             6139                     inc     r0
258D E6             6140                     mov     A,@R0                   ;AAAAAAnn, nn=cmd
258E 5403           6141                     anl     A,#3
2590 B40005         6142                     cjne    A,#0,te1
2593 C206           6143                     clr     bitvi11
2595 020000   F     6144                     jmp     tr9
2598                6145     te1:
2598 B40105         6146                     cjne    A,#1,te2
259B D206           6147                     setb    bitvi11
259D 020000   F     6148                     jmp     tr9
25A0                6149     te2:
25A0 B40306         6150                     cjne    A,#03h,mtf2
25A3 754E7D         6151                     mov     cmd_rez,#7Dh    ;Err par
25A6 020000   F     6152                     jmp     tr9
25A9                6153     mtf2:           ;=2
25A9 E6             6154             mov     A,@R0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    95

25AA C3             6155                     clr     C
25AB 13             6156                     rrc     A
25AC C3             6157                     clr     C
25AD 13             6158                     rrc     A
25AE C002           6159             push    2               ;?
25B0 C003           6160             push    3               ;?
25B2 C004           6161             push    4               ;?
25B4 C005           6162             push    5               ;?
25B6 FC             6163                     mov     r4,A
25B7 08             6164                     inc     r0
25B8 E6             6165                     mov     A,@R0
25B9 FD             6166                     mov     r5,A
25BA 7B00           6167                     mov     r3,#0
25BC 7A00           6168                     mov     r2,#0
25BE 120402         6169                     call    altof                   ;r2..r5->float
25C1 78BC           6170                     mov     r0,#konstA
25C3 120000   F     6171                     call    saver2
25C6 D005           6172             pop     5
25C8 D004           6173             pop     4
25CA D003           6174             pop     3
25CC D002           6175             pop     2
25CE 020000   F     6176                     jmp     tr9
                    6177     
25D1                6178     te:
25D1 B6480F         6179                     cjne    @R0,#'H',mtf    ;-------------H--------------
25D4 08             6180                     inc     r0
25D5 E6             6181                     mov     A,@R0
25D6 C3             6182                     clr     C
25D7 9403           6183                     subb    A,#3            ;#4
25D9 50CE           6184                     jnc     mtf2    ;
25DB E6             6185                     mov     A,@R0
25DC 04             6186                             inc             A
25DD 78AF           6187                     mov     R0,#parN
                    6188     ;       inc     A
25DF F6             6189                     mov     @R0,A
                    6190     ;               inc     parN
25E0 020000   F     6191                     jmp     tr9
                    6192     
                    6193     
25E3 B6410E         6194     mtf:            cjne    @R0,#'A',mtg 
25E6 08             6195                     inc     r0
25E7 B60005         6196                     cjne    @R0,#0,mtf1
25EA C205           6197                     clr     bitavp
25EC 020000   F     6198                     jmp     tr9
25EF D205           6199     mtf1:           setb    bitavp
25F1 020000   F     6200                     jmp     tr9
25F4 B6512D         6201     mtg:            cjne    @R0,#'Q',mtk            ;mth
25F7 08             6202                     inc     r0
25F8 B60112         6203                     cjne    @R0,#1,mtf3
25FB D20F           6204                     setb    bitnul  ;?clr, as Izm?
25FD 789C           6205                     mov             r0,#rez_A3      ;A3
25FF 120000   F     6206                     call            resar2
2602 786A           6207                     mov             r0,#rez_A0      
2604 120000   F     6208                     call            saver2;A0<-A3
2607 120000   F     6209                     call            loadUS
260A 020000   F     6210                     jmp     tr9
260D B60299         6211     mtf3:           cjne    @R0,#02,mtf2
                    6212     ;               clr     bitnul  ;?clr, as Izm?
                    6213     ;               mov     r0,#rez_A0
                    6214     ;               call    clear4
                    6215     ;               call    loadUS
                    6216     ;               jmp     tr9
2610 D2AF           6217                     setb    EA
2612 C21D           6218                     clr     is_cmd
                    6219     ;               pop     1
                    6220     ;               jmp     ybnul
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    96

2614 C20F           6221                     clr     bitnul  ;?
2616 900000   F     6222                     mov     DPTR,#ch0 
2619 120000   F     6223                     CALL    ldc_long        ;?r2..r5 <-- 0
261C 786A           6224                     mov     r0,#rez_A0      ;?A0=0
261E 120000   F     6225                     call    saver2
2621 020000   F     6226                     jmp     tr9             ;?
                    6227     
                    6228     ;----------------igor-----------
2624 B64B1A         6229     mtk:            cjne    @R0,#'K',mth
2627 08             6230                     inc     r0
2628 B60008         6231                     cjne    @R0,#0,mtk1
262B 79C4           6232                             mov     r1,#byte_kor            ;откл. корр.0
262D 7401           6233                             mov             A,#1
262F F7             6234                             mov     @R1,A                                           
2630 020000   F     6235                     jmp     tr9
2633                6236     mtk1:           
2633 79C4           6237                             mov     r1,#byte_kor            ;вкл.корр.0
2635 E4             6238                             clr     A
2636 F7             6239                             mov     @R1,A                                           
2637 7898           6240                     mov             r0,#chinkor
2639 7600           6241                     mov             @r0,#0;1;
263B 08             6242                     inc             r0
263C 7619           6243                     mov             @r0,#19h;64h;0c8h;90h;
263E 020000   F     6244                     jmp     tr9
                    6245     
                    6246     ;-------------------------------
                    6247     
2641 B64911         6248     mth:            cjne    @R0,#'I',mti0
2644 08             6249                     inc     r0
2645 B6000F         6250                     cjne    @R0,#0,mth1
2648 D218           6251                     setb    knizm   ;?bitizm
264A E54E           6252                     mov     A,cmd_rez
264C F599           6253                     mov     SBUF0,A
264E C21D           6254                     clr     is_cmd
2650 D21F           6255             setb    is_izm
2652 020000   F     6256             jmp     keyb1           ;--
                    6257     
2655 8013           6258     mti0:   jmp     mti
                    6259     
2657                6260     mth1:
2657 B6010D         6261                     cjne    @R0,#1,mth2
                    6262     ;               clr     bitizm                  ;begin reset
265A C218           6263                     clr     knizm   ;?bitizm
265C E54E           6264                     mov     A,cmd_rez
265E F599           6265                     mov     SBUF0,A
2660 C21D           6266                     clr     is_cmd
2662 D21F           6267             setb    is_izm
2664 020000   F     6268             jmp     keyb1           ;--
                    6269     
2667                6270     mth2:   ;I2
                    6271     ;               clr     is_2    ;end 10&2 ms
                    6272     ;               clr     is_rs   ;end 10&2 ms
2667 020000   F     6273                     jmp     tr9
                    6274     
266A B65300         6275     mti:            cjne    @R0,#'S',mtx            ;RS speed
                    6276     ;               inc     r0
                    6277     ;       clr     EA
                    6278     ;               cjne    @R0,#0,mti1
                    6279     ;               mov     TH1,#220        ;19600
                    6280     ;               setb    EA
                    6281     ;               jmp     tr9
266D                6282     mti1:
                    6283     ;               mov     TH1,#244
                    6284     ;               setb    EA
                    6285     ;               jmp     tr9
                    6286     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    97

266D                6287     mtx:
266D B64D1A         6288                     cjne    @R0,#'M',mty
2670 08             6289                     inc     r0
2671 E6             6290                     mov     A,@R0                   ;AAAAAnnn, nnn=cmd
2672 5407           6291                     anl     A,#7
2674 B40516         6292                     cjne    A,#5,mtx5
2677 E6             6293                     mov     A,@R0
2678 C3             6294                     clr     C
2679 13             6295                     rrc     A
267A C3             6296                     clr     C
267B 13             6297                     rrc     A
267C C3             6298                     clr     C
267D 13             6299                     rrc     A
267E 7938           6300                     mov     R1,#nblok
2680 F7             6301                     mov     @R1,A
                    6302     
2681 120000   F     6303             call    adrblok ;?
2684 120000   F     6304             call    save_hl ;?
                    6305     
2687 020000   F     6306                     jmp     tr9
                    6307     
268A 020000   F     6308     mty: jmp        mty2
                    6309     
268D C3             6310     mtx5:           clr     C
268E 9406           6311                     subb    A,#6
2690 5007           6312                     jnc     mtf4
2692 E6             6313                     mov     A,@R0
2693 B60009         6314                     cjne    @R0,#0,mtx0
2696 020000   F     6315                     jmp     chaibl9         ;clear??SP
2699 754E7D         6316     mtf4:           mov     cmd_rez,#7Dh    ;Err par
269C 020000   F     6317                     jmp     tr9
                    6318     
269F                6319     mtx0:
269F B6030B         6320                     cjne    @R0,#3,mtx1     
26A2 C20A           6321                     clr             bitbon
26A4 534BFD         6322                     anl     bufind+11,#0fdh;??jmp bufon
26A7 120000   F     6323                     call    ind
26AA 020000   F     6324                     jmp     tr9
                    6325     ;mtx0_:
                    6326     ;               mov     A,cmd_rez
                    6327     ;               mov     SBUF0,A
                    6328     ;               clr     is_cmd
                    6329     ;       setb    is_mem  ;?
                    6330     ;               pop     0               ;?
                    6331     ;       jmp     labelB;keyb1    ;---
                    6332     
26AD                6333     mtx1:
26AD B60212         6334                     cjne    @R0,#2,mtx2             ;start
26B0 D20A           6335                     setb    bitbon  ;bitmem
26B2 79D5           6336                     mov     r1,#volume      ;work   обьем блока
26B4 7700           6337                     mov     @r1,#00
26B6 09             6338                     inc     r1
26B7 77C7           6339                     mov     @r1,#0c7h               ;320h/4
26B9 434B02         6340                     orl     bufind+11,#02h  ; on pysk
26BC 120000   F     6341                     call    ind
26BF 020000   F     6342                     jmp             tr9
                    6343     
26C2                6344     mtx2:
26C2 B6046A         6345                     cjne    @R0,#4,mtx3             ;to PC
                    6346     ;---M4-----
26C5 120000   F     6347                     call    adrblok         ;dptr-
                    6348     
26C8 120000   F     6349             call    save_hl ;?
                    6350     
                    6351     ;               setb    is_mem
                    6352     ;-              setb    bitbon  ;?Mem will to fill?
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    98

                    6353     
26CB C2AF           6354                     clr     EA
26CD 7524FB         6355                     mov     cnt_out,#251            ;#200
26D0 75997F         6356                     mov     SBUF0,#7Fh
26D3                6357     mt0A:
26D3 3099FD         6358                     jnb   TI,mt0A
26D6 C299           6359                     clr   TI
26D8 75990A         6360                             mov     SBUF0,#0Ah
26DB                6361     mtxa:
26DB 120000   F     6362             call    reA3_X          ;over r2..r5<-внешн пам
26DE 79D8           6363             mov                     r1,#copy_hl+1;next?
26E0 E582           6364             mov                     a,dpl
26E2 F7             6365             mov                     @r1,a           ;low
26E3 E583           6366             mov                     a,dph
26E5 19             6367             dec                     r1
26E6 F7             6368             mov                     @r1,a                   ;high
26E7 900000   F     6369             mov             dptr,#ch10
26EA 120000   F     6370                     call    ldc_ltemp
26ED 120000   F     6371                     call    zdiv                    ;form4=invertif <0; divide
26F0 120000   F     6372                     call    maform          ;setb/clr       znmat
26F3 789C           6373                     mov             r0,#rez_A3      ;?
26F5                6374     mtxb:
26F5 3099FD         6375                     jnb   TI,mtxb
26F8 C299           6376                     clr   TI
26FA 8699           6377                     mov     SBUF0,@r0
26FC 08             6378                     inc     r0
26FD                6379     mtxc:
26FD 3099FD         6380                     jnb   TI,mtxc
2700 C299           6381                     clr   TI
2702 8699           6382                     mov     SBUF0,@r0
2704 08             6383                     inc     r0
2705                6384     mtxd:
2705 3099FD         6385                     jnb   TI,mtxd
2708 C299           6386                     clr   TI
270A 8699           6387                     mov     SBUF0,@r0
270C 08             6388                     inc     r0
270D                6389     mtxe:
270D 3099FD         6390                     jnb   TI,mtxe
2710 C299           6391                     clr   TI
2712 8699           6392                     mov             SBUF0,@r0
2714 75990A         6393                             mov             SBUF0,#0Ah
2717                6394     mtx0A:
2717 3099FD         6395                     jnb   TI,mtx0A          ;
271A C299           6396                     clr   TI                        ;25.11.09
271C 75990A         6397                     mov             SBUF0,#0Ah      ;
                    6398     
271F 79D8           6399                     mov                     r1,#copy_hl+1;saven_bl+1;сохр адрес внешн озу введе
                             нного лемента
2721 E7             6400                     mov                     A,@r1           ;low
2722 F582           6401                     mov                     dpl,A
2724 19             6402                     dec                     r1
2725 E7             6403                     mov                     A,@r1                   ;high
2726 F583           6404                     mov                     dph,A
2728 D524B0         6405                     djnz    cnt_out,mtxa
                    6406     
272B D2AF           6407                     setb    EA
272D 801D           6408                     jmp     tr9
                    6409     
272F                6410     mtx3:           ;M1 only
272F C2AF           6411                     clr     EA
2731 E6             6412                     mov     A,@R0
2732 C3             6413                     clr     C
2733 13             6414                     rrc     A
2734 C3             6415                     clr     C
2735 13             6416                     rrc     A
2736 C3             6417                     clr     C
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE    99

2737 13             6418                     rrc     A
2738 79CD           6419                     mov     R1,#interva
273A F7             6420                     mov     @R1,A
273B 08             6421                     inc     r0
273C 09             6422                     inc     r1
273D E6             6423                     mov     A,@R0
273E F7             6424                     mov     @R1,A           ;interva+1
273F 800B           6425                     jmp     tr9
                    6426     
                    6427     
2741                6428     mty2:
2741 B67F05         6429                     cjne    @R0,#7Fh,tz
2744 75997F         6430                     mov     SBUF0,#7Fh
2747 8003           6431                     jmp     tr9
                    6432     
2749                6433     tz:
2749 754E7E         6434                     mov     cmd_rez,#7Eh    ;Err cmd
                    6435     
274C E54E           6436     tr9:            mov     A,cmd_rez
274E F599           6437                     mov     SBUF0,A
2750 D2AF           6438                     setb    EA
2752 C21D           6439                     clr     is_cmd
2754 22             6440                     ret
                    6441     
2755                6442     chaibl9:        ;M0-Mem clear
2755 C2AF           6443                     clr             EA
2757 120000   F     6444                     call    adrblok
275A 79B8           6445                     mov             r1,#work
275C 7703           6446                     mov             @r1,#03
275E 09             6447                     inc             r1
275F 7720           6448                     mov             @r1,#20h                        ;320h
2761                6449     goonof9:
2761 E4             6450                     clr             a
2762 F0             6451                     movx    @dptr,a
2763 A3             6452                     inc             dptr
2764 79B9           6453                     mov             r1,#work+1
2766 120000   F     6454                     call    chminus
2769 78B8           6455                     mov             r0,#work
276B E6             6456                     mov             a,@r0
276C 30E7F2         6457                     jnb             acc.7,goonof9
276F 120000   F     6458             call    adrblok
2772 120000   F     6459             call    save_hl
2775 80D5           6460                     jmp     tr9
                    6461     
2777 C2AF           6462     reA3_m: clr     EA              ;Mem to PC
                    6463     ;               mov             r0,#0F9h
                    6464     ;               movx    a,@dptr
                    6465     ;               mov             @r0,a
                    6466     ;               inc             r0
                    6467     ;               inc             dptr
                    6468     ;               movx    a,@dptr
                    6469     ;               mov             @r0,a
                    6470     ;               inc             r0
                    6471     ;               inc             dptr
                    6472     ;               movx    a,@dptr
                    6473     ;               mov             @r0,a
                    6474     ;               inc             r0
                    6475     ;               inc             dptr
                    6476     ;               movx    a,@dptr
                    6477     ;               mov             @r0,a
                    6478     ;               inc             dptr
                    6479     ;               mov             p_out,#0F9h
                    6480     ;               mov             cnt_out,#4
                    6481     ;               mov     SBUF0,#7Fh      ;was cmd_rez
                    6482     ;               ret
                    6483     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   100

2779 E538           6484     save_hlm:       mov             a,nblok
277B B40117         6485                     cjne    a,#1,sm_hl1
277E 79D3           6486                     mov             r1,#saven_bl
2780 E583           6487     sm_hl:  mov             a,dph
2782 F7             6488                     mov             @r1,a
2783 09             6489                     inc             r1
2784 E582           6490                     mov             a,dpl
2786 F7             6491                     mov             @r1,a
                    6492                     ;не конец ли блока
2787 79D6           6493                     mov                     r1,#volume+1;work+1
2789 120000   F     6494                     call            chminus
278C 78D5           6495                     mov             r0,#volume
278E E6             6496                     mov             a,@r0
278F 30E702         6497                     jnb             acc.7,noend_m
2792 C20E           6498                     clr             is_mem                  ;?breakpoint
                    6499     ;               anl                     bufind+11,#0fdh ;?
                    6500     ;               call            ind                                                     ;?
2794 22             6501     noend_m: ret
2795 B40204         6502     sm_hl1: cjne    a,#2,sm_hl2
2798 79C0           6503                                     mov             r1,#saven_bl2
279A 80E4           6504                                     jmp             sm_hl
279C B40304         6505     sm_hl2: cjne    a,#3,sm_hl3
279F 79C2           6506                                     mov             r1,#saven_bl3
27A1 80DD           6507                                     jmp             sm_hl
27A3 79D9           6508     sm_hl3: mov             r1,#saven_bl4
27A5 80D9           6509                                     jmp             sm_hl
                    6510     
                    6511     
                    6512     ;$include (subr7.asm) 
                +1  6513     ;тест интерфейса
27A7            +1  6514     testrs: ;jb     p0.3,goprogr
27A7 C2AC       +1  6515                     clr     IE.4
27A9 759955     +1  6516     test1:  mov     SBUF0,#55h
27AC 3099FD     +1  6517                     jnb     SCON0.1,$
27AF 78B8       +1  6518                     mov     r0,#work;chtest
27B1 76BE       +1  6519                     mov     @r0,#190d;60
                +1  6520     
27B3 309825     +1  6521     test01: jnb     SCON0.0,test2
27B6 E599       +1  6522                     mov     a,SBUF0
27B8 B45512     +1  6523                     cjne    a,#55h,test3
27BB C299       +1  6524     test4:  clr     SCON0.1
27BD C298       +1  6525                     clr     SCON0.0
27BF 7D0A       +1  6526                     mov     r5,#10
27C1 7840       +1  6527                     mov     r0,#bufind              ;- - - -
27C3 762D       +1  6528     test04: mov     @r0,#2dh
27C5 08         +1  6529                     inc     r0
27C6 DDFB       +1  6530                     djnz    r5,test04
27C8 120000   F +1  6531                     call    ind
27CB 80DC       +1  6532                     jmp     test1
27CD            +1  6533     test3:  
27CD 753933     +1  6534                     mov     nuerr,#33h
27D0 120000   F +1  6535                     call    error           ;на кран прибора ERR 3
27D3 120000   F +1  6536                     call    ind;
27D6 120000   F +1  6537                     call    z_01s           ;100ms
27D9 80E0       +1  6538                     jmp     test4
27DB 78B8       +1  6539     test2:  mov     r0,#work;chtest
27DD B60002     +1  6540                     cjne    @r0,#0,test02
27E0 8003       +1  6541                     jmp     test5
27E2 16         +1  6542     test02: dec     @r0
27E3 80CE       +1  6543                     jmp     test01
27E5 120000   F +1  6544     test5:  call    z_1ms           ;1ms
27E8 C299       +1  6545                     clr     SCON0.1
27EA 753933     +1  6546                     mov     nuerr,#33h
27ED 120000   F +1  6547                     call    error           ;на кран прибора ERR 3
27F0 120000   F +1  6548                     call    ind
27F3 120000   F +1  6549                     call    z_01s           ;100ms
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   101

27F6 80B1       +1  6550                     jmp     test1   
                +1  6551     
                +1  6552     
27F8 7A08       +1  6553     zapadc:     mov R2,#8
27FA D297       +1  6554     sdv:        setb P1.7
27FC 33         +1  6555                 rlc A
27FD 9296       +1  6556                     mov P1.6,C
27FF 120000   F +1  6557                     call tim2
                +1  6558                                     
2802 C297       +1  6559                     clr P1.7
2804 120000   F +1  6560                     call tim2
2807 DAF1       +1  6561                     djnz R2,sdv
2809 D296       +1  6562                     setb P1.6
280B 22         +1  6563                     ret
                +1  6564     
280C 7A08       +1  6565     chtadc:     mov R2,#8
280E D297       +1  6566     sdv1:       setb P1.7
2810 120000   F +1  6567                 call tim2
2813 C297       +1  6568                     clr P1.7
2815 A296       +1  6569                     mov C,P1.6
2817 33         +1  6570                     rlc A
2818 120000   F +1  6571                     call tim2
281B DAF1       +1  6572                     djnz R2,sdv1
281D 22         +1  6573                     ret
                +1  6574     
281E 7E30       +1  6575     tim:      mov R6,#30h;38h
2820 DEFE       +1  6576     tim1:     djnz R6,tim1
2822 22         +1  6577               ret
                +1  6578               
2823 7E10       +1  6579     tim2:     mov R6,#10h;14h
2825 DEFE       +1  6580     tim3:     djnz R6,tim3
2827 22         +1  6581               ret
                +1  6582     
                +1  6583     ;запись из acc
2828 C3         +1  6584     write_x1:       clr     c
2829            +1  6585     writeD_x1:
2829 92B1       +1  6586                     mov P3.1,c        ;запись
282B F5A0       +1  6587                 mov P2,A
282D D2B3       +1  6588                     setb P3.3
282F 120000   F +1  6589                     call z_5
2832 C2B3       +1  6590                     clr P3.3
2834 75A0FF     +1  6591                     mov P2,#0FFh
2837 22         +1  6592                     ret
                +1  6593     
                +1  6594     ;чтение в acc
2838 C3         +1  6595     read_x2:        clr     c  
2839 92B1       +1  6596                     mov P3.1,c        ;чтение
283B D2B2       +1  6597                     setb P3.2
283D D2B3       +1  6598                     setb P3.3
283F 120000   F +1  6599                     call z_5
2842 E5A0       +1  6600                     mov A,P2
2844 C2B3       +1  6601                     clr P3.3
2846 C2B2       +1  6602                     clr P3.2
2848 22         +1  6603                     ret
                +1  6604     
2849 120000   F +1  6605     loop:           call read_x2;x2    ;ожидание флага готовности
284C 20E7FA     +1  6606                     jb ACC.7,loop     ;переход на чтение, если бит А(7)=1
284F 22         +1  6607                     ret           ;возврат, если бит А(7)<>1
                +1  6608     
                +1  6609     
                +1  6610     ;принимаемый байт в acc
                +1  6611     ;прием байта последовательным кодом старшими разрядами вперед
2850 7A08       +1  6612     read:      mov R2,#8
2852 C297       +1  6613     re1:       clr P1.7;P1.2
2854 120000   F +1  6614                call tim2      ;5mks
2857 A294       +1  6615                     mov C,P1.4;P1.0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   102

2859 33         +1  6616                     rlc A           
285A D297       +1  6617                     setb P1.7;P1.2
285C 120000   F +1  6618                     call tim2
285F DAF1       +1  6619                     djnz R2,re1
2861 22         +1  6620                     ret
                +1  6621     
                +1  6622      ;in r0-count   
                +1  6623     ;r10,r11-значение с котоым сравнивается счетчик
                +1  6624     ;r2..r5 -значение счетчика
2862            +1  6625     chcmp:; mov              r0,#chavt                                      ;>=7500(1d4ch
2862 E6         +1  6626                     mov             a,@r0
2863 FC         +1  6627                     mov             r4,a
2864 08         +1  6628                     inc             r0
2865 E6         +1  6629                     mov             a,@r0
2866 FD         +1  6630                     mov             r5,a
2867 7B00       +1  6631                     mov             r3,#0
2869 7A00       +1  6632                     mov             r2,#0
286B 750800     +1  6633                     mov             r8,#0;clr                       r8
286E 750900     +1  6634                     mov             r9,#0;clr                       r9
2871 120000   F +1  6635                     call            lcmp
2874 22         +1  6636                     ret
                +1  6637     
                +1  6638     
                +1  6639     ;in-r1-count
2875            +1  6640     chdec:          ;mov            r1,#chavt               ;chavt-1
2875 E7         +1  6641                             mov             a,@r1
2876 FC         +1  6642                             mov             r4,a
2877 09         +1  6643                             inc             r1
2878 E7         +1  6644                             mov             a,@r1
2879 FD         +1  6645                             mov             r5,a
287A C202       +1  6646                             clr             rr2
287C C203       +1  6647                             clr             rr3
287E 900000   F +1  6648                             mov             dptr,#ch1        
2881 120000   F +1  6649                             call            ldc_ltemp
2884 120000   F +1  6650                             call            lsub
2887 ED         +1  6651                             mov             a,r5
2888 F7         +1  6652                             mov             @r1,a
2889 19         +1  6653                             dec             r1
288A EC         +1  6654                             mov             a,r4
288B F7         +1  6655                             mov             @r1,a
288C 22         +1  6656                             ret      
                +1  6657     
                +1  6658     
288D            +1  6659     loadUS: ;если идет тест измерения ус восстановить для теста
288D 201533     +1  6660                             jb              biteizm,yestest
2890 79AE       +1  6661                             mov             r1,#diap
2892 E7         +1  6662                             mov             a,@r1
2893 23         +1  6663                             rl              a;*2
2894 FC         +1  6664                             mov             r4,a                    ;save a
2895 900000   F +1  6665                             mov             dptr,#tabus
2898 93         +1  6666                             movc            a,@a+dptr
2899 FA         +1  6667                             mov             r2,a                    ;high byte
289A E584       +1  6668                             mov             a,p4
289C 5401       +1  6669                             anl             a,#01
289E 4A         +1  6670                             orl             a,r2
289F F584       +1  6671                             mov             p4,a
28A1 0C         +1  6672                             inc             r4
28A2 EC         +1  6673                             mov             a,r4
28A3 93         +1  6674                             movc            a,@a+dptr
28A4 FB         +1  6675                             mov             r3,a                    ;low byte
28A5 E585       +1  6676                             mov             a,p5
28A7 5401       +1  6677                             anl             a,#01
28A9 4B         +1  6678                             orl             a,r3
28AA F585       +1  6679                             mov             p5,a
28AC 799A       +1  6680                             mov             r1,#parT
28AE B7010E     +1  6681                             cjne            @r1,#1,bret
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   103

28B1 79AE       +1  6682                             mov             r1,#diap                  ;10s (parT=1)
28B3 7405       +1  6683                             mov             a,#5                      ;10-8..10-11 p4.1=1
28B5 C3         +1  6684                             clr             c
28B6 97         +1  6685                             subb            a,@r1
28B7 5006       +1  6686                             jnc             bret
28B9 E584       +1  6687                             mov             a,p4
28BB 4402       +1  6688                             orl             a,#02
28BD F584       +1  6689                             mov             p4,a                     ;10-8..10-11 p4.1=1
28BF 120000   F +1  6690     bret:                   call            louizm          ;us если вкл кн ИЗМЕР
28C2 22         +1  6691                             ret
28C3            +1  6692     yestest:
28C3 120000   F +1  6693                             call            lotpus          ;ус теста измерения
28C6 22         +1  6694                             ret
                +1  6695                             
                +1  6696     ;загр ус для кор 0
                +1  6697     ;dptr-
28C7 E4         +1  6698     lospus:         clr             a
                +1  6699                             ;movc   a,@a+dptr
                +1  6700                             ;mov            r2,a                    ;high byte
                +1  6701                             ;mov            a,p4
                +1  6702                             ;anl            a,#01
                +1  6703                             ;orl            a,r2
                +1  6704                             ;mov            p4,a
                +1  6705                             ;inc            dptr
28C8 E4         +1  6706                             clr             a
28C9 93         +1  6707                             movc            a,@a+dptr
28CA FB         +1  6708                             mov             r3,a                    ;low byte
28CB E585       +1  6709                             mov             a,p5
28CD 54BF       +1  6710                             anl             a,#0bfh;01
28CF 4B         +1  6711                             orl             a,r3
28D0 F585       +1  6712                             mov             p5,a
28D2 22         +1  6713                             ret
                +1  6714     
28D3 80         +1  6715     kor0us:         db              80h;18h,2eh             ;us режима коррекции 0
                +1  6716     
                +1  6717     ;us кнопка измерения выкл
28D4 88D6       +1  6718     tabus:          db              88h,0d6h         ;10-2
28D6 88F6       +1  6719                             db              88h,0f6h         ;10-3
28D8 88D6       +1  6720                             db              88h,0d6h         ;10-4
28DA 88F6       +1  6721                             db              88h,0f6h         ;10-5
28DC 9AD6       +1  6722                             db              9ah,0d6h         ;10-6
28DE 9AF6       +1  6723                             db              9ah,0f6h         ;10-7
28E0 ACD6       +1  6724                             db              0ach,0d6h        ;10-8
28E2 ACF6       +1  6725                             db              0ach,0f6h        ;10-9
28E4 C8D6       +1  6726                             db              0c8h,0d6h        ;10-10
28E6 C8F6       +1  6727                             db              0c8h,0f6h        ;10-11
                +1  6728     
28E8 66E6       +1  6729     tabt11:         db              66h,0e6h;10-11
28EA 32E6       +1  6730     tabt9:          db              32h,0e6h;10-9
28EC 18EE       +1  6731     tabt7:          db              18h,0eeh;10-7
                +1  6732     
                +1  6733      ;загрузка текста в буфер 2 bufind+0..bufind9
                +1  6734     ;в зав от parT (Tизм)
28EE 79B7       +1  6735     loadT:          mov             r1,#load;parT
28F0 7840       +1  6736     lolevT:         mov             r0,#bufind+0
28F2 7B0A       +1  6737                             mov             r3,#10
28F4 75F00A     +1  6738                             mov             b,#10
28F7 E7         +1  6739                             mov             a,@r1
28F8 A4         +1  6740                             mul             ab
28F9 FC         +1  6741                             mov             r4,a                    ;save a
28FA 900000   F +1  6742                             mov             dptr,#textT
28FD 93         +1  6743             lod1:   movc    a,@a+dptr
28FE F6         +1  6744                             mov             @r0,a
28FF 08         +1  6745                             inc             r0
2900 0C         +1  6746                             inc             r4
2901 EC         +1  6747                             mov             a,r4
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   104

2902 DBF9       +1  6748                             djnz    r3,lod1
2904 534B03     +1  6749                             anl                     bufind+11,#03h          ;гашение точек
2907 22         +1  6750                             ret     
                +1  6751     ;загрузка текста в буфер 2 bufind+0..bufind9                    
                +1  6752     ;dptr-адр строки текста         
2908            +1  6753     lotext:         
2908 7B0A       +1  6754                             mov             r3,#10
290A 7840       +1  6755                             mov             r0,#bufind+0
290C E4         +1  6756     lodt:                   clr             a
290D 93         +1  6757                             movc            a,@a+dptr
290E F6         +1  6758                             mov             @r0,a
290F 08         +1  6759                             inc             r0
2910 A3         +1  6760                             inc             dptr
2911 DBF9       +1  6761                             djnz            r3,lodt
2913 534B03     +1  6762                             anl             bufind+11,#03h          ;гашение точек
2916 22         +1  6763                             ret                                     
                +1  6764     
                +1  6765     
                +1  6766     ;задержка 100 мкс
2917 7978       +1  6767     z_100:    mov R1,#78h     ;загрузка первого числа
2919 7A02       +1  6768     z100:     mov R2,#2h     ;загрузка второго числа
291B DAFE       +1  6769     count:    djnz R2, count;декремент R2 и внутренний цикл, если R2<>0     
291D D9FA       +1  6770               djnz R1, z100 ;декремент R1 и внутренний цикл, если R1<>0
291F 22         +1  6771               ret           
                +1  6772     
                +1  6773     ;задержка 34 мкс
2920 7B8B       +1  6774     z_5:      mov R3,#8Bh      ;загрузка числа
2922 DBFE       +1  6775     ct:       djnz R3,ct
2924 22         +1  6776               ret
                +1  6777     
                +1  6778     ;задержка 15 мс
2925 79FA       +1  6779     z_15:     mov R1,#0FAh    ;загрузка первого числа
2927 7AED       +1  6780     z15:      mov R2,#0EDh   ;загрузка второго числа
2929 DAFE       +1  6781     zz:       djnz R2, zz   ;декремент R2 и внутренний цикл, если R2<>0
292B D9FA       +1  6782               djnz R1, z15  ;декремент R1 и внутренний цикл, если R1<>0
292D 22         +1  6783               ret   
                +1  6784                                               
                +1  6785     ;задержка 1 мс
292E 7910       +1  6786     z_1ms:     mov R1,#10h     
2930 7AED       +1  6787     ss1:       mov R2,#0EDh    
2932 DAFE       +1  6788                 djnz R2, $   
2934 D9FA       +1  6789                djnz R1, ss1   
2936 22         +1  6790                ret   
                +1  6791     
                +1  6792     ;задержка 1с
2937 7D1F       +1  6793     z_1s:           mov             r5,#01fh 
2939 7EFF       +1  6794     co2s:           mov     R6,#0ffh     
293B 7FFF       +1  6795     z1s:            mov     R7,#0ffh     
293D DFFE       +1  6796     co1s:           djnz    R7, co1s        
293F DEFA       +1  6797                     djnz    R6, z1s 
2941 DDF6       +1  6798                     djnz    r5,co2s
2943 22         +1  6799                 ret
                +1  6800     
                +1  6801     ;задержка 0,1с
2944 7D03       +1  6802     z_01s:          mov             r5,#03h 
2946 7EFF       +1  6803     co02s:  mov     R6,#0ffh     
2948 7FFF       +1  6804     z01s:           mov     R7,#0ffh     
294A DFFE       +1  6805                     djnz    R7, $   
294C DEFA       +1  6806                     djnz    R6, z01s 
294E DDF6       +1  6807                     djnz    r5,co02s
2950 22         +1  6808                      ret
                +1  6809                                               
                +1  6810     ;задержка 0,5с
2951 7D0D       +1  6811     z_05s:          mov             r5,#0dh 
2953 7EFF       +1  6812     co05s:          mov     R6,#0ffh     
2955 7FFF       +1  6813     z05s:           mov     R7,#0ffh     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   105

2957 DFFE       +1  6814                             djnz    R7, $   
2959 DEFA       +1  6815                     djnz    R6, z05s 
295B DDF6       +1  6816                             djnz    r5,co05s
295D 22         +1  6817                     ret                                                      
                +1  6818                                                               
295E 000007FF   +1  6819     chzap:          db      00,00,07h,0ffh             
2962 00000000   +1  6820     ch0:            db      00,00,00,00
2966 0000000A   +1  6821     ch10:           db      00,00,00,0ah                            ;10
296A 00000005   +1  6822     ch5:            db      00,00,00,05                                             ;5
296E 00000004   +1  6823     ch4:            db      00,00,00,04                                             ;4
2972 000003B9   +1  6824     ch954:          db 00,00,03,0b9h                                                ;954
2976 000003E8   +1  6825     ch10000:        db 00,00,03h,0e8h                                               ;10000
297A 00000064   +1  6826     ch100:          db 00,00,00,64h ;100
297E 00000002   +1  6827     ch2:            db      00,00,00,02                                             
                +1  6828     ;CH_953:        db 3fh,74h,37h,72h;0,953971
                +1  6829     ;CH_953:        db 3fh,74h,1ch,71h;0,953558
                +1  6830     ;CH_953:        db 3fh,74h,02,0d2h;0.953168
2982 00000001   +1  6831     ch1:            db  00,00,00,01
2986 49742400   +1  6832     ch_mln:         db      49h,74h,24h,00;10*6
298A 3F800000   +1  6833     ch_1:           db      3fh,80h,00,00   
298E 40000000   +1  6834     ch_2:           db      40h,00,00,00;2
2992 40800000   +1  6835     ch_4:           db      40h,80h,00,00;4 
2996 40A00000   +1  6836     ch_5:           db      40h,0a0h,00,00;5
299A 40E00000   +1  6837     ch_7:           db      40h,0e0h,00,00;7
                +1  6838             
299E 3F741EDF   +1  6839     CH_953:         db 3fh,74h,1eh,0dfh             ;0,953596
29A2 47C35000   +1  6840     CHtho:          db      47h,0c3h,50h,00;48h,43h,50h,00;30d40 h  -000
29A6 3F800347   +1  6841     KD:                     db      3fh,80h,03h,47h;1,0001
29AA 48435000   +1  6842     CH2tho:         db      48h,43h,50h,00;200000
29AE 4856D800   +1  6843     ch_220:         db  48h,56h,0d8h,00;220000 -035b60 h
29B2 4856D800   +1  6844     ch_200:         db  48h,56h,0d8h,00;200000 -030d40 h
29B6 461C4000   +1  6845     ch_10th:        db  46h,1ch,40h,00;10000-2710h
29BA 41200000   +1  6846     ch_10:          db      41h,20h,00,00;10d
29BE 48742400   +1  6847     ch_250:         db      48h,74h,24h,00;250000
29C2 000186A0   +1  6848     chk:            db      00,01,86h,0a0h;
29C6 00000320   +1  6849     ch320h:         db      00,00,03h,20h;320h=800d
29CA 00000150   +1  6850     ch150h:         db      00,00,01h,50h;150h
29CE C0400000   +1  6851     ch_m3:          db      0c0h,40h,00,00;-3
                +1  6852     
                +1  6853     
                +1  6854     ;r1- мл байт 2х байтного числа
29D2            +1  6855     tenmin:         ;-10
29D2 C3         +1  6856                     clr             c
29D3 E7         +1  6857             mov             a,@r1
29D4 9405       +1  6858                     subb    a,#5;10
29D6 F7         +1  6859                     mov             @r1,a
29D7 19         +1  6860                     dec             r1
29D8 E7         +1  6861                     mov             a,@r1
29D9 9400       +1  6862                     subb    a,#0
29DB F7         +1  6863                     mov             @r1,a
29DC 22         +1  6864                     ret
                +1  6865       ;r0-обнуление ячеек памяти  
29DD 7F04       +1  6866     clear4: mov     r7,#4
29DF E4         +1  6867                     clr             a
29E0 F6         +1  6868     cl4:    mov             @r0,a
29E1 08         +1  6869                     inc             r0
29E2 DFFC       +1  6870                     djnz    r7,cl4
29E4 22         +1  6871                     ret     
                +1  6872     
                +1  6873      ;r0-обнуление ячеек памяти             ;R7- 
29E5            +1  6874     clearN:  
29E5 E4         +1  6875                     clr             a
29E6 F6         +1  6876     cl4N:   mov             @r0,a
29E7 08         +1  6877                     inc             r0
29E8 DFFC       +1  6878                     djnz    r7,cl4N
29EA 22         +1  6879                     ret     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   106

                +1  6880     
                +1  6881       ;чтение номера байта с индикатора(2байта)
                +1  6882     ;bufind+8..bufind+9
                +1  6883     ;-  - - -
                +1  6884     ;- - - - - - - - - -
                +1  6885     ;adec..adec+9
                +1  6886     ;ст            мл
29EB 7848       +1  6887     upak2:  mov             r0,#bufind+8;
29ED 795C       +1  6888                     mov             r1,#adec+9
29EF 7F02       +1  6889                     mov             r7,#2;2bait
29F1 C3         +1  6890     upa2:   clr             c
29F2 E6         +1  6891                     mov             a,@r0
29F3 9430       +1  6892                     subb    a,#30h
29F5 F7         +1  6893                     mov             @r1,a
29F6 18         +1  6894                     dec             r0
29F7 19         +1  6895                     dec             r1
29F8 DFF7       +1  6896                     djnz    r7,upa2
29FA 22         +1  6897                     ret  
                +1  6898     
                +1  6899     
                +1  6900         
                +1  6901      ;bufind+4..bufind+9
                +1  6902     ;-  - - -
                +1  6903     ;- - - - - - - - - -
                +1  6904     ;adec..adec+9
                +1  6905     ;ст            мл
29FB 7849       +1  6906     upak:   mov             r0,#bufind+9;
29FD 795C       +1  6907                     mov             r1,#adec+9
29FF 7F06       +1  6908                     mov             r7,#6
2A01 C3         +1  6909     upa:    clr             c
2A02 E6         +1  6910                     mov             a,@r0
2A03 9430       +1  6911                     subb    a,#30h
2A05 F7         +1  6912                     mov             @r1,a
2A06 18         +1  6913                     dec             r0
2A07 19         +1  6914                     dec             r1
2A08 DFF7       +1  6915                     djnz    r7,upa
2A0A 22         +1  6916                     ret
                +1  6917     
                +1  6918      ;чтение номера байта с индикатора(3байта)
                +1  6919     ;bufind+3..bufind+9
                +1  6920     ;-  - - -
                +1  6921     ;- - - - - - - - - -
                +1  6922     ;adec..adec+9
                +1  6923     ;ст            мл
2A0B 7849       +1  6924     upak3:  mov             r0,#bufind+9;
2A0D 795C       +1  6925                     mov             r1,#adec+9
2A0F 7F03       +1  6926                     mov             r7,#3;3bait
2A11 C3         +1  6927     upa1:   clr             c
2A12 E6         +1  6928                     mov             a,@r0
2A13 9430       +1  6929                     subb    a,#30h
2A15 F7         +1  6930                     mov             @r1,a
2A16 18         +1  6931                     dec             r0
2A17 19         +1  6932                     dec             r1
2A18 DFF7       +1  6933                     djnz    r7,upa1
2A1A 22         +1  6934                     ret
                +1  6935     
                +1  6936     ;вых-r2,r3-адрес ячее памяти прогр
2A1B            +1  6937     findkoef:
2A1B 79AE       +1  6938                     mov             r1,#diap
2A1D E7         +1  6939                     mov             a,@r1
2A1E 23         +1  6940                     rl              a                       ;diap*2(2bait )
2A1F FC         +1  6941                     mov             r4,a                    ;save
2A20 900000   F +1  6942                     mov             dptr,#diKDw             ;адрес таблицы поиска коффициентов
2A23 93         +1  6943                     movc    a,@a+dptr                       ;ст байт
2A24 FA         +1  6944                     mov             r2,a
2A25 A3         +1  6945                     inc             dptr
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   107

2A26 EC         +1  6946                     mov             a,r4
2A27 93         +1  6947                     movc    a,@a+dptr
2A28 FB         +1  6948                     mov             r3,a                    ;мл байт
2A29 22         +1  6949                     ret
                +1  6950     ;r2..r5 в опр яч внешн озу
2A2A            +1  6951     findext:
2A2A 79AE       +1  6952                     mov             r1,#diap
2A2C E7         +1  6953                     mov             a,@r1
2A2D 23         +1  6954                     rl              a                       ;diap*2(2bait )
2A2E 23         +1  6955                     rl              a                       ;diap*2(2bait )
2A2F F9         +1  6956                     mov             r1,a                    ;r1-номер ячейки внешнего озу
2A30 22         +1  6957                                     ret
                +1  6958     
                +1  6959     ;адрес ячеек прзу  коффициентов диапазона KD
                +1  6960     ;(5000h..5027h)
2A31 5000       +1  6961     diKDw:  dw              5000h                   ;10-2
2A33 5004       +1  6962                     dw              5004h                   ;10-3
2A35 5008       +1  6963                     dw              5008h                   ;10-4
2A37 500C       +1  6964                     dw              500ch                   ;10-5
2A39 5010       +1  6965                     dw              5010h                   ;10-6
2A3B 5014       +1  6966                     dw              5014h                   ;10-7
2A3D 5018       +1  6967                     dw              5018h                   ;10-8
2A3F 501C       +1  6968                     dw              501ch                   ;10-9
2A41 5020       +1  6969                     dw              5020h                   ;10-10
2A43 5024       +1  6970                     dw              5024h                   ;10-11
2A45 5028       +1  6971     dipar:  dw              5028h                   ;parol
2A47 502C       +1  6972     diKm:   dw              502ch                   ;Km для теста измерения
2A49 000186A0   +1  6973     chthou: db      00,01,86h,0a0h  ;100.000
                +1  6974     
2A4D AA08       +1  6975     move82: mov     r2,ltemp                        ;ltemp->r2..r5
2A4F AB09       +1  6976                     mov     r3,ltemp+1
2A51 AC0A       +1  6977                     mov     r4,ltemp+2
2A53 AD0B       +1  6978                     mov     r5,ltemp+3
2A55 22         +1  6979                     ret
                +1  6980     ;bufind+4..bufind+9
                +1  6981     ;-  - - -
                +1  6982     ;- - - - - - - - - -
                +1  6983     ;adec..adec+9
                +1  6984     ;ст            мл
2A56 7847       +1  6985     upakA:  mov             r0,#bufind+7;
2A58 795C       +1  6986                     mov             r1,#adec+9
2A5A 7F04       +1  6987                     mov             r7,#4
2A5C C3         +1  6988     upaa4:  clr             c
2A5D E6         +1  6989                     mov             a,@r0
2A5E 9430       +1  6990                     subb            a,#30h
2A60 F7         +1  6991                     mov             @r1,a
2A61 18         +1  6992                     dec             r0
2A62 19         +1  6993                     dec             r1
2A63 DFF7       +1  6994                     djnz            r7,upaa4
2A65 22         +1  6995                     ret
                +1  6996     
                +1  6997     ;bufind+4..bufind+9
                +1  6998     ;-  - - -
                +1  6999     ;- - - - - - - - - -
                +1  7000     ;adec..adec+9
                +1  7001     ;ст            мл
2A66 7848       +1  7002     upakB:  mov             r0,#bufind+8;
2A68 795C       +1  7003                     mov             r1,#adec+9
2A6A 7F05       +1  7004                     mov             r7,#5
2A6C C3         +1  7005     upab:   clr             c
2A6D E6         +1  7006                     mov             a,@r0
2A6E 9430       +1  7007                     subb            a,#30h
2A70 F7         +1  7008                     mov             @r1,a
2A71 18         +1  7009                     dec             r0
2A72 19         +1  7010                     dec             r1
2A73 DFF7       +1  7011                     djnz            r7,upab
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   108

2A75 C21B       +1  7012                     clr             bitznB
2A77 E543       +1  7013                     mov             a,bufind+3
2A79 B42D02     +1  7014                     cjne            a,#2dh,abret
2A7C D21B       +1  7015                     setb            bitznB
2A7E            +1  7016     abret:
2A7E 22         +1  7017                     ret
2A7F            +1  7018     CH_B:   db      ;       4bh,18h,96h,80h;989680h=10 **7
2A7F 4E6E6AA8   +1  7019                     db      4eh,6eh,6ah,0a8h;10**9
2A83 43FA0000   +1  7020     CH_500: db              43h,0fah,00,00;1fah=500
2A87 4856D800   +1  7021     CH_22T: db              48h,56h,0d8h,00;46h,0abh,0e0h,00;55f0h=22000
2A8B 49742400   +1  7022     CH_fl:  db      49h,74h,24h,00;47h,0c3h,50h,00;100000
                +1  7023     
                +1  7024     
                +1  7025     
                +1  7026     ;управление AD7731              r4=b1 r5=b2
2A8F 7403       +1  7027     iniacp: mov             a,#03
2A91 120000   F +1  7028                     call    write
2A94 EC         +1  7029                     mov             a,r4;#80h
2A95 120000   F +1  7030                     call    write
2A98 ED         +1  7031                     mov             a,r5;#04
2A99 120000   F +1  7032                     call    write
2A9C 7402       +1  7033                     mov             a,#02
2A9E 120000   F +1  7034                     call    write
2AA1 74A1       +1  7035                     mov             a,#0a1h
2AA3 120000   F +1  7036                     call    write
2AA6 7474       +1  7037                     mov             a,#74h
2AA8 120000   F +1  7038                     call    write
2AAB 2095FD     +1  7039                     jb              p1.5,$;p1.3,$
2AAE 7402       +1  7040                     mov             a,#02
2AB0 120000   F +1  7041                     call    write
2AB3 7481       +1  7042                     mov             a,#81h
2AB5 120000   F +1  7043                     call    write
2AB8 7474       +1  7044                     mov             a,#74h
2ABA 120000   F +1  7045                     call    write
2ABD 2095FD     +1  7046                     jb              p1.5,$;p1.3,$
2AC0 7402       +1  7047                     mov             a,#02
2AC2 120000   F +1  7048                     call    write
2AC5 7421       +1  7049                     mov             a,#21h
2AC7 120000   F +1  7050                     call    write
2ACA 7474       +1  7051                     mov             a,#74h
2ACC 120000   F +1  7052                     call    write
2ACF 22         +1  7053                     ret
                +1  7054     
                +1  7055     
2AD0 0000       +1  7056     tabB1_2:        db              00,00            ;B1,B2 в соотв с Tизм  
2AD2 6000       +1  7057                             db              60h,00h;40h,04h         ;10s
2AD4 6000       +1  7058                             db              60h,00;40h,04h          ;1s
2AD6 6001       +1  7059                             db              60h,01h;40h,04h         ;0,1s
2AD8 6001       +1  7060                             db              60h,01;00h;20h,04h              ;50ms
2ADA 6001       +1  7061                             db              60h,01;00h;20h,04h               ;10ms
2ADC 1333       +1  7062                             db              13h,33h;32h             ;2ms
                +1  7063     
                +1  7064     ;загр В1,В2 в завис от Т                                
2ADE 799A       +1  7065     loab12:         mov             r1,#parT
2AE0 900000   F +1  7066                             mov             dptr,#tabB1_2
2AE3 E7         +1  7067                             mov             a,@r1
2AE4 23         +1  7068                             rl              a;*2
2AE5 FF         +1  7069                             mov             r7,a                    ;save a
2AE6 93         +1  7070                             movc    a,@a+dptr
2AE7 FC         +1  7071                             mov             r4,a   ;b1
2AE8 0F         +1  7072                             inc             r7
2AE9 EF         +1  7073                             mov             a,r7
2AEA 93         +1  7074                             movc    a,@a+dptr
2AEB FD         +1  7075                             mov             r5,a
                +1  7076                     ;после загр В1,2 загр упр слово для нового Т
2AEC 22         +1  7077                             ret
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   109

                +1  7078     
                +1  7079     
2AED 7852       +1  7080     loadr2: mov             r0,#abin+3              ;r2..r5
2AEF E6         +1  7081                     mov             a,@r0                   ; ст мл   
2AF0 FA         +1  7082                     mov             r2,a
2AF1 18         +1  7083                     dec             r0
2AF2 E6         +1  7084                     mov             a,@r0
2AF3 FB         +1  7085                     mov             r3,a
2AF4 18         +1  7086                     dec             r0
2AF5 E6         +1  7087                     mov             a,@r0
2AF6 FC         +1  7088                     mov             r4,a
2AF7 18         +1  7089                     dec             r0
2AF8 E6         +1  7090                     mov             a,@r0
2AF9 FD         +1  7091                     mov             r5,a
2AFA 22         +1  7092                     ret
                +1  7093                                             
                +1  7094     
                +1  7095      ;загрузка KD в зависимости от диап изм  
                +1  7096      ;koef->r8..r11
2AFB 78AE       +1  7097     loadKD: mov             r0,#diap
2AFD E6         +1  7098                     mov             a,@r0
2AFE 900000   F +1  7099                     mov             dptr,#diKDn
2B01 75F004     +1  7100                     mov             b,#4
2B04 A4         +1  7101                     mul             ab
2B05 FF         +1  7102                     mov             r7,a;save
2B06 93         +1  7103                     movc    a,@a+dptr
2B07 F508       +1  7104                     mov             r8,a
2B09 A3         +1  7105                     inc             dptr
2B0A EF         +1  7106                     mov             a,r7
2B0B 93         +1  7107                     movc    a,@a+dptr
2B0C F509       +1  7108                     mov             r9,a
2B0E A3         +1  7109                     inc             dptr
2B0F EF         +1  7110                     mov             a,r7
2B10 93         +1  7111                     movc    a,@a+dptr
2B11 F50A       +1  7112                     mov             r10,a
2B13 A3         +1  7113                     inc             dptr
2B14 EF         +1  7114                     mov             a,r7
2B15 93         +1  7115                     movc    a,@a+dptr
2B16 F50B       +1  7116                     mov             r11,a
2B18 22         +1  7117                     ret
                +1  7118     
2B19 3F506B7B   +1  7119      diKDn: db              3fh,50h,6bh,7bh;3fh,80h,00,00           ;10-2
2B1D 3F507FCC   +1  7120                     db              3fh,50h,7fh,0cch;3fh,80h,00,00          ;10-3
2B21 3F4F9D0B   +1  7121                     db              3fh,4fh,9dh,0bh;3fh,80h,00,00           ;10-4
2B25 3F4FE869   +1  7122                     db              3fh,4fh,0e8h,69h;3fh,80h,00,00          ;10-5
2B29 3F50294A   +1  7123                     db              3fh,50h,29h,4ah;3fh,80h,00,00   ;4fh,0e9h,11h   ;0,81215   
                             10-6
2B2D 3F50639E   +1  7124                     db              3fh,50h,63h,9eh;3fh,80h,00,00           ;10-7
2B31 3F4BC9F0   +1  7125                     db              3fh,4bh,0c9h,0f0h;3fh,80h,00,00         ;10-8
2B35 3F4C063B   +1  7126                     db              3fh,4ch,06h,3bh;3fh,80h,00,00           ;10-9
2B39 3F50EFDD   +1  7127                     db              3fh,50h,0efh,0ddh;3fh,80h,00,00         ;10-10
2B3D 3F512AD9   +1  7128                     db              3fh,51h,2ah,0d9h;3fh,80h,00,00          ;10-11
                +1  7129     
2B41 00000039   +1  7130     ch57:           db      00,00,00,39h;57
2B45 00000014   +1  7131     ch20:           db      00,00,00,14h;20
                +1  7132     
                +1  7133     ;загр ус для тестов ацп         ;dptr-
2B49 78B1       +1  7134     lotpus: mov             r0,#vichR
2B4B B6210D     +1  7135                     cjne    @r0,#21h,te22
2B4E 900000   F +1  7136                     mov                     dptr,#tabt11;заслать ус 11А
2B51 E4         +1  7137     lotp:   clr             a
2B52 93         +1  7138                     movc    a,@a+dptr                               ;high byte
2B53 F584       +1  7139                     mov             p4,a
2B55 A3         +1  7140                     inc             dptr
2B56 E4         +1  7141                     clr             a
2B57 93         +1  7142                     movc    a,@a+dptr                               ;low byte
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   110

2B58 F585       +1  7143                     mov             p5,a
2B5A 22         +1  7144                     ret
2B5B B62205     +1  7145     te22:   cjne    @r0,#22h,te23
2B5E 900000   F +1  7146                     mov                     dptr,#tabt9;заслать ус 9А       
2B61 80EE       +1  7147                     jmp                     lotp
2B63 900000   F +1  7148     te23:   mov                     dptr,#tabt7;заслать ус 7А       
2B66 80E9       +1  7149                     jmp                     lotp
                +1  7150     
                +1  7151     
                +1  7152     
                +1  7153     
                +1  7154     
2B68 02030405   +1  7155     Tabn:           db              2,3,4,5,6,7,8,9,10,11           ;порядок диапазонов степени
2B6C 06070809                
2B70 0A0B                    
                +1  7156     
2B72 78AE       +1  7157     findR:  mov                     r0,#diap
2B74 E6         +1  7158                     mov                     a,@r0
2B75 900000   F +1  7159                     mov                     dptr,#Tabn
2B78 93         +1  7160                     movc            a,@a+dptr
2B79 22         +1  7161                     ret
                +1  7162     ;bufind=30h..39h                                                                           
                                           ;
2B7A C219       +1  7163     vvchif: clr             bitmig
2B7C 79B2       +1  7164                     mov             r1,#marker
2B7E E7         +1  7165                     mov             a,@r1                   ;изм цифры
2B7F 7840       +1  7166                     mov             r0,#bufind                      ;0000
2B81 28         +1  7167                     add             a,r0
2B82 F8         +1  7168                     mov             r0,a
2B83 06         +1  7169                     inc             @r0
2B84 B63A03     +1  7170                     cjne    @r0,#3ah,chif
2B87 7630       +1  7171                     mov             @r0,#30h
2B89 22         +1  7172                     ret
2B8A C3         +1  7173     chif:   clr                     c
2B8B 7430       +1  7174                     mov                     a,#30h
2B8D 96         +1  7175                     subb            a,@r0
2B8E 4002       +1  7176                     jc                      chif5
2B90 7630       +1  7177                     mov             @r0,#30h
2B92 22         +1  7178     chif5:  ret
                +1  7179     
2B93 80E5       +1  7180     vvnol41:        jmp                     vvchif  ;при наборе цифр в интервале и константах
                +1  7181     
2B95 B641FB     +1  7182     vvnol31:        cjne            @r0,#41h,vvnol41
2B98 800A       +1  7183                             jmp                     chifour
2B9A B631F8     +1  7184     vvnol23:        cjne            @r0,#31h,vvnol31
2B9D 8005       +1  7185                             jmp                     chifour 
                +1  7186     
2B9F 78B0       +1  7187     vvchibl:        mov                     r0,#level
2BA1 B623F6     +1  7188                             cjne            @r0,#23h,vvnol23;при наборе цифр в блоке
2BA4 C219       +1  7189     chifour:        clr             bitmig
2BA6 79B2       +1  7190                             mov             r1,#marker
2BA8 E7         +1  7191                             mov             a,@r1                   ;изм цифры
2BA9 7840       +1  7192                             mov             r0,#bufind                      ;1..4
2BAB 28         +1  7193                             add             a,r0
2BAC F8         +1  7194                             mov             r0,a
2BAD 06         +1  7195                             inc             @r0
2BAE B63504     +1  7196                             cjne    @r0,#35h,chifb
2BB1 7631       +1  7197                             mov             @r0,#31h
2BB3 8006       +1  7198                             jmp             chifb1
2BB5 B63003     +1  7199     chifb:          cjne    @r0,#30h,chifb1
2BB8 7631       +1  7200                             mov             @r0,#31h
2BBA 22         +1  7201                             ret
                +1  7202     
2BBB C3         +1  7203     chifb1: clr                     c
2BBC 7430       +1  7204                     mov                     a,#30h
2BBE 96         +1  7205                     subb            a,@r0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   111

2BBF 4002       +1  7206                     jc                      chifl5
2BC1 7630       +1  7207                     mov             @r0,#30h
2BC3 22         +1  7208     chifl5: ret
                +1  7209     
                +1  7210       ;перевод маркера влево
2BC4            +1  7211     marle:  
2BC4 C219       +1  7212                     clr             bitmig
                +1  7213                     ;mov            savba,#0   нельзя обнулять
2BC6 78B2       +1  7214             mov             r0,#marker
2BC8 16         +1  7215                     dec             @r0
2BC9 E6         +1  7216                     mov             a,@r0
2BCA C3         +1  7217                     clr             c
2BCB 953A       +1  7218                     subb    a,movleft         ;крайне левое положение
2BCD 5001       +1  7219                     jnc             rler
2BCF 06         +1  7220                     inc             @r0
2BD0 22         +1  7221     rler:   ret
                +1  7222         
                +1  7223     ;перевод маркера вправо
2BD1 C219       +1  7224     marri:  clr             bitmig
2BD3 78B2       +1  7225                     mov             r0,#marker
2BD5 06         +1  7226                     inc         @r0
2BD6 E53B       +1  7227                     mov             a,movrig           ;крайне правое положение
2BD8 C3         +1  7228                     clr             c
2BD9 96         +1  7229                     subb            a,@r0
2BDA 5001       +1  7230                     jnc             rrir
2BDC 16         +1  7231                     dec             @r0
2BDD 22         +1  7232     rrir:   ret
                +1  7233         
                +1  7234     ;konstA->bufind+4..bufind+7
2BDE 78BC       +1  7235     outA:   mov             r0,#konstA
2BE0 120000   F +1  7236                     call            resar2
2BE3 120343     +1  7237                     call            ftol                    ;->hex
2BE6 784F       +1  7238                     mov             r0,#abin
2BE8 120000   F +1  7239                     call            saver2
2BEB 7853       +1  7240                     mov                     r0,#adec
2BED 7952       +1  7241                     mov             r1,#abin+3
2BEF 120000   F +1  7242                     call            bindec
2BF2 785C       +1  7243                     mov                     r0,#adec+9
2BF4 7947       +1  7244                     mov                     r1,#bufind+7
2BF6 7F04       +1  7245                     mov                     r7,#4
2BF8 E6         +1  7246     outa2:  mov             a,@r0
2BF9 2430       +1  7247                     add             a,#30h
2BFB F7         +1  7248                     mov             @r1,a
2BFC 19         +1  7249                     dec             r1
2BFD 18         +1  7250                     dec             r0
2BFE DFF8       +1  7251                     djnz    r7,outa2
2C00 22         +1  7252                     ret
                +1  7253                                             
                +1  7254     ;konstB->bufind+4..bufind+8
                +1  7255     ;outB:  mov                     r0,#konstB
                +1  7256     ;               call            resar2
                +1  7257     ;               mov                     a,r2
                +1  7258     ;               anl                     a,#80h
                +1  7259     ;               jz                      outb3
                +1  7260     ;               mov             a,r2
                +1  7261     ;               anl                     a,#7fh
                +1  7262     ;               mov                     r2,a
                +1  7263     ;               mov                     bufind+3,#2dh
                +1  7264     ;outb3: call            ftol                    ;->hex
                +1  7265     ;               mov             r0,#abin
                +1  7266     ;               call            saver2
                +1  7267     ;               mov                     r0,#adec
                +1  7268     ;               mov             r1,#abin+3
                +1  7269     ;               call            bindec
                +1  7270     ;               mov                     r0,#adec+9
                +1  7271     ;               mov                     r1,#bufind+8
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   112

                +1  7272     ;               mov                     r7,#5
                +1  7273     ;outb2: mov             a,@r0
                +1  7274     ;               add             a,#30h
                +1  7275     ;               mov             @r1,a
                +1  7276     ;               dec             r1
                +1  7277     ;               dec             r0
                +1  7278     ;               djnz    r7,outb2
                +1  7279     ;               ret
                +1  7280     
                +1  7281     
                +1  7282     ;пп мигания индикации
2C01 78B2       +1  7283     mign:   mov             r0,#marker
2C03 B6FF03     +1  7284                     cjne    @r0,#0ffh,mignn
                +1  7285             ;реж изм мигает *
2C06 C219       +1  7286                     clr             bitmig
2C08 22         +1  7287                     ret
                +1  7288     
2C09            +1  7289     mignn:  ;clr            c
2C09 7440       +1  7290                     mov             a,#bufind
2C0B 26         +1  7291                     add             a,@r0                   ;a=bufind+marker
2C0C F9         +1  7292                     mov             r1,a
2C0D 201907     +1  7293                     jb              bitmig,onmig
2C10 873C       +1  7294                     mov             savba,@r1
                +1  7295             ;       mov             a,@r1
                +1  7296             ;       mov             savba,a
2C12 7720       +1  7297                     mov             @r1,#" "
2C14 D219       +1  7298                     setb    bitmig
2C16 22         +1  7299                     ret
                +1  7300     
2C17 A73C       +1  7301     onmig:  mov             @r1,savba
                +1  7302                     ;mov            a,savba
                +1  7303                     ; mov           @r1,a
2C19 C219       +1  7304                     clr             bitmig
2C1B 120000   F +1  7305                     call    z_01s
2C1E 22         +1  7306                     ret
                +1  7307     ;номер ошибки bufind+6
2C1F 900000   F +1  7308     error:  mov             dptr,#teERR
2C22 120000   F +1  7309                     call    lotext
2C25 853946     +1  7310                     mov             bufind+6,nuerr
2C28 22         +1  7311                     ret
                +1  7312     
                +1  7313     
2C29            +1  7314     textT:          
2C29 FD543D32   +1  7315     te2ms:          db              0fdh,"T","=",32h,"m",67h,0fdh,0fdh,0fdh,0fdh ;load=0..5
2C2D 6D67FDFD                
2C31 FDFD                    
2C33 FD543D31   +1  7316     te10ms:         db              0fdh,"T","=",31h,30h,"m",67h,0fdh,0fdh,0fdh
2C37 306D67FD                
2C3B FDFD                    
2C3D FD543D35   +1  7317                             db              0fdh,"T","=",35h,30h,"m",67h,0fdh,0fdh,0fdh
2C41 306D67FD                
2C45 FDFD                    
2C47 FD543D64   +1  7318                             db              0fdh,"T","=",64h,31h,67h,0fdh,0fdh,0fdh,0fdh
2C4B 3167FDFD                
2C4F FDFD                    
2C51 20202054   +1  7319                             db              " "," "," ","T","=",31h,67h," "," "," "
2C55 3D316720                
2C59 2020                    
2C5B 2020543D   +1  7320                             db              " "," ","T","=",31h,30h,67h," "," "," "  
2C5F 31306720                
2C63 2020                    
                +1  7321     ;teNO:          db              0fdh,0fdh,0fdh,"H","E","T",0fdh,0fdh,0fdh,0fdh
                +1  7322     
2C65 42753474   +1  7323     teVICH:         db              "B",75h,34h,74h,79h,76h,74h,"T",77h," ";вычислить
2C69 79767454                
2C6D 7720                    
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   113

2C6F 20553D20   +1  7324     teAequ0:        db              " ",'U','='," "," "," "," "," "," ",65h
2C73 20202020                
2C77 2065                    
2C79 20423D2B   +1  7325     teBequ0:        db              " ",'B','=','+'," "," "," "," "," "," "
2C7D 20202020                
2C81 2020                    
2C83 20207145   +1  7326     teMENU:         db              " "," ",71h,"E","H",72h," "," "," "," "
2C87 48722020                
2C8B 2020                    
                +1  7327     
2C8D 20544579   +1  7328     teTESI:         db      " ","T","E",79h,"T",2dh,74h,33h,71h," ";ТЕСТ -ИЗМ    11
2C91 542D7433                
2C95 7120                    
2C97 54457954   +1  7329     teTESR:         db      "T","E",79h,"T"," ","R",35h," "," "," ";ТЕСТ RS 12
2C9B 20523520                
2C9F 2020                    
2CA1 20794B30   +1  7330     teSKOR:         db      " ",79h,'K',30h,"P"," ","R",35h," "," ";СКОР 232     13
2CA5 50205235                
2CA9 2020                    
2CAB 20204142   +1  7331     teAVK:          db      " "," ",'A','B','K'," "," "," "," "," "  ;AВK           14
2CAF 4B202020                
2CB3 2020                    
2CB5 204B4176   +1  7332     teKALIB:        db      " " ,'K','A',76h,74h,73h,"P "," "," "," ";КАЛИБР     15
2CB9 74735020                
2CBD 202020                  
2CC0 20544579   +1  7333     teTE11:         db              " ",'T',"E",79h,'T'," "," "," ",'T',31h;       21
2CC4 54202020                
2CC8 5431                    
2CCA 20544579   +1  7334     teTE9:          db              " ",'T',"E",79h,'T'," "," "," ",'T',32h;                22
2CCE 54202020                
2CD2 5432                    
2CD4 20544579   +1  7335     teTE7:          db              " ",'T',"E",79h,'T'," "," "," ",'T',33h;                23
2CD8 54202020                
2CDC 5433                    
2CDE 20202035   +1  7336     teS57_6:        db              " "," "," ",35h,37h,36h," "," "," "," ";57.6
2CE2 37362020                
2CE6 2020                    
2CE8 20202031   +1  7337     teS19_2:        db              " "," "," ",31h,39h,32h," "," "," "," ";19,2
2CEC 39322020                
2CF0 2020                    
                +1  7338     
2CF2 61415030   +1  7339     tePAR:          db              61h,'A',"P",30h,76h,77h," ",30h,30h,30h;пароль
2CF6 76772030                
2CFA 3030                    
2CFC 20303030   +1  7340     teKD:           db              " ",30h,30h,30h,30h,30h," "," "," ",'A';00000
2D00 30302020                
2D04 2041                    
2D06 74337120   +1  7341     teIZMK:         db      74h,33h,71h," ","K",30h,"H",79h,"T"," "
2D0A 4B304879                
2D0E 5420                    
2D10 20204275   +1  7342     teOUT:          db      " "," ","B",75h,"X",30h,78h," "," "," "  ;ВЫХОД
2D14 58307820                
2D18 2020                    
2D1A 2020304C   +1  7343     teOLL:          db      " "," ",30h,'L','L'," "," "," "," "," "  ;OLL
2D1E 4C202020                
2D22 2020                    
2D24 20203034   +1  7344     teCLE:          db      " "," ",30h,34h,74h,79h,'T','K','A' ," " ;ОЧИСТКА
2D28 7479544B                
2D2C 4120                    
2D2E 20203041   +1  7345     teMEM:          db      " "," ",30h,'A',71h,79h,'T'," " ; ПАМЯТЬ
2D32 71795420                
2D36 20203341   +1  7346     teWR:           db      " "," ",33h,'A',61h,74h,79h,77h," "," ";ЗАПИСЬ
2D3A 61747977                
2D3E 2020                    
2D40 20206150   +1  7347     teLIST:         db      " "," ",61h,'P',30h,79h,71h,30h,"T","P ";;ПРОСМОТР
2D44 30797130                
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   114

2D48 545020                  
2D4B 20206130   +1  7348     teFULL:         db      " "," ",61h,30h,76h,"H",'A',62h," "," ";ПОЛНАЯ
2D4F 76484162                
2D53 2020                    
2D55 20744854   +1  7349     teINT:          db      " ",74h,"H",'T'," ",30h,30h,30h,30h,67h;ИНТ 0000
2D59 20303030                
2D5D 3067                    
2D5F 20207376   +1  7350     teBL:           db      " "," ",73h,76h,30h,'K'," "," "," "," ";БЛОК
2D63 304B2020                
2D67 2020                    
2D69 20207376   +1  7351     teBL0:          db      " "," ",73h,76h,30h,'K'," ",30h," "," ";БЛОК 0
2D6D 304B2030                
2D71 2020                    
2D73 30547934   +1  7352     teCH:           db      30h,'T',79h,34h,"E",'T'," ",30h,30h,31h;ОТСЧЕТ 001
2D77 45542030                
2D7B 3031                    
2D7D 79544154   +1  7353     teSTAT:         db      79h,'T','A','T',74h,79h,'T',74h,'K','A';СТАТИСТИКА
2D81 74795474                
2D85 4B41                    
2D87 71744820   +1  7354     teMIN:          db      71h,74h,"H"," "," "," "," "," "," "," ";МИН  00000
2D8B 20202020                
2D8F 2020                    
2D91 71414B79   +1  7355     teMAX:          db      71h,'A','K',79h," "," "," "," "," "," ";МАКС 00000
2D95 20202020                
2D99 2020                    
2D9B 79504578   +1  7356     teMID:          db      79h,"P","E",78h," "," "," "," "," "," ";СРЕД 00000
2D9F 20202020                
2DA3 2020                    
                +1  7357     
2DA5 2020304C   +1  7358     teOLI:          db              " "," ",30h,"L","L"," ","I"," "," "," "
2DA9 4C204920                
2DAD 2020                    
2DAF 2020304C   +1  7359     teOLR:          db              " "," ",30h,"L","L"," ",66h," "," "," "
2DB3 4C206620                
2DB7 2020                    
2DB9 20204552   +1  7360     teERR:          db              " "," ","E","R","R"," "," "," "," "," " ;ERR
2DBD 52202020                
2DC1 2020                    
2DC3 2020454E   +1  7361     teEND:          db              " "," ","E","N","D"," "," "," "," "," " ;END
2DC7 44202020                
2DCB 2020                    
                +1  7362     
                +1  7363     ;dptr+4-приемник
                +1  7364     ;dptr-источник
                +1  7365     ;r7-кол байт  
2DCD 7F04       +1  7366     xCIKLWR:        mov             r7,#4   
2DCF E0         +1  7367     lwrx:           movx            a,@dptr
2DD0 C083       +1  7368                             push            dph
2DD2 C082       +1  7369                             push            dpl
2DD4 A3         +1  7370                             inc             dptr
2DD5 A3         +1  7371                             inc             dptr
2DD6 A3         +1  7372                             inc             dptr
2DD7 A3         +1  7373                             inc             dptr
2DD8 F0         +1  7374                             movx            @dptr,a
2DD9 D082       +1  7375                             pop             dpl
2DDB D083       +1  7376                             pop             dph
2DDD A3         +1  7377                             inc             dptr
2DDE DFEF       +1  7378                             djnz            r7,lwrx
2DE0 22         +1  7379                             ret
                +1  7380     ;r2..r5->@dptr..@dptr+3                         
2DE1 EA         +1  7381     saveIr2:        mov             a,r2
2DE2 F0         +1  7382                             movx    @dptr,a
2DE3 A3         +1  7383                             inc     dptr
2DE4 EB         +1  7384                             mov     a,r3
2DE5 F0         +1  7385                             movx    @dptr,a
2DE6 A3         +1  7386                             inc             dptr
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   115

2DE7 EC         +1  7387                             mov             a,r4
2DE8 F0         +1  7388                             movx    @dptr,a
2DE9 A3         +1  7389                             inc             dptr
2DEA ED         +1  7390                             mov             a,r5
2DEB F0         +1  7391                             movx    @dptr,a
2DEC 22         +1  7392                             ret
                +1  7393     ;r2..r5-> @r0..@r0+3
                +1  7394     
2DED EA         +1  7395     saver2:         mov     a,r2
2DEE F6         +1  7396                             mov     @r0,a
2DEF 08         +1  7397                             inc     r0
2DF0 EB         +1  7398                             mov     a,r3
2DF1 F6         +1  7399                             mov     @r0,a
2DF2 08         +1  7400                             inc     r0
2DF3 EC         +1  7401                             mov     a,r4
2DF4 F6         +1  7402                             mov     @r0,a
2DF5 08         +1  7403                             inc     r0
2DF6 ED         +1  7404                             mov     a,r5
2DF7 F6         +1  7405                             mov     @r0,a
2DF8 22         +1  7406                             ret 
                +1  7407     
2DF9 7F50       +1  7408     clmassix:       mov                     r7,#50h;28h
2DFB 900100     +1  7409                             mov     dptr,#MASS0        ;забить массив A нулями
2DFE 7400       +1  7410     clmax:          mov          a,#00h
2E00 F0         +1  7411                 movx    @dptr,a
2E01 A3         +1  7412                 inc     dptr
2E02 DFFA       +1  7413                 djnz                r7,clmax                
2E04 F56E       +1  7414                 mov     chmas,a
2E06 C201       +1  7415                 clr     bitmas
2E08 22         +1  7416                 ret
                +1  7417     ;r1-яЁшхьшъ
                +1  7418     ;r0-шёЄюўшъ
                +1  7419     ;r7-ъюы срщЄ  
2E09            +1  7420     CIKLWR:
2E09 7F04       +1  7421                     mov             r7,#4   
2E0B E6         +1  7422     lwr:            mov     a,@r0
2E0C F7         +1  7423                     mov     @r1,a
2E0D 09         +1  7424                     inc             r1
2E0E 08         +1  7425                     inc             r0
2E0F DFFA       +1  7426                     djnz    r7,lwr
2E11 22         +1  7427                     ret     
                +1  7428     ;r2..r5-> @dptr..@dptr+3
                +1  7429     
2E12 120000   F +1  7430     zmul:   call    maform
2E15 120000   F +1  7431                     call    lmul
2E18 120000   F +1  7432                     call    bform
2E1B 22         +1  7433                     ret
                +1  7434     
2E1C 120000   F +1  7435     zdiv:   call    maform
2E1F 120000   F +1  7436                     call    divide
2E22 120000   F +1  7437                     call    bform
2E25 22         +1  7438                     ret
                +1  7439     
2E26 EA         +1  7440     maform: mov a,r2
2E27 33         +1  7441             rlc a
2E28 5006       +1  7442             jnc             fo1m
2E2A D202       +1  7443                     setb            znmat
2E2C 120000   F +1  7444                     call   form4
2E2F 22         +1  7445                     ret
2E30 C202       +1  7446     fo1m:   clr             znmat
2E32 22         +1  7447                     ret
                +1  7448     
2E33 300203     +1  7449     bform:  jnb             znmat,fo2m
2E36 120000   F +1  7450                     call    form4
2E39 22         +1  7451     fo2m:   ret
                +1  7452       
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   116

                +1  7453     ;r2..r5 яхЁхтхёЄш т фюя ъюф
2E3A ED         +1  7454     form4:  mov a,r5
2E3B F4         +1  7455                     cpl a
2E3C 2401       +1  7456             add a,#1
2E3E FD         +1  7457             mov r5,a
2E3F EC         +1  7458             mov a,r4
2E40 F4         +1  7459             cpl a
2E41 3400       +1  7460             addc    a,#0
2E43 FC         +1  7461             mov r4,a
2E44 EB         +1  7462             mov a,r3
2E45 F4         +1  7463                     cpl a
2E46 3400       +1  7464             addc    a,#0
2E48 FB         +1  7465             mov r3,a
2E49 EA         +1  7466             mov a,r2
2E4A F4         +1  7467             cpl a
2E4B 3400       +1  7468             addc    a,#0
2E4D FA         +1  7469             mov r2,a
2E4E 22         +1  7470             ret
                +1  7471     
2E4F 120000   F +1  7472     zcmp:   call            maform
2E52 120000   F +1  7473                     call            lcmp
2E55 C0D0       +1  7474                     push            psw
2E57 120000   F +1  7475                     call    bform
2E5A D0D0       +1  7476                     pop             psw
2E5C 22         +1  7477                     ret
                +1  7478     
                +1  7479     
                +1  7480     ;@r0..@r0+3->r8..r11
                +1  7481     
2E5D E6         +1  7482     resar8: mov     a,@r0
2E5E F508       +1  7483                     mov     ltemp,a
2E60 08         +1  7484                     inc     r0
2E61 E6         +1  7485                     mov     a,@r0
2E62 F509       +1  7486                     mov     ltemp+1,a
2E64 08         +1  7487                     inc     r0
2E65 E6         +1  7488                     mov     a,@r0
2E66 F50A       +1  7489                     mov     ltemp+2,a
2E68 08         +1  7490                     inc     r0
2E69 E6         +1  7491                     mov     a,@r0
2E6A F50B       +1  7492                     mov     ltemp+3,a
2E6C 22         +1  7493                     ret
                +1  7494     
                +1  7495     ;
                +1  7496     ;r0- рфЁхё _ўхщъш єяръютрюую фтюшўюую ўшёыр  
                +1  7497     ;r2,a фтюшўюх ўшёыю 2 срщЄр 
                +1  7498     ;т_ї- @r0 єяръютрюх фхё_Єшўюх ўшёыю BCD 3 срщЄр 
                +1  7499     ;r2 a    ўшёыю 180
                +1  7500     ;00 b4
                +1  7501     ;т_ї- mabin..mabin+2
                +1  7502     ;     80 01 00
                +1  7503     
2E6D C8         +1  7504     cond:   xch     a,r0    
2E6E F9         +1  7505                     mov     r1,a
2E6F C8         +1  7506                     xch     a,r0
2E70 7C03       +1  7507                     mov     r4,#03
2E72 7700       +1  7508     dcoa:   mov     @r1,#00
2E74 09         +1  7509                     inc     r1
2E75 DCFB       +1  7510                     djnz    r4,dcoa
2E77 7B10       +1  7511                     mov     r3,#10h
2E79 C3         +1  7512     dcob:   clr     c
2E7A 33         +1  7513                     rlc     a
2E7B CA         +1  7514                     xch     a,r2
2E7C 33         +1  7515                     rlc     a
2E7D CA         +1  7516                     xch     a,r2
2E7E C8         +1  7517                     xch     a,r0
2E7F F9         +1  7518                     mov     r1,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   117

2E80 C8         +1  7519                     xch     a,r0
2E81 7C03       +1  7520                     mov     r4,#03
2E83 FD         +1  7521                     mov     r5,a
2E84 E7         +1  7522     dcoc:   mov     a,@r1 
2E85 37         +1  7523                     addc    a,@r1
2E86 D4         +1  7524                     da      a
2E87 F7         +1  7525                     mov     @r1,a
2E88 09         +1  7526                     inc     r1
2E89 DCF9       +1  7527                     djnz    r4,dcoc
2E8B ED         +1  7528                     mov     a,r5
2E8C 4003       +1  7529                     jc      dcod
2E8E DBE9       +1  7530                     djnz    r3,dcob
2E90 C3         +1  7531                     clr     c
2E91 00         +1  7532     dcod:   nop
2E92 22         +1  7533                     ret
                +1  7534     
2E93 8A08       +1  7535     move28: mov     ltemp,r2                        ;r2..r5->ltemp
2E95 850309     +1  7536                     mov     ltemp+1,3
2E98 85040A     +1  7537                     mov     ltemp+2,4
2E9B 85050B     +1  7538                     mov     ltemp+3,5
2E9E 22         +1  7539                     ret
                +1  7540     
                +1  7541     ;@r0..@r0+3->r2..r5
                +1  7542     
2E9F E6         +1  7543     resar2: mov     a,@r0
2EA0 FA         +1  7544                     mov     r2,a
2EA1 08         +1  7545                     inc     r0
2EA2 E6         +1  7546                     mov     a,@r0
2EA3 FB         +1  7547                     mov     r3,a
2EA4 08         +1  7548                     inc     r0
2EA5 E6         +1  7549                     mov     a,@r0
2EA6 FC         +1  7550                     mov     r4,a
2EA7 08         +1  7551                     inc     r0
2EA8 E6         +1  7552                     mov     a,@r0
2EA9 FD         +1  7553                     mov     r5,a
2EAA 22         +1  7554                     ret
                +1  7555     
                +1  7556     ;25mkc !!!!!!!!!!!!!!!1
2EAB 7B4B       +1  7557     z_9:    mov R3,#4Bh      ;загрузка числа
2EAD DBFE       +1  7558                 djnz R3,$
2EAF 22         +1  7559             ret
                +1  7560     
                +1  7561     ;запись   передаваемый байт в acc
                +1  7562     ;передача байта послед кодом старшими разрядами  вперед
2EB0 7A08       +1  7563     write:  mov R2,#8
2EB2 C3         +1  7564                     clr  c  
2EB3 C297       +1  7565     wr1:    clr             p1.7;P1.2
2EB5 00         +1  7566                     nop 
2EB6 33         +1  7567                     rlc A
2EB7 9296       +1  7568                     mov P1.6,C;P1.1,C
2EB9 120000   F +1  7569                     call tim2
2EBC D297       +1  7570                     setb P1.7;P1.2
2EBE 120000   F +1  7571             call tim2
2EC1 DAF0       +1  7572                     djnz R2,wr1
2EC3 C296       +1  7573                     clr P1.6;P1.1
2EC5 22         +1  7574                     ret
                +1  7575     
                +1  7576     ;чтение номера байта с индикатора(2байта)
                +1  7577     ;bufind+8..bufind+9
                +1  7578     ;adec..adec+9
                +1  7579     ;ст            мл
2EC6 7847       +1  7580     upak1:  mov             r0,#bufind+7;
2EC8 795C       +1  7581                     mov             r1,#adec+9
2ECA C3         +1  7582                     clr             c
2ECB E6         +1  7583                     mov             a,@r0
2ECC 9430       +1  7584                     subb    a,#30h
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   118

2ECE FF         +1  7585                     mov             r7,a
2ECF C3         +1  7586                     clr             c
2ED0 9405       +1  7587                     subb    a,#5
2ED2 4004       +1  7588                     jc              upk1
2ED4 7404       +1  7589                     mov             a,#4
2ED6 8001       +1  7590                     jmp             upk2
2ED8 EF         +1  7591     upk1:   mov             a,r7
2ED9 F7         +1  7592     upk2:   mov             @r1,a
2EDA 22         +1  7593                     ret  
                +1  7594     ;r1-мл байт счетчика ячеек
2EDB C3         +1  7595     chminus: clr                    c
2EDC E7         +1  7596                     mov                     a,@r1
2EDD 9401       +1  7597                     subb            a,#01
2EDF F7         +1  7598                     mov                     @r1,a;low
2EE0 19         +1  7599                     dec                     r1
2EE1 E7         +1  7600                     mov                     a,@r1
2EE2 9400       +1  7601                     subb            a,#00
2EE4 F7         +1  7602                     mov                     @r1,a
2EE5 22         +1  7603                     ret
                +1  7604     
                +1  7605     
                +1  7606     ;чтение номера байта с индикатора(4байта)
                +1  7607     ;bufind+6..bufind+9
                +1  7608     ;adec..adec+9
                +1  7609     ;ст            мл
2EE6 7848       +1  7610     upak4:  mov             r0,#bufind+8;
2EE8 795C       +1  7611                     mov             r1,#adec+9
2EEA 7F04       +1  7612                     mov             r7,#4
2EEC C3         +1  7613     upaa:   clr             c
2EED E6         +1  7614                     mov             a,@r0
2EEE 9430       +1  7615                     subb    a,#30h
2EF0 F7         +1  7616                     mov             @r1,a
2EF1 18         +1  7617                     dec             r0
2EF2 19         +1  7618                     dec             r1
2EF3 DFF7       +1  7619                     djnz    r7,upaa
2EF5 22         +1  7620                     ret
                +1  7621     
                +1  7622     ;dptr-адр ячейки 1й соотв блока 
2EF6 E538       +1  7623     adrblok:        mov             a,nblok
2EF8 C3         +1  7624                     clr             c
2EF9 9401       +1  7625                     subb    a,#1
2EFB FD         +1  7626                     mov             r5,a
2EFC E4         +1  7627                     clr             a
2EFD FC         +1  7628                     mov             r4,a
2EFE FB         +1  7629                     mov             r3,a
2EFF FA         +1  7630                     mov             r2,a
2F00 900000   F +1  7631                     mov             dptr,#ch320h
2F03 120000   F +1  7632                     CALL    ldc_ltemp                ; ltemp <-320
2F06 120000   F +1  7633                     call    lmul;r2..r5
2F09 ED         +1  7634                     mov             a,r5
2F0A 2450       +1  7635                     add             a,#50h
2F0C F582       +1  7636                     mov             dpl,a
2F0E EC         +1  7637                     mov             a,r4
2F0F 3401       +1  7638                     addc    a,#01           
2F11 F583       +1  7639                     mov             dph,a                   ;dptr-
2F13 22         +1  7640                     ret
                +1  7641     
                +1  7642     ;
                +1  7643     ;saven_bl<-dptr  адрес след ячейки внешн озу 
2F14 E538       +1  7644     save_hl:        mov             a,nblok
2F16 B4011D     +1  7645                     cjne    a,#1,sa_hl1
2F19 79D3       +1  7646                     mov             r1,#saven_bl
2F1B E583       +1  7647     sa_hl:  mov             a,dph
2F1D F7         +1  7648                     mov             @r1,a
2F1E 09         +1  7649                     inc             r1
2F1F E582       +1  7650                     mov             a,dpl
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   119

2F21 F7         +1  7651                     mov             @r1,a
                +1  7652             ;;;;;;;;;не конец ли блока
2F22 79D6       +1  7653                     mov                     r1,#volume+1;work+1
2F24 120000   F +1  7654                     call            chminus
2F27 78D5       +1  7655                     mov             r0,#volume
2F29 E6         +1  7656                     mov             a,@r0
2F2A 30E708     +1  7657                     jnb             acc.7,noendli
2F2D C20A       +1  7658                     clr                     bitbon                  ;блок закончился
2F2F 534BFD     +1  7659                     anl                     bufind+11,#0fdh
2F32 120000   F +1  7660                     call            ind
2F35 22         +1  7661     noendli: ret
                +1  7662     
2F36 B40204     +1  7663     sa_hl1: cjne    a,#2,sa_hl2
2F39 79C0       +1  7664                     mov             r1,#saven_bl2
2F3B 80DE       +1  7665                     jmp             sa_hl
                +1  7666     
2F3D B40304     +1  7667     sa_hl2: cjne    a,#3,sa_hl3
2F40 79C2       +1  7668                     mov             r1,#saven_bl3
2F42 80D7       +1  7669                     jmp             sa_hl
2F44 79D9       +1  7670     sa_hl3: mov             r1,#saven_bl4
2F46 80D3       +1  7671                     jmp             sa_hl
                +1  7672     
                +1  7673     ;загрузка dptr сохр ранее значением адреса ячейки
2F48            +1  7674     resa_hl:
2F48 E538       +1  7675                     mov             a,nblok
2F4A B4010A     +1  7676                     cjne    a,#1,re_hl1
2F4D 79D3       +1  7677                     mov             r1,#saven_bl;блок1 150h..46fh
2F4F E7         +1  7678     re_hl:  mov             a,@r1   
2F50 F583       +1  7679                     mov             dph,a
2F52 09         +1  7680                     inc             r1
2F53 E7         +1  7681                     mov             a,@r1
2F54 F582       +1  7682                     mov             dpl,a
2F56 22         +1  7683                     ret
                +1  7684     
2F57 B40204     +1  7685     re_hl1: cjne    a,#2,re_hl2
2F5A 79C0       +1  7686                     mov             r1,#saven_bl2   ;блок2 470h..78fh
2F5C 80F1       +1  7687                     jmp             re_hl
                +1  7688     
2F5E B40304     +1  7689     re_hl2: cjne    a,#3,re_hl3
2F61 79C2       +1  7690                     mov             r1,#saven_bl3   ;блок3 790h..aafh
2F63 80EA       +1  7691                     jmp             re_hl
                +1  7692     
2F65 79D9       +1  7693     re_hl3: mov             r1,#saven_bl4   ;блок4 ab0h..dcfh
2F67 80E6       +1  7694                     jmp             re_hl
                +1  7695     ;загрузка rez_A3 в соотв яч внешн озу
2F69 789C       +1  7696     loA3_X: mov             r0,#rez_A3
2F6B 120000   F +1  7697                     call    resar2
2F6E EA         +1  7698                     mov             a,r2                    ;
2F6F F0         +1  7699                     movx    @dptr,a
2F70 A3         +1  7700                     inc             dptr
2F71 EB         +1  7701                     mov             a,r3
2F72 F0         +1  7702                     movx    @dptr,a
2F73 A3         +1  7703                     inc             dptr
2F74 EC         +1  7704                     mov             a,r4
2F75 F0         +1  7705                     movx    @dptr,a
2F76 A3         +1  7706                     inc             dptr
2F77 ED         +1  7707                     mov             a,r5
2F78 F0         +1  7708                     movx    @dptr,a
2F79 A3         +1  7709                     inc             dptr;адрес след ячейки внешн озу храним
2F7A 22         +1  7710                     ret             ;в ячейке saven_bl
                +1  7711     ;чтение в rez_A3 из соотв яч внешн озу
                +1  7712     
2F7B E0         +1  7713     reA3_X: movx    a,@dptr
2F7C FA         +1  7714                     mov             r2,a
2F7D A3         +1  7715                     inc             dptr
2F7E E0         +1  7716                     movx    a,@dptr
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   120

2F7F FB         +1  7717                     mov             r3,a
2F80 A3         +1  7718                     inc             dptr
2F81 E0         +1  7719                     movx    a,@dptr
2F82 FC         +1  7720                     mov             r4,a
2F83 A3         +1  7721                     inc             dptr
2F84 E0         +1  7722                     movx    a,@dptr
2F85 FD         +1  7723                     mov             r5,a
2F86 A3         +1  7724                     inc             dptr
2F87 789C       +1  7725                     mov             r0,#rez_A3
2F89 120000   F +1  7726                     call    saver2
2F8C 22         +1  7727                     ret
                +1  7728     
                +1  7729     ;разбивка внешнего озу
                +1  7730     ;0..ffh считывается страница рпзу калибровочных коффициентов
                +1  7731     ;100h..150h обл внеш озу для скользящего массива измерения
                +1  7732     ;150h..46fh 1й блок
                +1  7733     ;470h..78fh     2й блок
                +1  7734     ;790h..aaf      3й блок
                +1  7735     ;ab0h..dcfh 4й блок
                +1  7736     ;dd0..fffh свободная область
                +1  7737     ;
                +1  7738     ;светодиоды и точки для индикатора
                +1  7739     ;такт
                +1  7740     ;измер
                +1  7741     ;avp
                +1  7742     ;нуль
                +1  7743     ;0,1s
                +1  7744     ;1s
                +1  7745     ;10s
                +1  7746     ;кмп
                +1  7747     ;память
                +1  7748     ;пуск
                    7749     
                    7750     ;$include (sarifm3.asm) 
                +1  7751     ; ” ©« SARIFM.ASM 8.11.95               ;файл арифметики
                +1  7752     
  0008          +1  7753     ltemp   equ       8           ;long temporary
  000C          +1  7754     xtemp   equ       12          ;other temporaries
  000A          +1  7755     DECSIZE EQU       10
  0004          +1  7756     NUMSIZE EQU       4
  0004          +1  7757     RR4             EQU       4
  0005          +1  7758     RR5             EQU       5
                +1  7759     
                +1  7760     ; rseg     ARIF ; Switch to this code segment.
                +1  7761     ; using    0    ; Specify register bank for the following program code.                    
                                            ; Arithmetics:  CLEARING string
                +1  7762     ; Input:
                +1  7763     ; R0 - pointer to string,
                +1  7764     ; NUMSIZE - byte count if CLRNUM used,
                +1  7765     ; DECSIZE - byte count if CLRDEC used,
                +1  7766     ; R2 - byte count if CLEAR used;
                +1  7767     ; Output:  none.
                +1  7768     
2F8D            +1  7769     CLRDEC:
2F8D 7A0A       +1  7770                 MOV R2, #DECSIZE
2F8F 8002       +1  7771                 SJMP    CLEAR
2F91            +1  7772     CLRNUM:
2F91 7A04       +1  7773                 MOV R2, #NUMSIZE
                +1  7774                 ;JMP    CLEAR
2F93            +1  7775     CLEAR:
2F93 E4         +1  7776                 CLR A
2F94 F6         +1  7777     CLR11:  MOV @R0, A
2F95 08         +1  7778                 INC R0
2F96 DAFC       +1  7779                 DJNZ    R2, CLR11
2F98 22         +1  7780                 RET
                +1  7781     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   121

                +1  7782     ;**********************************
                +1  7783     ;mov    r1,#abin+3
                +1  7784     ;mov    r0,#adec
                +1  7785     ; _ _ _ _
                +1  7786     ;     03ff
                +1  7787     ;ст     мл   - вход
                +1  7788     ; _ _ _ _ _ _ _ _ _ _
                +1  7789     ;             1 0 2 3
                +1  7790     ;ст                мл 
                +1  7791     ;**********************************
                +1  7792     
2F99            +1  7793     BINDEC:
                +1  7794     ; Arithmetics:  CONVERTING from binary into decimal "4->10"
                +1  7795     ; Input:
                +1  7796     ; R0 - pointer to destination (high digit is the first),
                +1  7797     ; R1 - pointer to source,
                +1  7798     ; NUMSIZE - byte count in binary number;
                +1  7799     ; DECSIZE - byte count in decimal number;
                +1  7800     ; Output:  none.
                +1  7801     ; Source saved
                +1  7802     
                +1  7803         ; 1. Clear result
2F99 7A05       +1  7804         MOV R2, #DECSIZE/2
2F9B 120000   F +1  7805         CALL   CLEAR  ; incrementing R0
                +1  7806     
                +1  7807         ; 2. Prepare convertion
2F9E 18         +1  7808         DEC R0
2F9F 8804       +1  7809         MOV RR4, R0 ; R4 - pointer to low byte of packed decimal result
2FA1 8905       +1  7810         MOV RR5, R1 ; R5 - pointer to low byte of binary number
2FA3 7B20       +1  7811         MOV R3, #NUMSIZE*8  ; R3 - bit counter in binary number
                +1  7812     
                +1  7813         ; 3. Convert cyrcle
2FA5            +1  7814     BIN30:
                +1  7815                 ; 3.1. Rotate binary number one bit to left and prepare <Carry>
2FA5 A905       +1  7816                 MOV R1, RR5
2FA7 7A04       +1  7817                 MOV R2, #NUMSIZE
2FA9 E7         +1  7818     BIN31:  MOV A, @R1
2FAA 33         +1  7819                 RLC A
2FAB F7         +1  7820                 MOV @R1, A
2FAC 19         +1  7821                 DEC R1
2FAD DAFA       +1  7822                 DJNZ    R2, BIN31
2FAF A905       +1  7823                 MOV R1, RR5
2FB1 E7         +1  7824                 MOV A, @R1
2FB2 92E0       +1  7825                 MOV ACC.0, C
2FB4 F7         +1  7826                 MOV @R1, A
                +1  7827      ; 3.2. Doubling decimal result with <Carry>
2FB5 A804       +1  7828                 MOV R0, RR4
2FB7 7A05       +1  7829                 MOV R2, #DECSIZE/2
2FB9 E6         +1  7830     BIN32:  MOV A, @R0
2FBA 36         +1  7831                 ADDC    A, @R0
2FBB D4         +1  7832                 DA  A
2FBC F6         +1  7833                 MOV @R0, A
2FBD 18         +1  7834                 DEC R0
2FBE DAF9       +1  7835                 DJNZ    R2, BIN32
                +1  7836     
                +1  7837       ; 3.3. End of convert cyrcle
2FC0 DBE3       +1  7838               DJNZ    R3, BIN30
                +1  7839     
                +1  7840         ; 4. Make bytes from half-bytes
2FC2 E8         +1  7841                MOV A, R0
2FC3 240A       +1  7842                ADD A, #DECSIZE
2FC5 F8         +1  7843                MOV R0, A   ; R0 - pointer to low byte of unpacked decimal result
2FC6 A904       +1  7844                MOV R1, RR4 ; R1 - pointer to low byte of packed decimal result
2FC8 7A05       +1  7845                MOV R2, #DECSIZE/2
2FCA E7         +1  7846     BIN41:  MOV A, @R1
2FCB 540F       +1  7847                 ANL A, #00FH
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   122

2FCD F6         +1  7848                 MOV @R0, A
2FCE 18         +1  7849                 DEC R0
2FCF E7         +1  7850                 MOV A, @R1
2FD0 C4         +1  7851                 SWAP    A
2FD1 540F       +1  7852                 ANL A, #00FH
2FD3 F6         +1  7853                 MOV @R0, A
2FD4 18         +1  7854                 DEC R0
2FD5 19         +1  7855                 DEC R1
2FD6 DAF2       +1  7856                 DJNZ    R2, BIN41
2FD8 22         +1  7857                 RET
                +1  7858     
                +1  7859     
                +1  7860     ;*********************************
                +1  7861     ;mov    r0,#abin
                +1  7862     ;mov    r1,#adec
                +1  7863     ; _ _ _ _       -выход
                +1  7864     ; ff0000
                +1  7865     ;0004
                +1  7866     ;мл      ст
                +1  7867     
                +1  7868     ;ст                       мл
                +1  7869     ;_ _ _ _ _ _ _ _ _ _     вход
                +1  7870     ;                       2 5 5
                +1  7871     ;                   1 0 2 4
                +1  7872     
2FD9            +1  7873     DECBIN:
                +1  7874     ; Arithmetics:  CONVERTING from decimal into binary "10->4"
                +1  7875     ; Input:
                +1  7876     ; R0 - pointer to destination,
                +1  7877     ; R1 - pointer to source (high digit is the first),
                +1  7878     ; NUMSIZE - byte count in binary number;
                +1  7879     ; DECSIZE - byte count in decimal number;
                +1  7880     ; Output:  none
                +1  7881     ; Source cleared
                +1  7882     
                +1  7883         ; 1. Clear result
2FD9 120000   F +1  7884                 CALL    CLRNUM    ; + increment R0 by NUMSIZE
                +1  7885     
                +1  7886         ; 2. Prepare convertion
2FDC 18         +1  7887                 DEC R0
2FDD 8804       +1  7888                 MOV RR4, R0 ; R4 - pointer to high byte of binary result
2FDF 8905       +1  7889                 MOV RR5, R1 ; R5 - pointer to high byte of packed decimal number
2FE1 900000   F +1  7890                 MOV DPTR, #DECT2
2FE4 7B20       +1  7891                 MOV R3, #NUMSIZE*8  ; R3 - bit counter in binary number
                +1  7892     
                +1  7893         ; 3. Convert cyrcle
2FE6            +1  7894     DEC30:
                +1  7895         ; 3.1. Divide decimal number by 2 and prepare <Carry>
2FE6 C3         +1  7896                 CLR C
2FE7 A905       +1  7897                 MOV R1, RR5
2FE9 7A0A       +1  7898                 MOV R2, #DECSIZE
2FEB E7         +1  7899     DEC31:  MOV A, @R1
2FEC 540F       +1  7900                 ANL A, #00FH
2FEE 92E4       +1  7901                 MOV ACC.4, C
2FF0 93         +1  7902                 MOVC    A,@A+DPTR
2FF1 F7         +1  7903                 MOV @R1, A
2FF2 A2E7       +1  7904                 MOV C, ACC.7
2FF4 09         +1  7905                 INC R1
2FF5 DAF4       +1  7906                 DJNZ    R2, DEC31
                +1  7907         ; 3.2. Rotate binary result one bit to right with <Carry>
2FF7 A804       +1  7908                 MOV R0, RR4
2FF9 7A04       +1  7909                 MOV R2, #NUMSIZE
2FFB E6         +1  7910     DEC32:  MOV A, @R0
2FFC 13         +1  7911                 RRC A
2FFD F6         +1  7912                 MOV @R0, A
2FFE 18         +1  7913                 DEC R0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   123

2FFF DAFA       +1  7914                 DJNZ    R2, DEC32
                +1  7915     
                +1  7916         ; 3.3. End of convert cyrcle
3001 DBE3       +1  7917                 DJNZ    R3, DEC30
3003 22         +1  7918                 RET
                +1  7919     
3004 00800181   +1  7920     DECT2:  DB  00,80H,001,81H,02,82H,03,83H,04,84H
3008 02820383                
300C 0484                    
300E 00000000   +1  7921                     DB  00,00,00,00,00,00
3012 0000                    
3014 05850686   +1  7922                     DB  05,85H,06,86H,07,87H,08H,88H,09H,89H
3018 07870888                
301C 0989                    
                +1  7923     
                +1  7924     ;   Long comparison
                +1  7925     ;   Lcmp - called with arg1 in r2-r5 and arg2 in ltemp - returns with
                +1  7926     ;   flags and acc set as though a long subtraction was done.
                +1  7927     ;*******************************
                +1  7928     ;сравнить r2..r5 с (ltemp..ltemp+3)
                +1  7929     ;c=1     r2..r5< ltemp..ltemp+3     a<b
                +1  7930     ;c=0       r2..r5> ltemp..ltemp+3   a>b
                +1  7931     ;*******************************
301E            +1  7932     lcmp:
301E C3         +1  7933         clr c
301F EA         +1  7934         mov a,r2
3020 9508       +1  7935         subb    a,8
3022 700F       +1  7936         jnz done
3024 EB         +1  7937         mov a,r3
3025 9509       +1  7938         subb    a,9
3027 7008       +1  7939         jnz done1
3029 EC         +1  7940         mov a,r4
302A 950A       +1  7941         subb    a,10
302C 7003       +1  7942         jnz done1
302E ED         +1  7943         mov a,r5
302F 950B       +1  7944         subb    a,11
3031            +1  7945     done1:
3031 C2D2       +1  7946         clr ov      ;overflow is significant only for top byte
3033            +1  7947     done:
3033 22         +1  7948         ret
                +1  7949     
                +1  7950     ;   Load long into r2-5 from [dptr]
                +1  7951     
3034            +1  7952     ldc_long:
3034 E583       +1  7953         mov a,dph       ;is it in on board memory
3036 6010       +1  7954         jz  onboard     ;yes
3038 E4         +1  7955         clr a
3039 93         +1  7956         movc    a,@a+dptr
303A FA         +1  7957         mov r2,a
303B 7401       +1  7958         mov a,#1
303D 93         +1  7959         movc    a,@a+dptr
303E FB         +1  7960         mov r3,a
303F 7402       +1  7961         mov a,#2
3041 93         +1  7962         movc    a,@a+dptr
3042 FC         +1  7963         mov r4,a
3043 7403       +1  7964         mov a,#3
3045 93         +1  7965         movc    a,@a+dptr
3046 FD         +1  7966         mov r5,a
3047 22         +1  7967         ret
3048            +1  7968     onboard:
3048 A882       +1  7969         mov r0,dpl
304A E6         +1  7970         mov a,@r0
304B FA         +1  7971         mov r2,a
304C 08         +1  7972         inc r0
304D E6         +1  7973         mov a,@r0
304E FB         +1  7974         mov r3,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   124

304F 08         +1  7975         inc r0
3050 E6         +1  7976         mov a,@r0
3051 FC         +1  7977         mov r4,a
3052 08         +1  7978         inc r0
3053 E6         +1  7979         mov a,@r0
3054 FD         +1  7980         mov r5,a
3055 22         +1  7981         ret
                +1  7982     
                +1  7983     ;**************************************
                +1  7984     ;загрузить ltemp...+3 из памяти программ
                +1  7985     ;mov    dptr,#CH5
                +1  7986     ;call   ldc_ltemp        ltemp <--5
                +1  7987     ;**************************************
3056            +1  7988     ldc_ltemp:
3056 E583       +1  7989         mov a,dph       ;is it in on board memory
3058 6014       +1  7990         jz  oboard      ;yes
305A E4         +1  7991         clr a
305B 93         +1  7992         movc    a,@a+dptr
305C F508       +1  7993         mov 8,a
305E 7401       +1  7994         mov a,#1
3060 93         +1  7995         movc    a,@a+dptr
3061 F509       +1  7996         mov 9,a
3063 7402       +1  7997         mov a,#2
3065 93         +1  7998         movc    a,@a+dptr
3066 F50A       +1  7999         mov 10,a
3068 7403       +1  8000         mov a,#3
306A 93         +1  8001         movc    a,@a+dptr
306B F50B       +1  8002         mov 11,a
306D 22         +1  8003         ret
306E            +1  8004     oboard:
306E A882       +1  8005         mov r0,dpl
3070 8608       +1  8006         mov 8,@r0
3072 08         +1  8007         inc r0
3073 8609       +1  8008         mov 9,@r0
3075 08         +1  8009         inc r0
3076 860A       +1  8010         mov 10,@r0
3078 08         +1  8011         inc r0
3079 860B       +1  8012         mov 11,@r0
307B 22         +1  8013         ret
                +1  8014     
                +1  8015     ;*****************************
                +1  8016     ;mov    dptr,#k1
                +1  8017     ;call   ldx_long
                +1  8018     ;k1->r2..r5
                +1  8019     ;*****************************
                +1  8020     ;   Load long into r2-5 from [dptr]
                +1  8021     ;
                +1  8022     ; 01/30/90 JLZ      Updated from new library; added save/restore DPH, DPL
307C            +1  8023     ldx_long:
307C E583       +1  8024         mov a,dph       ;is it in on board memory
307E 6014       +1  8025         jz  onboar1        ;yes
3080 C082       +1  8026         push    dpl
3082 C083       +1  8027         push    dph
3084 E0         +1  8028         movx    a,@dptr
3085 FA         +1  8029         mov r2,a
3086 A3         +1  8030         inc dptr
3087 E0         +1  8031         movx    a,@dptr
3088 FB         +1  8032         mov r3,a
3089 A3         +1  8033         inc dptr
308A E0         +1  8034         movx    a,@dptr
308B FC         +1  8035         mov r4,a
308C A3         +1  8036         inc dptr
308D E0         +1  8037         movx    a,@dptr
308E FD         +1  8038         mov r5,a
308F D083       +1  8039         pop dph
3091 D082       +1  8040         pop dpl
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   125

3093 22         +1  8041         ret
3094            +1  8042     onboar1:
3094 A882       +1  8043         mov r0,dpl
3096 E6         +1  8044         mov a,@r0
3097 FA         +1  8045         mov r2,a
3098 08         +1  8046         inc r0
3099 E6         +1  8047         mov a,@r0
309A FB         +1  8048         mov r3,a
309B 08         +1  8049         inc r0
309C E6         +1  8050         mov a,@r0
309D FC         +1  8051         mov r4,a
309E 08         +1  8052         inc r0
309F E6         +1  8053         mov a,@r0
30A0 FD         +1  8054         mov r5,a
30A1 22         +1  8055         ret
                +1  8056     
                +1  8057     ;*********************************
                +1  8058     ;mov    dptr,#k2
                +1  8059     ;call   ldx_ltemp       ;k2->ltemp..ltemp+3
                +1  8060     ;**********************************
30A2            +1  8061     ldx_ltemp:
30A2 E583       +1  8062         mov a,dph       ;is it in on board memory
30A4 6010       +1  8063         jz  oboard1     ;yes
30A6 E0         +1  8064         movx    a,@dptr
30A7 F508       +1  8065         mov 8,a
30A9 A3         +1  8066         inc dptr
30AA E0         +1  8067         movx    a,@dptr
30AB F509       +1  8068         mov 9,a
30AD A3         +1  8069         inc dptr
30AE E0         +1  8070         movx    a,@dptr
30AF F50A       +1  8071         mov 10,a
30B1 A3         +1  8072         inc dptr
30B2 E0         +1  8073         movx    a,@dptr
30B3 F50B       +1  8074         mov 11,a
30B5 22         +1  8075         ret
30B6            +1  8076     oboard1:
30B6 A882       +1  8077         mov r0,dpl
30B8 8608       +1  8078         mov 8,@r0
30BA 08         +1  8079         inc r0
30BB 8609       +1  8080         mov 9,@r0
30BD 08         +1  8081         inc r0
30BE 860A       +1  8082         mov 10,@r0
30C0 08         +1  8083         inc r0
30C1 860B       +1  8084         mov 11,@r0
30C3 22         +1  8085         ret
                +1  8086     ;   Long division routines for 8051
                +1  8087     ;   Divide is called with the divisor in ltemp, the dividend in r5-r2
                +1  8088     ;   It returns with the quotient in r5-r2 and the remainder in ltemp
                +1  8089     ;   The top of bank 1 (locations 12-15) are used as a long temporary
                +1  8090     ;   and registers r0 and r1 in bank 0 are used as temporaries. R0 and
                +1  8091     ;   r1 must be saved by the caller.
                +1  8092     ;   This is long unsigned division.
                +1  8093     
                +1  8094     
                +1  8095     ;   Register usage:
                +1  8096     ;       r0 loop counter
                +1  8097     ;       xtemp (12-15) accumulates quotient
                +1  8098     ;       r5-r2 holds dividend
                +1  8099     ;       ltemp holds divisor
                +1  8100     
                +1  8101     ;************************************
                +1  8102     ;r2..r5-делимое
                +1  8103     ;ltemp..-делитель
                +1  8104     ;частное -r2..r5
                +1  8105     ;*************************************
30C4            +1  8106     divide:
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   126

30C4 E4         +1  8107         clr a
30C5 F8         +1  8108         mov r0,a        ;initialize count
30C6 F50C       +1  8109         mov xtemp,a     ;zero quotient
30C8 F50D       +1  8110         mov xtemp+1,a
30CA F50E       +1  8111         mov xtemp+2,a
30CC F50F       +1  8112         mov xtemp+3,a
30CE ED         +1  8113         mov a,r5        ;check for zero dividend
30CF 4C         +1  8114         orl a,r4
30D0 4B         +1  8115         orl a,r3
30D1 4A         +1  8116         orl a,r2
30D2 600B       +1  8117         jz  jfinis
30D4 E508       +1  8118         mov a,ltemp     ;check for zero divisor
30D6 4509       +1  8119         orl a,ltemp+1
30D8 450A       +1  8120         orl a,ltemp+2
30DA 450B       +1  8121         orl a,ltemp+3
30DC 7037       +1  8122         jnz midl
30DE 22         +1  8123         ret
                +1  8124     
30DF 020000   F +1  8125     jfinis: jmp finis
                +1  8126     
30E2            +1  8127     loops:
30E2 EA         +1  8128         mov a,r2
30E3 C3         +1  8129         clr c
30E4 9508       +1  8130         subb    a,ltemp+0   ;is divisor greater than dividend yet
30E6 4033       +1  8131         jc  yes     ;yes, go no further
30E8 7013       +1  8132         jnz no
30EA EB         +1  8133         mov a,r3
30EB 9509       +1  8134         subb    a,ltemp+1
30ED 402C       +1  8135         jc  yes
30EF 700C       +1  8136         jnz no
30F1 EC         +1  8137         mov a,r4
30F2 950A       +1  8138         subb    a,ltemp+2
30F4 4025       +1  8139         jc  yes
30F6 7005       +1  8140         jnz no
30F8 ED         +1  8141         mov a,r5
30F9 950B       +1  8142         subb    a,ltemp+3
30FB 401E       +1  8143         jc  yes
30FD            +1  8144     no:
30FD E50B       +1  8145         mov a,ltemp+3   ;shift divisor up one bit
30FF 250B       +1  8146         add a,ltemp+3
3101 F50B       +1  8147         mov ltemp+3,a
3103 E50A       +1  8148         mov a,ltemp+2
3105 350A       +1  8149         addc    a,ltemp+2
3107 F50A       +1  8150         mov ltemp+2,a
3109 E509       +1  8151         mov a,ltemp+1
310B 3509       +1  8152         addc    a,ltemp+1
310D F509       +1  8153         mov ltemp+1,a
310F E508       +1  8154         mov a,ltemp+0
3111 3508       +1  8155         addc    a,ltemp+0
3113 F508       +1  8156         mov ltemp+0,a
3115            +1  8157     midl:
3115 08         +1  8158         inc r0      ;increment count
3116 E508       +1  8159         mov a,ltemp+0   ;check for safe to shift some more
3118 30E7C7     +1  8160         jnb acc.7,loops  ;loop if top bit clear
311B            +1  8161     yes:
311B E508       +1  8162         mov a,ltemp+0
311D C3         +1  8163         clr c
311E 9A         +1  8164         subb    a,r2        ;can we subtract now?
311F 401A       +1  8165         jc  dosub       ;yes, go and do it
3121 7015       +1  8166         jnz nosub
3123 E509       +1  8167         mov a,ltemp+1
3125 9B         +1  8168         subb    a,r3
3126 4013       +1  8169         jc  dosub
3128 700E       +1  8170         jnz nosub
312A E50A       +1  8171         mov a,ltemp+2
312C 9C         +1  8172         subb    a,r4
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   127

312D 400C       +1  8173         jc  dosub
312F 7007       +1  8174         jnz nosub
3131 E50B       +1  8175         mov a,ltemp+3
3133 9D         +1  8176         subb    a,r5
3134 4005       +1  8177         jc  dosub
3136 6003       +1  8178         jz  dosub
3138            +1  8179     nosub:
3138 C3         +1  8180         clr c
3139 8012       +1  8181         sjmp    dosh
313B            +1  8182     dosub:
313B C3         +1  8183         clr c       ;subtract divisor from dividend
313C ED         +1  8184         mov a,r5
313D 950B       +1  8185         subb    a,ltemp+3
313F FD         +1  8186         mov r5,a
3140 EC         +1  8187         mov a,r4
3141 950A       +1  8188         subb    a,ltemp+2
3143 FC         +1  8189         mov r4,a
3144 EB         +1  8190         mov a,r3
3145 9509       +1  8191         subb    a,ltemp+1
3147 FB         +1  8192         mov r3,a
3148 EA         +1  8193         mov a,r2
3149 9508       +1  8194         subb    a,ltemp+0
314B FA         +1  8195         mov r2,a
314C D3         +1  8196         setb    c       ;now set bit for quotient
314D            +1  8197     dosh:
314D E50F       +1  8198         mov a,xtemp+3
314F 33         +1  8199         rlc a
3150 F50F       +1  8200         mov xtemp+3,a
3152 E50E       +1  8201         mov a,xtemp+2
3154 33         +1  8202         rlc a
3155 F50E       +1  8203         mov xtemp+2,a
3157 E50D       +1  8204         mov a,xtemp+1
3159 33         +1  8205         rlc a
315A F50D       +1  8206         mov xtemp+1,a
315C E50C       +1  8207         mov a,xtemp+0
315E 33         +1  8208         rlc a
315F F50C       +1  8209         mov xtemp+0,a
3161 E508       +1  8210         mov a,ltemp+0       ;shift divisor down
3163 C3         +1  8211         clr c
3164 13         +1  8212         rrc a
3165 F508       +1  8213         mov ltemp+0,a
3167 E509       +1  8214         mov a,ltemp+1
3169 13         +1  8215         rrc a
316A F509       +1  8216         mov ltemp+1,a
316C E50A       +1  8217         mov a,ltemp+2
316E 13         +1  8218         rrc a
316F F50A       +1  8219         mov ltemp+2,a
3171 E50B       +1  8220         mov a,ltemp+3
3173 13         +1  8221         rrc a
3174 F50B       +1  8222         mov ltemp+3,a
                +1  8223     
3176 D8A3       +1  8224         djnz    r0,yes      ;and continue with the rest
                +1  8225     
3178            +1  8226     finis:
3178 8D0B       +1  8227         mov ltemp+3,r5
317A 8C0A       +1  8228         mov ltemp+2,r4
317C 8B09       +1  8229         mov ltemp+1,r3
317E 8A08       +1  8230         mov ltemp+0,r2
3180 AD0F       +1  8231         mov r5,xtemp+3
3182 AC0E       +1  8232         mov r4,xtemp+2
3184 AB0D       +1  8233         mov r3,xtemp+1
3186 AA0C       +1  8234         mov r2,xtemp+0
3188 22         +1  8235         ret         ;and return with the satisfaction of a job well done
                +1  8236     
                +1  8237     
                +1  8238     ;   Long multiplication
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   128

                +1  8239     ;   The main multiply thingo. Called with one operand in r5-r2 and the
                +1  8240     ;   other in ltemp. It really doesn't matter which one is where.
                +1  8241     
                +1  8242     ;**********************************
                +1  8243     ;(r2..r5)*(ltemp..ltemp+3)=r2..r5
                +1  8244     ;ст  мл
                +1  8245     ;**********************************
3189            +1  8246     llmul:
3189            +1  8247     almul:
3189            +1  8248     lmul:
3189 ED         +1  8249         mov a,r5        ;low order byte
318A 850BF0     +1  8250         mov b,ltemp+3       ;times low order byte
318D A4         +1  8251         mul ab
318E F50F       +1  8252         mov xtemp+3,a       ;store low
3190 85F00E     +1  8253         mov xtemp+2,b   ;and high
3193 ED         +1  8254         mov a,r5        ;low order
3194 850AF0     +1  8255         mov b,ltemp+2   ;times next
3197 A4         +1  8256         mul ab
3198 250E       +1  8257         add a,xtemp+2   ;add in
319A F50E       +1  8258         mov xtemp+2,a
319C E5F0       +1  8259         mov a,b
319E 3400       +1  8260         addc    a,#0
31A0 F50D       +1  8261         mov xtemp+1,a
31A2 ED         +1  8262         mov a,r5
31A3 8509F0     +1  8263         mov b,ltemp+1
31A6 A4         +1  8264         mul ab
31A7 250D       +1  8265         add a,xtemp+1
31A9 F50D       +1  8266         mov xtemp+1,a
31AB E5F0       +1  8267         mov a,b
31AD 3400       +1  8268         addc    a,#0
31AF F50C       +1  8269         mov xtemp+0,a
31B1 ED         +1  8270         mov a,r5
31B2 8508F0     +1  8271         mov b,ltemp+0
31B5 A4         +1  8272         mul ab
31B6 250C       +1  8273         add a,xtemp+0
31B8 F50C       +1  8274         mov xtemp+0,a
31BA EC         +1  8275         mov a,r4
31BB 850BF0     +1  8276         mov b,ltemp+3
31BE A4         +1  8277         mul ab
31BF 250E       +1  8278         add a,xtemp+2
31C1 F50E       +1  8279         mov xtemp+2,a
31C3 E5F0       +1  8280         mov a,b
31C5 350D       +1  8281         addc    a,xtemp+1
31C7 F50D       +1  8282         mov xtemp+1,a
31C9 E50C       +1  8283         mov a,xtemp+0
31CB 3400       +1  8284         addc    a,#0
31CD F50C       +1  8285         mov xtemp+0,a
31CF EC         +1  8286         mov a,r4
31D0 850AF0     +1  8287         mov b,ltemp+2
31D3 A4         +1  8288         mul ab
31D4 250D       +1  8289         add a,xtemp+1
31D6 F50D       +1  8290         mov xtemp+1,a
31D8 E5F0       +1  8291         mov a,b
31DA 350C       +1  8292         addc    a,xtemp+0
31DC F50C       +1  8293         mov xtemp+0,a
31DE EC         +1  8294         mov a,r4
31DF 8509F0     +1  8295         mov b,ltemp+1
31E2 A4         +1  8296         mul ab
31E3 250C       +1  8297         add a,xtemp+0
31E5 F50C       +1  8298         mov xtemp+0,a
                +1  8299     
31E7 EB         +1  8300         mov a,r3
31E8 850BF0     +1  8301         mov b,ltemp+3
31EB A4         +1  8302         mul ab
31EC 250D       +1  8303         add a,xtemp+1
31EE F50D       +1  8304         mov xtemp+1,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   129

31F0 E5F0       +1  8305         mov a,b
31F2 350C       +1  8306         addc    a,xtemp+0
31F4 F50C       +1  8307         mov xtemp+0,a
31F6 EB         +1  8308         mov a,r3
31F7 850AF0     +1  8309         mov b,ltemp+2
31FA A4         +1  8310         mul ab
31FB 250C       +1  8311         add a,xtemp+0
31FD F50C       +1  8312         mov xtemp+0,a
                +1  8313     
31FF EA         +1  8314         mov a,r2
3200 850BF0     +1  8315         mov b,ltemp+3
3203 A4         +1  8316         mul ab
3204 250C       +1  8317         add a,xtemp+0
3206 FA         +1  8318         mov r2,a
3207 AB0D       +1  8319         mov r3,xtemp+1
3209 AC0E       +1  8320         mov r4,xtemp+2
320B AD0F       +1  8321         mov r5,xtemp+3
                +1  8322     
320D 22         +1  8323         ret         ;all done
                +1  8324     ;******************************
                +1  8325     ;из содержимого  r2-r5  вычесть
                +1  8326     ;содержимое          ltemp..ltemp+3
                +1  8327     ;******************************
320E            +1  8328     llsub:
320E            +1  8329      lsub:
320E ED         +1  8330         mov a,r5
320F C3         +1  8331         clr c
3210 950B       +1  8332         subb    a,11
3212 FD         +1  8333         mov r5,a
3213 EC         +1  8334         mov a,r4
3214 950A       +1  8335         subb    a,10
3216 FC         +1  8336         mov r4,a
3217 EB         +1  8337         mov a,r3
3218 9509       +1  8338         subb    a,9
321A FB         +1  8339         mov r3,a
321B EA         +1  8340         mov a,r2
321C 9508       +1  8341         subb    a,8
321E FA         +1  8342         mov r2,a
321F 22         +1  8343         ret
                +1  8344     
                +1  8345     ;***********************************************
                +1  8346     ;                                                      ст мл
                +1  8347     ; cложение содержимого  r2..r5 с числом по адресу
                +1  8348     ;  r0- адрес младшего байта !!!
                +1  8349     ;результат- r2..r5
                +1  8350     ;***********************************************
                +1  8351     
3220 C3         +1  8352     ladd:    clr       c
3221 ED         +1  8353          mov       a,r5
3222 26         +1  8354          add       a,@r0
3223 FD         +1  8355          mov       r5,a
3224 18         +1  8356          dec       r0
3225 EC         +1  8357          mov       a,r4
3226 36         +1  8358          addc      a,@r0
3227 FC         +1  8359          mov       r4,a
3228 18         +1  8360          dec       r0
3229 EB         +1  8361          mov       a,r3
322A 36         +1  8362          addc      a,@r0
322B FB         +1  8363          mov       r3,a
322C 18         +1  8364          dec       r0
322D EA         +1  8365          mov       a,r2
322E 36         +1  8366          addc      a,@r0
322F FA         +1  8367          mov       r2,a
3230 22         +1  8368          ret
                +1  8369     ;***********************************************
                +1  8370     ;                                                      ст мл
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   130

                +1  8371     ; cложение содержимого  r2..r5 с числом по адресу
                +1  8372     ;  r0- адрес младшего байта !!!
                +1  8373     ;результат- r2..r5
                +1  8374     ;***********************************************
                +1  8375     
3231 C3         +1  8376     laddx:    clr       c
3232 E2         +1  8377                                             movx            a,@r0
3233 2D         +1  8378                                             add                     a,r5
3234 FD         +1  8379               mov     r5,a
3235 18         +1  8380                             dec     r0
3236 E2         +1  8381                             movx    a,@r0
3237 3C         +1  8382                             addc    a,r4
3238 FC         +1  8383                             mov     r4,a
3239 18         +1  8384                             dec     r0
323A E2         +1  8385                             movx    a,@r0
323B 3B         +1  8386                             addc    a,r3
323C FB         +1  8387                             mov     r3,a
323D 18         +1  8388                             dec     r0
323E E2         +1  8389                             movx    a,@r0
323F 3A         +1  8390                             addc    a,r2
3240 FA         +1  8391                             mov       r2,a
3241 22         +1  8392                             ret
                +1  8393     
                +1  8394     ;***********************************************
                +1  8395     ;                                                      ст мл
                +1  8396     ; cложение содержимого  r2..r5 с числом по адресу
                +1  8397     ;  dptr- адрес младшего байта !!!
                +1  8398     ;результат- r2..r5
                +1  8399     ;***********************************************
                +1  8400     
3242 C3         +1  8401     addx:    clr       c
3243 E0         +1  8402                                             movx            a,@dptr
3244 2D         +1  8403                                             add                     a,r5
3245 FD         +1  8404               mov     r5,a
3246 120000   F +1  8405                             call            dedptr;dec     dptr
3249 E0         +1  8406                             movx    a,@dptr
324A 3C         +1  8407                             addc    a,r4
324B FC         +1  8408                             mov     r4,a
324C 120000   F +1  8409                             call            dedptr;dec     dptr
324F E0         +1  8410                             movx    a,@dptr
3250 3B         +1  8411                             addc    a,r3
3251 FB         +1  8412                             mov     r3,a
3252 120000   F +1  8413                             call            dedptr;dec     dptr
3255 E0         +1  8414                             movx    a,@dptr
3256 3A         +1  8415                             addc    a,r2
3257 FA         +1  8416                             mov       r2,a
3258 22         +1  8417                             ret
                +1  8418     
3259 C0D0       +1  8419     dedptr:         push    psw
325B C3         +1  8420                                             clr             c
325C E582       +1  8421                                             mov             a,dpl
325E 9401       +1  8422                                             subb    a,#1
3260 F582       +1  8423                                             mov             dpl,a
3262 E583       +1  8424                                             mov             a,dph
3264 9400       +1  8425                                             subb    a,#0
3266 F583       +1  8426                                             mov             dph,a
3268 D0D0       +1  8427                                             pop             psw
326A 22         +1  8428                                             ret
                    8429     
                    8430     ;$include (floatm.asm)
                +1  8431     ;       Copyright (C) 1988 HI-TECH Software
                +1  8432     
                +1  8433     ;       Single Precision Floating point arithmetic routines for 8051
                +1  8434     
                +1  8435     ;       The format of floating point numbers is as follows:
                +1  8436     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   131

                +1  8437     ;       -----------------
                +1  8438     ;       *     sign      *  1 bit
                +1  8439     ;       -----------------
                +1  8440     ;       *   exponent    *  8 bits
                +1  8441     ;       -----------------
                +1  8442     ;       *   mantissa    *  23 bits + 1 implied bit = 24 bits
                +1  8443     ;       -----------------
                +1  8444     
                +1  8445     
                +1  8446     ;       As usual for the 8051 the memory layout has the most significant
                +1  8447     ;       byte (i.e. that containing the sign) coming first, i.e. at the
                +1  8448     ;       lowest address.
                +1  8449     
                +1  8450     ;       Calling conventions:
                +1  8451     
                +1  8452     ;       Left operand in r2-r5, right operand in ltemp (r0'-r3')
                +1  8453     ;
                +1  8454     ;       Return value is in r2-r5
                +1  8455     
                +1  8456     ;       Naming conventions: A routine name is constructed by
                +1  8457     
                +1  8458     ;             ASOP
                +1  8459     
                +1  8460     ;       Where A is the arithmetic type (f for float), and op is the operation,
                +1  8461     ;       one of mul, div, mod, add, sub and cmp. S is the size, always l.
                +1  8462     ;       Conversion routines are named
                +1  8463     
                +1  8464     ;               AStof
                +1  8465     
                +1  8466     ;       where A is the arithmetic type (a for integer, l for unsigned)
                +1  8467     ;       S is the integer size, one of b (byte), w (word) or l (long).
                +1  8468     ;       Conversion from float to integer is ftol.
                +1  8469     
                +1  8470     ;               .ORG  5000h
                +1  8471     ;               .CODE
                +1  8472     ;       seg     c_text
                +1  8473     
                +1  8474     ;;      $MOD812
----            +1  8475             CSEG
                +1  8476     ;ORG 1000h
                +1  8477     
                +1  8478     ;PUBLIC flmul,fldiv,fladd,flsub,flcmp
                +1  8479     ;PUBLIC ftol,altof,lltof,awtof,lwtof,abtof,lbtof
                +1  8480     
                +1  8481     ;       EXTERNAL DELAY,KKOFU0,AKNCH,XNULLU
                +1  8482     ;       macros
                +1  8483     
                +1  8484     saveregs        macro
                +1  8485             push    7
                +1  8486             push    6
                +1  8487             push    1
                +1  8488             push    0
                +1  8489             endm
                +1  8490     
                +1  8491     restregs        macro
                +1  8492             pop     0
                +1  8493             pop     1
                +1  8494             pop     6
                +1  8495             pop     7
                +1  8496             endm
                +1  8497     
                +1  8498     ;addr   
                +1  8499     dan     macro   pad
                +1  8500             mov     a,r5
                +1  8501             add     a,pad+3
                +1  8502             mov     pad+3,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   132

                +1  8503             mov     a,pad+2
                +1  8504             addc    a,r4
                +1  8505             mov     pad+2,a
                +1  8506             mov     a,pad+1
                +1  8507             addc    a,r3
                +1  8508             mov     pad+1,a
                +1  8509             mov     a,pad+0
                +1  8510             addc    a,r2
                +1  8511             mov     pad,a
                +1  8512             endm
                +1  8513     
                +1  8514     addl    macro  addr
                +1  8515             mov     a,r5
                +1  8516             add     a,addr+3
                +1  8517             mov     r5,a
                +1  8518             mov     a,addr+2
                +1  8519             addc    a,r4
                +1  8520             mov     r4,a
                +1  8521             mov     a,addr+1
                +1  8522             addc    a,r3
                +1  8523             mov     r3,a
                +1  8524             mov     a,addr+0
                +1  8525             addc    a,r2
                +1  8526             mov     r2,a
                +1  8527             endm
                +1  8528     
                +1  8529     
                +1  8530     add1    macro
                +1  8531             mov     a,r5
                +1  8532             add     a,#1
                +1  8533             mov     r5,a
                +1  8534             clr     a
                +1  8535             addc    a,r4
                +1  8536             mov     r4,a
                +1  8537             clr     a
                +1  8538             addc    a,r3
                +1  8539             mov     r3,a
                +1  8540             clr     a
                +1  8541             addc    a,r2
                +1  8542             mov     r2,a
                +1  8543             endm
                +1  8544     
                +1  8545     shfdn   macro  addr
                +1  8546             clr     c
                +1  8547             mov     a,addr
                +1  8548             rrc     a
                +1  8549             mov     addr,a
                +1  8550             mov     a,addr+1
                +1  8551             rrc     a
                +1  8552             mov     addr+1,a
                +1  8553             mov     a,addr+2
                +1  8554             rrc     a
                +1  8555             mov     addr+2,a
                +1  8556             mov     a,addr+3
                +1  8557             rrc     a
                +1  8558             mov     addr+3,a
                +1  8559             endm
                +1  8560     
                +1  8561     shfup   macro  addr
                +1  8562             clr     c
                +1  8563             mov     a,addr+3
                +1  8564             rlc     a
                +1  8565             mov     addr+3,a
                +1  8566             mov     a,addr+2
                +1  8567             rlc     a
                +1  8568             mov     addr+2,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   133

                +1  8569             mov     a,addr+1
                +1  8570             rlc     a
                +1  8571             mov     addr+1,a
                +1  8572             mov     a,addr
                +1  8573             rlc     a
                +1  8574             mov     addr,a
                +1  8575             endm
                +1  8576     
                +1  8577     rshift  macro
                +1  8578             clr     c
                +1  8579             mov     a,r2
                +1  8580             rrc     a
                +1  8581             mov     r2,a
                +1  8582             mov     a,r3
                +1  8583             rrc     a
                +1  8584             mov     r3,a
                +1  8585             mov     a,r4
                +1  8586             rrc     a
                +1  8587             mov     r4,a
                +1  8588             mov     a,r5
                +1  8589             rrc     a
                +1  8590             mov     r5,a
                +1  8591             endm
                +1  8592     rshift1 macro
                +1  8593             setb    c
                +1  8594             mov     a,r2
                +1  8595             rrc     a
                +1  8596             mov     r2,a
                +1  8597             mov     a,r3
                +1  8598             rrc     a
                +1  8599             mov     r3,a
                +1  8600             mov     a,r4
                +1  8601             rrc     a
                +1  8602             mov     r4,a
                +1  8603             mov     a,r5
                +1  8604             rrc     a
                +1  8605             mov     r5,a
                +1  8606             endm
                +1  8607     
                +1  8608     
                +1  8609     lshift  macro
                +1  8610             mov     a,r5
                +1  8611             rlc     a
                +1  8612             mov     r5,a
                +1  8613             mov     a,r4
                +1  8614             rlc     a
                +1  8615             mov     r4,a
                +1  8616             mov     a,r3
                +1  8617             rlc     a
                +1  8618             mov     r3,a
                +1  8619             mov     a,r2
                +1  8620             rlc     a
                +1  8621             mov     r2,a
                +1  8622             endm
                +1  8623     
                +1  8624     neg1    macro
                +1  8625             clr     c
                +1  8626             clr     a
                +1  8627             subb    a,r5
                +1  8628             mov     r5,a
                +1  8629             clr     a
                +1  8630             subb    a,r4
                +1  8631             mov     r4,a
                +1  8632             clr     a
                +1  8633             subb    a,r3
                +1  8634             mov     r3,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   134

                +1  8635             clr     a
                +1  8636             subb    a,r2
                +1  8637             mov     r2,a
                +1  8638             endm
                +1  8639     
                +1  8640     negm    macro  addr
                +1  8641             clr     c
                +1  8642             clr     a
                +1  8643             subb    a,addr+3
                +1  8644             mov     addr+3,a
                +1  8645             clr     a
                +1  8646             subb    a,addr+2
                +1  8647             mov     addr+2,a
                +1  8648             clr     a
                +1  8649             subb    a,addr+1
                +1  8650             mov     addr+1,a
                +1  8651             clr     a
                +1  8652             subb    a,addr
                +1  8653             mov     addr,a
                +1  8654             endm
                +1  8655     
                +1  8656     copytor macro  addr
                +1  8657             mov     r2,addr
                +1  8658             mov     r3,addr+1
                +1  8659             mov     r4,addr+2
                +1  8660             mov     r5,addr+3
                +1  8661             endm
                +1  8662     
                +1  8663     
                +1  8664     copyrto macro  addr
                +1  8665             mov     addr,r2
                +1  8666             mov     addr+1,r3
                +1  8667             mov     addr+2,r4
                +1  8668             mov     addr+3,r5
                +1  8669             endm
                +1  8670     
                +1  8671     
                +1  8672     ;       Internal representation: in this set of routines a floating number
                +1  8673     ;       is unpacked into seperate mantissa, exponent and sign parts.
                +1  8674     
                +1  8675     ;       Stack offset values
                +1  8676     ;ltemp   equ     28h
                +1  8677     
  0006          +1  8678     cntr    equ     6               ;r6 is the counter
  0007          +1  8679     sign    equ     7               ;signs in r7 - left sign in bit 7, right in 6
  0000          +1  8680     exp1    equ     0               ;exponent 1 in r0
  0002          +1  8681     mant1   equ     2               ;mantissa 1 in r2-5
  0001          +1  8682     exp2    equ     1               ;exponent 1 in r1
  0008          +1  8683     mant2   equ     ltemp           ;mantissa 2 in ltemp
  000C          +1  8684     prod    equ     ltemp+4         ;product/quotient in ltemp+4 (r4'-r7')
                +1  8685     
                +1  8686     
                +1  8687     
                +1  8688     
                +1  8689     
                +1  8690     ;DECSIZE        EQU      10
                +1  8691     ;NUMSIZE        EQU      4
                +1  8692     ;RR4            EQU      4
                +1  8693     ;RR5            EQU      5
                +1  8694     
                +1  8695     ;       unpack1 - unpacks the left operand
                +1  8696     
009E            +1  8697     unpack1:
009E EA         +1  8698             mov     a,r2            ;get sign
009F 5480       +1  8699             anl     a,#80h
00A1 530740     +1  8700             anl     sign,#40h       ;clear other bits
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   135

00A4 4207       +1  8701             orl     sign,a          ;store sign
00A6 EB         +1  8702             mov     a,r3            ;get lsb of exponent
00A7 33         +1  8703             rlc     a               ;rotate into carry
00A8 EA         +1  8704             mov     a,r2            ;get rest of exponent
00A9 33         +1  8705             rlc     a               ;and make it 8 bits
00AA F8         +1  8706             mov     r0,a            ;store it
00AB 6006       +1  8707             jz      zer1            ;if zero, the whole thing is zero
00AD 430380     +1  8708             orl     mant1+1,#80h    ;set hidden bit
00B0 7A00       +1  8709             mov     r2,#0           ;clear upper byte of mantissa
00B2 22         +1  8710             ret
00B3            +1  8711     zer1:
00B3 E4         +1  8712             clr     a
00B4 FA         +1  8713             mov     r2,a
00B5 FB         +1  8714             mov     r3,a
00B6 FC         +1  8715             mov     r4,a
00B7 FD         +1  8716             mov     r5,a            ;zero mantissa
00B8 F8         +1  8717             mov     r0,a            ;zero exponent
00B9 22         +1  8718             ret
                +1  8719     
                +1  8720     ;       unpack2 - unpacks right operand
                +1  8721     
00BA            +1  8722     unpack2:
00BA E508       +1  8723             mov     a,ltemp         ;get sign
00BC 13         +1  8724             rrc     a               ;shift down
00BD 5440       +1  8725             anl     a,#40h          ;mask out sign
00BF 530780     +1  8726             anl     sign,#80h       ;clear old bit
00C2 4207       +1  8727             orl     sign,a
00C4 E509       +1  8728             mov     a,ltemp+1       ;get lsb of exponent
00C6 33         +1  8729             rlc     a               ;rotate into carry
00C7 E508       +1  8730             mov     a,ltemp         ;get rest of exponent
00C9 33         +1  8731             rlc     a               ;and make it 8 bits
00CA F9         +1  8732             mov     r1,a            ;store it
00CB 6007       +1  8733             jz      zer2            ;if zero, the whole thing is zero
00CD 430980     +1  8734             orl     mant2+1,#80h    ;set hidden bit
00D0 750800     +1  8735             mov     mant2,#0        ;clear upper byte
00D3 22         +1  8736             ret
00D4            +1  8737     zer2:
00D4 E4         +1  8738             clr     a
00D5 F508       +1  8739             mov     ltemp,a
00D7 F509       +1  8740             mov     ltemp+1,a
00D9 F50A       +1  8741             mov     ltemp+2,a
00DB F50B       +1  8742             mov     ltemp+3,a               ;zero mantissa
00DD 22         +1  8743             ret
                +1  8744     
                +1  8745     ;       pack1 - put operand 1 back into float format
                +1  8746     
00DE            +1  8747     pack1:
00DE E8         +1  8748             mov     a,r0            ;get exponent
00DF C3         +1  8749             clr     c
00E0 13         +1  8750             rrc     a               ;shift down 1 bit
00E1 530780     +1  8751             anl     sign,#80h       ;mask sign bit
00E4 4F         +1  8752             orl     a,r7            ;or in sign bit
00E5 FA         +1  8753             mov     r2,a            ;store
00E6 E8         +1  8754             mov     a,r0            ;get other bit
00E7 03         +1  8755             rr      a               ;rotate into hi bit
00E8 5480       +1  8756             anl     a,#80h          ;mask
00EA 53037F     +1  8757             anl     mant1+1,#7Fh    ;clear hidden bit
00ED 4203       +1  8758             orl     mant1+1,a       ;put in
00EF 22         +1  8759             ret
                +1  8760     
                +1  8761     
                +1  8762     ;       norm1 - normalize the unpacked value in 1
                +1  8763     
00F0            +1  8764     norm1:
00F0 E8         +1  8765             mov     a,r0            ;get exponent
00F1 60C0       +1  8766             jz      zer1            ;zero the mantissa if so
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   136

00F3 EA         +1  8767             mov     a,r2            ;get hi byte
00F4 6023       +1  8768             jz      norup           ;zero, so shift up if anything
00F6            +1  8769     nordn:
00F6 EA         +1  8770             mov     a,r2            ;get hi byte
00F7 B4010D     +1  8771             cjne    a,#1,nordn1     ;if not about to do last shift, skip
                +1  8772+3           add1                    ;add in a rounding bit
00FA ED         +1  8773+1           mov     a,r5
00FB 2401       +1  8774+1           add     a,#1
00FD FD         +1  8775+1           mov     r5,a
00FE E4         +1  8776+1           clr     a
00FF 3C         +1  8777+1           addc    a,r4
0100 FC         +1  8778+1           mov     r4,a
0101 E4         +1  8779+1           clr     a
0102 3B         +1  8780+1           addc    a,r3
0103 FB         +1  8781+1           mov     r3,a
0104 E4         +1  8782+1           clr     a
0105 3A         +1  8783+1           addc    a,r2
0106 FA         +1  8784+1           mov     r2,a
0107            +1  8785     nordn1:
                +1  8786+3           rshift                  ;shift down 1 bit
0107 C3         +1  8787+1           clr     c
0108 EA         +1  8788+1           mov     a,r2
0109 13         +1  8789+1           rrc     a
010A FA         +1  8790+1           mov     r2,a
010B EB         +1  8791+1           mov     a,r3
010C 13         +1  8792+1           rrc     a
010D FB         +1  8793+1           mov     r3,a
010E EC         +1  8794+1           mov     a,r4
010F 13         +1  8795+1           rrc     a
0110 FC         +1  8796+1           mov     r4,a
0111 ED         +1  8797+1           mov     a,r5
0112 13         +1  8798+1           rrc     a
0113 FD         +1  8799+1           mov     r5,a
0114 08         +1  8800             inc     r0              ;adjust exponent
0115 EA         +1  8801             mov     a,r2            ;test high byte
0116 70DE       +1  8802             jnz     nordn           ;loop
0118 22         +1  8803             ret                     ;done
                +1  8804     
0119            +1  8805     norup:
0119 4B         +1  8806             orl     a,r3
011A 4C         +1  8807             orl     a,r4
011B 4D         +1  8808             orl     a,r5            ;test for zero mantissa
011C 6095       +1  8809             jz      zer1            ;it is - make it true zero
011E            +1  8810     norup1:
011E EB         +1  8811             mov     a,r3            ;get mantissa byte
011F 20E710     +1  8812             jb      acc.7,norup2    ;jump if set
0122 C3         +1  8813             clr     c
                +1  8814+3           lshift                  ;shift mantissa up
0123 ED         +1  8815+1           mov     a,r5
0124 33         +1  8816+1           rlc     a
0125 FD         +1  8817+1           mov     r5,a
0126 EC         +1  8818+1           mov     a,r4
0127 33         +1  8819+1           rlc     a
0128 FC         +1  8820+1           mov     r4,a
0129 EB         +1  8821+1           mov     a,r3
012A 33         +1  8822+1           rlc     a
012B FB         +1  8823+1           mov     r3,a
012C EA         +1  8824+1           mov     a,r2
012D 33         +1  8825+1           rlc     a
012E FA         +1  8826+1           mov     r2,a
012F 18         +1  8827             dec     r0              ;adjust exponent
0130 80EC       +1  8828             jmp     norup1
0132            +1  8829     norup2:
0132 22         +1  8830             ret                     ;finito
                +1  8831     
                +1  8832     
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   137

                +1  8833     ;       fpdenorm - denormalize one of the two operands so that their
                +1  8834     ;       exponents are equal. This requires the smaller number to have
                +1  8835     ;       its exponent incremented and its mantissa shifted right.
                +1  8836     
0133            +1  8837     denorm:
0133 E8         +1  8838             mov     a,r0
0134 C3         +1  8839             clr     c
0135 99         +1  8840             subb    a,r1            ;compare exponents
0136 5029       +1  8841             jnc     up2a            ;shift operand 2
0138            +1  8842     up1:
0138 08         +1  8843             inc     r0              ;increment exponent
                +1  8844+3           rshift                  ;shift mantissa down
0139 C3         +1  8845+1           clr     c
013A EA         +1  8846+1           mov     a,r2
013B 13         +1  8847+1           rrc     a
013C FA         +1  8848+1           mov     r2,a
013D EB         +1  8849+1           mov     a,r3
013E 13         +1  8850+1           rrc     a
013F FB         +1  8851+1           mov     r3,a
0140 EC         +1  8852+1           mov     a,r4
0141 13         +1  8853+1           rrc     a
0142 FC         +1  8854+1           mov     r4,a
0143 ED         +1  8855+1           mov     a,r5
0144 13         +1  8856+1           rrc     a
0145 FD         +1  8857+1           mov     r5,a
0146 E8         +1  8858             mov     a,r0
0147 B501EE     +1  8859             cjne    a,exp2,up1      ;loop if still not equal
014A 22         +1  8860             ret
                +1  8861     
014B            +1  8862     up2:
014B 09         +1  8863             inc     r1              ;increment exponent 2
                +1  8864+3           shfdn   mant2           ;shift mantissa down
014C C3         +1  8865+1           clr     c
014D E508       +1  8866+1           mov     a,mant2
014F 13         +1  8867+1           rrc     a
0150 F508       +1  8868+1           mov     mant2,a
0152 E509       +1  8869+1           mov     a,mant2+1
0154 13         +1  8870+1           rrc     a
0155 F509       +1  8871+1           mov     mant2+1,a
0157 E50A       +1  8872+1           mov     a,mant2+2
0159 13         +1  8873+1           rrc     a
015A F50A       +1  8874+1           mov     mant2+2,a
015C E50B       +1  8875+1           mov     a,mant2+3
015E 13         +1  8876+1           rrc     a
015F F50B       +1  8877+1           mov     mant2+3,a
0161            +1  8878     up2a:
0161 E8         +1  8879             mov     a,r0            ;compare exponents
0162 B501E6     +1  8880             cjne    a,exp2,up2
0165 22         +1  8881             ret                     ;all done
                +1  8882     ;------------------------------------------------------------------
                +1  8883     ;       Add the number in op1 to the number in op2 and return the result in r2-r5
                +1  8884     
0166            +1  8885     fladd:
                +1  8886+3           saveregs
0166 C007       +1  8887+1           push    7
0168 C006       +1  8888+1           push    6
016A C001       +1  8889+1           push    1
016C C000       +1  8890+1           push    0
016E 119E       +1  8891             call    unpack1
0170 11BA       +1  8892             call    unpack2
0172 3133       +1  8893             call    denorm
0174 E507       +1  8894             mov     a,sign
0176 30E70D     +1  8895             jnb     acc.7,ok1       ;test left sign
                +1  8896+3           neg1                    ;negate op1
0179 C3         +1  8897+1           clr     c
017A E4         +1  8898+1           clr     a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   138

017B 9D         +1  8899+1           subb    a,r5
017C FD         +1  8900+1           mov     r5,a
017D E4         +1  8901+1           clr     a
017E 9C         +1  8902+1           subb    a,r4
017F FC         +1  8903+1           mov     r4,a
0180 E4         +1  8904+1           clr     a
0181 9B         +1  8905+1           subb    a,r3
0182 FB         +1  8906+1           mov     r3,a
0183 E4         +1  8907+1           clr     a
0184 9A         +1  8908+1           subb    a,r2
0185 FA         +1  8909+1           mov     r2,a
0186            +1  8910     ok1:
0186 E507       +1  8911             mov     a,sign
0188 30E615     +1  8912             jnb     acc.6,ok2       ;test right sign
                +1  8913+3           negm    mant2           ;negate op2
018B C3         +1  8914+1           clr     c
018C E4         +1  8915+1           clr     a
018D 950B       +1  8916+1           subb    a,mant2+3
018F F50B       +1  8917+1           mov     mant2+3,a
0191 E4         +1  8918+1           clr     a
0192 950A       +1  8919+1           subb    a,mant2+2
0194 F50A       +1  8920+1           mov     mant2+2,a
0196 E4         +1  8921+1           clr     a
0197 9509       +1  8922+1           subb    a,mant2+1
0199 F509       +1  8923+1           mov     mant2+1,a
019B E4         +1  8924+1           clr     a
019C 9508       +1  8925+1           subb    a,mant2
019E F508       +1  8926+1           mov     mant2,a
01A0            +1  8927     ok2:
                +1  8928+3           addl    mant2           ;add mantissas
01A0 ED         +1  8929+1           mov     a,r5
01A1 250B       +1  8930+1           add     a,mant2+3
01A3 FD         +1  8931+1           mov     r5,a
01A4 E50A       +1  8932+1           mov     a,mant2+2
01A6 3C         +1  8933+1           addc    a,r4
01A7 FC         +1  8934+1           mov     r4,a
01A8 E509       +1  8935+1           mov     a,mant2+1
01AA 3B         +1  8936+1           addc    a,r3
01AB FB         +1  8937+1           mov     r3,a
01AC E508       +1  8938+1           mov     a,mant2+0
01AE 3A         +1  8939+1           addc    a,r2
01AF FA         +1  8940+1           mov     r2,a
01B0 E4         +1  8941             clr     a
01B1 FF         +1  8942             mov     r7,a            ;clear sign
01B2 EA         +1  8943             mov     a,r2            ;get sign of result
01B3 30E70E     +1  8944             jnb     acc.7,ok3       ;all ok
01B6 FF         +1  8945             mov     r7,a            ;store sign
                +1  8946+3           neg1                    ;negate mantissa
01B7 C3         +1  8947+1           clr     c
01B8 E4         +1  8948+1           clr     a
01B9 9D         +1  8949+1           subb    a,r5
01BA FD         +1  8950+1           mov     r5,a
01BB E4         +1  8951+1           clr     a
01BC 9C         +1  8952+1           subb    a,r4
01BD FC         +1  8953+1           mov     r4,a
01BE E4         +1  8954+1           clr     a
01BF 9B         +1  8955+1           subb    a,r3
01C0 FB         +1  8956+1           mov     r3,a
01C1 E4         +1  8957+1           clr     a
01C2 9A         +1  8958+1           subb    a,r2
01C3 FA         +1  8959+1           mov     r2,a
01C4            +1  8960     ok3:
01C4 11F0       +1  8961             call    norm1
01C6 11DE       +1  8962             call    pack1           ;pack normalized result
                +1  8963+3           restregs                ;and return
01C8 D000       +1  8964+1           pop     0
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   139

01CA D001       +1  8965+1           pop     1
01CC D006       +1  8966+1           pop     6
01CE D007       +1  8967+1           pop     7
01D0 22         +1  8968             ret
                +1  8969     ;-------------------------------------------------------------
                +1  8970     ;       Subtract the number ltemp from the number in r2-r5
                +1  8971     
01D1            +1  8972     flsub:
01D1 630880     +1  8973             xrl     ltemp,#80h      ;toggle sign bit
01D4 8090       +1  8974             jmp     fladd           ;and add!
                +1  8975     
                +1  8976     ;================================================================
                +1  8977     ;       Compare r2-r5 with the right operand and set flags accordingly
                +1  8978     
01D6            +1  8979     flcmp:
01D6 EA         +1  8980            mov     a,r2            ;get sign of left
01D7 6508       +1  8981            xrl     a,ltemp         ;calculate new sign
01D9 30E706     +1  8982            jnb     acc.7,cexp      ;same, go check exponent
                +1  8983     ;ifdef SMALL_MODEL
01DC EA         +1  8984             mov     a,r2            ;get sign of left again
01DD 33         +1  8985             rlc     a
01DE 5001       +1  8986             jnc     flout
                +1  8987     ;endif
01E0 D3         +1  8988             setb    c
01E1 22         +1  8989     flout:          ret                    ;return with acc < 0
                +1  8990     
01E2            +1  8991     cexp:
01E2 C3         +1  8992            clr     c
01E3 EA         +1  8993            mov     a,r2            ;compare exponent and mantissa
01E4 9508       +1  8994            subb    a,ltemp
01E6 7010       +1  8995            jnz     fnd
01E8 EB         +1  8996            mov     a,r3
01E9 9509       +1  8997            subb    a,ltemp+1
01EB 700B       +1  8998            jnz     fnd
01ED EC         +1  8999            mov     a,r4
01EE 950A       +1  9000            subb    a,ltemp+2
01F0 7006       +1  9001            jnz     fnd
01F2 ED         +1  9002            mov     a,r5
01F3 950B       +1  9003            subb    a,ltemp+3
01F5 7001       +1  9004            jnz     fnd
01F7            +1  9005     cdone:
01F7 22         +1  9006            ret                     ;return with acc == 0
01F8            +1  9007     fnd:
01F8 8AF0       +1  9008           mov     b,r2             ;get sign of left value
01FA 30F7FA     +1  9009          jnb     b.7,cdone       ;if positive, finished
01FD B2E7       +1  9010            cpl   acc.7             ;toggle sign???????/
01FF 4401       +1  9011                         orl         a,#1                          ;make non-zero
0201 B3         +1  9012             cpl     c               ;c=0->1,c=1->0
0202 22         +1  9013             ret
                +1  9014     ;==============================================================
                +1  9015     
                +1  9016     ;       Multiply the float in r2-r5 by the float in ltemp and return
                +1  9017     ;       the result in r2-r5
                +1  9018     
0203            +1  9019     flmul:
                +1  9020+3           saveregs
0203 C007       +1  9021+1           push    7
0205 C006       +1  9022+1           push    6
0207 C001       +1  9023+1           push    1
0209 C000       +1  9024+1           push    0
020B 119E       +1  9025             call    unpack1
020D 11BA       +1  9026             call    unpack2
020F E4         +1  9027             clr     a
0210 F50C       +1  9028             mov     prod,a
0212 F50D       +1  9029             mov     prod+1,a        ;clear product
0214 F50E       +1  9030             mov     prod+2,a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   140

0216 F50F       +1  9031             mov     prod+3,a
0218 7E07       +1  9032             mov     r6,#7           ;initialize counter
021A            +1  9033     mup1:
                +1  9034+3           shfdn   mant2           ;shift multiplier right
021A C3         +1  9035+1           clr     c
021B E508       +1  9036+1           mov     a,mant2
021D 13         +1  9037+1           rrc     a
021E F508       +1  9038+1           mov     mant2,a
0220 E509       +1  9039+1           mov     a,mant2+1
0222 13         +1  9040+1           rrc     a
0223 F509       +1  9041+1           mov     mant2+1,a
0225 E50A       +1  9042+1           mov     a,mant2+2
0227 13         +1  9043+1           rrc     a
0228 F50A       +1  9044+1           mov     mant2+2,a
022A E50B       +1  9045+1           mov     a,mant2+3
022C 13         +1  9046+1           rrc     a
022D F50B       +1  9047+1           mov     mant2+3,a
022F 5014       +1  9048             jnc     nobit           ;skip if lsb was zero
                +1  9049+3           dan     prod            ;add multiplicand to product
0231 ED         +1  9050+1           mov     a,r5
0232 250F       +1  9051+1           add     a,prod+3
0234 F50F       +1  9052+1           mov     prod+3,a
0236 E50E       +1  9053+1           mov     a,prod+2
0238 3C         +1  9054+1           addc    a,r4
0239 F50E       +1  9055+1           mov     prod+2,a
023B E50D       +1  9056+1           mov     a,prod+1
023D 3B         +1  9057+1           addc    a,r3
023E F50D       +1  9058+1           mov     prod+1,a
0240 E50C       +1  9059+1           mov     a,prod+0
0242 3A         +1  9060+1           addc    a,r2
0243 F50C       +1  9061+1           mov     prod,a
0245            +1  9062     nobit:
                +1  9063+3           lshift                  ;shift multiplicand up
0245 ED         +1  9064+1           mov     a,r5
0246 33         +1  9065+1           rlc     a
0247 FD         +1  9066+1           mov     r5,a
0248 EC         +1  9067+1           mov     a,r4
0249 33         +1  9068+1           rlc     a
024A FC         +1  9069+1           mov     r4,a
024B EB         +1  9070+1           mov     a,r3
024C 33         +1  9071+1           rlc     a
024D FB         +1  9072+1           mov     r3,a
024E EA         +1  9073+1           mov     a,r2
024F 33         +1  9074+1           rlc     a
0250 FA         +1  9075+1           mov     r2,a
0251 DEC7       +1  9076             djnz    r6,mup1         ;loop if more
                +1  9077     
0253 7E11       +1  9078             mov     r6,#17          ;re-initalize counter
0255 8015       +1  9079             sjmp    mup3
0257            +1  9080     mup11:
                +1  9081+3           shfdn   prod            ;shift product right
0257 C3         +1  9082+1           clr     c
0258 E50C       +1  9083+1           mov     a,prod
025A 13         +1  9084+1           rrc     a
025B F50C       +1  9085+1           mov     prod,a
025D E50D       +1  9086+1           mov     a,prod+1
025F 13         +1  9087+1           rrc     a
0260 F50D       +1  9088+1           mov     prod+1,a
0262 E50E       +1  9089+1           mov     a,prod+2
0264 13         +1  9090+1           rrc     a
0265 F50E       +1  9091+1           mov     prod+2,a
0267 E50F       +1  9092+1           mov     a,prod+3
0269 13         +1  9093+1           rrc     a
026A F50F       +1  9094+1           mov     prod+3,a
026C            +1  9095     mup3:
                +1  9096+3           shfdn   mant2           ;shift multiplier down
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   141

026C C3         +1  9097+1           clr     c
026D E508       +1  9098+1           mov     a,mant2
026F 13         +1  9099+1           rrc     a
0270 F508       +1  9100+1           mov     mant2,a
0272 E509       +1  9101+1           mov     a,mant2+1
0274 13         +1  9102+1           rrc     a
0275 F509       +1  9103+1           mov     mant2+1,a
0277 E50A       +1  9104+1           mov     a,mant2+2
0279 13         +1  9105+1           rrc     a
027A F50A       +1  9106+1           mov     mant2+2,a
027C E50B       +1  9107+1           mov     a,mant2+3
027E 13         +1  9108+1           rrc     a
027F F50B       +1  9109+1           mov     mant2+3,a
0281 5014       +1  9110             jnc     mup2            ;skip if bit not set
                +1  9111+3           dan     prod            ;add to prod
0283 ED         +1  9112+1           mov     a,r5
0284 250F       +1  9113+1           add     a,prod+3
0286 F50F       +1  9114+1           mov     prod+3,a
0288 E50E       +1  9115+1           mov     a,prod+2
028A 3C         +1  9116+1           addc    a,r4
028B F50E       +1  9117+1           mov     prod+2,a
028D E50D       +1  9118+1           mov     a,prod+1
028F 3B         +1  9119+1           addc    a,r3
0290 F50D       +1  9120+1           mov     prod+1,a
0292 E50C       +1  9121+1           mov     a,prod+0
0294 3A         +1  9122+1           addc    a,r2
0295 F50C       +1  9123+1           mov     prod,a
0297            +1  9124     mup2:
0297 DEBE       +1  9125             djnz    r6,mup11        ;loop if more
0299 E8         +1  9126             mov     a,r0            ;get exp1
029A 29         +1  9127             add     a,r1            ;add exp2
029B 247A       +1  9128             add     a,#7ah;;;;;;;;;;;;;;;;;;;(-127-7) & 0FFh    ;adjust
029D F8         +1  9129             mov     r0,a            ;store
029E EF         +1  9130             mov     a,r7            ;get sign
029F 23         +1  9131             rl      a               ;rotate bit into msb
02A0 6207       +1  9132             xrl     sign,a          ;xor with other bit
                +1  9133+3           copytor prod            ;copy prod to mant1
02A2 AA0C       +1  9134+1           mov     r2,prod
02A4 AB0D       +1  9135+1           mov     r3,prod+1
02A6 AC0E       +1  9136+1           mov     r4,prod+2
02A8 AD0F       +1  9137+1           mov     r5,prod+3
02AA 11F0       +1  9138             call    norm1           ;normalize
02AC 11DE       +1  9139             call    pack1
                +1  9140+3           restregs
02AE D000       +1  9141+1           pop     0
02B0 D001       +1  9142+1           pop     1
02B2 D006       +1  9143+1           pop     6
02B4 D007       +1  9144+1           pop     7
02B6 22         +1  9145             ret
                +1  9146     ;-----------------------------------------------------------
                +1  9147     ;       Floating divide: divide the number in r2-r5 by ltemp
                +1  9148     
02B7            +1  9149     fldiv:
                +1  9150+3           saveregs
02B7 C007       +1  9151+1           push    7
02B9 C006       +1  9152+1           push    6
02BB C001       +1  9153+1           push    1
02BD C000       +1  9154+1           push    0
02BF 119E       +1  9155             call    unpack1
02C1 11BA       +1  9156             call    unpack2
02C3 E4         +1  9157             clr     a
02C4 F50C       +1  9158             mov     prod,a
02C6 F50D       +1  9159             mov     prod+1,a
02C8 F50E       +1  9160             mov     prod+2,a
02CA F50F       +1  9161             mov     prod+3,a
02CC E9         +1  9162             mov     a,r1            ;check for zero divisor
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   142

02CD 6067       +1  9163             jz      div9
02CF E8         +1  9164             mov     a,r0            ;check for zero dividend
02D0 6064       +1  9165             jz      div9
02D2 C3         +1  9166             clr     c
02D3 99         +1  9167             subb    a,r1            ;compute new exponent
02D4 2478       +1  9168             add     a,#127-7        ;unbias
02D6 F8         +1  9169             mov     r0,a            ;store back
02D7 EF         +1  9170             mov     a,r7            ;get sign
02D8 23         +1  9171             rl      a
02D9 6207       +1  9172             xrl     sign,a          ;compute new sign
02DB 7E1F       +1  9173             mov     r6,#24+7        ;initialize counter
02DD            +1  9174     div1:
                +1  9175+3           shfup   prod            ;shift quotient up
02DD C3         +1  9176+1           clr     c
02DE E50F       +1  9177+1           mov     a,prod+3
02E0 33         +1  9178+1           rlc     a
02E1 F50F       +1  9179+1           mov     prod+3,a
02E3 E50E       +1  9180+1           mov     a,prod+2
02E5 33         +1  9181+1           rlc     a
02E6 F50E       +1  9182+1           mov     prod+2,a
02E8 E50D       +1  9183+1           mov     a,prod+1
02EA 33         +1  9184+1           rlc     a
02EB F50D       +1  9185+1           mov     prod+1,a
02ED E50C       +1  9186+1           mov     a,prod
02EF 33         +1  9187+1           rlc     a
02F0 F50C       +1  9188+1           mov     prod,a
02F2 C3         +1  9189             clr     c
02F3 EA         +1  9190             mov     a,r2            ;compare values
02F4 9508       +1  9191             subb    a,mant2
02F6 4028       +1  9192             jc      div2            ;skip if bigger
02F8 7013       +1  9193             jnz     div3
02FA EB         +1  9194             mov     a,r3            ;compare values
02FB 9509       +1  9195             subb    a,mant2+1
02FD 4021       +1  9196             jc      div2            ;skip if bigger
02FF 700C       +1  9197             jnz     div3
0301 EC         +1  9198             mov     a,r4            ;compare values
0302 950A       +1  9199             subb    a,mant2+2
0304 401A       +1  9200             jc      div2            ;skip if bigger
0306 7005       +1  9201             jnz     div3
0308 ED         +1  9202             mov     a,r5            ;compare values
0309 950B       +1  9203             subb    a,mant2+3
030B 4013       +1  9204             jc      div2            ;skip if bigger
030D            +1  9205     div3:
030D ED         +1  9206             mov     a,r5
030E 950B       +1  9207             subb    a,mant2+3
0310 FD         +1  9208             mov     r5,a
0311 EC         +1  9209             mov     a,r4
0312 950A       +1  9210             subb    a,mant2+2               ;do subtraction
0314 FC         +1  9211             mov     r4,a
0315 EB         +1  9212             mov     a,r3
0316 9509       +1  9213             subb    a,mant2+1               ;do subtraction
0318 FB         +1  9214             mov     r3,a
0319 EA         +1  9215             mov     a,r2
031A 9508       +1  9216             subb    a,mant2         ;do subtraction
031C FA         +1  9217             mov     r2,a
031D 430F01     +1  9218             orl     prod+3,#1       ;set lsb in quotient
0320            +1  9219     div2:
                +1  9220+3           lshift                  ;shift dividend up
0320 ED         +1  9221+1           mov     a,r5
0321 33         +1  9222+1           rlc     a
0322 FD         +1  9223+1           mov     r5,a
0323 EC         +1  9224+1           mov     a,r4
0324 33         +1  9225+1           rlc     a
0325 FC         +1  9226+1           mov     r4,a
0326 EB         +1  9227+1           mov     a,r3
0327 33         +1  9228+1           rlc     a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   143

0328 FB         +1  9229+1           mov     r3,a
0329 EA         +1  9230+1           mov     a,r2
032A 33         +1  9231+1           rlc     a
032B FA         +1  9232+1           mov     r2,a
032C DEAF       +1  9233             djnz    r6,div1         ;loop if more
                +1  9234+3           copytor prod            ;copy quotient
032E AA0C       +1  9235+1           mov     r2,prod
0330 AB0D       +1  9236+1           mov     r3,prod+1
0332 AC0E       +1  9237+1           mov     r4,prod+2
0334 AD0F       +1  9238+1           mov     r5,prod+3
0336            +1  9239     div9:
0336 11F0       +1  9240             call    norm1           ;now normalize result
0338 11DE       +1  9241             call    pack1           ;pack it up
                +1  9242+3           restregs                ;restore registers
033A D000       +1  9243+1           pop     0
033C D001       +1  9244+1           pop     1
033E D006       +1  9245+1           pop     6
0340 D007       +1  9246+1           pop     7
0342 22         +1  9247             ret
                +1  9248     ;------------------------------------------------------------------
                +1  9249     
                +1  9250     ;       Float to long conversion: if the exponent is less than the
                +1  9251     ;       excess value, the result is zero. If the exponent is so large
                +1  9252     ;       that the value would be shifted out, the result is overflow.
                +1  9253     ;       Otherwise shift the mantissa up or down as required.
                +1  9254     
0343            +1  9255     ftol:
                +1  9256+3           saveregs
0343 C007       +1  9257+1           push    7
0345 C006       +1  9258+1           push    6
0347 C001       +1  9259+1           push    1
0349 C000       +1  9260+1           push    0
034B EA         +1  9261             mov     a,r2
034C B4BF09     +1  9262             cjne    a,#0bfh,ne05
034F EB         +1  9263             mov     a,r3
0350 7006       +1  9264             jnz     ne05
0352 EC         +1  9265             mov     a,r4
0353 7003       +1  9266             jnz     ne05
0355 ED         +1  9267             mov     a,r5
0356 6024       +1  9268             jz      ftol1
0358 119E       +1  9269     ne05:   call    unpack1
035A E8         +1  9270             mov     a,r0            ;get exponent
035B 2482       +1  9271             add     a,#-(127-1)     ;unbias
035D 20E71C     +1  9272             jb      acc.7,ftol1     ;jump if < 0
0360 EF         +1  9273             mov     a,r7            ;get sign
0361 30E70D     +1  9274             jnb     acc.7,ftol4     ;skip if +ve
                +1  9275+3           neg1                    ;negate it
0364 C3         +1  9276+1           clr     c
0365 E4         +1  9277+1           clr     a
0366 9D         +1  9278+1           subb    a,r5
0367 FD         +1  9279+1           mov     r5,a
0368 E4         +1  9280+1           clr     a
0369 9C         +1  9281+1           subb    a,r4
036A FC         +1  9282+1           mov     r4,a
036B E4         +1  9283+1           clr     a
036C 9B         +1  9284+1           subb    a,r3
036D FB         +1  9285+1           mov     r3,a
036E E4         +1  9286+1           clr     a
036F 9A         +1  9287+1           subb    a,r2
0370 FA         +1  9288+1           mov     r2,a
0371            +1  9289     ftol4:
0371 E8         +1  9290             mov     a,r0            ;get exponent
0372 246A       +1  9291             add     a,#6ah;;;;;;;;(-(127-1+23+1)) & 0FFh
0374 20E727     +1  9292             jb      acc.7,ftol2     ;shift has to be right
0377 F8         +1  9293             mov     r0,a            ;save it
0378 24F8       +1  9294             add     a,#-8           ;if > 8, too big
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   144

037A 500E       +1  9295             jnc     ftol3
037C            +1  9296     ftol1:
037C E4         +1  9297             clr     a
037D FA         +1  9298             mov     r2,a
037E FB         +1  9299             mov     r3,a
037F FC         +1  9300             mov     r4,a
0380 FD         +1  9301             mov     r5,a
0381            +1  9302     ftol9:
                +1  9303+3           restregs
0381 D000       +1  9304+1           pop     0
0383 D001       +1  9305+1           pop     1
0385 D006       +1  9306+1           pop     6
0387 D007       +1  9307+1           pop     7
0389 22         +1  9308             ret
038A            +1  9309     ftol3:
038A E8         +1  9310             mov     a,r0
038B FE         +1  9311             mov     r6,a            ;store in counter
038C 60F3       +1  9312             jz      ftol9           ;if zero, do nothing
038E            +1  9313     ftol33:
                +1  9314+3           lshift                  ;shift up
038E ED         +1  9315+1           mov     a,r5
038F 33         +1  9316+1           rlc     a
0390 FD         +1  9317+1           mov     r5,a
0391 EC         +1  9318+1           mov     a,r4
0392 33         +1  9319+1           rlc     a
0393 FC         +1  9320+1           mov     r4,a
0394 EB         +1  9321+1           mov     a,r3
0395 33         +1  9322+1           rlc     a
0396 FB         +1  9323+1           mov     r3,a
0397 EA         +1  9324+1           mov     a,r2
0398 33         +1  9325+1           rlc     a
0399 FA         +1  9326+1           mov     r2,a
039A DEF2       +1  9327             djnz    r6,ftol33       ;and loop
039C 80E3       +1  9328             sjmp    ftol9
039E            +1  9329     ftol2:
039E F4         +1  9330             cpl     a               ;complement
039F FE         +1  9331             mov     r6,a
03A0 6022       +1  9332             jz      ftol22
03A2            +1  9333     ftol23:
03A2 EF         +1  9334             mov     a,r7
03A3 30E70F     +1  9335             jnb     acc.7,ftol24
                +1  9336+3           rshift1
03A6 D3         +1  9337+1           setb    c
03A7 EA         +1  9338+1           mov     a,r2
03A8 13         +1  9339+1           rrc     a
03A9 FA         +1  9340+1           mov     r2,a
03AA EB         +1  9341+1           mov     a,r3
03AB 13         +1  9342+1           rrc     a
03AC FB         +1  9343+1           mov     r3,a
03AD EC         +1  9344+1           mov     a,r4
03AE 13         +1  9345+1           rrc     a
03AF FC         +1  9346+1           mov     r4,a
03B0 ED         +1  9347+1           mov     a,r5
03B1 13         +1  9348+1           rrc     a
03B2 FD         +1  9349+1           mov     r5,a
03B3 800D       +1  9350             jmp     ftol25
03B5            +1  9351+3   ftol24: rshift                  ;shift down
03B5 C3         +1  9352+1           clr     c
03B6 EA         +1  9353+1           mov     a,r2
03B7 13         +1  9354+1           rrc     a
03B8 FA         +1  9355+1           mov     r2,a
03B9 EB         +1  9356+1           mov     a,r3
03BA 13         +1  9357+1           rrc     a
03BB FB         +1  9358+1           mov     r3,a
03BC EC         +1  9359+1           mov     a,r4
03BD 13         +1  9360+1           rrc     a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   145

03BE FC         +1  9361+1           mov     r4,a
03BF ED         +1  9362+1           mov     a,r5
03C0 13         +1  9363+1           rrc     a
03C1 FD         +1  9364+1           mov     r5,a
03C2 DEDE       +1  9365     ftol25: djnz    r6,ftol23
03C4            +1  9366     ftol22:
                +1  9367+3           add1                    ;round
03C4 ED         +1  9368+1           mov     a,r5
03C5 2401       +1  9369+1           add     a,#1
03C7 FD         +1  9370+1           mov     r5,a
03C8 E4         +1  9371+1           clr     a
03C9 3C         +1  9372+1           addc    a,r4
03CA FC         +1  9373+1           mov     r4,a
03CB E4         +1  9374+1           clr     a
03CC 3B         +1  9375+1           addc    a,r3
03CD FB         +1  9376+1           mov     r3,a
03CE E4         +1  9377+1           clr     a
03CF 3A         +1  9378+1           addc    a,r2
03D0 FA         +1  9379+1           mov     r2,a
03D1 EF         +1  9380             mov     a,r7
03D2 30E70F     +1  9381             jnb     acc.7,ftol26
                +1  9382+3           rshift1
03D5 D3         +1  9383+1           setb    c
03D6 EA         +1  9384+1           mov     a,r2
03D7 13         +1  9385+1           rrc     a
03D8 FA         +1  9386+1           mov     r2,a
03D9 EB         +1  9387+1           mov     a,r3
03DA 13         +1  9388+1           rrc     a
03DB FB         +1  9389+1           mov     r3,a
03DC EC         +1  9390+1           mov     a,r4
03DD 13         +1  9391+1           rrc     a
03DE FC         +1  9392+1           mov     r4,a
03DF ED         +1  9393+1           mov     a,r5
03E0 13         +1  9394+1           rrc     a
03E1 FD         +1  9395+1           mov     r5,a
03E2 809D       +1  9396             jmp     ftol9
03E4            +1  9397+3   ftol26: rshift
03E4 C3         +1  9398+1           clr     c
03E5 EA         +1  9399+1           mov     a,r2
03E6 13         +1  9400+1           rrc     a
03E7 FA         +1  9401+1           mov     r2,a
03E8 EB         +1  9402+1           mov     a,r3
03E9 13         +1  9403+1           rrc     a
03EA FB         +1  9404+1           mov     r3,a
03EB EC         +1  9405+1           mov     a,r4
03EC 13         +1  9406+1           rrc     a
03ED FC         +1  9407+1           mov     r4,a
03EE ED         +1  9408+1           mov     a,r5
03EF 13         +1  9409+1           rrc     a
03F0 FD         +1  9410+1           mov     r5,a
03F1 808E       +1  9411             jmp     ftol9
                +1  9412     
                +1  9413     ;       arithmetic integer to floating conversions
                +1  9414     
03F3            +1  9415     abtof:
03F3 ED         +1  9416             mov     a,r5
03F4 23         +1  9417             rl      a
03F5 FC         +1  9418             mov     r4,a
03F6 9C         +1  9419             subb    a,r4
03F7 FC         +1  9420             mov     r4,a
03F8 FB         +1  9421             mov     r3,a
03F9 FA         +1  9422             mov     r2,a
03FA 8006       +1  9423             jmp     altof
03FC            +1  9424     awtof:
03FC EC         +1  9425             mov     a,r4
03FD 23         +1  9426             rl      a
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   146

03FE FB         +1  9427             mov     r3,a
03FF 9B         +1  9428             subb    a,r3
0400 FB         +1  9429             mov     r3,a
0401 FA         +1  9430             mov     r2,a
0402            +1  9431     altof:
                +1  9432+3           saveregs
0402 C007       +1  9433+1           push    7
0404 C006       +1  9434+1           push    6
0406 C001       +1  9435+1           push    1
0408 C000       +1  9436+1           push    0
040A EA         +1  9437             mov     a,r2            ;get sign
040B 5480       +1  9438             anl     a,#80h
040D FF         +1  9439             mov     r7,a            ;store it
040E 30E70D     +1  9440             jnb     acc.7,altof1    ;skip if +ve
                +1  9441+3           neg1
0411 C3         +1  9442+1           clr     c
0412 E4         +1  9443+1           clr     a
0413 9D         +1  9444+1           subb    a,r5
0414 FD         +1  9445+1           mov     r5,a
0415 E4         +1  9446+1           clr     a
0416 9C         +1  9447+1           subb    a,r4
0417 FC         +1  9448+1           mov     r4,a
0418 E4         +1  9449+1           clr     a
0419 9B         +1  9450+1           subb    a,r3
041A FB         +1  9451+1           mov     r3,a
041B E4         +1  9452+1           clr     a
041C 9A         +1  9453+1           subb    a,r2
041D FA         +1  9454+1           mov     r2,a
041E            +1  9455     altof1:
041E 7896       +1  9456             mov     r0,#127+23      ;initialize exponent
0420 11F0       +1  9457             call    norm1           ;normalize it
0422 11DE       +1  9458             call    pack1           ;and pack up
                +1  9459+3           restregs
0424 D000       +1  9460+1           pop     0
0426 D001       +1  9461+1           pop     1
0428 D006       +1  9462+1           pop     6
042A D007       +1  9463+1           pop     7
042C 22         +1  9464             ret
                +1  9465     
042D            +1  9466     lbtof:
042D 7C00       +1  9467             mov     r4,#0
042F            +1  9468     lwtof:
042F E4         +1  9469             clr     a
0430 FB         +1  9470             mov     r3,a
0431 FA         +1  9471             mov     r2,a
0432            +1  9472     lltof:
                +1  9473+3           saveregs
0432 C007       +1  9474+1           push    7
0434 C006       +1  9475+1           push    6
0436 C001       +1  9476+1           push    1
0438 C000       +1  9477+1           push    0
043A 7F00       +1  9478             mov     r7,#0           ;zero sign
043C 80E0       +1  9479             sjmp    altof1
                +1  9480     
                +1  9481     ;-------------------------------------------------------
                +1  9482     
                +1  9483     
                    9484     
                    9485     ;$include (wriread.asm)
                +1  9486     ;dptr-адрес ячейки страницы памяти
043E 75A800     +1  9487     cle256:         mov             IE,#00H
0441 75B601     +1  9488                             mov             FLSCL,#01                       ;стирание страницы 
                             байт(запись в ячейки ff)
0444 758F03     +1  9489                             MOV             PSCTL,#03
                +1  9490                                             
0447 7400       +1  9491                             mov             a,#00h  ;запись любого значения стирает страницу
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   147

0449 F0         +1  9492                             movx    @dptr,a                         ;wr
044A 758F00     +1  9493                             mov             PSCTL,#00
044D 75B600     +1  9494                             mov             FLSCL,#00
0450 75A880     +1  9495                             mov             IE,#80H
0453 22         +1  9496                             ret
                +1  9497     
                +1  9498     ;чтение памяти программ в r8..r11
                +1  9499     ;вх-r2,r3-адр яч памяти прогр
0454 8A83       +1  9500     re4byte: mov            dph,r2
0456 8B82       +1  9501                     mov                     dpl,r3
0458 E4         +1  9502                     clr                     a
0459 93         +1  9503                     movc            a,@a+dptr
045A F508       +1  9504                     mov                     r8,a
045C A3         +1  9505                     inc                     dptr
045D E4         +1  9506                     clr                     a
045E 93         +1  9507                     movc            a,@a+dptr
045F F509       +1  9508                     mov                     r9,a
0461 A3         +1  9509                     inc                     dptr
0462 E4         +1  9510                     clr                     a
0463 93         +1  9511                     movc            a,@a+dptr
0464 F50A       +1  9512                     mov                     r10,a
0466 A3         +1  9513                     inc                     dptr
0467 E4         +1  9514                     clr                     a
0468 93         +1  9515                     movc            a,@a+dptr
0469 F50B       +1  9516                     mov                     r11,a                                           ;r8
                             ..r11
046B 22         +1  9517                     ret
                +1  9518      ;чтение памяти программ в r2..r5
                +1  9519     ;вх-r2,r3-адр яч памяти прогр
046C 8A83       +1  9520     rebyte2: mov            dph,r2
046E 8B82       +1  9521                     mov                     dpl,r3
0470 E4         +1  9522                     clr                     a
0471 93         +1  9523                     movc            a,@a+dptr
0472 FA         +1  9524                     mov                     r2,a
0473 A3         +1  9525                     inc                     dptr
0474 E4         +1  9526                     clr                     a
0475 93         +1  9527                     movc            a,@a+dptr
0476 FB         +1  9528                     mov                     r3,a
0477 A3         +1  9529                     inc                     dptr
0478 E4         +1  9530                     clr                     a
0479 93         +1  9531                     movc            a,@a+dptr
047A FC         +1  9532                     mov                     r4,a
047B A3         +1  9533                     inc                     dptr
047C E4         +1  9534                     clr                     a
047D 93         +1  9535                     movc            a,@a+dptr
047E FD         +1  9536                     mov                     r5,a                                            ;r8
                             ..r11
047F 22         +1  9537                     ret
                +1  9538      
                +1  9539     ;r7-количество байт
                +1  9540     ;dptr-адр ячейки для записи
                +1  9541     ;r1-адр ячейки  внешнего озу
                +1  9542     
0480 75A800     +1  9543     wrpage: mov             IE,#00H
0483 75B601     +1  9544     WW5:    mov             FLSCL,#01               ;обязательно для каждого записи байта
0486 758F01     +1  9545                     mov             PSCTL,#01               ;обязательно для каждого записи бай
                             та
0489 E3         +1  9546                     movx            a,@r1
048A F0         +1  9547                     movx            @dptr,a                         ;wr
048B 758F00     +1  9548                     mov             PSCTL,#0
048E 75B600     +1  9549                     mov             FLSCL,#00
0491 A3         +1  9550                     inc                     dptr
0492 09         +1  9551                     inc                     r1
0493 DFEE       +1  9552                     djnz            r7,WW5
0495 75A880     +1  9553                     mov             IE,#80H
0498 22         +1  9554                     ret
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   148

                +1  9555                             
                +1  9556     
                +1  9557     
                +1  9558     ;чтение памяти программ во внешнее озу
                +1  9559     ;вх-r2,r3-адр яч памяти прогр
                +1  9560     ;r1- яч внешнее озу
0499 8A83       +1  9561     copyPP:         mov                     dph,r2
049B 8B82       +1  9562                             mov                     dpl,r3
049D 7FFF       +1  9563                             mov                     r7,#0ffh
049F E4         +1  9564     copy1:          clr                     a
04A0 93         +1  9565                             movc            a,@a+dptr
04A1 F3         +1  9566                             movx                    @r1,a
04A2 A3         +1  9567                             inc                     dptr
04A3 09         +1  9568                             inc                     r1
04A4 DFF9       +1  9569                             djnz            r7,copy1
04A6 22         +1  9570                             ret
                +1  9571     
                +1  9572     ;r8..r11->@r0..@r0+3
                +1  9573     ;r0-адр ячейки
                +1  9574     ;сохранить в ячейке озу
04A7 E508       +1  9575     savelte:        mov     a,ltemp
04A9 F6         +1  9576                     mov     @r0,a
04AA 08         +1  9577                     inc     r0
04AB E509       +1  9578                     mov     a,ltemp+1
04AD F6         +1  9579                     mov     @r0,a
04AE 08         +1  9580                     inc     r0
04AF E50A       +1  9581                     mov     a,ltemp+2
04B1 F6         +1  9582                     mov     @r0,a
04B2 08         +1  9583                     inc     r0
04B3 E50B       +1  9584                     mov     a,ltemp+3
04B5 F6         +1  9585                     mov     @r0,a
04B6 22         +1  9586                     ret
                +1  9587     
                +1  9588     
                +1  9589      
                    9590     
                    9591     
                    9592     ;$include (d:\amper\subr7.asm)  
                    9593     ;$include (d:\amper\sarifm3.asm)                                        
                    9594     ;$include (d:\amper\floatm.asm)
                    9595     ;$include (d:\amper\wriread.asm)
                    9596                                                   
                    9597     END
                                                                             
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   149

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES / REFERENCES

AA . . . . . . . .  B ADDR   00C0H.2 A      209#
AAPAR. . . . . . .  C ADDR   03C6H   R   SEG=MAIN   938#
ABIN . . . . . . .  D ADDR   004FH   A      321# 1515 1608 1633 1654 1658 1661 1662 1664 1745 1748 2027 2030 4122
                                           4136 4216 4219 4262 4369 4408 4411 4489 4493 4494 4495 4498 4761 4799 4800
                                           4802 4879 4899 4988 4992 5035 5038 5398 5403 5585 5589 7080 7238 7241
ABRET. . . . . . .  C ADDR   2A7EH   R   SEG=MAIN   7014 7016#
ABTOF. . . . . . .  C ADDR   03F3H   A      9415#
AC . . . . . . . .  B ADDR   00D0H.6 A      225#
ACC. . . . . . . .  D ADDR   00E0H   A      130# 760 776 825 833 840 848 849 866 1187 1197 1200 1208 1283 1896 1905
                                           1914 1923 1944 2537 2578 2583 2587 2592 2595 2598 2601 2604 2860 2921 2965
                                           2976 3078 3087 3095 3104 3283 3345 3371 3376 3380 3383 3386 3393 3396 3399
                                           3775 3862 3902 3921 3939 3958 4005 4937 4943 4980 5069 5782 5834 6457 6497
                                           6606 7657 7825 7901 7904 8160 8812 8895 8912 8944 8982 9010 9272 9274 9292
                                           9335 9381 9440
AD0BUSY. . . . . .  B ADDR   00E8H.4 A      246#
AD0CM0 . . . . . .  B ADDR   00E8H.2 A      248#
AD0CM1 . . . . . .  B ADDR   00E8H.3 A      247#
AD0EN. . . . . . .  B ADDR   00E8H.7 A      243#
AD0INT . . . . . .  B ADDR   00E8H.5 A      245#
AD0LJST. . . . . .  B ADDR   00E8H.0 A      250#
AD0TM. . . . . . .  B ADDR   00E8H.6 A      244#
AD0WINT. . . . . .  B ADDR   00E8H.1 A      249#
ADC0CF . . . . . .  D ADDR   00BCH   A      96#
ADC0CN . . . . . .  D ADDR   00E8H   A      138# 243 244 245 246 247 248 249 250
ADC0GTH. . . . . .  D ADDR   00C5H   A      105#
ADC0GTL. . . . . .  D ADDR   00C4H   A      104#
ADC0H. . . . . . .  D ADDR   00BFH   A      99#
ADC0L. . . . . . .  D ADDR   00BEH   A      98#
ADC0LTH. . . . . .  D ADDR   00C7H   A      107#
ADC0LTL. . . . . .  D ADDR   00C6H   A      106#
ADC1 . . . . . . .  D ADDR   009CH   A      67#
ADC1CF . . . . . .  D ADDR   00ABH   A      81#
ADC1CN . . . . . .  D ADDR   00AAH   A      80#
ADDX . . . . . . .  C ADDR   3242H   R   SEG=MAIN   972 1003 1005 1007 1009 1011 1013 1015 1017 1019 1073 1075 1077
                                           1079 1081 1083 1085 1087 1089 1092 1094 1096 1098 1100 1102 1104 1106 1108
                                           1110 1128 1130 1132 8401#
ADEC . . . . . . .  D ADDR   0053H   A      322# 1607 1619 1623 1638 1663 1666 1667 1747 1751 2029 2033 4135 4139
                                           4213 4217 4259 4263 4366 4370 4410 4414 4497 4510 4771 4786 4788 4790 4801
                                           4804 4889 4900 4993 5039 5402 5406 5588 5591 6888 6907 6925 6986 7003 7240
                                           7243 7581 7611
ADRBLOK. . . . . .  C ADDR   2EF6H   R   SEG=MAIN   3843 3867 4232 4387 5293 5322 5448 5506 5611 5663 6303 6347 6444
                                           6458 7623#
AFTERK . . . . . .  C ADDR   06C3H   R   SEG=MAIN   1217 1292#
AFTER_2. . . . . .  C ADDR   01D5H   R   SEG=MAIN   637# 2139
AGE2 . . . . . . .  C ADDR   024BH   R   SEG=MAIN   700# 703
AGE9 . . . . . . .  C ADDR   08C5H   R   SEG=MAIN   1558# 1561
AGEON. . . . . . .  C ADDR   0259H   R   SEG=MAIN   709# 711
ALLSUM . . . . . .  C ADDR   0364H   R   SEG=MAIN   886# 920 935 951
ALMUL. . . . . . .  C ADDR   3189H   R   SEG=MAIN   8247#
ALTOF. . . . . . .  C ADDR   0402H   A      1181 1277 1306 1314 1332 1348 1359 1376 1388 1476 2233 2342 2419 2457
                                           4266 4375 4903 4996 5042 5134 5212 5220 5238 5361 5373 5388 5491 5552 5568
                                           5650 5705 5718 6169 9423 9431#
ALTOF1 . . . . . .  C ADDR   041EH   A      9440 9455# 9479
AMX0CF . . . . . .  D ADDR   00BAH   A      94#
AMX0SL . . . . . .  D ADDR   00BBH   A      95#
AMX1SL . . . . . .  D ADDR   00ACH   A      82#
ANKOR. . . . . . .  C ADDR   0623H   R   SEG=MAIN   1179 1195#
ANLP1. . . . . . .  C ADDR   0AD8H   R   SEG=MAIN   1862 1868#
AN_T7. . . . . . .  C ADDR   13D5H   R   SEG=MAIN   3400# 3487 3489 3502 3512
AUTOKA . . . . . .  C ADDR   0DD8H   R   SEG=MAIN   1215 2388#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   150

AVPGO. . . . . . .  C ADDR   07F4H   R   SEG=MAIN   1435 1437#
AVTDEC1. . . . . .  C ADDR   0685H   R   SEG=MAIN   1249 1258#
AWTOF. . . . . . .  C ADDR   03FCH   A      9424#
B. . . . . . . . .  D ADDR   00F0H   A      146# 6738 7100 8250 8253 8255 8259 8263 8267 8271 8276 8280 8287 8291
                                           8295 8301 8305 8309 8315 9008 9009
BEGIN. . . . . . .  C ADDR   0100H   R   SEG=MAIN   276 498#
BFORM. . . . . . .  C ADDR   2E33H   R   SEG=MAIN   7432 7437 7449# 7475
BIFL_KT. . . . . .  B ADDR   0021H.5 A      360# 5130 5186 5285
BIN30. . . . . . .  C ADDR   2FA5H   R   SEG=MAIN   7814# 7838
BIN31. . . . . . .  C ADDR   2FA9H   R   SEG=MAIN   7818# 7822
BIN32. . . . . . .  C ADDR   2FB9H   R   SEG=MAIN   7830# 7835
BIN41. . . . . . .  C ADDR   2FCAH   R   SEG=MAIN   7846# 7856
BINDEC . . . . . .  C ADDR   2F99H   R   SEG=MAIN   1609 1665 1749 2031 4137 4412 4499 4803 5404 5590 7242 7793#
BITAKT . . . . . .  B ADDR   0023H.2 A      379# 1832 1833 1836
BITAVP . . . . . .  B ADDR   0020H.5 A      348# 1401 1672 1822 3485 3486 3488 6197 6199
BITBON . . . . . .  B ADDR   0021H.2 A      357# 1859 2179 2363 2388 2628 2629 2637 6321 6335 7658
BITEIZM. . . . . .  B ADDR   0022H.5 A      370# 1300 1770 1777 1840 2065 2074 2688 2737 3451 3467 4666 6660
BITIZM . . . . . .  B ADDR   0020H.4 A      347# 649 794 1677 2584 2690 2704 2804 2849 2884 3377 3454 3601 3622 3695
                                           3731 3756 3864 3975 4236 4284 4317 4481 4610 4667 4722 4835 4912 5024 6030
                                           6073
BITKLB . . . . . .  B ADDR   0022H.2 A      367# 1369 1857 2589 3453 3471 3484 3496 3730 4910 5200
BITMAS . . . . . .  B ADDR   0020H.1 A      344# 1138 1140 7415
BITMEM . . . . . .  B ADDR   0021H.3 A      358# 1737 3072 3734 3752 3764 3863 3974 4237 4283 4480
BITMENU. . . . . .  B ADDR   0022H.1 A      366# 1736 2503 2883 2992 3455 3517 3755 4292 4316 4615 4668 4721 4834
                                           4909
BITMIG . . . . . .  B ADDR   0023H.1 A      378# 2958 3179 3294 3663 4033 4173 4186 4740 4868 4972 5073 7163 7189
                                           7212 7224 7286 7293 7298 7304
BITNUL . . . . . .  B ADDR   0021H.7 A      362# 1449 1698 1804 2670 3510 3523 3524 3531 5898 6204 6221
BITOLL . . . . . .  B ADDR   0022H.7 A      372# 736 1522 1684 1735 1977 2103 3456
BITPAR . . . . . .  B ADDR   0022H.6 A      371# 5201
BITPRD . . . . . .  B ADDR   0021H.1 A      356# 2178
BITPRER. . . . . .  B ADDR   0023H.4 A      381#
BITRS. . . . . . .  B ADDR   0020H.3 A      346#
BITT2. . . . . . .  B ADDR   0022H.0 A      365# 1734 2805 2850 2857 3544 3696 6031 6074
BITV19 . . . . . .  B ADDR   0022H.3 A      368# 579 584 3028 3033 3041 4594 4599 4604 4700 4715 4840 4844 4849
BITVI11. . . . . .  B ADDR   0020H.6 A      349# 1399 1414 1458 1520 1680 2620 2622 2689 2703 2882 3450 3593 3600
                                           3754 5023 6143 6147
BITVICH. . . . . .  B ADDR   0022H.4 A      369# 1457 1733 2621 2691 2701 2881 2889 3562 3592 3621 3753 5022
BITZNAK. . . . . .  B ADDR   0020H.0 A      343# 761 809
BITZNB . . . . . .  B ADDR   0023H.3 A      380# 5043 7012 7015
BITZUS . . . . . .  B ADDR   0020H.7 A      350# 1450 1699 2291 2294 2749
BLOIN. . . . . . .  C ADDR   18B4H   R   SEG=MAIN   4142# 4147
BLOKVV . . . . . .  C ADDR   1886H   R   SEG=MAIN   4112#
BLOKVVC. . . . . .  C ADDR   1890H   R   SEG=MAIN   4115 4118#
BL_LI. . . . . . .  C ADDR   1851H   R   SEG=MAIN   4062 4070#
BONPART. . . . . .  C ADDR   0DA8H   R   SEG=MAIN   2362#
BOUT7. . . . . . .  C ADDR   15CBH   R   SEG=MAIN   3705# 3707 3730
BRET . . . . . . .  C ADDR   28BFH   R   SEG=MAIN   6681 6686 6690#
BUFDEC . . . . . .  C ADDR   0A1CH   R   SEG=MAIN   1754# 1759
BUFDECRS . . . . .  C ADDR   0B96H   R   SEG=MAIN   2036# 2041
BUFIND . . . . . .  D ADDR   0040H   A      320# 699 703 708 711 716 1557 1561 1624 1645 1666 1667 1668 1669 1713
                                           1718 1752 1760 1762 1767 1802 1820 1826 1834 1837 1842 1858 1860 1979 1991
                                           2015 2034 2046 2048 2053 2091 2097 2104 2556 2634 2638 2933 2951 2967 2969
                                           2972 3031 3032 3039 3040 3174 3235 3254 3364 3459 3546 3602 3603 3647 3651
                                           3676 3697 3711 3718 3735 3736 3836 4028 4056 4084 4113 4140 4154 4155 4159
                                           4160 4167 4168 4172 4188 4332 4341 4415 4423 4425 4442 4466 4500 4509 4511
                                           4574 4597 4605 4732 4770 4804 4805 4806 4807 4809 4843 4848 4860 4888 4911
                                           4964 5010 5407 5415 5419 5592 5600 5604 5752 6012 6032 6055 6075 6322 6340
                                           6527 6736 6749 6755 6762 6887 6906 6924 6985 7002 7013 7166 7192 7244 7290
                                           7310 7580 7610 7659
BUFL_DEC . . . . .  C ADDR   2389H   R   SEG=MAIN   5726#
BUFMEA . . . . . .  C ADDR   21A8H   R   SEG=MAIN   5409# 5414
BUFMIN . . . . . .  C ADDR   22B7H   R   SEG=MAIN   5594# 5599
BUFON. . . . . . .  C ADDR   0F4EH   R   SEG=MAIN   2628 2637#
BUFR . . . . . . .  C ADDR   096AH   R   SEG=MAIN   1647# 1652
BUFR2. . . . . . .  C ADDR   094CH   R   SEG=MAIN   1626# 1631
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   151

BUFR3. . . . . . .  C ADDR   0945H   R   SEG=MAIN   1617 1622#
BUFR30 . . . . . .  C ADDR   0948H   R   SEG=MAIN   1620 1624#
BUF_IN . . . . . .  D ADDR   00DBH   A      391# 725 5815 5840
BUSY . . . . . . .  B ADDR   00C0H.7 A      204#
BYTE_KOR . . . . .  D ADDR   00C4H   A      440# 634 1198 6232 6237
CCF0 . . . . . . .  B ADDR   00D8H.0 A      240#
CCF1 . . . . . . .  B ADDR   00D8H.1 A      239#
CCF2 . . . . . . .  B ADDR   00D8H.2 A      238#
CCF3 . . . . . . .  B ADDR   00D8H.3 A      237#
CCF4 . . . . . . .  B ADDR   00D8H.4 A      236#
CDONE. . . . . . .  C ADDR   01F7H   A      9005# 9009
CELLBIT. . . . . .  D ADDR   0020H   A      342# 343 344 345 346 347 348 349 350
CELLBIT1 . . . . .  D ADDR   0021H   A      352# 354 356 357 358 360 362 386 387
CELLBIT2 . . . . .  D ADDR   0022H   A      364# 365 366 367 368 369 370 371 372
CELLBIT3 . . . . .  D ADDR   0023H   A      376# 377 378 379 380 381 388 389 390
CEXP . . . . . . .  C ADDR   01E2H   A      8982 8991#
CF . . . . . . . .  B ADDR   00D8H.7 A      234#
CH0. . . . . . . .  C ADDR   2962H   R   SEG=MAIN   1499 3532 4999 6222 6820#
CH1. . . . . . . .  C ADDR   2982H   R   SEG=MAIN   6648 6831#
CH10 . . . . . . .  C ADDR   2966H   R   SEG=MAIN   934 1151 4404 6369 6821#
CH100. . . . . . .  C ADDR   297AH   R   SEG=MAIN   885 6826#
CH10000. . . . . .  C ADDR   2976H   R   SEG=MAIN   6825#
CH150H . . . . . .  C ADDR   29CAH   R   SEG=MAIN   6850#
CH2. . . . . . . .  C ADDR   297EH   R   SEG=MAIN   1146 6827#
CH20 . . . . . . .  C ADDR   2B45H   R   SEG=MAIN   919 1156 7131#
CH2THO . . . . . .  C ADDR   29AAH   R   SEG=MAIN   2426 2464 6842#
CH320H . . . . . .  C ADDR   29C6H   R   SEG=MAIN   6849# 7631
CH4. . . . . . . .  C ADDR   296EH   R   SEG=MAIN   1160 6823#
CH43 . . . . . . .  C ADDR   1ABFH   R   SEG=MAIN   4417# 4422
CH43_42. . . . . .  C ADDR   1B66H   R   SEG=MAIN   4513# 4518
CH5. . . . . . . .  C ADDR   296AH   R   SEG=MAIN   950 6822#
CH57 . . . . . . .  C ADDR   2B41H   R   SEG=MAIN   7130#
CH954. . . . . . .  C ADDR   2972H   R   SEG=MAIN   6824#
CHAIBL . . . . . .  C ADDR   16E6H   R   SEG=MAIN   3838 3840#
CHAIBL9. . . . . .  C ADDR   2755H   R   SEG=MAIN   6315 6442#
CHAIPR . . . . . .  C ADDR   1A14H   R   SEG=MAIN   4334 4337#
CHANMA . . . . . .  C ADDR   1143H   R   SEG=MAIN   2965 2974#
CHANZ. . . . . . .  C ADDR   112AH   R   SEG=MAIN   2921 2963#
CHAVT. . . . . . .  D ADDR   0081H   A      408# 626 1206 1250 1258 2381 2483 4611
CHBEFORE . . . . .  D ADDR   009BH   A      418# 651 882 896 914 929 945
CHBLOK . . . . . .  D ADDR   00D6H   A      448# 5320 5368 5384 5504 5558 5661 5710
CHBUF. . . . . . .  D ADDR   00CFH   A      445# 662 2153 2259 2300 2305 2364 2372 4281 5726 5731
CHBUF1 . . . . . .  X ADDR   0E00H   A      478# 2163 2246
CHCMP. . . . . . .  C ADDR   2862H   R   SEG=MAIN   1212 6625#
CHDEC. . . . . . .  C ADDR   2875H   R   SEG=MAIN   1259 1272 6640#
CHDEL. . . . . . .  D ADDR   0083H   A      409# 2324 2350 2390 2439 2477
CHDELMO. . . . . .  C ADDR   0D93H   R   SEG=MAIN   2334 2350# 2355
CHIF . . . . . . .  C ADDR   2B8AH   R   SEG=MAIN   7170 7173#
CHIF5. . . . . . .  C ADDR   2B92H   R   SEG=MAIN   7176 7178#
CHIFB. . . . . . .  C ADDR   2BB5H   R   SEG=MAIN   7196 7199#
CHIFB1 . . . . . .  C ADDR   2BBBH   R   SEG=MAIN   7198 7199 7203#
CHIFL5 . . . . . .  C ADDR   2BC3H   R   SEG=MAIN   7206 7208#
CHIFOUR. . . . . .  C ADDR   2BA4H   R   SEG=MAIN   7183 7185 7189#
CHIND. . . . . . .  D ADDR   00ACH   A      424# 1417 1881
CHIND2 . . . . . .  D ADDR   0033H   A      336# 796 798 806
CHINKOR. . . . . .  D ADDR   0098H   A      407# 621 864 1195 1211 1252 1266 1271 2357 6240
CHK. . . . . . . .  C ADDR   29C2H   R   SEG=MAIN   1370 6848#
CHKL . . . . . . .  D ADDR   003DH   A      326# 775 786 788 789 791 2775 2810 2872 2980 3416 3741 4472 4915
CHMAS. . . . . . .  D ADDR   006EH   A      323# 1135 1141 1164 7414
CHMASN . . . . . .  D ADDR   003FH   A      327# 871 880 915 930 946 961 1139 1141 1142
CHMINUS. . . . . .  C ADDR   2EDBH   R   SEG=MAIN   3859 3899 3918 3936 3955 6454 6494 7595# 7654
CHTADC . . . . . .  C ADDR   280CH   R   SEG=MAIN   6565#
CHTHO. . . . . . .  C ADDR   29A2H   R   SEG=MAIN   1339 1377 5143 5228 5246 6840#
CHTHOU . . . . . .  C ADDR   2A49H   R   SEG=MAIN   6973#
CHZAP. . . . . . .  C ADDR   295EH   R   SEG=MAIN   2142 6819#
CH_1 . . . . . . .  C ADDR   298AH   R   SEG=MAIN   654 1572 1595 2160 2302 2376 4376 5728 6833#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   152

CH_10. . . . . . .  C ADDR   29BAH   R   SEG=MAIN   1578 1601 2242 2272 4904 5393 5579 6846#
CH_10TH. . . . . .  C ADDR   29B6H   R   SEG=MAIN   1430 6845#
CH_2 . . . . . . .  C ADDR   298EH   R   SEG=MAIN   2155 2237 2265 2281 6834#
CH_200 . . . . . .  C ADDR   29B2H   R   SEG=MAIN   6844#
CH_220 . . . . . .  C ADDR   29AEH   R   SEG=MAIN   1392 6843#
CH_22T . . . . . .  C ADDR   2A87H   R   SEG=MAIN   1487 7021#
CH_250 . . . . . .  C ADDR   29BEH   R   SEG=MAIN   1295 6847#
CH_4 . . . . . . .  C ADDR   2992H   R   SEG=MAIN   2275 4379 6835#
CH_5 . . . . . . .  C ADDR   2996H   R   SEG=MAIN   6836#
CH_500 . . . . . .  C ADDR   2A83H   R   SEG=MAIN   1482 7020#
CH_7 . . . . . . .  C ADDR   299AH   R   SEG=MAIN   2368 6837#
CH_953 . . . . . .  C ADDR   299EH   R   SEG=MAIN   6839#
CH_B . . . . . . .  C ADDR   2A7FH   R   SEG=MAIN   1503 7018#
CH_FL. . . . . . .  C ADDR   2A8BH   R   SEG=MAIN   1565 7022#
CH_M3. . . . . . .  C ADDR   29CEH   R   SEG=MAIN   6851#
CH_MLN . . . . . .  C ADDR   2986H   R   SEG=MAIN   6832#
CIKLWR . . . . . .  C ADDR   2E09H   R   SEG=MAIN   7420#
CKCON. . . . . . .  D ADDR   008EH   A      54# 517 543
CL4. . . . . . . .  C ADDR   29E0H   R   SEG=MAIN   6868# 6870
CL4N . . . . . . .  C ADDR   29E6H   R   SEG=MAIN   6876# 6878
CLE20. . . . . . .  C ADDR   1B53H   R   SEG=MAIN   4503# 4505
CLE256 . . . . . .  C ADDR   043EH   A      4706 5176 5278 9487#
CLEAR. . . . . . .  C ADDR   2F93H   R   SEG=MAIN   7771 7775# 7805
CLEAR4 . . . . . .  C ADDR   29DDH   R   SEG=MAIN   894 1446 1448 1634 1655 1695 1697 2667 2669 3507 3509 5319 6866#
CLEARN . . . . . .  C ADDR   29E5H   R   SEG=MAIN   4214 4260 4367 4762 4880 4989 5036 6874#
CLMASSIX . . . . .  C ADDR   2DF9H   R   SEG=MAIN   612 1444 1693 2361 2487 2665 3505 3694 6029 6072 7408#
CLMASV . . . . . .  C ADDR   07F9H   R   SEG=MAIN   1439 1441#
CLMAX. . . . . . .  C ADDR   2DFEH   R   SEG=MAIN   7410# 7413
CLR11. . . . . . .  C ADDR   2F94H   R   SEG=MAIN   7777# 7779
CLRDEC . . . . . .  C ADDR   2F8DH   R   SEG=MAIN   7769#
CLRNUM . . . . . .  C ADDR   2F91H   R   SEG=MAIN   7772# 7884
CLRVICH. . . . . .  C ADDR   1538H   R   SEG=MAIN   3621# 3638
CL_HL. . . . . . .  C ADDR   17A0H   R   SEG=MAIN   3968# 3982 3987 3991
CL_HL1 . . . . . .  C ADDR   17B2H   R   SEG=MAIN   3965 3979#
CL_HL2 . . . . . .  C ADDR   17BCH   R   SEG=MAIN   3979 3984#
CL_HL3 . . . . . .  C ADDR   17C6H   R   SEG=MAIN   3984 3989#
CMD_REZ. . . . . .  D ADDR   004EH   A      396# 5839 5977 6151 6252 6264 6316 6434 6436
CMD_TREE . . . . .  C ADDR   2416H   R   SEG=MAIN   733 5838#
CNTR . . . . . . .  N NUMB   0006H   A      8678#
CNT_IN . . . . . .  D ADDR   0025H   A      393# 727 5810 5814 5827 5828
CNT_OUT. . . . . .  D ADDR   0024H   A      392# 726 2017 2071 2079 2089 2131 2132 5784 5791 5864 5871 5960 6355 6405
CO02S. . . . . . .  C ADDR   2946H   R   SEG=MAIN   6803# 6807
CO05S. . . . . . .  C ADDR   2953H   R   SEG=MAIN   6812# 6816
CO1S . . . . . . .  C ADDR   293DH   R   SEG=MAIN   6796# 6796
CO2S . . . . . . .  C ADDR   2939H   R   SEG=MAIN   6794# 6798
COMPA1 . . . . . .  C ADDR   08E1H   R   SEG=MAIN   1572# 1581
COMPA2 . . . . . .  C ADDR   0917H   R   SEG=MAIN   1595# 1604
COND . . . . . . .  C ADDR   2E6DH   R   SEG=MAIN   7504#
COPY1. . . . . . .  C ADDR   049FH   A      9564# 9569
COPYPP . . . . . .  C ADDR   0499H   A      4693 5155 5256 9561#
COPY_HL. . . . . .  D ADDR   00D7H   A      449# 4392 4524 5312 5327 5341 5497 5512 5527 5655 5668 5682 6363 6399
COUNT. . . . . . .  C ADDR   291BH   R   SEG=MAIN   6769# 6769
CPRL2. . . . . . .  B ADDR   00C8H.0 A      221#
CPT0CN . . . . . .  D ADDR   009EH   A      69#
CPT1CN . . . . . .  D ADDR   009FH   A      70#
CR . . . . . . . .  B ADDR   00D8H.6 A      235#
CT . . . . . . . .  C ADDR   2922H   R   SEG=MAIN   6775# 6775
CT2. . . . . . . .  B ADDR   00C8H.1 A      220#
CY . . . . . . . .  B ADDR   00D0H.7 A      224#
DAC0CN . . . . . .  D ADDR   00D4H   A      119# 522
DAC0H. . . . . . .  D ADDR   00D3H   A      118# 2150
DAC0L. . . . . . .  D ADDR   00D2H   A      117# 2147
DAC1CN . . . . . .  D ADDR   00D7H   A      122# 523
DAC1H. . . . . . .  D ADDR   00D6H   A      121#
DAC1L. . . . . . .  D ADDR   00D5H   A      120#
DCOA . . . . . . .  C ADDR   2E72H   R   SEG=MAIN   7508# 7510
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   153

DCOB . . . . . . .  C ADDR   2E79H   R   SEG=MAIN   7512# 7530
DCOC . . . . . . .  C ADDR   2E84H   R   SEG=MAIN   7522# 7527
DCOD . . . . . . .  C ADDR   2E91H   R   SEG=MAIN   7529 7532#
DDOUTF . . . . . .  C ADDR   1809H   R   SEG=MAIN   3827 3880 4014 4022# 4108
DDOUTFR. . . . . .  C ADDR   16CAH   R   SEG=MAIN   3827# 3833
DEC30. . . . . . .  C ADDR   2FE6H   R   SEG=MAIN   7894# 7917
DEC31. . . . . . .  C ADDR   2FEBH   R   SEG=MAIN   7899# 7906
DEC32. . . . . . .  C ADDR   2FFBH   R   SEG=MAIN   7910# 7914
DECBIN . . . . . .  C ADDR   2FD9H   R   SEG=MAIN   4218 4264 4371 4901 4994 5040 7873#
DECSIZE. . . . . .  N NUMB   000AH   A      7755# 7770 7804 7829 7842 7845 7898
DECT2. . . . . . .  C ADDR   3004H   R   SEG=MAIN   7890 7920#
DEDPTR . . . . . .  C ADDR   3259H   R   SEG=MAIN   8405 8409 8413 8419#
DENORM . . . . . .  C ADDR   0133H   A      8837# 8893
DGOTO7 . . . . . .  C ADDR   1998H   R   SEG=MAIN   4267# 4275
DIAP . . . . . . .  D ADDR   00AEH   A      426# 642 1434 1674 1766 1863 1992 2052 2112 2189 2659 2711 3498 4808 5183
                                           5881 5972 6661 6682 6938 6952 7097 7157
DIINC. . . . . . .  C ADDR   0F7BH   R   SEG=MAIN   2662 2665#
DIKDN. . . . . . .  C ADDR   2B19H   R   SEG=MAIN   7099 7119#
DIKDW. . . . . . .  C ADDR   2A31H   R   SEG=MAIN   6942 6961#
DIKM . . . . . . .  C ADDR   2A47H   R   SEG=MAIN   6972#
DIPAR. . . . . . .  C ADDR   2A45H   R   SEG=MAIN   6971#
DIV1 . . . . . . .  C ADDR   02DDH   A      9174# 9233
DIV2 . . . . . . .  C ADDR   0320H   A      9192 9196 9200 9204 9219#
DIV3 . . . . . . .  C ADDR   030DH   A      9193 9197 9201 9205#
DIV9 . . . . . . .  C ADDR   0336H   A      9163 9165 9239#
DIVIDE . . . . . .  C ADDR   30C4H   R   SEG=MAIN   7436 8106#
DONE . . . . . . .  C ADDR   3033H   R   SEG=MAIN   7936 7947#
DONE1. . . . . . .  C ADDR   3031H   R   SEG=MAIN   7939 7942 7945#
DOSH . . . . . . .  C ADDR   314DH   R   SEG=MAIN   8181 8197#
DOSUB. . . . . . .  C ADDR   313BH   R   SEG=MAIN   8165 8169 8173 8177 8178 8182#
DPH. . . . . . . .  D ADDR   0083H   A      43# 618 666 674 681 688 2548 3272 3356 3968 4397 4399 4529 4534 5058 5296
                                           5305 5313 5325 5329 5337 5339 5342 5353 5440 5442 5451 5460 5498 5509 5514
                                           5523 5525 5528 5539 5614 5622 5656 5666 5670 5678 5680 5683 5694 6366 6404
                                           6487 7368 7376 7639 7647 7679 7953 7989 8024 8027 8039 8062 8424 8426 9500
                                           9520 9561
DPL. . . . . . . .  D ADDR   0082H   A      42# 669 677 684 691 2547 3273 3355 3971 4393 4395 4526 4537 5059 5294
                                           5301 5316 5323 5332 5334 5336 5345 5349 5437 5439 5449 5456 5501 5507 5517
                                           5520 5522 5531 5535 5612 5618 5659 5664 5673 5675 5677 5686 5690 6364 6401
                                           6490 7369 7375 7636 7650 7682 7969 8005 8026 8040 8043 8077 8421 8423 9501
                                           9521 9562
DVIG0. . . . . . .  C ADDR   0B0EH   R   SEG=MAIN   1917# 1919
DVIG1. . . . . . .  C ADDR   0B03H   R   SEG=MAIN   1908# 1910
DVIG2. . . . . . .  C ADDR   0AF8H   R   SEG=MAIN   1899# 1901
DVIG3. . . . . . .  C ADDR   0AECH   R   SEG=MAIN   1890# 1892
DVIG4. . . . . . .  C ADDR   0B1AH   R   SEG=MAIN   1928# 1930
DVIG6. . . . . . .  C ADDR   0B3CH   R   SEG=MAIN   1956# 1958
DVM. . . . . . . .  C ADDR   0B3AH   R   SEG=MAIN   1944 1955#
EA . . . . . . . .  B ADDR   00A8H.7 A      187# 1526 1552 5877 6217 6354 6407 6411 6438 6443 6462
EIE1 . . . . . . .  D ADDR   00E6H   A      136# 520
EIE2 . . . . . . .  D ADDR   00E7H   A      137# 588 780 2534 3285 3342 5072 5748 5750 5763
EIP1 . . . . . . .  D ADDR   00F6H   A      152#
EIP2 . . . . . . .  D ADDR   00F7H   A      153#
EMI0CF . . . . . .  D ADDR   00A3H   A      73#
EMI0CN . . . . . .  D ADDR   00AFH   A      85#
EMI0TC . . . . . .  D ADDR   00A1H   A      72#
ENDKALIB . . . . .  C ADDR   1FBFH   R   SEG=MAIN   3477 5129#
ENDSDV . . . . . .  C ADDR   0B40H   R   SEG=MAIN   1950 1959#
ENDSUM . . . . . .  C ADDR   05B1H   R   SEG=MAIN   973 1020 1111 1134#
ENSMB. . . . . . .  B ADDR   00C0H.6 A      205#
EQU0 . . . . . . .  C ADDR   0912H   R   SEG=MAIN   1575 1591#
EQU00. . . . . . .  C ADDR   0930H   R   SEG=MAIN   1593 1598 1606#
EQU1L. . . . . . .  C ADDR   129AH   R   SEG=MAIN   3185 3189#
EQU2L. . . . . . .  C ADDR   186CH   R   SEG=MAIN   4094 4099#
ERRA0. . . . . . .  C ADDR   1EE1H   R   SEG=MAIN   5002 5014#
ERRA01 . . . . . .  C ADDR   080FH   R   SEG=MAIN   1453# 1502
ERROR. . . . . . .  C ADDR   2C1FH   R   SEG=MAIN   1460 4623 4831 5017 6535 6547 7308#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   154

ES0. . . . . . . .  B ADDR   00A8H.4 A      189#
ET0. . . . . . . .  B ADDR   00A8H.1 A      192#
ET1. . . . . . . .  B ADDR   00A8H.3 A      190#
ET2. . . . . . . .  B ADDR   00A8H.5 A      188# 2223 3312 5089
EX0. . . . . . . .  B ADDR   00A8H.0 A      193#
EX1. . . . . . . .  B ADDR   00A8H.2 A      191#
EXEN2. . . . . . .  B ADDR   00C8H.3 A      218#
EXF2 . . . . . . .  B ADDR   00C8H.6 A      215#
EXP1 . . . . . . .  N NUMB   0000H   A      8680#
EXP2 . . . . . . .  N NUMB   0001H   A      8682# 8859 8880
EXTCLE . . . . . .  C ADDR   01B7H   R   SEG=MAIN   615# 619
F0 . . . . . . . .  B ADDR   00D0H.5 A      226#
F1 . . . . . . . .  B ADDR   00D0H.1 A      230#
FINDEXT. . . . . .  C ADDR   2A2AH   R   SEG=MAIN   5157 6951#
FINDKOEF . . . . .  C ADDR   2A1BH   R   SEG=MAIN   1373 6937#
FINDMEM. . . . . .  C ADDR   11EAH   R   SEG=MAIN   2990 3072#
FINDR. . . . . . .  C ADDR   2B72H   R   SEG=MAIN   1660 4798 7157#
FINIS. . . . . . .  C ADDR   3178H   R   SEG=MAIN   8125 8226#
FLACL. . . . . . .  D ADDR   00B7H   A      91#
FLADD. . . . . . .  C ADDR   0166H   A      2258 5365 5377 8885# 8974
FLCMP. . . . . . .  C ADDR   01D6H   A      1297 1394 1432 1484 1489 1501 1574 1597 2157 5001 5554 5570 5706 5719
                                           8979#
FLDIV. . . . . . .  C ADDR   02B7H   A      1320 1341 1379 1510 1567 1580 2274 2428 2466 5141 5226 5244 5392 5395
                                           5581 9149#
FLMUL. . . . . . .  C ADDR   0203H   A      1190 1288 1338 1384 1505 1603 2245 2267 2277 2283 4381 4906 5145 5230
                                           5248 9019#
FLOUT. . . . . . .  C ADDR   01E1H   A      8986 8989#
FLSCL. . . . . . .  D ADDR   00B6H   A      90# 9488 9494 9544 9549
FLSUB. . . . . . .  C ADDR   01D1H   A      1280 2162 2304 2371 2424 2462 4378 5730 8972#
FND. . . . . . . .  C ADDR   01F8H   A      8995 8998 9001 9004 9007#
FO1M . . . . . . .  C ADDR   2E30H   R   SEG=MAIN   7442 7446#
FO2M . . . . . . .  C ADDR   2E39H   R   SEG=MAIN   7449 7451#
FORM4. . . . . . .  C ADDR   2E3AH   R   SEG=MAIN   7444 7450 7454#
FT1IZM . . . . . .  C ADDR   1081H   R   SEG=MAIN   2867#
FTOL . . . . . . .  C ADDR   0343H   A      1235 1385 1513 4382 5146 5249 5396 5582 5950 7237 9255#
FTOL1. . . . . . .  C ADDR   037CH   A      9268 9272 9296#
FTOL2. . . . . . .  C ADDR   039EH   A      9292 9329#
FTOL22 . . . . . .  C ADDR   03C4H   A      9332 9366#
FTOL23 . . . . . .  C ADDR   03A2H   A      9333# 9365
FTOL24 . . . . . .  C ADDR   03B5H   A      9335 9351#
FTOL25 . . . . . .  C ADDR   03C2H   A      9350 9365#
FTOL26 . . . . . .  C ADDR   03E4H   A      9381 9397#
FTOL3. . . . . . .  C ADDR   038AH   A      9295 9309#
FTOL33 . . . . . .  C ADDR   038EH   A      9313# 9327
FTOL4. . . . . . .  C ADDR   0371H   A      9274 9289#
FTOL9. . . . . . .  C ADDR   0381H   A      9302# 9312 9328 9396 9411
FULKALIB . . . . .  C ADDR   202EH   R   SEG=MAIN   5184 5199# 5287
GENER. . . . . . .  C ADDR   0145H   R   SEG=MAIN   527#
GO23NO . . . . . .  C ADDR   17CDH   R   SEG=MAIN   3881 3993#
GO31L. . . . . . .  C ADDR   12A0H   R   SEG=MAIN   3145 3194#
GO41L. . . . . . .  C ADDR   12A5H   R   SEG=MAIN   3194 3196#
GOA2 . . . . . . .  C ADDR   07AFH   R   SEG=MAIN   1398 1400 1403# 1425
GOA3A2 . . . . . .  C ADDR   07B9H   R   SEG=MAIN   1408#
GOCIKLE. . . . . .  C ADDR   0D2CH   R   SEG=MAIN   2180 2262 2291# 2298 2307
GOFULL . . . . . .  C ADDR   1800H   R   SEG=MAIN   3998 4018#
GOGO7. . . . . . .  C ADDR   1EFFH   R   SEG=MAIN   4975 4980 5027#
GOKAA2 . . . . . .  C ADDR   07D7H   R   SEG=MAIN   1423#
GOKLB. . . . . . .  C ADDR   0F3DH   R   SEG=MAIN   2589 2624#
GOOFF1 . . . . . .  C ADDR   1734H   R   SEG=MAIN   3894# 3902
GOOFF2 . . . . . .  C ADDR   174FH   R   SEG=MAIN   3913# 3921
GOOFF3 . . . . . .  C ADDR   176AH   R   SEG=MAIN   3931# 3939
GOOFF4 . . . . . .  C ADDR   1785H   R   SEG=MAIN   3950# 3958
GOONIN . . . . . .  C ADDR   07C9H   R   SEG=MAIN   1416# 1451 1463 1685 1700
GOONIN1. . . . . .  C ADDR   09BBH   R   SEG=MAIN   1677 1685#
GOONIN2. . . . . .  C ADDR   09B9H   R   SEG=MAIN   1680 1684#
GOONIND. . . . . .  C ADDR   09F3H   R   SEG=MAIN   1419 1725#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   155

GOONOF9. . . . . .  C ADDR   2761H   R   SEG=MAIN   6449# 6457
GOONOFF. . . . . .  C ADDR   16F9H   R   SEG=MAIN   3854# 3862
GOONT. . . . . . .  C ADDR   0CB5H   R   SEG=MAIN   2183 2224#
GOPAROL. . . . . .  C ADDR   1D63H   R   SEG=MAIN   4620 4783 4792#
GOPAROM. . . . . .  C ADDR   1C34H   R   SEG=MAIN   4618# 4621 4628
GOPART . . . . . .  C ADDR   0342H   R   SEG=MAIN   866 869#
GOSK19 . . . . . .  C ADDR   11B7H   R   SEG=MAIN   3028 3037#
GOTO7. . . . . . .  C ADDR   13D5H   R   SEG=MAIN   3413# 3529 3538 3604 3625 3652 3664 3705 3709 3761 3804 3819 3878
                                           4043 4047 4098 4101 4157 4169 4175 4201 4203 4244 4267 4285 4352 4484 4547
                                           4555 4563 4669 4744 4748 4828 4838 4872 4923 4925 4939 4951 5012 5196 5207
GOTOKD . . . . . .  C ADDR   064AH   R   SEG=MAIN   1193 1219#
GOTOSTROB. . . . .  C ADDR   0C97H   R   SEG=MAIN   2194 2197 2200 2203 2206#
GOUT6. . . . . . .  C ADDR   0EEFH   R   SEG=MAIN   2579# 2620
GOUT6__. . . . . .  C ADDR   0EEAH   R   SEG=MAIN   2563 2572#
GOVVLIST . . . . .  C ADDR   1A38H   R   SEG=MAIN   4328 4357#
GOZNAK . . . . . .  C ADDR   02F4H   R   SEG=MAIN   767 815#
HNOR11 . . . . . .  C ADDR   1543H   R   SEG=MAIN   3589 3629#
HNOR12 . . . . . .  C ADDR   14EBH   R   SEG=MAIN   3579 3583#
HNOT1. . . . . . .  C ADDR   158FH   R   SEG=MAIN   3556 3673#
HNOT2. . . . . . .  C ADDR   14B9H   R   SEG=MAIN   3554#
HR12 . . . . . . .  C ADDR   14E1H   R   SEG=MAIN   3573 3579#
HVI1113. . . . . .  C ADDR   14DBH   R   SEG=MAIN   3576# 3582 3587
IE . . . . . . . .  D ADDR   00A8H   A      78# 187 188 189 190 191 192 193 595 728 2137 5743 5863 5870 6515 9487
                                           9495 9543 9553
IE0. . . . . . . .  B ADDR   0088H.1 A      173#
IE1. . . . . . . .  B ADDR   0088H.3 A      171#
INCT . . . . . . .  C ADDR   14B5H   R   SEG=MAIN   3549 3551#
IND. . . . . . . .  C ADDR   23A9H   R   SEG=MAIN   704 712 769 799 1461 1585 1589 1683 1871 2635 2639 2650 3460 3715
                                           3737 4243 4467 4519 4624 4832 5018 5204 5747# 6017 6060 6323 6341 6531
                                           6536 6548 7660
INDOLL . . . . . .  C ADDR   09A4H   R   SEG=MAIN   1672 1673 1677#
INIACP . . . . . .  C ADDR   2A8FH   R   SEG=MAIN   720 3692 6027 6070 6113 7027#
INNOT1_2 . . . . .  C ADDR   18EFH   R   SEG=MAIN   4166 4171#
INNOT3 . . . . . .  C ADDR   18E0H   R   SEG=MAIN   4158 4163#
INNOT6 . . . . . .  C ADDR   18D4H   R   SEG=MAIN   4153 4158#
INTER2 . . . . . .  C ADDR   239DH   R   SEG=MAIN   289 5736#
INTERVA. . . . . .  D ADDR   00CDH   A      444# 695 2224 4121 4220 5913 6419
INTMUL . . . . . .  C ADDR   0CD8H   R   SEG=MAIN   2239 2245#
INTMUL1. . . . . .  C ADDR   0CDBH   R   SEG=MAIN   2246#
INTMUL2. . . . . .  C ADDR   0CF0H   R   SEG=MAIN   2259# 2268 2278 2284 2288
INTN . . . . . . .  C ADDR   1981H   R   SEG=MAIN   4258#
IP . . . . . . . .  D ADDR   00B8H   A      92# 196 197 198 199 200 201
IS_2 . . . . . . .  B ADDR   0021H.4 A      386# 2108 2134 5862 5869 6040 6082 6134
IS_CMD . . . . . .  B ADDR   0023H.5 A      389# 732 5816 6218 6254 6266 6439
IS_IZM . . . . . .  B ADDR   0023H.7 A      388# 2563 2564 6255 6267
IS_MEM . . . . . .  B ADDR   0021H.6 A      387# 6498
IS_RS. . . . . . .  B ADDR   0023H.6 A      390# 1519 1972 5851 5855 5865 5872
IT0. . . . . . . .  B ADDR   0088H.0 A      174#
IT1. . . . . . . .  B ADDR   0088H.2 A      172#
IZCHI. . . . . . .  C ADDR   1574H   R   SEG=MAIN   3654#
IZMAN. . . . . . .  C ADDR   0FEAH   R   SEG=MAIN   2520 2565 2732#
IZMAN1 . . . . . .  C ADDR   0FF6H   R   SEG=MAIN   2739#
IZMFUN . . . . . .  C ADDR   1002H   R   SEG=MAIN   2651 2664 2672 2743 2748#
IZMPAT . . . . . .  C ADDR   1006H   R   SEG=MAIN   2610 2636 2640 2708 2752#
IZMT2. . . . . . .  C ADDR   1015H   R   SEG=MAIN   2776 2782#
IZMT3. . . . . . .  C ADDR   1020H   R   SEG=MAIN   2782 2789#
JFINIS . . . . . .  C ADDR   30DFH   R   SEG=MAIN   8117 8125#
JMPGOTO7 . . . . .  C ADDR   1498H   R   SEG=MAIN   3517 3537#
KD . . . . . . . .  C ADDR   29A6H   R   SEG=MAIN   6841#
KEYB1. . . . . . .  C ADDR   0EB9H   R   SEG=MAIN   309 2527# 6256 6268
KEYB2. . . . . . .  C ADDR   1365H   R   SEG=MAIN   311 3334#
KFULL. . . . . . .  C ADDR   17D7H   R   SEG=MAIN   3820 3997#
KFULLR . . . . . .  C ADDR   16B9H   R   SEG=MAIN   3815 3820#
KGO23. . . . . . .  C ADDR   1721H   R   SEG=MAIN   3814 3884#
KKOUT6 . . . . . .  C ADDR   1325H   R   SEG=MAIN   2522 3291#
KLBOFF . . . . . .  C ADDR   142BH   R   SEG=MAIN   3453 3471#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   156

KLEV1. . . . . . .  C ADDR   1693H   R   SEG=MAIN   3772 3805#
KLEV2. . . . . . .  C ADDR   1698H   R   SEG=MAIN   3805 3807#
KLEV21 . . . . . .  C ADDR   16BCH   R   SEG=MAIN   3812 3821#
KLEV22 . . . . . .  C ADDR   16A2H   R   SEG=MAIN   3800 3809 3812#
KLEV23 . . . . . .  C ADDR   16CDH   R   SEG=MAIN   3821 3829#
KLEV3. . . . . . .  C ADDR   169DH   R   SEG=MAIN   3807 3809#
KLMAS. . . . . . .  C ADDR   03EFH   R   SEG=MAIN   898 960#
KNAVP. . . . . . .  C ADDR   143AH   R   SEG=MAIN   3393 3479#
KNIZM. . . . . . .  B ADDR   0023H.0 A      377# 1398 1673 1828 1862 2710 2738 2740 2746 5904 6251 6263
KNIZMON. . . . . .  C ADDR   0FFDH   R   SEG=MAIN   2738 2746#
KNKMP. . . . . . .  C ADDR   1346H   R   SEG=MAIN   3317# 3383
KNLEFT . . . . . .  C ADDR   144EH   R   SEG=MAIN   3326 3491#
KNMEM. . . . . . .  C ADDR   15ECH   R   SEG=MAIN   3332 3725#
KNMENU . . . . . .  C ADDR   13F7H   R   SEG=MAIN   3399 3435#
KNNUL. . . . . . .  C ADDR   1470H   R   SEG=MAIN   3320 3514#
KNOPT. . . . . . .  C ADDR   1028H   R   SEG=MAIN   2518 2798#
KNRAZR . . . . . .  C ADDR   1043H   R   SEG=MAIN   2511 2816#
KNRIGHT. . . . . .  C ADDR   0F6AH   R   SEG=MAIN   2595 2655#
KNVICH . . . . . .  C ADDR   0F92H   R   SEG=MAIN   2604 2677#
KOEFKD . . . . . .  D ADDR   00A0H   A      421# 660 5148 5158 5250 5258
KOEFKM . . . . . .  D ADDR   0094H   A      415# 658 1188 1286 2470
KOEFKP . . . . . .  D ADDR   0090H   A      414# 656 1185 1281 2432
KOMUL. . . . . . .  C ADDR   0773H   R   SEG=MAIN   1372 1376#
KOMULPZ. . . . . .  C ADDR   076DH   R   SEG=MAIN   1369 1373#
KONSTA . . . . . .  D ADDR   00BCH   A      434# 1497 4997 5922 6170 7235
KON_B. . . . . . .  C ADDR   110EH   R   SEG=MAIN   2923 2940#
KOR0US . . . . . .  C ADDR   28D3H   R   SEG=MAIN   2332 6715#
KOR0_AN. . . . . .  D ADDR   0084H   A      411# 1278 2343 2422 2460
KORDEC1. . . . . .  C ADDR   069BH   R   SEG=MAIN   1264 1271#
KORDEC10 . . . . .  C ADDR   067BH   R   SEG=MAIN   1252#
KORNUL . . . . . .  C ADDR   0D66H   R   SEG=MAIN   1202 2324#
KVVOD0 . . . . . .  C ADDR   17F3H   R   SEG=MAIN   3781 4005 4013#
LABEL43. . . . . .  C ADDR   1A2FH   R   SEG=MAIN   4353# 4361
LABEL7 . . . . . .  C ADDR   1B18H   R   SEG=MAIN   4353 4472#
LABELA . . . . . .  C ADDR   02B8H   R   SEG=MAIN   772# 803 2295
LABELB . . . . . .  C ADDR   0AE5H   R   SEG=MAIN   1244 1703 1883# 2312 2316 2318
LABELC . . . . . .  C ADDR   1043H   R   SEG=MAIN   2820#
LABELE . . . . . .  C ADDR   1006H   R   SEG=MAIN   2750 2768# 2832 2835 2839 2843 2851 2887
LABELF . . . . . .  C ADDR   106EH   R   SEG=MAIN   2501 2852#
LABELH . . . . . .  C ADDR   149BH   R   SEG=MAIN   3319 3540#
LABELI . . . . . .  C ADDR   1E5BH   R   SEG=MAIN   3559 3614 3666 4934#
LABELI2. . . . . .  C ADDR   1528H   R   SEG=MAIN   3614# 3615
LABELK . . . . . .  C ADDR   1635H   R   SEG=MAIN   3558 3763#
LABELL . . . . . .  C ADDR   1247H   R   SEG=MAIN   2988 3101 3109#
LABELL1. . . . . .  C ADDR   114BH   R   SEG=MAIN   2978# 3065 3201 3267
LABELN . . . . . .  C ADDR   12BFH   R   SEG=MAIN   3066 3210#
LABELP . . . . . .  C ADDR   1A05H   R   SEG=MAIN   4271 4292 4328# 4565
LABELS . . . . . .  C ADDR   19CAH   R   SEG=MAIN   4001 4292#
LABELS1. . . . . .  C ADDR   1CA7H   R   SEG=MAIN   4643 4682#
LABELS13 . . . . .  C ADDR   1DE1H   R   SEG=MAIN   4726 4852#
LABELS3. . . . . .  C ADDR   1E6EH   R   SEG=MAIN   4944#
LABELS4. . . . . .  C ADDR   1E49H   R   SEG=MAIN   4725 4927#
LABL2. . . . . . .  C ADDR   1273H   R   SEG=MAIN   3149# 3824
LABLLL . . . . . .  C ADDR   1281H   R   SEG=MAIN   3164 3169#
LABLOV . . . . . .  C ADDR   127BH   R   SEG=MAIN   3160 3163#
LABM . . . . . . .  C ADDR   1875H   R   SEG=MAIN   3825 4104#
LABN_1 . . . . . .  C ADDR   12C9H   R   SEG=MAIN   3212 3220#
LABN_1_1 . . . . .  C ADDR   12CEH   R   SEG=MAIN   3224 3226#
LABN_1_2 . . . . .  C ADDR   12D3H   R   SEG=MAIN   3227 3229#
LABN_1_3 . . . . .  C ADDR   12D8H   R   SEG=MAIN   3230 3232#
LABN_2 . . . . . .  C ADDR   12C4H   R   SEG=MAIN   3210 3212#
LADD . . . . . . .  C ADDR   3220H   R   SEG=MAIN   877 911 926 942 2145 8352#
LADDX. . . . . . .  C ADDR   3231H   R   SEG=MAIN   8376#
LBTOF. . . . . . .  C ADDR   042DH   A      9466#
LCMP . . . . . . .  C ADDR   301EH   R   SEG=MAIN   6635 7473 7932#
LDC_LONG . . . . .  C ADDR   3034H   R   SEG=MAIN   655 1371 2143 2427 2465 3533 6223 7952#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   157

LDC_LTEMP. . . . .  C ADDR   3056H   R   SEG=MAIN   886 1147 1152 1157 1161 1296 1340 1378 1393 1431 1483 1488 1500
                                           1504 1566 1573 1579 1596 1602 2156 2161 2238 2243 2266 2273 2276 2282 2303
                                           2370 4377 4380 4405 4905 5000 5144 5229 5247 5394 5580 5729 6370 6649 7632
                                           7988#
LDX_LONG . . . . .  C ADDR   307CH   R   SEG=MAIN   8023#
LDX_LTEMP. . . . .  C ADDR   30A2H   R   SEG=MAIN   8061#
LEFCUR . . . . . .  C ADDR   1900H   R   SEG=MAIN   4181# 4253 4269
LEFKL. . . . . . .  C ADDR   1458H   R   SEG=MAIN   3496 3502#
LEFMEM11 . . . . .  C ADDR   1649H   R   SEG=MAIN   3773# 3806 3808 3810
LEFT21 . . . . . .  C ADDR   1822H   R   SEG=MAIN   4039 4044#
LEFT_S . . . . . .  C ADDR   1C9FH   R   SEG=MAIN   4676# 4684
LEFT_SK. . . . . .  C ADDR   1DC2H   R   SEG=MAIN   4676 4840#
LEV220 . . . . . .  C ADDR   16A5H   R   SEG=MAIN   3813# 3822
LEV2GO . . . . . .  C ADDR   12FEH   R   SEG=MAIN   3209 3263#
LEVEL. . . . . . .  D ADDR   00B0H   A      428# 2642 3073 3116 3158 3738 3748 3771 4015 7187
LI21 . . . . . . .  C ADDR   157EH   R   SEG=MAIN   3661 3663#
LI42_43. . . . . .  C ADDR   1A9EH   R   SEG=MAIN   4402# 4539
LIST_43. . . . . .  C ADDR   1B22H   R   SEG=MAIN   4355 4477#
LLDI2. . . . . . .  C ADDR   0FE3H   R   SEG=MAIN   2723 2727#
LLDI23 . . . . . .  C ADDR   0FD7H   R   SEG=MAIN   2715 2720#
LLDI3. . . . . . .  C ADDR   0FDEH   R   SEG=MAIN   2722 2724#
LLEV2. . . . . . .  C ADDR   12AAH   R   SEG=MAIN   3147 3199#
LLMUL. . . . . . .  C ADDR   3189H   R   SEG=MAIN   8246#
LLSUB. . . . . . .  C ADDR   320EH   R   SEG=MAIN   8328#
LLTOF. . . . . . .  C ADDR   0432H   A      9472#
LMUL . . . . . . .  C ADDR   3189H   R   SEG=MAIN   7431 7633 8248#
LOA3_X . . . . . .  C ADDR   2F69H   R   SEG=MAIN   2110 2186 7696#
LOAB12 . . . . . .  C ADDR   2ADEH   R   SEG=MAIN   3690 6025 6068 6111 7065#
LOAD . . . . . . .  D ADDR   00B7H   A      432# 2806 2861 3547 3686 6001 6021 6046 6064 6090 6735
LOADB. . . . . . .  C ADDR   15A2H   R   SEG=MAIN   3681 3684# 3716 3722
LOADB2 . . . . . .  C ADDR   15CEH   R   SEG=MAIN   3703 3707#
LOADCLE. . . . . .  C ADDR   1666H   R   SEG=MAIN   3786# 4008
LOADKD . . . . . .  C ADDR   2AFBH   R   SEG=MAIN   7097#
LOADR2 . . . . . .  C ADDR   2AEDH   R   SEG=MAIN   4265 4372 4902 4995 5041 7080#
LOADT. . . . . . .  C ADDR   28EEH   R   SEG=MAIN   2808 2867 3553 6003 6048 6735#
LOADUS . . . . . .  C ADDR   288DH   R   SEG=MAIN   721 1442 1690 2671 2747 3468 3472 3511 3693 5286 5974 6028 6071
                                           6209 6659#
LOAHL_R2 . . . . .  C ADDR   21BDH   R   SEG=MAIN   5360 5372 5423# 5550 5566 5704 5717
LOBLOK . . . . . .  C ADDR   182AH   R   SEG=MAIN   3996 4052# 4071
LOCLE. . . . . . .  C ADDR   1661H   R   SEG=MAIN   3776 3784#
LOD1 . . . . . . .  C ADDR   28FDH   R   SEG=MAIN   6743# 6748
LODT . . . . . . .  C ADDR   290CH   R   SEG=MAIN   6756# 6761
LOIZMK . . . . . .  C ADDR   14EEH   R   SEG=MAIN   3584# 3619
LOKAME1. . . . . .  C ADDR   1BECH   R   SEG=MAIN   4578#
LOLEVT . . . . . .  C ADDR   28F0H   R   SEG=MAIN   2648 6736#
LOLIST . . . . . .  C ADDR   1656H   R   SEG=MAIN   3778#
LOME1. . . . . . .  C ADDR   1F73H   R   SEG=MAIN   5097# 5101 5104 5107 5110 5114 5117 5120 5123 5127
LOMENU . . . . . .  C ADDR   1F6BH   R   SEG=MAIN   3005 3018 4578 4630 4652 5094#
LOOP . . . . . . .  C ADDR   2849H   R   SEG=MAIN   6605# 6606
LOOPS. . . . . . .  C ADDR   30E2H   R   SEG=MAIN   8127# 8160
LOSPUS . . . . . .  C ADDR   28C7H   R   SEG=MAIN   2333 6698#
LOSTAT . . . . . .  C ADDR   167BH   R   SEG=MAIN   3790 3796#
LOTEXT . . . . . .  C ADDR   2908H   R   SEG=MAIN   1584 1588 1679 1682 2697 2898 2906 2914 3030 3038 3081 3090 3098
                                           3107 3120 3458 3576 3645 3733 3779 3787 3793 3798 3803 3818 4019 4053 4065
                                           4120 4241 4314 4340 4508 4544 4552 4560 4573 4596 4602 4649 4795 4842 4847
                                           5008 5097 5203 6753# 7309
LOTP . . . . . . .  C ADDR   2B51H   R   SEG=MAIN   7137# 7147 7149
LOTPUS . . . . . .  C ADDR   2B49H   R   SEG=MAIN   4665 6693 7134#
LOU. . . . . . . .  C ADDR   0FE9H   R   SEG=MAIN   2710 2726 2730#
LOUIZM . . . . . .  C ADDR   0FC6H   R   SEG=MAIN   2710# 2742 6690
LOUTF. . . . . . .  C ADDR   129DH   R   SEG=MAIN   3191# 3200 3207 3211 3213
LOVICH . . . . . .  C ADDR   14E4H   R   SEG=MAIN   3580# 3612 3633 5054
LOWR . . . . . . .  C ADDR   166EH   R   SEG=MAIN   3784 3790#
LOWR1. . . . . . .  C ADDR   1673H   R   SEG=MAIN   3792# 4012
LSUB . . . . . . .  C ADDR   320EH   R   SEG=MAIN   1240 1411 6650 8329#
LTEMP. . . . . . .  N NUMB   0008H   A      1164 1166 1167 1168 6975 6976 6977 6978 7483 7486 7489 7492 7535 7536
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   158

                                           7537 7538 7753# 8118 8119 8120 8121 8130 8134 8138 8142 8145 8146 8147
                                           8148 8149 8150 8151 8152 8153 8154 8155 8156 8159 8162 8167 8171 8175 8185
                                           8188 8191 8194 8210 8213 8214 8216 8217 8219 8220 8222 8227 8228 8229 8230
                                           8250 8255 8263 8271 8276 8287 8295 8301 8309 8315 8683 8684 8723 8728 8730
                                           8739 8740 8741 8742 8973 8981 8994 8997 9000 9003 9575 9578 9581 9584
LWR. . . . . . . .  C ADDR   2E0BH   R   SEG=MAIN   7422# 7426
LWRX . . . . . . .  C ADDR   2DCFH   R   SEG=MAIN   7367# 7378
LWTOF. . . . . . .  C ADDR   042FH   A      9468#
MABIN. . . . . . .  D ADDR   006FH   A      324#
MAFORM . . . . . .  C ADDR   2E26H   R   SEG=MAIN   1744 2026 4407 5397 5584 6372 7430 7435 7440# 7472
MAIN . . . . . . .  C SEG    326BH       REL=UNIT   266 316# 491
MANT1. . . . . . .  N NUMB   0002H   A      8681# 8708 8757 8758
MANT2. . . . . . .  N NUMB   0008H   A      8683# 8734 8735 8866 8868 8869 8871 8872 8874 8875 8877 8916 8917 8919
                                           8920 8922 8923 8925 8926 8930 8932 8935 8938 9036 9038 9039 9041 9042 9044
                                           9045 9047 9098 9100 9101 9103 9104 9106 9107 9109 9191 9195 9199 9203 9207
                                           9210 9213 9216
MARK0_8. . . . . .  C ADDR   1115H   R   SEG=MAIN   2925 2941 2943#
MARKER . . . . . .  D ADDR   00B2H   A      430# 631 2555 2885 2924 2932 2940 2950 2956 3173 3181 3234 3241 3253 3363
                                           3623 3640 3659 3757 3875 3976 4027 4035 4057 4083 4090 4148 4187 4194 4234
                                           4277 4342 4363 4482 4631 4731 4738 4823 4836 4859 4866 4913 4944 4963 4970
                                           5004 5014 5025 5050 7164 7190 7214 7225 7283
MARLE. . . . . . .  C ADDR   2BC4H   R   SEG=MAIN   4202 7211#
MARRI. . . . . . .  C ADDR   2BD1H   R   SEG=MAIN   3261 7224#
MAS10. . . . . . .  C ADDR   040EH   R   SEG=MAIN   962 975#
MAS20. . . . . . .  C ADDR   048EH   R   SEG=MAIN   975 1024#
MAS4 . . . . . . .  C ADDR   0582H   R   SEG=MAIN   1022 1113#
MAS5DIV. . . . . .  C ADDR   05F6H   R   SEG=MAIN   1148 1153 1158 1162 1170#
MASFULL. . . . . .  C ADDR   05BDH   R   SEG=MAIN   1138 1141#
MASS0. . . . . . .  X ADDR   0100H   A      457 458# 963 968 993 999 1064 1070 1118 1124 7409
MASS1. . . . . . .  X ADDR   0104H   A      459# 971 991 1002 1062 1072 1116 1127
MASS10 . . . . . .  X ADDR   0128H   A      468# 1043 1091
MASS11 . . . . . .  X ADDR   012CH   A      469# 1040 1093
MASS12 . . . . . .  X ADDR   0130H   A      470# 1038 1095
MASS13 . . . . . .  X ADDR   0134H   A      471# 1036 1097
MASS14 . . . . . .  X ADDR   0138H   A      472# 1034 1099
MASS15 . . . . . .  X ADDR   013CH   A      473# 1031 1101
MASS16 . . . . . .  X ADDR   0140H   A      474# 1029 1103
MASS17 . . . . . .  X ADDR   0144H   A      475# 1027 1105
MASS18 . . . . . .  X ADDR   0148H   A      476# 1025 1107
MASS19 . . . . . .  X ADDR   014CH   A      477# 1109
MASS2. . . . . . .  X ADDR   0108H   A      460# 988 1004 1060 1074 1114 1129
MASS3. . . . . . .  X ADDR   010CH   A      461# 986 1006 1057 1076 1131
MASS4. . . . . . .  X ADDR   0110H   A      462# 984 1008 1055 1078
MASS5. . . . . . .  X ADDR   0114H   A      463# 982 1010 1053 1080
MASS6. . . . . . .  X ADDR   0118H   A      464# 980 1012 1051 1082
MASS7. . . . . . .  X ADDR   011CH   A      465# 978 1014 1049 1084
MASS8. . . . . . .  X ADDR   0120H   A      466# 976 1016 1047 1086
MASS9. . . . . . .  X ADDR   0124H   A      467# 1018 1045 1088
MASX5. . . . . . .  C ADDR   05ECH   R   SEG=MAIN   1139 1164#
MAXG . . . . . . .  C ADDR   231CH   R   SEG=MAIN   5663# 5712
MAXVIX . . . . . .  C ADDR   2386H   R   SEG=MAIN   5720 5723#
MD_3 . . . . . . .  C ADDR   0B41H   R   SEG=MAIN   1969#
MD_5 . . . . . . .  C ADDR   0B41H   R   SEG=MAIN   1970#
MD_51. . . . . . .  C ADDR   0B47H   R   SEG=MAIN   1972 1974#
ME11_15DE. . . . .  C ADDR   19C1H   R   SEG=MAIN   4287# 4311
ME11_15DEC . . . .  C ADDR   1BEBH   R   SEG=MAIN   4287 4577#
ME21_22. . . . . .  C ADDR   1257H   R   SEG=MAIN   3120# 3129
ME21_23. . . . . .  C ADDR   1C60H   R   SEG=MAIN   4325 4639#
ME21_23DEC . . . .  C ADDR   1C7CH   R   SEG=MAIN   4646 4651#
ME3. . . . . . . .  C ADDR   0287H   R   SEG=MAIN   732 734#
MEAVP. . . . . . .  C ADDR   144AH   R   SEG=MAIN   3485 3488#
MECLE. . . . . . .  C ADDR   01A4H   R   SEG=MAIN   599# 601
MEFF . . . . . . .  C ADDR   01ABH   R   SEG=MAIN   603# 606
MEM10MS. . . . . .  C ADDR   02B3H   R   SEG=MAIN   769#
MEM12NO. . . . . .  C ADDR   17EEH   R   SEG=MAIN   4006 4010#
MENG . . . . . . .  C ADDR   2109H   R   SEG=MAIN   5322# 5370
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   159

MENU12 . . . . . .  C ADDR   1F77H   R   SEG=MAIN   5095 5099#
MENU13 . . . . . .  C ADDR   1F7FH   R   SEG=MAIN   5099 5102#
MENU14 . . . . . .  C ADDR   1F87H   R   SEG=MAIN   5102 5105#
MENU15 . . . . . .  C ADDR   1F8FH   R   SEG=MAIN   5105 5108#
MENU21 . . . . . .  C ADDR   1F97H   R   SEG=MAIN   5108 5112#
MENU22 . . . . . .  C ADDR   1F9FH   R   SEG=MAIN   5112 5115#
MENU23 . . . . . .  C ADDR   1FA7H   R   SEG=MAIN   5115 5118#
MENU31 . . . . . .  C ADDR   1FAFH   R   SEG=MAIN   5118 5121#
MENU41 . . . . . .  C ADDR   1FB7H   R   SEG=MAIN   5121 5125#
MENUOFF. . . . . .  C ADDR   141FH   R   SEG=MAIN   3451 3464#
MENUON . . . . . .  C ADDR   19F7H   R   SEG=MAIN   4316#
MERR . . . . . . .  C ADDR   13F4H   R   SEG=MAIN   3432# 3450
ME_14. . . . . . .  C ADDR   1685H   R   SEG=MAIN   3800#
ME_41. . . . . . .  C ADDR   1D26H   R   SEG=MAIN   4682 4752#
ME_5 . . . . . . .  C ADDR   0BF0H   R   SEG=MAIN   1973 2019 2103 2107#
ME_52. . . . . . .  C ADDR   1CFAH   R   SEG=MAIN   4728# 4752
ME_52V . . . . . .  C ADDR   1D17H   R   SEG=MAIN   4742 4744#
ME_6 . . . . . . .  C ADDR   0C2AH   R   SEG=MAIN   2108 2133 2140#
MIDL . . . . . . .  C ADDR   3115H   R   SEG=MAIN   8122 8157#
MIGN . . . . . . .  C ADDR   2C01H   R   SEG=MAIN   5751 7283#
MIGNN. . . . . . .  C ADDR   2C09H   R   SEG=MAIN   7284 7289#
MIN4_HL. . . . . .  C ADDR   21C9H   R   SEG=MAIN   5436# 5469 5495 5630 5653
MING . . . . . . .  C ADDR   2227H   R   SEG=MAIN   5506# 5560
MINIVIX. . . . . .  C ADDR   2291H   R   SEG=MAIN   5571 5576# 5723
MLABL2 . . . . . .  C ADDR   1855H   R   SEG=MAIN   4075# 4106 4356
MLABL2R. . . . . .  C ADDR   1A35H   R   SEG=MAIN   4356# 4359
MMM. . . . . . . .  C ADDR   02AEH   R   SEG=MAIN   765#
MO220. . . . . . .  C ADDR   0999H   R   SEG=MAIN   1256 1421 1672#
MO500I . . . . . .  C ADDR   0906H   R   SEG=MAIN   1468 1587#
MO500I_. . . . . .  C ADDR   082CH   R   SEG=MAIN   1467# 1490
MO500R . . . . . .  C ADDR   08FAH   R   SEG=MAIN   1466 1583#
MO500R_. . . . . .  C ADDR   0829H   R   SEG=MAIN   1465# 1485
MODF . . . . . . .  B ADDR   00F8H.5 A      255#
MOUTF. . . . . . .  C ADDR   11E4H   R   SEG=MAIN   3067# 3078 3087 3095 3104 3113
MOUTKMEM . . . . .  C ADDR   19C4H   R   SEG=MAIN   4288# 4296
MOVE28 . . . . . .  C ADDR   2E93H   R   SEG=MAIN   1315 1333 1381 1492 2425 2463 5138 5221 5239 5362 5374 5389 5549
                                           5565 5703 5716 7535#
MOVE82 . . . . . .  C ADDR   2A4DH   R   SEG=MAIN   6975#
MOVEA3 . . . . . .  C ADDR   09F3H   R   SEG=MAIN   1728#
MOVEA3_. . . . . .  C ADDR   0B55H   R   SEG=MAIN   1977 1987#
MOVEA3_NO2MS . . .  C ADDR   0B7CH   R   SEG=MAIN   1989 2020#
MOVER0_NO2MS . . .  C ADDR   0B53H   R   SEG=MAIN   1981 1983#
MOVER3_. . . . . .  C ADDR   089CH   R   SEG=MAIN   1522 1525#
MOVLEFT. . . . . .  D ADDR   003AH   A      330# 2926 3189 3246 3642 3995 4036 4099 4151 4195 4345 4634 4741 4825
                                           4869 4945 4973 7218
MOVRIG . . . . . .  D ADDR   003BH   A      329# 2922 3182 3186 3242 3643 3994 4040 4091 4095 4150 4199 4344 4633
                                           4826 4949 7227
MR_5 . . . . . . .  C ADDR   08C3H   R   SEG=MAIN   1519 1520 1554#
MSTEN. . . . . . .  B ADDR   00F8H.1 A      259#
MT0A . . . . . . .  C ADDR   26D3H   R   SEG=MAIN   6357# 6358
MTB2 . . . . . . .  C ADDR   24C8H   R   SEG=MAIN   5970 5977#
MTF. . . . . . . .  C ADDR   25E3H   R   SEG=MAIN   6179 6194#
MTF1 . . . . . . .  C ADDR   25EFH   R   SEG=MAIN   6196 6199#
MTF2 . . . . . . .  C ADDR   25A9H   R   SEG=MAIN   5991 6150 6153# 6184 6211
MTF3 . . . . . . .  C ADDR   260DH   R   SEG=MAIN   6203 6211#
MTF4 . . . . . . .  C ADDR   2699H   R   SEG=MAIN   6312 6316#
MTG. . . . . . . .  C ADDR   25F4H   R   SEG=MAIN   6194 6201#
MTH. . . . . . . .  C ADDR   2641H   R   SEG=MAIN   6229 6248#
MTH1 . . . . . . .  C ADDR   2657H   R   SEG=MAIN   6250 6260#
MTH2 . . . . . . .  C ADDR   2667H   R   SEG=MAIN   6261 6270#
MTI. . . . . . . .  C ADDR   266AH   R   SEG=MAIN   6258 6275#
MTI0 . . . . . . .  C ADDR   2655H   R   SEG=MAIN   6248 6258#
MTI1 . . . . . . .  C ADDR   266DH   R   SEG=MAIN   6282#
MTK. . . . . . . .  C ADDR   2624H   R   SEG=MAIN   6201 6229#
MTK1 . . . . . . .  C ADDR   2633H   R   SEG=MAIN   6231 6236#
MTX. . . . . . . .  C ADDR   266DH   R   SEG=MAIN   6275 6287#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   160

MTX0 . . . . . . .  C ADDR   269FH   R   SEG=MAIN   6314 6319#
MTX0A. . . . . . .  C ADDR   2717H   R   SEG=MAIN   6394# 6395
MTX1 . . . . . . .  C ADDR   26ADH   R   SEG=MAIN   6320 6333#
MTX2 . . . . . . .  C ADDR   26C2H   R   SEG=MAIN   6334 6344#
MTX3 . . . . . . .  C ADDR   272FH   R   SEG=MAIN   6345 6410#
MTX5 . . . . . . .  C ADDR   268DH   R   SEG=MAIN   6292 6310#
MTXA . . . . . . .  C ADDR   26DBH   R   SEG=MAIN   6361# 6405
MTXB . . . . . . .  C ADDR   26F5H   R   SEG=MAIN   6374# 6375
MTXC . . . . . . .  C ADDR   26FDH   R   SEG=MAIN   6379# 6380
MTXD . . . . . . .  C ADDR   2705H   R   SEG=MAIN   6384# 6385
MTXE . . . . . . .  C ADDR   270DH   R   SEG=MAIN   6389# 6390
MTY. . . . . . . .  C ADDR   268AH   R   SEG=MAIN   6288 6308#
MTY2 . . . . . . .  C ADDR   2741H   R   SEG=MAIN   6308 6428#
MUP1 . . . . . . .  C ADDR   021AH   A      9033# 9076
MUP11. . . . . . .  C ADDR   0257H   A      9080# 9125
MUP2 . . . . . . .  C ADDR   0297H   A      9110 9124#
MUP3 . . . . . . .  C ADDR   026CH   A      9079 9095#
MVV11. . . . . . .  C ADDR   1825H   R   SEG=MAIN   4016 4050#
MVV12. . . . . . .  C ADDR   183DH   R   SEG=MAIN   4050 4062#
N12DELCH . . . . .  C ADDR   0E8AH   R   SEG=MAIN   2481 2489#
N4DELCH. . . . . .  C ADDR   0E36H   R   SEG=MAIN   2405 2443#
N8DELCH. . . . . .  C ADDR   0E78H   R   SEG=MAIN   2443 2481#
NBIMENU. . . . . .  C ADDR   11EAH   R   SEG=MAIN   3071#
NBLOK. . . . . . .  D ADDR   0038H   A      332# 693 2114 2191 3840 3964 4054 4118 4338 4430 5889 6300 6484 7623 7644
                                           7675
NE05 . . . . . . .  C ADDR   0358H   A      9262 9264 9266 9269#
NELEM. . . . . . .  D ADDR   0037H   A      333# 694 4374 4487 4491
NEXIN. . . . . . .  C ADDR   23B6H   R   SEG=MAIN   5754# 5761
NEXTMAX. . . . . .  C ADDR   2351H   R   SEG=MAIN   5693 5700#
NEXTMEA. . . . . .  C ADDR   213EH   R   SEG=MAIN   5352 5360#
NEXTMIN. . . . . .  C ADDR   225CH   R   SEG=MAIN   5538 5546#
NMEM_MENU. . . . .  C ADDR   19C7H   R   SEG=MAIN   4290# 4294
NMINUS . . . . . .  C ADDR   06B8H   R   SEG=MAIN   1283 1287#
NMINUS3. . . . . .  C ADDR   0616H   R   SEG=MAIN   1187 1189#
NNDELCH. . . . . .  C ADDR   0DF6H   R   SEG=MAIN   2391 2405#
NNMEMB . . . . . .  C ADDR   130AH   R   SEG=MAIN   3069 3269#
NNNOTT . . . . . .  C ADDR   158CH   R   SEG=MAIN   3671# 3674
NNNUL. . . . . . .  C ADDR   0A71H   R   SEG=MAIN   1804 1807#
NO . . . . . . . .  C ADDR   30FDH   R   SEG=MAIN   8132 8136 8140 8144#
NO0CHK . . . . . .  C ADDR   135BH   R   SEG=MAIN   3328#
NO0CHKL. . . . . .  C ADDR   0EAFH   R   SEG=MAIN   2522#
NO0KEY . . . . . .  C ADDR   02C8H   R   SEG=MAIN   776 783#
NO10MSV. . . . . .  C ADDR   1968H   R   SEG=MAIN   4239 4245#
NO11V6 . . . . . .  C ADDR   10C5H   R   SEG=MAIN   2893 2901#
NO12V6 . . . . . .  C ADDR   10D9H   R   SEG=MAIN   2901 2909#
NO13V6 . . . . . .  C ADDR   10EDH   R   SEG=MAIN   2909 2919#
NO21P7 . . . . . .  C ADDR   1F06H   R   SEG=MAIN   4983 5032#
NO23RI . . . . . .  C ADDR   1196H   R   SEG=MAIN   3016 3020#
NO2MSV . . . . . .  C ADDR   1965H   R   SEG=MAIN   4244# 4245 4255
NO2PARN. . . . . .  C ADDR   09E8H   R   SEG=MAIN   1711 1717#
NO31N. . . . . . .  C ADDR   191FH   R   SEG=MAIN   4208#
NO31RI . . . . . .  C ADDR   11CCH   R   SEG=MAIN   3022 3057#
NO3PARN. . . . . .  C ADDR   09DEH   R   SEG=MAIN   1711# 1786
NO4DEL . . . . . .  C ADDR   0D99H   R   SEG=MAIN   2337 2354#
NO5DEL . . . . . .  C ADDR   0DB8H   R   SEG=MAIN   2369# 2377
NO6DEL . . . . . .  C ADDR   0DC6H   R   SEG=MAIN   2367 2375#
NOAVK. . . . . . .  C ADDR   068AH   R   SEG=MAIN   1213 1261# 2385
NOAVP. . . . . . .  C ADDR   07AFH   R   SEG=MAIN   1402# 1433 1436
NOBAVP . . . . . .  C ADDR   0A8FH   R   SEG=MAIN   1586 1590 1670 1822 1826#
NOBEF99. . . . . .  C ADDR   037FH   R   SEG=MAIN   883 899# 917 932 948
NOBIT. . . . . . .  C ADDR   0245H   A      9048 9062#
NOBITIZM . . . . .  C ADDR   0A98H   R   SEG=MAIN   1828 1831#
NOBL21 . . . . . .  C ADDR   1260H   R   SEG=MAIN   3117 3125#
NOBL22 . . . . . .  C ADDR   126AH   R   SEG=MAIN   3125 3145#
NOBUF. . . . . . .  C ADDR   0ACDH   R   SEG=MAIN   1859 1861#
NOBUF0 . . . . . .  C ADDR   0D3CH   R   SEG=MAIN   2181 2300#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   161

NOCHI0 . . . . . .  C ADDR   09DAH   R   SEG=MAIN   1422 1702#
NOCHIND. . . . . .  C ADDR   02E7H   R   SEG=MAIN   797 805#
NOCHN10. . . . . .  C ADDR   05D9H   R   SEG=MAIN   1150 1155#
NOCHN2 . . . . . .  C ADDR   05CEH   R   SEG=MAIN   1145 1150#
NOCHN20. . . . . .  C ADDR   05E4H   R   SEG=MAIN   1155 1160#
NODI2. . . . . . .  C ADDR   09BEH   R   SEG=MAIN   1675 1687#
NODI6. . . . . . .  C ADDR   145BH   R   SEG=MAIN   3500 3504#
NODI8. . . . . . .  C ADDR   0A44H   R   SEG=MAIN   1769 1776#
NODI8K . . . . . .  C ADDR   1D96H   R   SEG=MAIN   4811 4816#
NODI8RS. . . . . .  C ADDR   0BC7H   R   SEG=MAIN   2061 2073#
NODI8_43 . . . . .  C ADDR   1AFBH   R   SEG=MAIN   4444 4451#
NODI9. . . . . . .  C ADDR   09C3H   R   SEG=MAIN   1688 1690#
NODI9_43 . . . . .  C ADDR   1B06H   R   SEG=MAIN   4451 4458#
NODIS9 . . . . . .  C ADDR   0A57H   R   SEG=MAIN   1776 1788#
NODIS9RS . . . . .  C ADDR   0BD7H   R   SEG=MAIN   2073 2086#
NODISK9. . . . . .  C ADDR   1D9EH   R   SEG=MAIN   4815 4816 4823#
NOENDLI. . . . . .  C ADDR   2F35H   R   SEG=MAIN   7657 7661#
NOEND_M. . . . . .  C ADDR   2794H   R   SEG=MAIN   6497 6501#
NOEQU1 . . . . . .  C ADDR   12EFH   R   SEG=MAIN   3245 3249#
NOEQU2 . . . . . .  C ADDR   1919H   R   SEG=MAIN   4198 4202#
NOFIZM . . . . . .  C ADDR   10A6H   R   SEG=MAIN   2857 2889#
NOFT1. . . . . . .  C ADDR   1080H   R   SEG=MAIN   2862 2866#
NOFZ . . . . . . .  C ADDR   0D37H   R   SEG=MAIN   2291 2295#
NOH37. . . . . . .  C ADDR   1503H   R   SEG=MAIN   3572 3597# 3607
NOHNOT1. . . . . .  C ADDR   15E1H   R   SEG=MAIN   3675 3717#
NOHNOT2. . . . . .  C ADDR   15D6H   R   SEG=MAIN   3710# 3717
NOKLB. . . . . . .  C ADDR   0AC7H   R   SEG=MAIN   1857 1859#
NOKORR . . . . . .  C ADDR   0632H   R   SEG=MAIN   1197 1200 1203#
NOLAH. . . . . . .  C ADDR   14C5H   R   SEG=MAIN   3544 3562#
NOLI_43. . . . . .  C ADDR   1B77H   R   SEG=MAIN   4477 4522#
NOM31. . . . . . .  C ADDR   18F7H   R   SEG=MAIN   4103 4177#
NOM32. . . . . . .  C ADDR   1970H   R   SEG=MAIN   4177 4251#
NOM33. . . . . . .  C ADDR   199EH   R   SEG=MAIN   4251 4271#
NOMARL . . . . . .  C ADDR   1E83H   R   SEG=MAIN   4947 4953 4957#
NOMAXI . . . . . .  C ADDR   2369H   R   SEG=MAIN   5707 5710#
NOME11 . . . . . .  C ADDR   17DEH   R   SEG=MAIN   4003#
NOMEM11. . . . . .  C ADDR   1205H   R   SEG=MAIN   3074 3084#
NOMEM12. . . . . .  C ADDR   121BH   R   SEG=MAIN   3084 3092#
NOMEM13. . . . . .  C ADDR   1231H   R   SEG=MAIN   3092 3101#
NOMEMK . . . . . .  C ADDR   17DBH   R   SEG=MAIN   3747 4001#
NOMINI . . . . . .  C ADDR   2274H   R   SEG=MAIN   5555 5558#
NON1C. . . . . . .  C ADDR   1054H   R   SEG=MAIN   2833 2837#
NONULAVT . . . . .  C ADDR   066FH   R   SEG=MAIN   1208 1246#
NONULDEL . . . . .  C ADDR   0D7BH   R   SEG=MAIN   2325 2336#
NOP1OLL. . . . . .  C ADDR   0ADBH   R   SEG=MAIN   1867 1868 1871#
NOP3_0 . . . . . .  C ADDR   09DEH   R   SEG=MAIN   1704#
NOPART1. . . . . .  C ADDR   0383H   R   SEG=MAIN   872 905#
NOPART2. . . . . .  C ADDR   03A3H   R   SEG=MAIN   905 922#
NOPART3. . . . . .  C ADDR   03C3H   R   SEG=MAIN   922 937#
NOPART4. . . . . .  C ADDR   03E3H   R   SEG=MAIN   937 953#
NOPLUS . . . . . .  C ADDR   113DH   R   SEG=MAIN   2968 2971#
NOPOIN7. . . . . .  C ADDR   1E9AH   R   SEG=MAIN   4943 4978#
NOPOINT. . . . . .  C ADDR   1E66H   R   SEG=MAIN   4937 4941#
NORDN. . . . . . .  C ADDR   00F6H   A      8769# 8802
NORDN1 . . . . . .  C ADDR   0107H   A      8771 8785#
NORIG2 . . . . . .  C ADDR   12B3H   R   SEG=MAIN   3196 3204#
NORIM6 . . . . . .  C ADDR   130AH   R   SEG=MAIN   3271#
NORIME . . . . . .  C ADDR   117CH   R   SEG=MAIN   3003 3007#
NORIME1. . . . . .  C ADDR   1176H   R   SEG=MAIN   3005# 3008 3021
NORM1. . . . . . .  C ADDR   00F0H   A      8764# 8961 9138 9240 9457
NORR11 . . . . . .  C ADDR   151BH   R   SEG=MAIN   3608#
NORR12 . . . . . .  C ADDR   152BH   R   SEG=MAIN   3608 3615# 3629
NORUP. . . . . . .  C ADDR   0119H   A      8768 8805#
NORUP1 . . . . . .  C ADDR   011EH   A      8810# 8828
NORUP2 . . . . . .  C ADDR   0132H   A      8812 8829#
NORVICH. . . . . .  C ADDR   0ADEH   R   SEG=MAIN   1785 1879#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   162

NOSAV1 . . . . . .  C ADDR   0C85H   R   SEG=MAIN   2192 2195#
NOSAV2 . . . . . .  C ADDR   0C8CH   R   SEG=MAIN   2195 2198#
NOSAV3 . . . . . .  C ADDR   0C93H   R   SEG=MAIN   2198 2201#
NOSUB. . . . . . .  C ADDR   3138H   R   SEG=MAIN   8166 8170 8174 8179#
NOSV1. . . . . . .  C ADDR   0C08H   R   SEG=MAIN   2115 2118#
NOSV2. . . . . . .  C ADDR   0C0FH   R   SEG=MAIN   2118 2121#
NOSV3. . . . . . .  C ADDR   0C16H   R   SEG=MAIN   2121 2124#
NOT1IN . . . . . .  C ADDR   0D51H   R   SEG=MAIN   1952 2310#
NOT1_7 . . . . . .  C ADDR   13E4H   R   SEG=MAIN   3417 3424#
NOT2IN . . . . . .  C ADDR   0D59H   R   SEG=MAIN   2310 2314#
NOT2_7 . . . . . .  C ADDR   13EFH   R   SEG=MAIN   3424 3429#
NOT3IN . . . . . .  C ADDR   0D61H   R   SEG=MAIN   2314 2317#
NOTAKT . . . . . .  C ADDR   0AA2H   R   SEG=MAIN   1832 1836#
NOTE21 . . . . . .  C ADDR   072FH   R   SEG=MAIN   1302 1344#
NOTE22 . . . . . .  C ADDR   074AH   R   SEG=MAIN   1344 1356#
NOTESTIZM. . . . .  C ADDR   0762H   R   SEG=MAIN   1270 1368#
NOTT1. . . . . . .  C ADDR   0CCFH   R   SEG=MAIN   2236 2241#
NOTT2. . . . . . .  C ADDR   0CF7H   R   SEG=MAIN   2241 2264#
NOTT3. . . . . . .  C ADDR   0D05H   R   SEG=MAIN   2264 2271#
NOTT4. . . . . . .  C ADDR   0D1CH   R   SEG=MAIN   2271 2280#
NOTT5. . . . . . .  C ADDR   0D2AH   R   SEG=MAIN   2280 2285#
NOT_1. . . . . . .  C ADDR   105BH   R   SEG=MAIN   2837 2842#
NOT_10 . . . . . .  C ADDR   105BH   R   SEG=MAIN   2841#
NOVIR. . . . . . .  C ADDR   115EH   R   SEG=MAIN   2878 2992#
NOVIR1 . . . . . .  C ADDR   1090H   R   SEG=MAIN   2878# 2889
NOZMEA . . . . . .  C ADDR   21B9H   R   SEG=MAIN   5417 5419#
NOZMIN . . . . . .  C ADDR   22C8H   R   SEG=MAIN   5602 5604#
NOZZBL . . . . . .  C ADDR   1AEDH   R   SEG=MAIN   4433 4436 4439 4442#
NOZZMI . . . . . .  C ADDR   0A31H   R   SEG=MAIN   1764 1766#
NOZZMI1. . . . . .  C ADDR   1ADDH   R   SEG=MAIN   4431 4434#
NOZZMI2. . . . . .  C ADDR   1AE4H   R   SEG=MAIN   4434 4437#
NOZZMI3. . . . . .  C ADDR   1AEBH   R   SEG=MAIN   4437 4441#
NOZZMI43 . . . . .  C ADDR   1AD4H   R   SEG=MAIN   4427 4430#
NOZZMIRS . . . . .  C ADDR   0BAFH   R   SEG=MAIN   2050 2052#
NSEC1. . . . . . .  C ADDR   0A7BH   R   SEG=MAIN   1808 1812#
NSEC10 . . . . . .  C ADDR   0A86H   R   SEG=MAIN   1811 1815 1820#
NSEC11 . . . . . .  C ADDR   0A83H   R   SEG=MAIN   1812 1817#
NUERR. . . . . . .  D ADDR   0039H   A      331# 1459 4622 4830 5016 6534 6546 7310
NULAVT . . . . . .  C ADDR   0DDBH   R   SEG=MAIN   2389#
NUMSIZE. . . . . .  N NUMB   0004H   A      7756# 7773 7811 7817 7891 7909
OBOARD . . . . . .  C ADDR   306EH   R   SEG=MAIN   7990 8004#
OBOARD1. . . . . .  C ADDR   30B6H   R   SEG=MAIN   8063 8076#
OFFMENUM . . . . .  C ADDR   1632H   R   SEG=MAIN   3761# 3767
OK1. . . . . . . .  C ADDR   0186H   A      8895 8910#
OK2. . . . . . . .  C ADDR   01A0H   A      8912 8927#
OK3. . . . . . . .  C ADDR   01C4H   A      8944 8960#
OLDMAX . . . . . .  C ADDR   22E8H   R   SEG=MAIN   5621 5627#
OLDMEAN. . . . . .  C ADDR   20F4H   R   SEG=MAIN   5304 5310#
OLDMIN . . . . . .  C ADDR   21F3H   R   SEG=MAIN   5459 5465#
ONBOAR1. . . . . .  C ADDR   3094H   R   SEG=MAIN   8025 8042#
ONBOARD. . . . . .  C ADDR   3048H   R   SEG=MAIN   7954 7968#
ONMEM11. . . . . .  C ADDR   160CH   R   SEG=MAIN   3463 3555 3577 3741# 3780 3788 3794 3799 4020 4061 4068 4315 4321
                                           4575 4579 4584 4600 4606 4636 4650 4653 4845 4850
ONMEM12. . . . . .  C ADDR   1CA2H   R   SEG=MAIN   4657 4678# 4686
ONMEM13. . . . . .  C ADDR   1E46H   R   SEG=MAIN   4870 4925# 4929 4931
ONMIG. . . . . . .  C ADDR   2C17H   R   SEG=MAIN   7293 7301#
ONTEST . . . . . .  C ADDR   1004H   R   SEG=MAIN   2737 2750#
ONVICH . . . . . .  C ADDR   0FBAH   R   SEG=MAIN   2689 2701#
OSCICN . . . . . .  D ADDR   00B2H   A      88# 529
OSCXCN . . . . . .  D ADDR   00B1H   A      87# 524
OUT43. . . . . . .  C ADDR   1B0FH   R   SEG=MAIN   4467#
OUT6 . . . . . . .  C ADDR   130AH   R   SEG=MAIN   2495 2614 2624 2674 2781 2787 2793 2814 2876 2984 3161 3165 3225
                                           3228 3231 3272#
OUT7 . . . . . . .  C ADDR   1F2FH   R   SEG=MAIN   3317 3318 3421 3428 3432 3469 3475 3550 3745 3826 4162 4290 4469
                                           4476 4521 4616 4723 4920 4932 5027 5029 5057#
OUTA . . . . . . .  C ADDR   2BDEH   R   SEG=MAIN   3646 7235#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   163

OUTA2. . . . . . .  C ADDR   2BF8H   R   SEG=MAIN   7246# 7251
OUTF . . . . . . .  C ADDR   1086H   R   SEG=MAIN   2872#
OUTFL. . . . . . .  C ADDR   114EH   R   SEG=MAIN   2976 2980#
OUTKMEM. . . . . .  C ADDR   1619H   R   SEG=MAIN   3748# 3770 4288
OUTMA. . . . . . .  C ADDR   1127H   R   SEG=MAIN   2959 2961#
OUTMAX . . . . . .  C ADDR   236EH   R   SEG=MAIN   5608 5697 5713#
OUTMEA . . . . . .  C ADDR   2159H   R   SEG=MAIN   5308 5356 5371#
OUTMENU. . . . . .  C ADDR   1C2FH   R   SEG=MAIN   4615#
OUTMIN . . . . . .  C ADDR   2279H   R   SEG=MAIN   5445 5542 5562#
OUTR . . . . . . .  C ADDR   095DH   R   SEG=MAIN   1615 1638#
OUTR5. . . . . . .  C ADDR   0979H   R   SEG=MAIN   1636 1657#
OUTSKO . . . . . .  C ADDR   1CEDH   R   SEG=MAIN   4717 4721#
OUTSKO1. . . . . .  C ADDR   1CE8H   R   SEG=MAIN   4715 4718#
OUTVICH. . . . . .  C ADDR   1093H   R   SEG=MAIN   2879# 2891
OUTVIR . . . . . .  C ADDR   0F33H   R   SEG=MAIN   2578 2612#
OUT_KALI . . . . .  C ADDR   203BH   R   SEG=MAIN   5205#
OV . . . . . . . .  B ADDR   00D0H.2 A      229# 7946
P. . . . . . . . .  B ADDR   00D0H.0 A      231#
P0 . . . . . . . .  D ADDR   0080H   A      40# 5754 5758
P0MDOUT. . . . . .  D ADDR   00A4H   A      74# 502
P1 . . . . . . . .  D ADDR   0090H   A      56# 737 738 1868 4621 6554 6556 6559 6562 6566 6568 6569 6613 6615 6617
                                           7039 7046 7565 7568 7570 7573
P1MDIN . . . . . .  D ADDR   00BDH   A      97#
P1MDOUT. . . . . .  D ADDR   00A5H   A      75# 503
P2 . . . . . . . .  D ADDR   00A0H   A      71# 6587 6591 6600
P2MDOUT. . . . . .  D ADDR   00A6H   A      76# 504
P3 . . . . . . . .  D ADDR   00B0H   A      86# 513 2525 2577 2579 2581 2582 2585 2586 2590 2591 2593 2594 2596 2597
                                           2599 2600 2602 2603 2847 2848 2858 2859 2890 2891 2894 2895 2902 2903 2910
                                           2911 2919 2920 2963 2964 2974 2975 3000 3001 3014 3015 3025 3026 3061 3062
                                           3063 3064 3076 3077 3085 3086 3093 3094 3102 3103 3112 3113 3146 3147 3199
                                           3200 3208 3209 3263 3264 3293 3329 3370 3372 3374 3375 3378 3379 3381 3382
                                           3384 3385 3387 3392 3394 3395 3397 3398 3545 3548 3571 3572 3597 3598 3609
                                           3610 3616 3617 3630 3631 3673 3674 3766 3767 3769 3770 3773 3774 3813 3814
                                           3830 3831 3832 3833 3884 3885 4003 4004 4013 4014 4105 4106 4107 4108 4178
                                           4179 4208 4209 4252 4253 4254 4255 4272 4273 4274 4275 4293 4294 4295 4296
                                           4308 4309 4358 4359 4360 4361 4478 4479 4567 4568 4644 4645 4656 4657 4683
                                           4684 4685 4686 4729 4730 4746 4747 4753 4754 4755 4756 4928 4929 4930 4931
                                           4935 4936 4941 4942 4978 4979 5071 6586 6588 6590 6596 6597 6598 6601 6602
P3IF . . . . . . .  D ADDR   00ADH   A      83# 777 779 2524 2535 3292 3328 3343 5070
P3MDOUT. . . . . .  D ADDR   00A7H   A      77# 506
P4 . . . . . . . .  D ADDR   0084H   A      44# 2327 2347 2392 2474 2717 2719 5191 6668 6671 6687 6689 7139
P5 . . . . . . . .  D ADDR   0085H   A      45# 639 648 2329 2349 2394 2397 2402 2436 2438 2476 2727 2729 5195 6676
                                           6679 6709 6712 7143
P6 . . . . . . . .  D ADDR   0086H   A      46# 2207 2209 2212 2214 3295 3297 3300 3302 5074 5076 5079 5081
P7 . . . . . . . .  D ADDR   0096H   A      62#
P74OUT . . . . . .  D ADDR   00B5H   A      89# 507
PACK1. . . . . . .  C ADDR   00DEH   A      8747# 8962 9139 9241 9458
PARERR . . . . . .  C ADDR   1DABH   R   SEG=MAIN   4786 4788 4790 4830#
PARN . . . . . . .  D ADDR   00AFH   A      427# 645 1798 2828 3700 5893 6035 6078 6187
PAROL. . . . . . .  D ADDR   00A8H   A      423#
PART . . . . . . .  D ADDR   009AH   A      417# 640 870 1176 1220 1246 1261 1807 1880 1976 2135 2235 2366 2683 2774
                                           2829 3415 3684 3699 4152 4238 5859 5885 5995 6019 6062 6088 6680 7065
PCA0CN . . . . . .  D ADDR   00D8H   A      123# 234 235 236 237 238 239 240 550
PCA0CPH0 . . . . .  D ADDR   00FAH   A      156# 549
PCA0CPH1 . . . . .  D ADDR   00FBH   A      157#
PCA0CPH2 . . . . .  D ADDR   00FCH   A      158#
PCA0CPH3 . . . . .  D ADDR   00FDH   A      159#
PCA0CPH4 . . . . .  D ADDR   00FEH   A      160#
PCA0CPL0 . . . . .  D ADDR   00EAH   A      140# 548
PCA0CPL1 . . . . .  D ADDR   00EBH   A      141#
PCA0CPL2 . . . . .  D ADDR   00ECH   A      142#
PCA0CPL3 . . . . .  D ADDR   00EDH   A      143#
PCA0CPL4 . . . . .  D ADDR   00EEH   A      144#
PCA0CPM0 . . . . .  D ADDR   00DAH   A      125# 547 2216 2218 2497 2499 2507 2509 2656 2658 2679 2681 2733 2735 2799
                                           2801 3322 3324 3437 3439 3480 3482 3519 3521 3541 3543 3726 3728 5737 5739
PCA0CPM1 . . . . .  D ADDR   00DBH   A      126#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   164

PCA0CPM2 . . . . .  D ADDR   00DCH   A      127#
PCA0CPM3 . . . . .  D ADDR   00DDH   A      128#
PCA0CPM4 . . . . .  D ADDR   00DEH   A      129#
PCA0H. . . . . . .  D ADDR   00F9H   A      155#
PCA0L. . . . . . .  D ADDR   00E9H   A      139# 500
PCA0MD . . . . . .  D ADDR   00D9H   A      124# 501 546
PCON . . . . . . .  D ADDR   0087H   A      47# 542
POIN3. . . . . . .  C ADDR   1E99H   R   SEG=MAIN   4976# 5030
POINA. . . . . . .  C ADDR   1F01H   R   SEG=MAIN   4974 5029#
POINA1 . . . . . .  C ADDR   1E7EH   R   SEG=MAIN   4946 4953#
POINA2 . . . . . .  C ADDR   1E78H   R   SEG=MAIN   4949# 4954
POZB . . . . . . .  C ADDR   1F24H   R   SEG=MAIN   5043 5047#
PROD . . . . . . .  N NUMB   000CH   A      8684# 9028 9029 9030 9031 9051 9052 9053 9055 9056 9058 9059 9061 9083
                                           9085 9086 9088 9089 9091 9092 9094 9113 9114 9115 9117 9118 9120 9121 9123
                                           9134 9135 9136 9137 9158 9159 9160 9161 9177 9179 9180 9182 9183 9185 9186
                                           9188 9218 9235 9236 9237 9238
PS . . . . . . . .  B ADDR   00B8H.4 A      197#
PSCTL. . . . . . .  D ADDR   008FH   A      55# 9489 9493 9545 9548
PSW. . . . . . . .  D ADDR   00D0H   A      115# 224 225 226 227 228 229 230 231 2538 3282 3346 5068 5781 5835 7474
                                           7476 8419 8427
PT0. . . . . . . .  B ADDR   00B8H.1 A      200#
PT1. . . . . . . .  B ADDR   00B8H.3 A      198#
PT2. . . . . . . .  B ADDR   00B8H.5 A      196#
PX0. . . . . . . .  B ADDR   00B8H.0 A      201#
PX1. . . . . . . .  B ADDR   00B8H.2 A      199#
PYSKST . . . . . .  C ADDR   0F40H   R   SEG=MAIN   2601 2626#
P_IN . . . . . . .  D ADDR   0027H   A      395# 725 5815 5824 5826
P_OUT. . . . . . .  D ADDR   0026H   A      394# 2016 2098 5793 5796 5959
QUES . . . . . . .  C ADDR   16C7H   R   SEG=MAIN   3826# 3831
QU_AVP . . . . . .  C ADDR   07ACH   R   SEG=MAIN   1399 1401#
R10. . . . . . . .  N NUMB   000AH   A      488# 1209 1454 1495 1507 2254 4789 7112 9512
R11. . . . . . . .  N NUMB   000BH   A      489# 1210 1453 1496 1506 2257 7116 9516
R8 . . . . . . . .  N NUMB   0008H   A      486# 1456 1493 1509 2248 4785 6633 7104 9504
R9 . . . . . . . .  N NUMB   0009H   A      487# 1455 1494 1508 2251 4787 6634 7108 9508
RAFTERK. . . . . .  C ADDR   0648H   R   SEG=MAIN   1217# 1223
RB80 . . . . . . .  B ADDR   0098H.2 A      182#
RCAP2H . . . . . .  D ADDR   00CBH   A      111#
RCAP2L . . . . . .  D ADDR   00CAH   A      110#
RCAP4H . . . . . .  D ADDR   00E5H   A      135#
RCAP4L . . . . . .  D ADDR   00E4H   A      134#
RCLK0. . . . . . .  B ADDR   00C8H.5 A      216#
RDDOUTF. . . . . .  C ADDR   171BH   R   SEG=MAIN   3880# 3885
RE1. . . . . . . .  C ADDR   2852H   R   SEG=MAIN   6613# 6619
RE11_7 . . . . . .  C ADDR   06F0H   R   SEG=MAIN   1313# 1355 1366
RE4BYTE. . . . . .  C ADDR   0454H   A      4782 9500#
REA3_M . . . . . .  C ADDR   2777H   R   SEG=MAIN   6462#
REA3_X . . . . . .  C ADDR   2F7BH   R   SEG=MAIN   4403 6362 7713#
REACP. . . . . . .  D ADDR   0077H   A      325# 752 754 756 758 816 832 839 847 855 862 874 908 923 939 954 2410
                                           2412 2414 2416 2448 2450 2452 2454
READ . . . . . . .  C ADDR   2850H   R   SEG=MAIN   751 753 755 6612#
READYACP . . . . .  C ADDR   033AH   R   SEG=MAIN   856 864#
READ_X2. . . . . .  C ADDR   2838H   R   SEG=MAIN   6595# 6605
REBYTE . . . . . .  C ADDR   0281H   R   SEG=MAIN   730# 770 794 900 2352 2374 2379 2404 2441 2479 2488 2490
REBYTE2. . . . . .  C ADDR   046CH   A      1305 1313 1331 1347 1358 1374 5211 5219 9520#
REBYTER. . . . . .  C ADDR   0DCBH   R   SEG=MAIN   2363 2379#
REF0CN . . . . . .  D ADDR   00D1H   A      116# 508
REN0 . . . . . . .  B ADDR   0098H.4 A      180#
RENDKALIB. . . . .  C ADDR   1437H   R   SEG=MAIN   3477# 3484
RESAR2 . . . . . .  C ADDR   2E9FH   R   SEG=MAIN   875 909 924 940 955 967 997 1068 1122 1233 1276 1383 1405 1475
                                           1498 1563 1742 2024 2154 2301 2340 2365 3526 5132 5140 5159 5237 5259 5364
                                           5376 5391 5490 5547 5563 5577 5649 5701 5714 5727 6206 7236 7543# 7697
RESAR8 . . . . . .  C ADDR   2E5DH   R   SEG=MAIN   1189 1239 1279 1287 1410 2423 2461 7482#
RESA_HL. . . . . .  C ADDR   2F48H   R   SEG=MAIN   2109 2185 5298 5311 5453 5466 5616 5628 7674#
REZAM. . . . . . .  D ADDR   008CH   A      413# 2458
REZAP. . . . . . .  D ADDR   0088H   A      412# 2420
REZMUL . . . . . .  C ADDR   06A0H   R   SEG=MAIN   1254 1268 1275#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   165

REZ_A. . . . . . .  D ADDR   0062H   A      403# 888 956 966 996 1067 1121 2339
REZ_A0 . . . . . .  D ADDR   006AH   A      405# 1238 1409 1447 1696 2668 3508 3527 3534 6207 6224
REZ_A1 . . . . . .  D ADDR   0066H   A      404# 1172 1236 1275 1386 1404 1423
REZ_A2 . . . . . .  D ADDR   007BH   A      406# 1406
REZ_A3 . . . . . .  D ADDR   009CH   A      419# 1241 1412 1474 1741 1885 1982 1997 2023 3525 5131 5236 6205 6373
                                           7696 7725
REZ_AK . . . . . .  D ADDR   00A4H   A      422# 4907 5139
REZ_AME. . . . . .  D ADDR   005EH   A      401# 1182 1191 1232 1289 1382
REZ_DEL. . . . . .  D ADDR   00C5H   A      442# 890
REZ_R. . . . . . .  D ADDR   00C9H   A      443# 1511 1521 1523 1562
RE_HL. . . . . . .  C ADDR   2F4FH   R   SEG=MAIN   7678# 7687 7691 7694
RE_HL1 . . . . . .  C ADDR   2F57H   R   SEG=MAIN   7676 7685#
RE_HL2 . . . . . .  C ADDR   2F5EH   R   SEG=MAIN   7685 7689#
RE_HL3 . . . . . .  C ADDR   2F65H   R   SEG=MAIN   7689 7693#
RFINDMEM . . . . .  C ADDR   115BH   R   SEG=MAIN   2990# 2992
RGO23NO. . . . . .  C ADDR   171EH   R   SEG=MAIN   3881# 3886
RGOTO7 . . . . . .  C ADDR   18F4H   R   SEG=MAIN   4175# 4209
RHNOR11. . . . . .  C ADDR   14F5H   R   SEG=MAIN   3570 3583 3589#
RHNOT1 . . . . . .  C ADDR   14BCH   R   SEG=MAIN   3548 3556#
RI . . . . . . . .  B ADDR   0098H.0 A      397# 5820 5821
RI0. . . . . . . .  B ADDR   0098H.0 A      184#
RI21_23. . . . . .  C ADDR   117FH   R   SEG=MAIN   2998 3010#
RI6. . . . . . . .  C ADDR   1179H   R   SEG=MAIN   3001 3006# 3015 3026 3060 3064
RIGBLO . . . . . .  C ADDR   126DH   R   SEG=MAIN   3146# 3195 3197
RIGBLOK. . . . . .  C ADDR   12B9H   R   SEG=MAIN   3208#
RIGHT2 . . . . . .  C ADDR   0F60H   R   SEG=MAIN   2643 2647#
RIGHT3 . . . . . .  C ADDR   0F64H   R   SEG=MAIN   2645 2650#
RIKN . . . . . . .  C ADDR   10FFH   R   SEG=MAIN   2926# 2942
RIZMAN . . . . . .  C ADDR   0EACH   R   SEG=MAIN   2519# 2587
RI_31. . . . . . .  C ADDR   1199H   R   SEG=MAIN   3013 3022#
RKNLEFT. . . . . .  C ADDR   1352H   R   SEG=MAIN   3321# 3386
RKNMEM . . . . . .  C ADDR   1362H   R   SEG=MAIN   3332# 3396
RKNNUL . . . . . .  C ADDR   134FH   R   SEG=MAIN   3320# 3380
RKNOPT . . . . . .  C ADDR   0EA9H   R   SEG=MAIN   2512# 2598
RKNRAZR. . . . . .  C ADDR   0E9AH   R   SEG=MAIN   2502# 2592
RKVVOD0. . . . . .  C ADDR   165EH   R   SEG=MAIN   3775 3781#
RLABELF. . . . . .  C ADDR   0E91H   R   SEG=MAIN   2496# 2584
RLABELH. . . . . .  C ADDR   134CH   R   SEG=MAIN   3319# 3377
RLABELI. . . . . .  C ADDR   14C2H   R   SEG=MAIN   3559#
RLABELK. . . . . .  C ADDR   14BFH   R   SEG=MAIN   3558# 3562
RLABELL. . . . . .  C ADDR   1158H   R   SEG=MAIN   2988#
RLABELL1 . . . . .  C ADDR   1307H   R   SEG=MAIN   3264 3267#
RLABELN. . . . . .  C ADDR   11E1H   R   SEG=MAIN   3062 3066#
RLABELP. . . . . .  C ADDR   1BCFH   R   SEG=MAIN   4565# 4568
RLABELS13. . . . .  C ADDR   1CF7H   R   SEG=MAIN   4726# 4754
RLABELS4 . . . . .  C ADDR   1CF4H   R   SEG=MAIN   4725# 4728
RLABL2 . . . . . .  C ADDR   16C1H   R   SEG=MAIN   3824#
RLABM. . . . . . .  C ADDR   16C4H   R   SEG=MAIN   3825# 3829
RLEFCUR. . . . . .  C ADDR   199BH   R   SEG=MAIN   4269# 4273
RLER . . . . . . .  C ADDR   2BD0H   R   SEG=MAIN   7219 7221#
RLIST_43 . . . . .  C ADDR   1A32H   R   SEG=MAIN   4355# 4357
RMAS4. . . . . . .  C ADDR   048BH   R   SEG=MAIN   1022# 1024
RME21_23 . . . . .  C ADDR   1A02H   R   SEG=MAIN   4306 4325#
RMO220 . . . . . .  C ADDR   0682H   R   SEG=MAIN   1256# 1298
RNNMEMB. . . . . .  C ADDR   11E7H   R   SEG=MAIN   3069# 3072
RNO3PARN . . . . .  C ADDR   0A55H   R   SEG=MAIN   1786# 1799
RNOBUF0. . . . . .  C ADDR   0C6BH   R   SEG=MAIN   2158 2181#
RNOCHI0. . . . . .  C ADDR   07D4H   R   SEG=MAIN   1418 1422#
RNOH37 . . . . . .  C ADDR   1519H   R   SEG=MAIN   3607# 3610 3617 3631
RNOM31 . . . . . .  C ADDR   1872H   R   SEG=MAIN   4103# 4104
RNOMEMK. . . . . .  C ADDR   1616H   R   SEG=MAIN   3747# 3764
RNORVICH . . . . .  C ADDR   0A52H   R   SEG=MAIN   1733 1734 1785#
RNOT1IN. . . . . .  C ADDR   0B37H   R   SEG=MAIN   1882 1952#
RNOTESTIZM . . . .  C ADDR   0698H   R   SEG=MAIN   1270# 1300
ROKCLR . . . . . .  C ADDR   0EA0H   R   SEG=MAIN   2503 2505#
ROUSTA . . . . . .  C ADDR   1BBBH   R   SEG=MAIN   4549 4557#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   166

ROUSTA1. . . . . .  C ADDR   1BCCH   R   SEG=MAIN   4557 4563#
ROUT6. . . . . . .  C ADDR   0E8EH   R   SEG=MAIN   2495# 2583
ROUT7. . . . . . .  C ADDR   1349H   R   SEG=MAIN   3318# 3371 3376
ROUTMAX. . . . . .  C ADDR   22CCH   R   SEG=MAIN   5608# 5625
ROUTMIN. . . . . .  C ADDR   21D7H   R   SEG=MAIN   5445# 5463
RR0. . . . . . . .  N NUMB   0000H   A      480# 2539 3281 3347 5067
RR1. . . . . . . .  N NUMB   0001H   A      481# 2540 3280 3348 5066
RR2. . . . . . . .  N NUMB   0002H   A      483# 1307 1319 1325 1337 1349 1360 2541 3279 3349 4383 4391 5065 5213
                                           5225 5231 5243 6646
RR3. . . . . . . .  N NUMB   0003H   A      484# 1308 1318 1326 1336 1350 1361 2542 3278 3350 4384 4390 5064 5214
                                           5224 5232 5242 6647
RR4. . . . . . . .  N NUMB   0004H   A      1309 1317 1327 1335 1351 1362 2543 3277 3351 4385 4389 5063 5215 5223
                                           5233 5241 7757# 7809 7828 7844 7888 7908
RR5. . . . . . . .  N NUMB   0005H   A      1310 1316 1328 1334 1352 1363 2544 3276 3352 4386 4388 5062 5216 5222
                                           5234 5240 7758# 7810 7816 7823 7889 7897
RR6. . . . . . . .  N NUMB   0006H   A      482# 2545 3275 3353 5061
RR7. . . . . . . .  N NUMB   0007H   A      485# 2546 3274 3354 5060
RRIR . . . . . . .  C ADDR   2BDDH   R   SEG=MAIN   7230 7232#
RRMO220. . . . . .  C ADDR   07D1H   R   SEG=MAIN   1395 1421#
RS0. . . . . . . .  B ADDR   00D0H.3 A      228#
RS1. . . . . . . .  B ADDR   00D0H.4 A      227#
RSEEIND. . . . . .  C ADDR   09F1H   R   SEG=MAIN   1723# 1735 1736 1737
RSTSRC . . . . . .  D ADDR   00EFH   A      145# 535 4713
RS_BYTE. . . . . .  C ADDR   23CAH   R   SEG=MAIN   287 5766#
RTIZMRI. . . . . .  C ADDR   105FH   R   SEG=MAIN   2845#
RVIOUT . . . . . .  C ADDR   10D6H   R   SEG=MAIN   2504 2895 2903 2907# 2911
RVVIZKO. . . . . .  C ADDR   14F7H   R   SEG=MAIN   3591# 3599
RVVKALI52. . . . .  C ADDR   1D23H   R   SEG=MAIN   4747 4749#
RXOVRN . . . . . .  B ADDR   00F8H.4 A      256#
SADDR0 . . . . . .  D ADDR   00A9H   A      79#
SADDR1 . . . . . .  D ADDR   00F3H   A      149#
SADEN0 . . . . . .  D ADDR   00B9H   A      93#
SADEN1 . . . . . .  D ADDR   00AEH   A      84#
SADIAP . . . . . .  D ADDR   0034H   A      335# 644 2116 2193 4432
SADIAP2. . . . . .  D ADDR   0032H   A      337# 2119 2196 4435
SADIAP3. . . . . .  D ADDR   0031H   A      338# 2122 2199 4438
SADIAP4. . . . . .  D ADDR   0030H   A      339# 2125 2202 4441
SAUS . . . . . . .  D ADDR   0036H   A      334# 2328 2330 2346 2348 2393 2395 2473 2475
SAVBA. . . . . . .  D ADDR   003CH   A      328# 2559 2937 2955 3178 3239 3259 3367 4032 4088 4192 4736 4864 4968
                                           7294 7301
SAVEIR2. . . . . .  C ADDR   2DE1H   R   SEG=MAIN   969 1000 1071 1125 7381#
SAVELTE. . . . . .  C ADDR   04A7H   A      9575#
SAVEN_BL . . . . .  D ADDR   00D3H   A      446# 665 3967 6486 7646 7677
SAVEN_BL2. . . . .  D ADDR   00C0H   A      436# 673 3981 6503 7664 7686
SAVEN_BL3. . . . .  D ADDR   00C2H   A      437# 680 3986 6506 7668 7690
SAVEN_BL4. . . . .  D ADDR   00D9H   A      450# 687 3990 6508 7670 7693
SAVER2 . . . . . .  C ADDR   2DEDH   R   SEG=MAIN   657 659 661 663 879 889 891 913 928 944 957 1173 1183 1192 1237
                                           1242 1290 1387 1407 1413 1424 1512 1516 1746 2028 2260 2306 2344 2373 2421
                                           2433 2459 2471 3528 3535 4409 4908 4998 5149 5251 5367 5379 5399 5493 5557
                                           5573 5586 5652 5709 5722 5732 6171 6208 6225 7239 7395# 7726
SAVE_HL. . . . . .  C ADDR   2F14H   R   SEG=MAIN   2111 2188 3874 4233 6304 6349 6459 7644#
SAVE_HLM . . . . .  C ADDR   2779H   R   SEG=MAIN   6484#
SA_HL. . . . . . .  C ADDR   2F1BH   R   SEG=MAIN   7647# 7665 7669 7671
SA_HL1 . . . . . .  C ADDR   2F36H   R   SEG=MAIN   7645 7663#
SA_HL2 . . . . . .  C ADDR   2F3DH   R   SEG=MAIN   7663 7667#
SA_HL3 . . . . . .  C ADDR   2F44H   R   SEG=MAIN   7667 7670#
SBUF0. . . . . . .  D ADDR   0099H   A      64# 1530 1535 1540 1545 1550 2018 2100 5800 5822 6253 6265 6356 6360 6377
                                           6382 6387 6392 6393 6397 6430 6437 6516 6522
SBUF1. . . . . . .  D ADDR   00F2H   A      148#
SCON0. . . . . . .  D ADDR   0098H   A      63# 177 178 179 180 181 182 183 184 397 398 541 6517 6521 6524 6525 6545
SCON1. . . . . . .  D ADDR   00F1H   A      147#
SDV. . . . . . . .  C ADDR   27FAH   R   SEG=MAIN   6554# 6561
SDV1 . . . . . . .  C ADDR   280EH   R   SEG=MAIN   6566# 6572
SDVIG0 . . . . . .  C ADDR   031BH   R   SEG=MAIN   843# 845
SDVIG1 . . . . . .  C ADDR   0310H   R   SEG=MAIN   835# 837
SDVIG2 . . . . . .  C ADDR   0305H   R   SEG=MAIN   828# 830
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   167

SDVIG3 . . . . . .  C ADDR   02F9H   R   SEG=MAIN   819# 821
SDVIG4 . . . . . .  C ADDR   032AH   R   SEG=MAIN   852# 854
SDVIG6 . . . . . .  C ADDR   0334H   R   SEG=MAIN   859# 861
SDVM . . . . . . .  C ADDR   0332H   R   SEG=MAIN   849 858#
SEEGOON. . . . . .  C ADDR   0A5AH   R   SEG=MAIN   1770 1775 1777 1783 1790#
SEEGOONRS. . . . .  C ADDR   0BDEH   R   SEG=MAIN   2065 2072 2074 2081 2090#
SEEIND . . . . . .  C ADDR   0A68H   R   SEG=MAIN   1715 1722 1723 1801#
SEE_L43. . . . . .  C ADDR   1B09H   R   SEG=MAIN   4449 4456 4460#
SI . . . . . . . .  B ADDR   00C0H.3 A      208#
SIGN . . . . . . .  N NUMB   0007H   A      8679# 8700 8701 8726 8727 8751 8894 8911 9132 9172
SKOR19 . . . . . .  C ADDR   1C12H   R   SEG=MAIN   4594 4601#
SLVSEL . . . . . .  B ADDR   00F8H.2 A      258#
SM00 . . . . . . .  B ADDR   0098H.7 A      177#
SM10 . . . . . . .  B ADDR   0098H.6 A      178#
SM20 . . . . . . .  B ADDR   0098H.5 A      179#
SMB0ADR. . . . . .  D ADDR   00C3H   A      103#
SMB0CN . . . . . .  D ADDR   00C0H   A      100# 204 205 206 207 208 209 210 211
SMB0CR . . . . . .  D ADDR   00CFH   A      114#
SMB0DAT. . . . . .  D ADDR   00C2H   A      102#
SMB0STA. . . . . .  D ADDR   00C1H   A      101#
SMBFTE . . . . . .  B ADDR   00C0H.1 A      210#
SMBTOE . . . . . .  B ADDR   00C0H.0 A      211#
SM_HL. . . . . . .  C ADDR   2780H   R   SEG=MAIN   6487# 6504 6507 6509
SM_HL1 . . . . . .  C ADDR   2795H   R   SEG=MAIN   6485 6502#
SM_HL2 . . . . . .  C ADDR   279CH   R   SEG=MAIN   6502 6505#
SM_HL3 . . . . . .  C ADDR   27A3H   R   SEG=MAIN   6505 6508#
SOOTV. . . . . . .  C ADDR   1586H   R   SEG=MAIN   3669# 3685 6020 6063 6089
SP . . . . . . . .  D ADDR   0081H   A      41# 498
SPEED_RS . . . . .  B ADDR   0021H.0 A      354# 3050
SPI0CFG. . . . . .  D ADDR   009AH   A      65#
SPI0CKR. . . . . .  D ADDR   009DH   A      68# 539
SPI0CN . . . . . .  D ADDR   00F8H   A      154# 253 254 255 256 257 258 259 260 538
SPI0DAT. . . . . .  D ADDR   009BH   A      66# 5756
SPIEN. . . . . . .  B ADDR   00F8H.0 A      260#
SPIF . . . . . . .  B ADDR   00F8H.7 A      253#
SPWRI. . . . . . .  C ADDR   1CC8H   R   SEG=MAIN   4700 4702#
SS1. . . . . . . .  C ADDR   2930H   R   SEG=MAIN   6787# 6789
STA. . . . . . . .  B ADDR   00C0H.5 A      206#
STO. . . . . . . .  B ADDR   00C0H.4 A      207#
SUMMA. . . . . . .  D ADDR   00B3H   A      431# 876 878 893 910 912 925 927 941 943 1445 1694 2666 3506
SUMT2. . . . . . .  C ADDR   0386H   R   SEG=MAIN   867 907#
S_R2 . . . . . . .  C ADDR   23CAH   R   SEG=MAIN   5780#
S_R3 . . . . . . .  C ADDR   23E8H   R   SEG=MAIN   5789 5802#
S_R4 . . . . . . .  C ADDR   23E9H   R   SEG=MAIN   5785 5805#
S_R5 . . . . . . .  C ADDR   23EBH   R   SEG=MAIN   5788 5801 5808#
S_R6 . . . . . . .  C ADDR   23F2H   R   SEG=MAIN   5814# 5831
S_R7 . . . . . . .  C ADDR   23FCH   R   SEG=MAIN   5813 5819#
S_R9 . . . . . . .  C ADDR   2411H   R   SEG=MAIN   5817 5820 5829 5833#
T2CON. . . . . . .  D ADDR   00C8H   A      108# 214 215 216 217 218 219 220 221 551 2222 3311 5088 5742
T2MSME . . . . . .  C ADDR   195FH   R   SEG=MAIN   4241# 4247
T4CON. . . . . . .  D ADDR   00C9H   A      109#
TA0. . . . . . . .  C ADDR   2423H   R   SEG=MAIN   5845 5848#
TA1. . . . . . . .  C ADDR   242CH   R   SEG=MAIN   5850 5853#
TA2. . . . . . . .  C ADDR   2457H   R   SEG=MAIN   5854 5875#
TA2_ . . . . . . .  C ADDR   2447H   R   SEG=MAIN   5861 5867#
TA3. . . . . . . .  C ADDR   247CH   R   SEG=MAIN   5898 5901#
TA3_ . . . . . . .  C ADDR   2454H   R   SEG=MAIN   5868 5873#
TA4. . . . . . . .  C ADDR   247EH   R   SEG=MAIN   5900 5903#
TA5. . . . . . . .  C ADDR   2485H   R   SEG=MAIN   5904 5907#
TA6. . . . . . . .  C ADDR   2487H   R   SEG=MAIN   5906 5909#
TABB1_2. . . . . .  C ADDR   2AD0H   R   SEG=MAIN   7056# 7066
TABN . . . . . . .  C ADDR   2B68H   R   SEG=MAIN   7155# 7159
TABT11 . . . . . .  C ADDR   28E8H   R   SEG=MAIN   6729# 7136
TABT7. . . . . . .  C ADDR   28ECH   R   SEG=MAIN   5188 6731# 7148
TABT9. . . . . . .  C ADDR   28EAH   R   SEG=MAIN   6730# 7146
TABUS. . . . . . .  C ADDR   28D4H   R   SEG=MAIN   6665 6718#
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   168

TAKTIND. . . . . .  C ADDR   0AA7H   R   SEG=MAIN   1835 1838#
TB . . . . . . . .  C ADDR   24B4H   R   SEG=MAIN   5847 5964#
TB80 . . . . . . .  B ADDR   0098H.3 A      181#
TB_0 . . . . . . .  C ADDR   2420H   R   SEG=MAIN   5844 5846#
TC . . . . . . . .  C ADDR   24CEH   R   SEG=MAIN   5965 5981#
TC1. . . . . . . .  C ADDR   24E0H   R   SEG=MAIN   5990 5992#
TC11 . . . . . . .  C ADDR   24D6H   R   SEG=MAIN   5983 5985#
TC2. . . . . . . .  C ADDR   2521H   R   SEG=MAIN   5997 6043#
TC3. . . . . . . .  C ADDR   255DH   R   SEG=MAIN   6043 6085#
TCLK0. . . . . . .  B ADDR   00C8H.4 A      217#
TCON . . . . . . .  D ADDR   0088H   A      48# 167 168 169 170 171 172 173 174 533 534 545
TD . . . . . . . .  C ADDR   2589H   R   SEG=MAIN   5984 6137#
TD11 . . . . . . .  C ADDR   24D3H   R   SEG=MAIN   5982 5984#
TE . . . . . . . .  C ADDR   25D1H   R   SEG=MAIN   6138 6178#
TE1. . . . . . . .  C ADDR   2598H   R   SEG=MAIN   6142 6145#
TE10MS . . . . . .  C ADDR   2C33H   R   SEG=MAIN   4240 7316#
TE2. . . . . . . .  C ADDR   25A0H   R   SEG=MAIN   6146 6149#
TE22 . . . . . . .  C ADDR   2B5BH   R   SEG=MAIN   7135 7145#
TE23 . . . . . . .  C ADDR   2B63H   R   SEG=MAIN   7145 7148#
TE2MS. . . . . . .  C ADDR   2C29H   R   SEG=MAIN   4246 7315#
TEAEQU0. . . . . .  C ADDR   2C6FH   R   SEG=MAIN   3644 7324#
TEAVK. . . . . . .  C ADDR   2CABH   R   SEG=MAIN   5106 7331#
TEBEQU0. . . . . .  C ADDR   2C79H   R   SEG=MAIN   7325#
TEBL . . . . . . .  C ADDR   2D5FH   R   SEG=MAIN   3119 3817 7350#
TEBL0. . . . . . .  C ADDR   2D69H   R   SEG=MAIN   4052 7351#
TECH . . . . . . .  C ADDR   2D73H   R   SEG=MAIN   4339 4507 7352#
TECLE. . . . . . .  C ADDR   2D24H   R   SEG=MAIN   3106 3786 7344#
TEEND. . . . . . .  C ADDR   2DC3H   R   SEG=MAIN   5202 7361#
TEERR. . . . . . .  C ADDR   2DB9H   R   SEG=MAIN   7308 7360#
TEFULL . . . . . .  C ADDR   2D4BH   R   SEG=MAIN   3126 4018 7348#
TEINT. . . . . . .  C ADDR   2D55H   R   SEG=MAIN   4119 7349#
TEIZMK . . . . . .  C ADDR   2D06H   R   SEG=MAIN   2897 3575 3585 7341#
TEKALIB. . . . . .  C ADDR   2CB5H   R   SEG=MAIN   4313 5109 7332#
TEKAOUT. . . . . .  C ADDR   0DCEH   R   SEG=MAIN   2381# 2388
TEKD . . . . . . .  C ADDR   2CFCH   R   SEG=MAIN   4794 7340#
TELIST . . . . . .  C ADDR   2D40H   R   SEG=MAIN   3089 3732 3797 3802 7347#
TEMAX. . . . . . .  C ADDR   2D91H   R   SEG=MAIN   4543 7355#
TEMEM. . . . . . .  C ADDR   2D2EH   R   SEG=MAIN   7345#
TEMENU . . . . . .  C ADDR   2C83H   R   SEG=MAIN   7326#
TEMID. . . . . . .  C ADDR   2D9BH   R   SEG=MAIN   4551 7356#
TEMIN. . . . . . .  C ADDR   2D87H   R   SEG=MAIN   4064 4559 7354#
TEMUL. . . . . . .  C ADDR   077FH   R   SEG=MAIN   1343 1381#
TENMIN . . . . . .  C ADDR   29D2H   R   SEG=MAIN   1251 1253 1267 6855#
TEOLI. . . . . . .  C ADDR   2DA5H   R   SEG=MAIN   1587 1681 7358#
TEOLL. . . . . . .  C ADDR   2D1AH   R   SEG=MAIN   1678 7343#
TEOLR. . . . . . .  C ADDR   2DAFH   R   SEG=MAIN   1583 7359#
TEOUT. . . . . . .  C ADDR   2D10H   R   SEG=MAIN   7342#
TEPAR. . . . . . .  C ADDR   2CF2H   R   SEG=MAIN   5126 7339#
TES19_2. . . . . .  C ADDR   2CE8H   R   SEG=MAIN   583 3037 4601 4846 7337#
TES57_6. . . . . .  C ADDR   2CDEH   R   SEG=MAIN   3029 4595 4841 5122 7336#
TESKOR . . . . . .  C ADDR   2CA1H   R   SEG=MAIN   5103 7330#
TEST01 . . . . . .  C ADDR   27B3H   R   SEG=MAIN   6521# 6543
TEST02 . . . . . .  C ADDR   27E2H   R   SEG=MAIN   6540 6542#
TEST04 . . . . . .  C ADDR   27C3H   R   SEG=MAIN   6528# 6530
TEST1. . . . . . .  C ADDR   27A9H   R   SEG=MAIN   6516# 6532 6550
TEST2. . . . . . .  C ADDR   27DBH   R   SEG=MAIN   6521 6539#
TEST22 . . . . . .  C ADDR   1C98H   R   SEG=MAIN   4663 4670#
TEST23 . . . . . .  C ADDR   1C9DH   R   SEG=MAIN   4670 4673#
TEST3. . . . . . .  C ADDR   27CDH   R   SEG=MAIN   6523 6533#
TEST4. . . . . . .  C ADDR   27BBH   R   SEG=MAIN   6524# 6538
TEST5. . . . . . .  C ADDR   27E5H   R   SEG=MAIN   6541 6544#
TEST7I . . . . . .  C ADDR   0ABFH   R   SEG=MAIN   1851 1854#
TEST9I . . . . . .  C ADDR   0AB8H   R   SEG=MAIN   1845 1851#
TESTAT . . . . . .  C ADDR   2D7DH   R   SEG=MAIN   3097 3778 7353#
TESTRS . . . . . .  C ADDR   27A7H   R   SEG=MAIN   4583 6514#
TESTS. . . . . . .  C ADDR   1C8CH   R   SEG=MAIN   4665# 4672 4675
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   169

TETE11 . . . . . .  C ADDR   2CC0H   R   SEG=MAIN   4572 5113 7333#
TETE7. . . . . . .  C ADDR   2CD4H   R   SEG=MAIN   4648 5119 7335#
TETE9. . . . . . .  C ADDR   2CCAH   R   SEG=MAIN   5116 7334#
TETESI . . . . . .  C ADDR   2C8DH   R   SEG=MAIN   3457 5096 7328#
TETESR . . . . . .  C ADDR   2C97H   R   SEG=MAIN   5100 7329#
TEVICH . . . . . .  C ADDR   2C65H   R   SEG=MAIN   2696 2905 2913 3581 5007 7323#
TEWR . . . . . . .  C ADDR   2D36H   R   SEG=MAIN   3080 3792 7346#
TEXTT. . . . . . .  C ADDR   2C29H   R   SEG=MAIN   6742 7314#
TF0. . . . . . . .  B ADDR   0088H.5 A      169#
TF1. . . . . . . .  B ADDR   0088H.7 A      167#
TF2. . . . . . . .  B ADDR   00C8H.7 A      214#
TH0. . . . . . . .  D ADDR   008CH   A      52# 518
TH1. . . . . . . .  D ADDR   008DH   A      53# 552 580 585 4598 4603 4716 4718
TH2. . . . . . . .  D ADDR   00CDH   A      113# 2219 3308 5086
TH4. . . . . . . .  D ADDR   00F5H   A      151#
TI . . . . . . . .  B ADDR   0098H.1 A      398# 1533 1534 1538 1539 1543 1544 1548 1549 5789 5790 5806 6358 6359
                                           6375 6376 6380 6381 6385 6386 6390 6391 6395 6396
TI0. . . . . . . .  B ADDR   0098H.1 A      183#
TIM. . . . . . . .  C ADDR   281EH   R   SEG=MAIN   6575#
TIM1 . . . . . . .  C ADDR   2820H   R   SEG=MAIN   6576# 6576
TIM2 . . . . . . .  C ADDR   2823H   R   SEG=MAIN   6557 6560 6567 6571 6579# 6614 6618 7569 7571
TIM3 . . . . . . .  C ADDR   2825H   R   SEG=MAIN   6580# 6580
TIZMRI . . . . . .  C ADDR   0F59H   R   SEG=MAIN   2642# 2845
TL0. . . . . . . .  D ADDR   008AH   A      50# 519
TL1. . . . . . . .  D ADDR   008BH   A      51# 581
TL2. . . . . . . .  D ADDR   00CCH   A      112# 2220 3309 5087
TL4. . . . . . . .  D ADDR   00F4H   A      150#
TLABELI. . . . . .  C ADDR   1583H   R   SEG=MAIN   3654 3666#
TMOD . . . . . . .  D ADDR   0089H   A      49# 516 544
TMR2RLH. . . . . .  D ADDR   00CBH   A      314# 531
TMR2RLL. . . . . .  D ADDR   00CAH   A      313# 530
TMR3CN . . . . . .  D ADDR   0091H   A      57#
TMR3H. . . . . . .  D ADDR   0095H   A      61#
TMR3L. . . . . . .  D ADDR   0094H   A      60#
TMR3RLH. . . . . .  D ADDR   0093H   A      59#
TMR3RLL. . . . . .  D ADDR   0092H   A      58#
TOME13 . . . . . .  C ADDR   1BFBH   R   SEG=MAIN   4581 4586#
TOME14 . . . . . .  C ADDR   1C23H   R   SEG=MAIN   4586 4609#
TOME15 . . . . . .  C ADDR   1C3BH   R   SEG=MAIN   4609 4621# 4626
TOME21 . . . . . .  C ADDR   1BF2H   R   SEG=MAIN   4570 4581#
TOSK19 . . . . . .  C ADDR   1DD3H   R   SEG=MAIN   4840 4846#
TOSTRO . . . . . .  C ADDR   0C18H   R   SEG=MAIN   2117 2120 2123 2126#
TOUTF. . . . . . .  C ADDR   1500H   R   SEG=MAIN   3595# 3598
TR0. . . . . . . .  B ADDR   0088H.4 A      170#
TR1. . . . . . . .  B ADDR   0088H.6 A      168# 553 587 4714 4719
TR2. . . . . . . .  B ADDR   00C8H.2 A      219#
TR9. . . . . . . .  C ADDR   274CH   R   SEG=MAIN   5852 5857 5866 5874 5962 5975 5978 6042 6084 6135 6144 6148 6152
                                           6176 6191 6198 6200 6210 6226 6235 6244 6273 6306 6317 6324 6342 6408 6425
                                           6431 6436# 6460
TRLOAD . . . . . .  C ADDR   257BH   R   SEG=MAIN   6093 6097 6101 6107#
TTOUT. . . . . . .  C ADDR   1062H   R   SEG=MAIN   2847# 2860
TTR3 . . . . . . .  C ADDR   256BH   R   SEG=MAIN   6091 6094#
TTR4 . . . . . . .  C ADDR   2572H   R   SEG=MAIN   6095 6098#
TTR5 . . . . . . .  C ADDR   2579H   R   SEG=MAIN   6099 6102#
TX1. . . . . . . .  C ADDR   08A1H   R   SEG=MAIN   1532# 1533
TX2. . . . . . . .  C ADDR   08A9H   R   SEG=MAIN   1537# 1538
TX3. . . . . . . .  C ADDR   08B1H   R   SEG=MAIN   1542# 1543
TX4. . . . . . . .  C ADDR   08B9H   R   SEG=MAIN   1547# 1548
TXBSY. . . . . . .  B ADDR   00F8H.3 A      257# 5757
TZ . . . . . . . .  C ADDR   2749H   R   SEG=MAIN   6429 6433#
UNPACK1. . . . . .  C ADDR   009EH   A      8697# 8891 9025 9155 9269
UNPACK2. . . . . .  C ADDR   00BAH   A      8722# 8892 9026 9156
UP1. . . . . . . .  C ADDR   0138H   A      8842# 8859
UP2. . . . . . . .  C ADDR   014BH   A      8862# 8880
UP2A . . . . . . .  C ADDR   0161H   A      8841 8878#
UPA. . . . . . . .  C ADDR   2A01H   R   SEG=MAIN   6909# 6915
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   170

UPA1 . . . . . . .  C ADDR   2A11H   R   SEG=MAIN   6927# 6933
UPA2 . . . . . . .  C ADDR   29F1H   R   SEG=MAIN   6890# 6896
UPAA . . . . . . .  C ADDR   2EECH   R   SEG=MAIN   7613# 7619
UPAA4. . . . . . .  C ADDR   2A5CH   R   SEG=MAIN   6988# 6994
UPAB . . . . . . .  C ADDR   2A6CH   R   SEG=MAIN   7005# 7011
UPAK . . . . . . .  C ADDR   29FBH   R   SEG=MAIN   6906#
UPAK1. . . . . . .  C ADDR   2EC6H   R   SEG=MAIN   7580#
UPAK2. . . . . . .  C ADDR   29EBH   R   SEG=MAIN   6887#
UPAK3. . . . . . .  C ADDR   2A0BH   R   SEG=MAIN   4261 4368 6924#
UPAK4. . . . . . .  C ADDR   2EE6H   R   SEG=MAIN   4215 7610#
UPAKA. . . . . . .  C ADDR   2A56H   R   SEG=MAIN   4990 6985#
UPAKB. . . . . . .  C ADDR   2A66H   R   SEG=MAIN   5037 7002#
UPAV1. . . . . . .  C ADDR   1D42H   R   SEG=MAIN   4773# 4779
UPAV2. . . . . . .  C ADDR   1E05H   R   SEG=MAIN   4891# 4897
UPK1 . . . . . . .  C ADDR   2ED8H   R   SEG=MAIN   7588 7591#
UPK2 . . . . . . .  C ADDR   2ED9H   R   SEG=MAIN   7590 7592#
VICHMAX. . . . . .  C ADDR   22CFH   R   SEG=MAIN   4545 5610#
VICHMEAN . . . . .  C ADDR   20DBH   R   SEG=MAIN   4553 5291#
VICHMIN. . . . . .  C ADDR   21DAH   R   SEG=MAIN   4066 4561 5447#
VICHR. . . . . . .  D ADDR   00B1H   A      429# 1301 1841 2693 2706 2879 2892 2994 3002 3461 3465 3473 3569 3635
                                           3750 4302 4310 4319 4566 4618 4639 4792 4981 5020 5052 5094 7134
VIG0 . . . . . . .  C ADDR   0B23H   R   SEG=MAIN   1936# 1938
VIG4 . . . . . . .  C ADDR   0B31H   R   SEG=MAIN   1947# 1949
VIOUT. . . . . . .  C ADDR   1039H   R   SEG=MAIN   2699 2810# 2848 2864 2869 2899 2907 2915 2938 2961 2970 2973 3006
                                           3019 3051 3067 3082 3091 3099 3108 3123 3188 3191 3248 3262 3265 3594 3595
                                           3671 4680
VIOUT2 . . . . . .  C ADDR   11C7H   R   SEG=MAIN   3035 3044#
VIOUTF . . . . . .  C ADDR   14F9H   R   SEG=MAIN   3592#
VIT2_10. . . . . .  C ADDR   0F8FH   R   SEG=MAIN   2674# 2687 2688
VODM11_15. . . . .  C ADDR   19BEH   R   SEG=MAIN   4286# 4309
VOLUME . . . . . .  D ADDR   00D5H   A      447# 3849 4228 6336 6493 6495 7653 7655
VV21_23. . . . . .  C ADDR   1C83H   R   SEG=MAIN   4645 4656#
VVCHIBL. . . . . .  C ADDR   2B9FH   R   SEG=MAIN   2978 7187#
VVCHIF . . . . . .  C ADDR   2B7AH   R   SEG=MAIN   7163# 7180
VVINTE . . . . . .  C ADDR   191FH   R   SEG=MAIN   4179 4207#
VVIZKO . . . . . .  C ADDR   1550H   R   SEG=MAIN   3591 3635#
VVKALI52 . . . . .  C ADDR   1DF8H   R   SEG=MAIN   4749 4875# 4927
VVMENU . . . . . .  C ADDR   1DA8H   R   SEG=MAIN   4756 4828#
VVNOL23. . . . . .  C ADDR   2B9AH   R   SEG=MAIN   7184# 7188
VVNOL31. . . . . .  C ADDR   2B95H   R   SEG=MAIN   7182# 7184
VVNOL41. . . . . .  C ADDR   2B93H   R   SEG=MAIN   7180# 7182
VVOD2_10 . . . . .  C ADDR   1957H   R   SEG=MAIN   3759 3877 3978 4238#
VVOD43 . . . . . .  C ADDR   1B36H   R   SEG=MAIN   4479 4486#
VVODM11_15 . . . .  C ADDR   1BD2H   R   SEG=MAIN   4286 4566#
VVOSTA . . . . . .  C ADDR   1B93H   R   SEG=MAIN   4522 4541#
VVOSTAD. . . . . .  C ADDR   1BA7H   R   SEG=MAIN   4541 4549#
VVRR6. . . . . . .  C ADDR   10BCH   R   SEG=MAIN   2897#
VV_52V . . . . . .  C ADDR   1D1AH   R   SEG=MAIN   4730 4746#
WCOL . . . . . . .  B ADDR   00F8H.6 A      254#
WDTCN. . . . . . .  D ADDR   00FFH   A      161# 514 515
WORK . . . . . . .  D ADDR   00B8H   A      433# 1568 1570 1576 1592 1599 1614 1635 1640 1656 1887 2144 3844 3858
                                           3860 3890 3898 3900 3909 3917 3919 3926 3935 3937 3946 3954 3956 5318 5363
                                           5366 5375 5378 5390 5471 5489 5492 5546 5556 5562 5572 5576 5631 5648 5651
                                           5700 5708 5713 5721 6445 6453 6455 6518 6539
WR1. . . . . . . .  C ADDR   2EB3H   R   SEG=MAIN   7565# 7572
WRITE. . . . . . .  C ADDR   2EB0H   R   SEG=MAIN   749 7028 7030 7032 7034 7036 7038 7041 7043 7045 7048 7050 7052
                                           7563#
WRITED_X1. . . . .  C ADDR   2829H   R   SEG=MAIN   6585#
WRITE_X1 . . . . .  C ADDR   2828H   R   SEG=MAIN   6584#
WRPAGE . . . . . .  C ADDR   0480H   A      4711 5181 5283 9543#
WW5. . . . . . . .  C ADDR   0483H   A      9544# 9552
XBR0 . . . . . . .  D ADDR   00E1H   A      131# 510 537
XBR1 . . . . . . .  D ADDR   00E2H   A      132# 511
XBR2 . . . . . . .  D ADDR   00E3H   A      133# 512 536
XCIKLWR. . . . . .  C ADDR   2DCDH   R   SEG=MAIN   964 977 979 981 983 985 987 990 992 994 1026 1028 1030 1033 1035
                                           1037 1039 1042 1044 1046 1048 1050 1052 1054 1056 1059 1061 1063 1065 1115
A51 MACRO ASSEMBLER  AMP290910                                                            09/02/2011 17:12:59 PAGE   171

                                           1117 1119 7366#
XTEMP. . . . . . .  N NUMB   000CH   A      7754# 8109 8110 8111 8112 8198 8200 8201 8203 8204 8206 8207 8209 8231
                                           8232 8233 8234 8252 8253 8257 8258 8261 8265 8266 8269 8273 8274 8278 8279
                                           8281 8282 8283 8285 8289 8290 8292 8293 8297 8298 8303 8304 8306 8307 8311
                                           8312 8317 8319 8320 8321
YBNUL. . . . . . .  C ADDR   148BH   R   SEG=MAIN   3523 3531#
YES. . . . . . . .  C ADDR   311BH   R   SEG=MAIN   8131 8135 8139 8143 8161# 8224
YES0KEY. . . . . .  C ADDR   02D5H   R   SEG=MAIN   781 793#
YES0KEY1 . . . . .  C ADDR   02E2H   R   SEG=MAIN   800# 807
YESAVP . . . . . .  C ADDR   07DEH   R   SEG=MAIN   1401 1427#
YESBUF . . . . . .  C ADDR   0C70H   R   SEG=MAIN   2179 2184#
YESIND . . . . . .  C ADDR   0AC1H   R   SEG=MAIN   1840 1849 1853 1856#
YESPRD . . . . . .  C ADDR   0C6EH   R   SEG=MAIN   2178 2182#
YESTEST. . . . . .  C ADDR   28C3H   R   SEG=MAIN   6660 6692#
YESTT5 . . . . . .  C ADDR   0D3AH   R   SEG=MAIN   2298#
YESVICH. . . . . .  C ADDR   082FH   R   SEG=MAIN   1414 1470#
YESVI_KM . . . . .  C ADDR   2044H   R   SEG=MAIN   5128 5208#
YESVI_KR . . . . .  C ADDR   1FBCH   R   SEG=MAIN   5128# 5130
YST1 . . . . . . .  C ADDR   0199H   R   SEG=MAIN   582 586#
YST19. . . . . . .  C ADDR   0191H   R   SEG=MAIN   583#
Z01S . . . . . . .  C ADDR   2948H   R   SEG=MAIN   6804# 6806
Z05S . . . . . . .  C ADDR   2955H   R   SEG=MAIN   6813# 6815
Z100 . . . . . . .  C ADDR   2919H   R   SEG=MAIN   6768# 6770
Z15. . . . . . . .  C ADDR   2927H   R   SEG=MAIN   6780# 6782
Z1S. . . . . . . .  C ADDR   293BH   R   SEG=MAIN   6795# 6797
ZAPADC . . . . . .  C ADDR   27F8H   R   SEG=MAIN   6553#
ZCMP . . . . . . .  C ADDR   2E4FH   R   SEG=MAIN   7472#
ZDIV . . . . . . .  C ADDR   2E1CH   R   SEG=MAIN   887 1170 4406 6371 7435#
ZER1 . . . . . . .  C ADDR   00B3H   A      8707 8711# 8766 8809
ZER2 . . . . . . .  C ADDR   00D4H   A      8733 8737#
ZMUL . . . . . . .  C ADDR   2E12H   R   SEG=MAIN   7430#
ZNMAT. . . . . . .  B ADDR   0020H.2 A      345# 1764 2050 4427 5417 5602 7443 7446 7449
ZNPLUS . . . . . .  C ADDR   02ECH   R   SEG=MAIN   760 809#
ZZ . . . . . . . .  C ADDR   2929H   R   SEG=MAIN   6781# 6781
Z_01S. . . . . . .  C ADDR   2944H   R   SEG=MAIN   2551 3359 4625 6537 6549 6802# 7305
Z_05S. . . . . . .  C ADDR   2951H   R   SEG=MAIN   2292 2293 3122 4546 4554 4562 6811#
Z_100. . . . . . .  C ADDR   2917H   R   SEG=MAIN   6767#
Z_15 . . . . . . .  C ADDR   2925H   R   SEG=MAIN   715 6779#
Z_1MS. . . . . . .  C ADDR   292EH   R   SEG=MAIN   800 6544 6786#
Z_1S . . . . . . .  C ADDR   2937H   R   SEG=MAIN   705 713 1462 2698 4067 4346 4468 4520 4833 4919 5019 5205 5206
                                           6793#
Z_5. . . . . . . .  C ADDR   2920H   R   SEG=MAIN   6589 6599 6774#
Z_9. . . . . . . .  C ADDR   2EABH   R   SEG=MAIN   5759 7557#


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
