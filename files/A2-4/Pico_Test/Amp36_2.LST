A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     1


MACRO ASSEMBLER A51 V6.14a
OBJECT MODULE PLACED IN Amp36_2.OBJ
ASSEMBLER INVOKED BY: D:\PROGRAM FILES\CYGNAL\IDEFILES\C51\BIN\A51.EXE Amp36_2.asm XR GEN DB EP NOMOD51

LOC  OBJ            LINE     SOURCE

                       1     
                       2     
                       3     ;;Добавлено К0,К1 в RS (откл/вкл. кор-ки 0) октябрь 2009
                       4     ;;выдача в RS измерений в формате плав. точки 
                       5     ;;с 7F 0A в начале и 0A в кач-ве разделителя 25.11.09
                       6     ;;выдача в RS cостояния прибора с 7F 0A в начале и 0A в конце 25.11.09
                       7     ;;выдача в RS памяти с 7F 0A в начале 
                       8     ;;и 0A в кач-ве разделителя 25.11.09
                       9     ;;команды RS  со 2-м байтом в ASCII (непроверенно) 25.11.09
                      10     
                      11     ;$include (c8051f020.inc) ; Include register definition file.
                +1    12     
                +1    13     
                +1    14     
                +1    15     
                +1    16     
                +1    17     
                +1    18     
                +1    19     
                +1    20     
                +1    21     
                +1    22     
                +1    23     
                +1    24     
                +1    25     
  0080          +1    26     sfr P0       =  0x80;   /* PORT 0                                                  */   
  0081          +1    27     sfr SP       =  0x81;   /* STACK POINTER                                           */
  0082          +1    28     sfr DPL      =  0x82;   /* DATA POINTER - LOW BYTE                                 */
  0083          +1    29     sfr DPH      =  0x83;   /* DATA POINTER - HIGH BYTE                                */
  0084          +1    30     sfr P4       =  0x84;   /* PORT 4                                                          
                                                                                                    */
  0085          +1    31     sfr P5       =  0x85;   /* PORT 5                                                  */
  0086          +1    32     sfr P6       =  0x86;   /* PORT 6                                                          
                                                                                                    */                  
                                                                                                               
  0087          +1    33     sfr PCON     =  0x87;   /* POWER CONTROL                                           */
  0088          +1    34     sfr TCON     =  0x88;   /* TIMER CONTROL                                           */
  0089          +1    35     sfr TMOD     =  0x89;   /* TIMER MODE                                              */
  008A          +1    36     sfr TL0      =  0x8A;   /* TIMER 0 - LOW BYTE                                      */
  008B          +1    37     sfr TL1      =  0x8B;   /* TIMER 1 - LOW BYTE                                      */
  008C          +1    38     sfr TH0      =  0x8C;   /* TIMER 0 - HIGH BYTE                                     */   
  008D          +1    39     sfr TH1      =  0x8D;   /* TIMER 1 - HIGH BYTE                                     */
  008E          +1    40     sfr CKCON    =  0x8E;   /* CLOCK CONTROL                                           */
  008F          +1    41     sfr PSCTL    =  0x8F;   /* PROGRAM STORE R/W CONTROL                               */
  0090          +1    42     sfr P1       =  0x90;   /* PORT 1                                                  */
  0091          +1    43     sfr TMR3CN   =  0x91;   /* TIMER 3 CONTROL                                         */
  0092          +1    44     sfr TMR3RLL  =  0x92;   /* TIMER 3 RELOAD REGISTER - LOW BYTE                      */
  0093          +1    45     sfr TMR3RLH  =  0x93;   /* TIMER 3 RELOAD REGISTER - HIGH BYTE                     */
  0094          +1    46     sfr TMR3L    =  0x94;   /* TIMER 3 - LOW BYTE                                      */
  0095          +1    47     sfr TMR3H    =  0x95;   /* TIMER 3 - HIGH BYTE                                     */
  0096          +1    48     sfr P7           =  0x96;   /* PORT 7                                                  */
  0098          +1    49     sfr SCON0    =  0x98;   /* SERIAL PORT 0 CONTROL                                   */
  0099          +1    50     sfr SBUF0    =  0x99;   /* SERIAL PORT 0 BUFFER                                    */
  009A          +1    51     sfr SPI0CFG  =  0x9A;   /* SERIAL PERIPHERAL INTERFACE 0 CONFIGURATION             */
  009B          +1    52     sfr SPI0DAT  =  0x9B;   /* SERIAL PERIPHERAL INTERFACE 0 DATA                      */
  009C          +1    53     sfr ADC1     =  0x9C;   /* ADC 1 DATA                                              */
  009D          +1    54     sfr SPI0CKR  =  0x9D;   /* SERIAL PERIPHERAL INTERFACE 0 CLOCK RATE CONTROL        */
  009E          +1    55     sfr CPT0CN   =  0x9E;   /* COMPARATOR 0 CONTROL                                    */
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     2

  009F          +1    56     sfr CPT1CN   =  0x9F;   /* COMPARATOR 1 CONTROL                                    */
  00A0          +1    57     sfr P2       =  0xA0;   /* PORT 2                                                  */
  00A1          +1    58     sfr EMI0TC   =  0xA1;   /* EMIF TIMING CONTROL                                     */
  00A3          +1    59     sfr EMI0CF   =  0xA3;   /* EXTERNAL MEMORY INTERFACE (EMIF) CONFIGURATION          */
  00A4          +1    60     sfr P0MDOUT  =  0xA4;   /* PORT 0 OUTPUT MODE CONFIGURATION                        */
  00A5          +1    61     sfr P1MDOUT  =  0xA5;   /* PORT 1 OUTPUT MODE CONFIGURATION                        */
  00A6          +1    62     sfr P2MDOUT  =  0xA6;   /* PORT 2 OUTPUT MODE CONFIGURATION                        */
  00A7          +1    63     sfr P3MDOUT  =  0xA7;   /* PORT 3 OUTPUT MODE CONFIGURATION                        */
  00A8          +1    64     sfr IE       =  0xA8;   /* INTERRUPT ENABLE                                        */
  00A9          +1    65     sfr SADDR0   =  0xA9;   /* SERIAL PORT 0 SLAVE ADDRESS                             */
  00AA          +1    66     sfr ADC1CN   =  0xAA;   /* ADC 1 CONTROL                                           */
  00AB          +1    67     sfr ADC1CF   =  0xAB;   /* ADC 1 ANALOG MUX CONFIGURATION                          */
  00AC          +1    68     sfr AMX1SL   =  0xAC;   /* ADC 1 ANALOG MUX CHANNEL SELECT                         */
  00AD          +1    69     sfr P3IF     =  0xAD;   /* PORT 3 EXTERNAL INTERRUPT FLAGS                         */
  00AE          +1    70     sfr SADEN1   =  0xAE;   /* SERIAL PORT 1 SLAVE ADDRESS MASK                        */
  00AF          +1    71     sfr EMI0CN   =  0xAF;   /* EXTERNAL MEMORY INTERFACE CONTROL                       */
  00B0          +1    72     sfr P3       =  0xB0;   /* PORT 3                                                  */
  00B1          +1    73     sfr OSCXCN   =  0xB1;   /* EXTERNAL OSCILLATOR CONTROL                             */
  00B2          +1    74     sfr OSCICN   =  0xB2;   /* INTERNAL OSCILLATOR CONTROL                             */
  00B5          +1    75     sfr P74OUT   =  0xB5;   /* PORTS 4 - 7 OUTPUT MODE                                 */
  00B6          +1    76     sfr FLSCL    =  0xB6;   /* FLASH MEMORY TIMING PRESCALER                           */
  00B7          +1    77     sfr FLACL    =  0xB7;   /* FLASH ACESS LIMIT                                       */
  00B8          +1    78     sfr IP       =  0xB8;   /* INTERRUPT PRIORITY                                      */
  00B9          +1    79     sfr SADEN0   =  0xB9;   /* SERIAL PORT 0 SLAVE ADDRESS MASK                        */
  00BA          +1    80     sfr AMX0CF   =  0xBA;   /* ADC 0 MUX CONFIGURATION                                 */
  00BB          +1    81     sfr AMX0SL   =  0xBB;   /* ADC 0 MUX CHANNEL SELECTION                             */
  00BC          +1    82     sfr ADC0CF   =  0xBC;   /* ADC 0 CONFIGURATION                                     */
  00BD          +1    83     sfr P1MDIN   =  0xBD;   /* PORT 1 INPUT MODE                                       */
  00BE          +1    84     sfr ADC0L    =  0xBE;   /* ADC 0 DATA - LOW BYTE                                   */
  00BF          +1    85     sfr ADC0H    =  0xBF;   /* ADC 0 DATA - HIGH BYTE                                  */
  00C0          +1    86     sfr SMB0CN   =  0xC0;   /* SMBUS 0 CONTROL                                         */
  00C1          +1    87     sfr SMB0STA  =  0xC1;   /* SMBUS 0 STATUS                                          */
  00C2          +1    88     sfr SMB0DAT  =  0xC2;   /* SMBUS 0 DATA                                            */
  00C3          +1    89     sfr SMB0ADR  =  0xC3;   /* SMBUS 0 SLAVE ADDRESS                                   */
  00C4          +1    90     sfr ADC0GTL  =  0xC4;   /* ADC 0 GREATER-THAN REGISTER - LOW BYTE                  */
  00C5          +1    91     sfr ADC0GTH  =  0xC5;   /* ADC 0 GREATER-THAN REGISTER - HIGH BYTE                 */
  00C6          +1    92     sfr ADC0LTL  =  0xC6;   /* ADC 0 LESS-THAN REGISTER - LOW BYTE                     */
  00C7          +1    93     sfr ADC0LTH  =  0xC7;   /* ADC 0 LESS-THAN REGISTER - HIGH BYTE                    */
  00C8          +1    94     sfr T2CON    =  0xC8;   /* TIMER 2 CONTROL                                         */
  00C9          +1    95     sfr T4CON    =  0xC9;   /* TIMER 4 CONTROL                                         */
  00CA          +1    96     sfr RCAP2L   =  0xCA;   /* TIMER 2 CAPTURE REGISTER - LOW BYTE                     */
  00CB          +1    97     sfr RCAP2H   =  0xCB;   /* TIMER 2 CAPTURE REGISTER - HIGH BYTE                    */
  00CC          +1    98     sfr TL2      =  0xCC;   /* TIMER 2 - LOW BYTE                                      */
  00CD          +1    99     sfr TH2      =  0xCD;   /* TIMER 2 - HIGH BYTE                                     */
  00CF          +1   100     sfr SMB0CR   =  0xCF;   /* SMBUS 0 CLOCK RATE                                      */
  00D0          +1   101     sfr PSW      =  0xD0;   /* PROGRAM STATUS WORD                                     */
  00D1          +1   102     sfr REF0CN   =  0xD1;   /* VOLTAGE REFERENCE 0 CONTROL                             */
  00D2          +1   103     sfr DAC0L    =  0xD2;   /* DAC 0 REGISTER - LOW BYTE                               */
  00D3          +1   104     sfr DAC0H    =  0xD3;   /* DAC 0 REGISTER - HIGH BYTE                              */
  00D4          +1   105     sfr DAC0CN   =  0xD4;   /* DAC 0 CONTROL                                           */
  00D5          +1   106     sfr DAC1L    =  0xD5;   /* DAC 1 REGISTER - LOW BYTE                               */
  00D6          +1   107     sfr DAC1H    =  0xD6;   /* DAC 1 REGISTER - HIGH BYTE                              */
  00D7          +1   108     sfr DAC1CN   =  0xD7;   /* DAC 1 CONTROL                                           */
  00D8          +1   109     sfr PCA0CN   =  0xD8;   /* PCA 0 COUNTER CONTROL                                   */
  00D9          +1   110     sfr PCA0MD   =  0xD9;   /* PCA 0 COUNTER MODE                                      */
  00DA          +1   111     sfr PCA0CPM0 =  0xDA;   /* CONTROL REGISTER FOR PCA 0 MODULE 0                     */
  00DB          +1   112     sfr PCA0CPM1 =  0xDB;   /* CONTROL REGISTER FOR PCA 0 MODULE 1                     */
  00DC          +1   113     sfr PCA0CPM2 =  0xDC;   /* CONTROL REGISTER FOR PCA 0 MODULE 2                     */
  00DD          +1   114     sfr PCA0CPM3 =  0xDD;   /* CONTROL REGISTER FOR PCA 0 MODULE 3                     */
  00DE          +1   115     sfr PCA0CPM4 =  0xDE;   /* CONTROL REGISTER FOR PCA 0 MODULE 4                     */
  00E0          +1   116     sfr ACC      =  0xE0;   /* ACCUMULATOR                                             */
  00E1          +1   117     sfr XBR0     =  0xE1;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 0               */
  00E2          +1   118     sfr XBR1     =  0xE2;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 1               */
  00E3          +1   119     sfr XBR2     =  0xE3;   /* DIGITAL CROSSBAR CONFIGURATION REGISTER 2               */
  00E4          +1   120     sfr RCAP4L   =  0xE4;   /* TIMER 4 CAPTURE REGISTER - LOW BYTE                     */
  00E5          +1   121     sfr RCAP4H   =  0xE5;   /* TIMER 4 CAPTURE REGISTER - HIGH BYTE                    */
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     3

  00E6          +1   122     sfr EIE1     =  0xE6;   /* EXTERNAL INTERRUPT ENABLE 1                             */
  00E7          +1   123     sfr EIE2     =  0xE7;   /* EXTERNAL INTERRUPT ENABLE 2                             */
  00E8          +1   124     sfr ADC0CN   =  0xE8;   /* ADC 0 CONTROL                                           */   
  00E9          +1   125     sfr PCA0L    =  0xE9;   /* PCA 0 TIMER - LOW BYTE                                  */   
  00EA          +1   126     sfr PCA0CPL0 =   0xEA;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - LOW BYTE  */
  00EB          +1   127     sfr PCA0CPL1 =   0xEB;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - LOW BYTE  */
  00EC          +1   128     sfr PCA0CPL2 =   0xEC;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - LOW BYTE  */
  00ED          +1   129     sfr PCA0CPL3 =   0xED;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - LOW BYTE  */
  00EE          +1   130     sfr PCA0CPL4 =   0xEE;   /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - LOW BYTE  */
  00EF          +1   131     sfr RSTSRC   =   0xEF;   /* RESET SOURCE                                            */
  00F0          +1   132     sfr B        =   0xF0;   /* B REGISTER                                              */
  00F1          +1   133     sfr SCON1    =  0xF1;   /* SERIAL PORT 1 CONTROL                                   */
  00F2          +1   134     sfr SBUF1    =  0xF2;   /* SERAIL PORT 1 DATA                                      */
  00F3          +1   135     sfr SADDR1   =  0xF3;   /* SERAIL PORT 1                                           */ 
  00F4          +1   136     sfr TL4      =  0xF4;   /* TIMER 4 DATA - LOW BYTE                                 */
  00F5          +1   137     sfr TH4      =  0xF5;   /* TIMER 4 DATA - HIGH BYTE                                */
  00F6          +1   138     sfr EIP1     =   0xF6;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 1                  */
  00F7          +1   139     sfr EIP2     =   0xF7;   /* EXTERNAL INTERRUPT PRIORITY REGISTER 2                  */
  00F8          +1   140     sfr SPI0CN   =   0xF8;   /* SERIAL PERIPHERAL INTERFACE 0 CONTROL                   */  
  00F9          +1   141     sfr PCA0H    =   0xF9;          /* PCA 0 TIMER - HIGH BYTE                                 
                             */
  00FA          +1   142     sfr PCA0CPH0 =   0xFA;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 0 - HIGH BYTE 
                             */
  00FB          +1   143     sfr PCA0CPH1 =   0xFB;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 1 - HIGH BYTE 
                             */
  00FC          +1   144     sfr PCA0CPH2 =   0xFC;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 2 - HIGH BYTE 
                             */
  00FD          +1   145     sfr PCA0CPH3 =   0xFD;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 3 - HIGH BYTE 
                             */
  00FE          +1   146     sfr PCA0CPH4 =   0xFE;          /* CAPTURE/COMPARE REGISTER FOR PCA 0 MODULE 4 - HIGH BYTE 
                             */   
  00FF          +1   147     sfr WDTCN    =   0xFF;          /* WATCHDOG TIMER CONTROL                                  
                             */
                +1   148             
                +1   149     
                +1   150     
                +1   151     
                +1   152     
  008F          +1   153     sbit TF1   = TCON ^ 7;              /* TIMER 1 OVERFLOW FLAG      */
  008E          +1   154     sbit TR1   = TCON ^ 6;              /* TIMER 1 ON/OFF CONTROL     */
  008D          +1   155     sbit TF0   = TCON ^ 5;              /* TIMER 0 OVERFLOW FLAG      */
  008C          +1   156     sbit TR0   = TCON ^ 4;              /* TIMER 0 ON/OFF CONTROL     */
  008B          +1   157     sbit IE1   = TCON ^ 3;              /* EXT. INTERRUPT 1 EDGE FLAG */
  008A          +1   158     sbit IT1   = TCON ^ 2;              /* EXT. INTERRUPT 1 TYPE      */
  0089          +1   159     sbit IE0   = TCON ^ 1;              /* EXT. INTERRUPT 0 EDGE FLAG */
  0088          +1   160     sbit IT0   = TCON ^ 0;              /* EXT. INTERRUPT 0 TYPE      */
                +1   161     
                +1   162     
  009F          +1   163     sbit SM00  = SCON0 ^ 7;             /* SERIAL MODE CONTROL BIT 0           */   
  009E          +1   164     sbit SM10  = SCON0 ^ 6;             /* SERIAL MODE CONTROL BIT 1           */
  009D          +1   165     sbit SM20  = SCON0 ^ 5;             /* MULTIPROCESSOR COMMUNICATION ENABLE */
  009C          +1   166     sbit REN0  = SCON0 ^ 4;             /* RECEIVE ENABLE                      */
  009B          +1   167     sbit TB80  = SCON0 ^ 3;             /* TRANSMIT BIT 8                      */
  009A          +1   168     sbit RB80  = SCON0 ^ 2;             /* RECEIVE BIT 8                       */
  0099          +1   169     sbit TI0   = SCON0 ^ 1;             /* TRANSMIT INTERRUPT FLAG             */
  0098          +1   170     sbit RI0   = SCON0 ^ 0;             /* RECEIVE INTERRUPT FLAG              */
                +1   171     
                +1   172     
  00AF          +1   173     sbit EA    = IE ^ 7;                /* GLOBAL INTERRUPT ENABLE      */  
  00AD          +1   174     sbit ET2   = IE ^ 5;                /* TIMER 2 INTERRUPT ENABLE     */
  00AC          +1   175     sbit ES0   = IE ^ 4;                /* UART0 INTERRUPT ENABLE       */
  00AB          +1   176     sbit ET1   = IE ^ 3;                /* TIMER 1 INTERRUPT ENABLE     */
  00AA          +1   177     sbit EX1   = IE ^ 2;                /* EXTERNAL INTERRUPT 1 ENABLE  */
  00A9          +1   178     sbit ET0   = IE ^ 1;                /* TIMER 0 INTERRUPT ENABLE     */
  00A8          +1   179     sbit EX0   = IE ^ 0;                /* EXTERNAL INTERRUPT 0 ENABLE  */
                +1   180     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     4

                +1   181     
  00BD          +1   182     sbit PT2   = IP ^ 5;                /* TIMER 2 PRIORITY                                 */ 
                                  
  00BC          +1   183     sbit PS    = IP ^ 4;                /* SERIAL PORT PRIORITY                             */
  00BB          +1   184     sbit PT1   = IP ^ 3;                /* TIMER 1 PRIORITY                                 */
  00BA          +1   185     sbit PX1   = IP ^ 2;                /* EXTERNAL INTERRUPT 1 PRIORITY    */
  00B9          +1   186     sbit PT0   = IP ^ 1;                /* TIMER 0 PRIORITY                                 */
  00B8          +1   187     sbit PX0   = IP ^ 0;                /* EXTERNAL INTERRUPT 0 PRIORITY    */              
                +1   188     
                +1   189     
  00C7          +1   190     sbit BUSY     =   SMB0CN ^ 7;       /* SMBUS 0 BUSY                    */
  00C6          +1   191     sbit ENSMB    =   SMB0CN ^ 6;       /* SMBUS 0 ENABLE                  */
  00C5          +1   192     sbit STA      =   SMB0CN ^ 5;       /* SMBUS 0 START FLAG              */
  00C4          +1   193     sbit STO      =   SMB0CN ^ 4;       /* SMBUS 0 STOP FLAG               */
  00C3          +1   194     sbit SI       =   SMB0CN ^ 3;       /* SMBUS 0 INTERRUPT PENDING FLAG  */
  00C2          +1   195     sbit AA       =   SMB0CN ^ 2;       /* SMBUS 0 ASSERT/ACKNOWLEDGE FLAG */
  00C1          +1   196     sbit SMBFTE   =   SMB0CN ^ 1;       /* SMBUS 0 FREE TIMER ENABLE       */
  00C0          +1   197     sbit SMBTOE   =   SMB0CN ^ 0;       /* SMBUS 0 TIMEOUT ENABLE          */
                +1   198     
                +1   199     
  00CF          +1   200     sbit TF2   = T2CON ^ 7;             /* TIMER 2 OVERFLOW FLAG        */
  00CE          +1   201     sbit EXF2  = T2CON ^ 6;             /* EXTERNAL FLAG                */
  00CD          +1   202     sbit RCLK0 = T2CON ^ 5;             /* UART0 RX CLOCK SOURCE        */
  00CC          +1   203     sbit TCLK0 = T2CON ^ 4;             /* UART0 TX CLOCK SOURCE        */
  00CB          +1   204     sbit EXEN2 = T2CON ^ 3;             /* TIMER 2 EXTERNAL ENABLE FLAG */  
  00CA          +1   205     sbit TR2   = T2CON ^ 2;             /* TIMER 2 ON/OFF CONTROL       */
  00C9          +1   206     sbit CT2   = T2CON ^ 1;             /* TIMER OR COUNTER SELECT      */
  00C8          +1   207     sbit CPRL2 = T2CON ^ 0;             /* CAPTURE OR RELOAD SELECT     */
                +1   208     
                +1   209     
  00D7          +1   210     sbit CY    = PSW ^ 7;               /* CARRY FLAG              */       
  00D6          +1   211     sbit AC    = PSW ^ 6;               /* AUXILIARY CARRY FLAG    */
  00D5          +1   212     sbit F0    = PSW ^ 5;               /* USER FLAG 0             */
  00D4          +1   213     sbit RS1   = PSW ^ 4;               /* REGISTER BANK SELECT 1  */
  00D3          +1   214     sbit RS0   = PSW ^ 3;               /* REGISTER BANK SELECT 0  */
  00D2          +1   215     sbit OV    = PSW ^ 2;               /* OVERFLOW FLAG           */
  00D1          +1   216     sbit F1    = PSW ^ 1;               /* USER FLAG 1             */
  00D0          +1   217     sbit P     = PSW ^ 0;               /* ACCUMULATOR PARITY FLAG */
                +1   218     
                +1   219     
  00DF          +1   220     sbit CF    =   PCA0CN ^ 7;          /* PCA 0 COUNTER OVERFLOW FLAG   */
  00DE          +1   221     sbit CR    =   PCA0CN ^ 6;          /* PCA 0 COUNTER RUN CONTROL BIT */
  00DC          +1   222     sbit CCF4  =   PCA0CN ^ 4;          /* PCA 0 MODULE 4 INTERRUPT FLAG */
  00DB          +1   223     sbit CCF3  =   PCA0CN ^ 3;          /* PCA 0 MODULE 3 INTERRUPT FLAG */
  00DA          +1   224     sbit CCF2  =   PCA0CN ^ 2;          /* PCA 0 MODULE 2 INTERRUPT FLAG */
  00D9          +1   225     sbit CCF1  =   PCA0CN ^ 1;          /* PCA 0 MODULE 1 INTERRUPT FLAG */
  00D8          +1   226     sbit CCF0  =   PCA0CN ^ 0;          /* PCA 0 MODULE 0 INTERRUPT FLAG */
                +1   227     
                +1   228     
  00EF          +1   229     sbit AD0EN     =   ADC0CN ^ 7;      /* ADC 0 ENABLE                              */
  00EE          +1   230     sbit AD0TM     =   ADC0CN ^ 6;      /* ADC 0 TRACK MODE                          */
  00ED          +1   231     sbit AD0INT    =   ADC0CN ^ 5;      /* ADC 0 CONVERISION COMPLETE INTERRUPT FLAG */
  00EC          +1   232     sbit AD0BUSY   =   ADC0CN ^ 4;      /* ADC 0 BUSY FLAG                           */
  00EB          +1   233     sbit AD0CM1    =   ADC0CN ^ 3;      /* ADC 0 START OF CONVERSION MODE BIT 1      */
  00EA          +1   234     sbit AD0CM0    =   ADC0CN ^ 2;      /* ADC 0 START OF CONVERSION MODE BIT 0      */
  00E9          +1   235     sbit AD0WINT   =   ADC0CN ^ 1;      /* ADC 0 WINDOW COMPARE INTERRUPT FLAG       */
  00E8          +1   236     sbit AD0LJST   =   ADC0CN ^ 0;      /* ADC 0 RIGHT JUSTIFY DATA BIT              */
                +1   237     
                +1   238     
  00FF          +1   239     sbit SPIF     =   SPI0CN ^ 7;       /* SPI 0 INTERRUPT FLAG                     */
  00FE          +1   240     sbit WCOL     =   SPI0CN ^ 6;       /* SPI 0 WRITE COLLISION FLAG       */
  00FD          +1   241     sbit MODF     =   SPI0CN ^ 5;       /* SPI 0 MODE FAULT FLAG            */
  00FC          +1   242     sbit RXOVRN   =   SPI0CN ^ 4;       /* SPI 0 RX OVERRUN FLAG            */
  00FB          +1   243     sbit TXBSY    =   SPI0CN ^ 3;       /* SPI 0 TX BUSY FLAG                       */
  00FA          +1   244     sbit SLVSEL   =   SPI0CN ^ 2;       /* SPI 0 SLAVE SELECT                       */
  00F9          +1   245     sbit MSTEN    =   SPI0CN ^ 1;       /* SPI 0 MASTER ENABLE                      */
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     5

  00F8          +1   246     sbit SPIEN    =   SPI0CN ^ 0;       /* SPI 0 SPI ENABLE                         */         
                                          
                     247     
                     248     ;?from .work
                     249     
                     250     ;+        CSEG AT 0
                     251              
                     252     NAME    MAIN
                     253                       ; EXTRN CODE(end1)
                     254                       ; EXTRN CODE(numb)
                     255                       ; EXTRN CODE(SOROS)
                     256                       ; EXTRN CODE(Abegin)
                     257     
                     258                     ;PUBLIC gener,bitmas,bitrs,bitznak 
                     259                     ;PUBLIC meff
                     260                     ;PUBLIC rez_A, rez_A0;  !!!!!!!!!!!!!
0000                 261             org 0h;    cseg AT 0
0000 020000   F      262                     jmp     begin   ;Main        ; Locate a jump to the start of code at 
0003                 263             org 3
0003 32              264                     reti   
000B                 265             org 0bh
000B 32              266                     reti
0013                 267             org 13h
0013 32              268                     reti
001B                 269             org 1bh
                     270     ;? timer1
001B 32              271                     reti
0023                 272             org 23h
0023 020000   F      273                     jmp     rs_byte ;!reti
002B                 274             org 2bh
002B 020000   F      275                     jmp     inter2  ;Timer2, IE.5,IP.5(ET2,PT2)
0033                 276             org 33h
0033 32              277                     reti
003B                 278             org 3bh
003B 32              279                     reti
0043                 280             org 43h
0043 32              281                     reti
004B                 282             org 4bh
004B 32              283                     reti
0053                 284             org 53h
0053 32              285                     reti
005B                 286             org 5bh
005B 32              287                     reti 
0063                 288             org 63h
0063 32              289                     reti
006B                 290             org 6bh
006B 32              291                     reti
0073                 292             org 73h
0073 32              293                     reti
0093                 294             org     93h
0093 020000   F      295                     jmp             keyb1           ;IE6
009B                 296             org     9bh
009B 020000   F      297                     jmp             keyb2      ;IE7
                     298     
  00CA               299     TMR2RLL  DATA 0cah;    // TIMER 2 RELOAD LOW                                       */
  00CB               300     TMR2RLH  DATA 0cbh;    // TIMER 2 RELOAD HIGH 
                     301      
                     302     Main         SEGMENT  CODE
                     303     
----                 304                     DSEG
                     305       
  0040               306     bufind  DATA    40h;буффер индикации 12byte
  004F               307     abin            DATA    4fh     ;4byte long~adec's digits
  0053               308     adec            DATA    53h     ;53h..5dh 10byte
  006E               309     chmas           DATA    6eh     ;счетчик л-тов незаполн массива
  006F               310     mabin           DATA    6fh
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     6

  0077               311     reacp           DATA    77h     ;результат чтения асп 4byte int (hex)
  003D               312     chkl            DATA    3dh     ;счетчик задержки клавиатуры 2bait                         
  003F               313     chmasN  DATA    3fh     ;n=2,n=10 суммирование n значений       =20(27.12.06)
  003C               314     savba           DATA    3ch     ;сохр байта индикации при миганиии      
  003B               315     movrig      DATA        3bh     ;крайне правое положение
  003A               316     movleft     DATA        3ah     ;крайне левое положение                  
  0039               317     nuerr           DATA    39h     ;номер ошибки (для интерфейса)  
  0038               318     nblok           DATA    38h     ;номер введенного блока
  0037               319     nelem           DATA    37h     ;номер лемента в блоке 0..200
  0036               320     saus            DATA    36h     ;сохр упр слово
  0034               321     sadiap  DATA    34H     ;сохр диапазон на кот проходила запись блока1
  0033               322     chind2  DATA    33h     ;счетчик индикации
  0032               323     sadiap2 DATA    32h     ;сохр диапазон на кот проходила запись блока2
  0031               324     sadiap3 DATA    31h     ;сохр диапазон на кот проходила запись блока3
  0030               325     sadiap4 DATA    30h     ;сохр диапазон на кот проходила запись блока4
                     326     ;DATA           2fh
                     327     ;;;;;
  0020               328     cellbit         DATA    20h
  0000               329     bitznak         BIT     cellbit.0       ;20.0           
  0001               330     bitmas          BIT     cellbit.1       ;20.1 бит заполнения массива            
  0002               331     znmat                   BIT     cellbit.2       ;20.2
  0003               332     bitrs                   BIT     cellbit.3       ;20.3
  0004               333     bitizm          BIT     cellbit.4       ;20.4 вкл реж измерения
  0005               334     bitavp          BIT     cellbit.5       ;20.5  бит режима avp
  0006               335     bitvi11         BIT     cellbit.6       ;20.6   бит нажатия ввод режима вычислить R!!!
  0007               336     bitzus          BIT     cellbit.7       ;20.7;флаг задержки     после установки us      
                     337     
  0021               338     cellbit1                DATA    21h
                     339     ;?bitbuf                BIT     cellbit1.0      ;21.0   
  0008               340     speed_rs                BIT     cellbit1.0      ;?21.0
                     341     
  0009               342     bitprd          BIT     cellbit1.1      ;21.1  выдача вкл       
  000A               343     bitbon          BIT     cellbit1.2      ;21.2  буфер вкл
  000B               344     bitmem          BIT     cellbit1.3      ;21.3 нажата кн память
                     345     ;bmem11         BIT     cellbit1.4      ;21.4    бит ПАМ11
  000D               346     bifl_kt         BIT     cellbit1.5      ;21.5  бит для выч Км теста измерения  
                     347     ;bmem13         BIT     cellbit1.6      ;21.6            
  000F               348     bitnul          BIT     cellbit1.7      ;21.7 бит кнопки НУЛЬ
                     349     
  0022               350     cellbit2                DATA    22h
  0010               351     bitt2                   BIT     cellbit2.0      ;22.0 уст признак Tизм2 нажата кнопка Т 
  0011               352     bitmenu         BIT     cellbit2.1      ;22.1  бит режима меню(нажата кн меню)  
  0012               353     bitklb          BIT     cellbit2.2      ;22.2  признак калибровки
  0013               354     bitv19          BIT     cellbit2.3      ;22.3   бит установки скор итерфейса 19.6
  0014               355     bitvich         BIT     cellbit2.4      ;22.4  1-е нажатие кн ВЫЧ R (режим ВЫЧ R)
  0015               356     biteizm         BIT     cellbit2.5      ;22.5   признак теста измерения 
  0016               357     bitpar          BIT     cellbit2.6      ;22.6   бит проведенного 1раз пароля 
  0017               358     bitoll          BIT     cellbit2.7      ;22.7 бит перегрузки
                     359     ;в реж измерения прибор измеряет (кнопка ИЗМ не нажата )
                     360     ;при нажатии кнопок (T,МЕНЮ ,ПАМЯТЬ ,ВЫЧ R)прибор выходит из реж измерения
                     361     ;и выдает т.н. буфер индикации  
  0023               362     cellbit3                DATA    23h
  0018               363     knizm                   BIT     cellbit3.0      ;22.0 уст признак нажата кнопка ИЗМ     
  0019               364     bitmig          BIT     cellbit3.1      ;22.1 бит мигания при наборе конст      
  001A               365     bitakt          BIT     cellbit3.2      ;22.2  бит такта
  001B               366     bitznB          BIT     cellbit3.3      ;22.3 БИТ ЗНАКА ПРИ ВВОДЕ константы В
  001C               367     bitprer         BIT     cellbit3.4      ;22.4    
                     368     ;bit                    BIT             cellbit3.5      ;22.5    
                     369     ;bit                    BIT             cellbit3.6      ;22.6            
                     370     ;bit                    BIT             cellbit3.7      ;22.7
                     371     
  000C               372     is_2            BIT     cellbit1.4      ;бит 'to RS direct out'
  000E               373     is_mem  BIT     cellbit1.6      ;21.6            
  001F               374     is_izm  BIT     cellbit3.7
  001D               375     is_cmd  BIT     cellbit3.5
  001E               376     is_rs           BIT     cellbit3.6      ;out rez_A3
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     7

  00DB               377     buf_in  DATA    0DBh    ;4
  0024               378     cnt_out DATA    24h
  0025               379     cnt_in  DATA    25h
  0026               380     p_out           DATA    26h     ;??
  0027               381     p_in            DATA    27h
  004E               382     cmd_rez DATA    4Eh
  0098               383     RI              BIT     SCON0.0
  0099               384     TI              BIT     SCON0.1
                     385     
                     386     
  005E               387     rez_Ame data 5eh;float   (РЕЗ1-AN)*K
                     388     ;hex
  0062               389     rez_A           data 62h        ;РЕЗ сумма 100 (10)отсчетов измерения    
  0066               390     rez_A1  data 66h        ;РЕЗ1  среднее по массиву из 2,10 ти лементов int (hex)
  006A               391     rez_A0  data 6ah        ;рез изм по нажатию кн НУЛЬ
  007B               392     rez_A2  data 7bh        ; A2
  0098               393     chinkor data  98h       ;80h,счетчик интервала коррекции  2byte
  0081               394     chavt           data  81h       ;счетчик автокалибровки  2byte
  0083               395     chdel           data  83h       ; счетчик задержки
                     396     ;float
  0084               397     kor0_AN data  84h       ;4byte  AN      результат коррекции 0
  0088               398     rezAp           data  88h       ;4byte  A+
  008C               399     rezAm           data  8ch       ;4byte  A-
  0090               400     koefKp  data  90h       ;4byte  K+
  0094               401     koefKm  data  94h       ;4byte  K-
                     402     ;hex 
  009A               403     parT            data  9ah       ;параметр времени измерения
  009B               404     chbefore        data  9bh       ;счетчик предварительного суммирования
  009C               405     rez_A3          data  9ch       ;A3
                     406     ;FLOAT
  00A0               407     koefKD  data  0a0h      ;KD кофф диапазона
  00A4               408     rez_Ak  data  0a4h      ;Ak
  00A8               409     parol           data  0a8h      ;храним в памяти пароль
  00AC               410     chind           data  0ach      ;счетчик индикации
                     411     ;chbuf  data  0adh       ;счетчик периода загрузки в буфер и интерфейс
  00AE               412     diap            data  0aeh      ;номер диапазона
  00AF               413     parN            data  0afh      ;N  пар разрядности индикатора
  00B0               414     level           data  0b0h      ;уровень в меню, выч    ,Tизм
  00B1               415     vichR           data  0b1h      ;параметр =11,12,13,21          state of menu VychR
  00B2               416     marker  data  0b2h      ;номер мигающего знакоместа
  00B3               417     summa           data  0b3h      ;ячейка для суммирования        rez_A
  00B7               418     load            data  0b7h      ;яч для загрузки текстов на индикатор
  00B8               419     work            data  0b8h      ;рабочая ячейка
  00BC               420     konstA  data  0bch      ;введенная с крана константа A
                     421     ;konstB data  0c0h       ;введенная с крана константа B
  00C0               422     saven_bl2       data    0c0h    ;копия адреса последней записанной ячейки блока2
  00C2               423     saven_bl3       data  0c2h      ;копия адреса последней записанной ячейки блока3 
                     424                ;c4 1bait
                     425     ;igor---
  00C4               426     byte_kor        data    0c4h    ;признак вкл/откл кор-ки
                     427     ;----
  00C5               428     Rez_del data  0c5h      ;сумма n-значений /n
  00C9               429     rez_R           data    0c9h    ;рез вычисления R 4baita
  00CD               430     interva data  0cdh      ;значение интервала (запись)2baita
  00CF               431     chbuf           data  0cfh      ;счетчик периода загрузки в буфер и интерфейс
  00D3               432     saven_bl        data  0d3h      ;номер ячейки в блоке 2 baita
  00D5               433     volume  data    0d5h    ;объем блока 2 baita
  00D6               434     chblok  data    0d6h    ;volume;кол измерений блока
  00D7               435     copy_hl data  0d7h      ;адрес ячейки блока для просмотра 
  00D9               436     saven_bl4       data  0d9h      ;копия адреса последней записанной ячейки блока4
                     437     ;data           0dbh e0h-граница стека
                     438     
                     439     ;внешнее ОЗУ 64K
                     440     ;в обл внешнего озу 0..ffh читается страница рпзу и при записи в любую
                     441     ;ячейку  стирается целая страница 0..ffh рпзу
                     442     ;               XSEG AT 100h
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     8

                     443             PUBLIC    MASS0
  0100               444     MASS0  xdata 0100h;     скользящий массив измерения
  0104               445     MASS1  xdata 0104h;
  0108               446     MASS2  xdata 0108h;
  010C               447     MASS3  xdata 010ch;
  0110               448     MASS4  xdata 0110h;
  0114               449     MASS5  xdata 0114h;
  0118               450     MASS6  xdata 0118h;
  011C               451     MASS7  xdata 011ch;
  0120               452     MASS8  xdata 0120h;
  0124               453     MASS9  xdata 0124h;
  0128               454     MASS10  xdata 0128h;
  012C               455     MASS11  xdata 012ch;
  0130               456     MASS12  xdata 0130h;
  0134               457     MASS13  xdata 0134h;
  0138               458     MASS14  xdata 0138h;
  013C               459     MASS15  xdata 013ch;
  0140               460     MASS16  xdata 0140h;
  0144               461     MASS17  xdata 0144h;
  0148               462     MASS18  xdata 0148h;
  014C               463     MASS19  xdata 014ch;
  0E00               464     chbuf1  xdata 0e00h;счетчик буфера 1
                     465     ;xdata  0e04
  0000               466                     rr0     EQU     00
  0001               467                     rr1     equ     01
  0006               468                     rr6   equ       06
  0002               469                     rr2     equ     02
  0003               470                     rr3     equ     03
  0007               471                     rr7   equ       07
  0008               472                     r8      equ     08
  0009               473                     r9      equ     09
  000A               474                     r10     equ     10
  000B               475                     r11   equ       11
                     476     
----                 477                  rseg     Main         ; Switch to this code segment.
                     478     
                     479                  using    0            ; Specify register bank for the following
                     480     
0100                 481             org 100h
                     482     ;$EJECT
                     483     
0100 7581E0          484     begin:  mov             sp, #0e0h               ;?8
                     485     
0103 75E900          486                     mov             PCA0L,#00;=0x00;
0106 75D900          487                     mov             PCA0MD,#00;= 0x00;
0109 75A41F          488                     mov             P0MDOUT,#1fh;=0x1f;
010C 75A5CC          489                     mov             P1MDOUT,#0cch;86h;8fh;=0x8f;
010F 75A600          490                     mov             P2MDOUT,#00;=0x00;
                     491             
0112 75A73F          492                     mov             P3MDOUT,#3fh;
0115 75B5FF          493                     mov             P74OUT ,#0ffh;=0xff;
0118 75D103          494                     mov             REF0CN,#03h;=0x03;
                     495             
011B 75E114          496                     mov             XBR0,#14h;= 0x14;
011E 75E200          497                     mov             XBR1,#00; =0x00;
0121 75E300          498                     mov             XBR2,#00;=0x00
0124 75B0C0          499                     mov             P3,#0c0h
0127 75FFDE          500                     mov             WDTCN,#0deh;=0xde;запрет работы WDT
012A 75FFAD          501                     mov             WDTCN,#0adh;=0xad;                                   
012D 758922          502                     mov             TMOD,#22h;=0x22;        регистр режимов
0130 758E30          503                     mov             CKCON,#30h;=0x30; сист частота/12     
0133 758CF9          504                     mov             TH0,#0f9h;=0xf9;  Установка таймера
0136 758AF9          505                     mov             TL0,#0f9h;=0xf9; 
0139 75E680          506                     mov             EIE1,#80h;=0x80;
                     507     
013C 75D480          508                     mov             DAC0CN,#80h;=0x80;
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE     9

013F 75D780          509                     mov             DAC1CN,#80h;=0x80;
0142 75B167          510                     mov             OSCXCN,#67h;=0x67;
                     511     
                     512     
0145                 513     gener:  ;+mov           a, oscxcn
                     514             ;+cjne  a,#11100111b,gener      ;?E7
0145 75B288          515                     mov             OSCICN,#88h;=0x84;
0148 75CA00          516                     mov             TMR2RLL,#0;=0;
014B 75CBD1          517                     mov             TMR2RLH,#0d1h;=0xd1;
                     518       
014E D28E            519                     setb    TCON.6                  ;регистр управления
0150 D28C            520                     setb            tcon.4
0152 75EF00          521                     mov             RSTSRC,#0;=00   ;//источники сброса 
0155 75E340          522                     mov             XBR2,#40h
0158 75E10E          523                     mov             XBR0,#0eh;06h;16h
015B 75F803          524                     mov             SPI0CN,#03
015E 759D31          525                     mov             spi0ckr,#31H;;;;;;;;#04
                     526     ;установка скорости
0161 759850          527                     mov             SCON0,#50h;01010000;скорость обмена определяется таймером1
0164 758780          528                     mov             PCON,#10000000b;удвоенная скорость передачи SMOD0=1
0167 758E10          529                     mov             CKCON,#00010000b;TIM=1                  ? was 30h
016A 758920          530                     mov             TMOD,#00100000b;реж2 внутр ист синхр ? was 22h
016D 758840          531                     mov             TCON,#01000000b;счетчик запущен ?.4,.6 was set
0170 75D900          532                     mov             PCA0MD,#00              ;PCA 
0173 75DA00          533                     mov             PCA0CPM0,#00000000b;00000110b;01000010b;
0176 75EA00          534                     mov             PCA0CPL0,#00
0179 75FA9C          535                     mov             PCA0CPH0,#9ch;регулировка звука 088h;90h
017C 75D840          536                     mov             PCA0CN,#40h
017F 75C800          537                     mov             T2CON,#00
0182 758DF4          538                     mov     TH1,#244        ;220~19600
0185 D28E            539                     setb    TR1     ;start Timer1
                     540     
                     541     ;?      mov   SBUF0,#37h
                     542     
                     543     ;       mov     3,#33
                     544     ;       mov     r2,#30
                     545     ;       mov     r0,#0DAh
                     546     
                     547     ;debug: mov     A,r2
                     548     ;               mov     @r0,A
                     549     ;               inc     r2
                     550     ;               inc     r0
                     551     ;               djnz    3,debug ;jmp    debug   ;interrupt debug
                     552     
                     553     
                     554     ;       mov     SBUF,#7
                     555     ;       jnb     TI,$
                     556     ;       clr     TI
                     557     
                     558     ;               mov     IE,#90h ;RS, ?Tim1
                     559     
                     560     ;?              mov             r2,#50h                 ;57.6->19.2
                     561     ;               mov             r3,#2ch
                     562     ;               call    re4byte                 ;502ch 1 bait skor
                     563     ;               mov             a,r8
                     564     ;?              cjne            a,#00,yst19
0187 C213            565                     clr             bitv19                  ;57.6
0189 758DF4          566                     mov             TH1,#244
018C 758BFD          567                     mov             TL1,#0FDh
018F 8008            568                     jmp             yst1
0191 900000   F      569     yst19:  mov     dptr,#teS19_2
0194 D213            570                     setb    bitv19                  ;19,2
0196 758DDC          571                     mov     TH1,#220
0199                 572     yst1:
0199 D28E            573                     setb    TR1     ;?start Timer1
019B 75E730          574                     mov             EIE2,#30H;00110000
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    10

                     575             ;       mov             EIP2,#30H
                     576     
                     577     ;       mov     p_in,#buf_in    ; for receive
                     578     ;       mov     cnt_out,#0      ;??
                     579     ;       mov     cnt_in,#0
                     580     
019E 75A880          581                     mov     IE,#80h ;??80//Снятие блокировки всех прерываний+RS
                     582     ;ozu
01A1 E4              583                     clr     a
01A2 7800            584                     mov     r0,#00h 
01A4 F6              585     mecle:  mov     @r0,a                   ;обнулить озу 256 байт
01A5 08              586                     inc     r0
01A6 B87FFB          587                     cjne    r0,#7fh,mecle
01A9 7880            588                     mov     r0,#80h
01AB F6              589     meff:           mov     @r0,a 
01AC F2              590                     movx @r0,a
01AD 08              591                     inc     r0
01AE B8DFFA          592                     cjne    r0,#0dfh,meff
                     593     
                     594     
                     595     ;               mov     cnt_out,#33             ;+
                     596     ;               mov     p_out,#0DAh
                     597     
01B1 120000   F      598                     call    clmassix
                     599     ;обнулить внешнее озу 4кбайта
01B4 900000          600                     mov     dptr,#0
01B7 E4              601     extcle: clr     a
01B8 F0              602                     movx    @dptr,a
01B9 A3              603                     inc     dptr
01BA E583            604                     mov     a,dph
01BC B410F8          605                     cjne    a,#10h,extcle
                     606     
01BF 7898            607                     mov             r0,#chinkor
01C1 7600            608                     mov             @r0,#0;1;
01C3 08              609                     inc             r0
01C4 7619            610                     mov             @r0,#19h;64h;0c8h;90h;
                     611     
01C6 7881            612                     mov             r0,#chavt
01C8 7601            613                     mov             @r0,#1
01CA 08              614                     inc             r0
01CB 7690            615                     mov             @r0,#90h
                     616     
01CD 78B2            617                     mov             r0,#marker
01CF 76FF            618                     mov             @r0,#0ffh
                     619     ;--------------------------------------------
01D1 78C4            620                             mov             r0,#byte_kor    ;igor
01D3 7600            621                             mov             @r0,#0                  ;
                     622     ;---------------------------------------------
01D5                 623     after_2:        ;?here 28.10.07
01D5 74FF            624                     mov             a,#0ffh
01D7 F585            625                     mov             p5,a
01D9 799A            626                     mov             r1,#parT
01DB 7702            627                     mov             @r1,#2                  ;Tizm=1s
01DD 79AE            628                     mov             r1,#diap
01DF 7705            629                     mov             @r1,#5                  ;10-7a
01E1 753405          630                     mov             sadiap,#5
01E4 79AF            631                     mov             r1,#parN
01E6 7702            632                     mov             @r1,#2
01E8 7400            633                     mov             a,#00h
01EA F585            634                     mov             p5,a
01EC D204            635                     setb            bitizm
                     636     
01EE 799B            637                     mov             r1,#chbefore
01F0 7700            638                     mov             @r1,#0
                     639     
01F2 900000   F      640                     mov             dptr,#ch_1              ;1->r2..r5 float
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    11

01F5 120000   F      641                     call    ldc_long
01F8 7890            642                     mov             r0,#koefKp         ;1(float)->koefKp
01FA 120000   F      643                     call    saver2
01FD 7894            644                     mov             r0,#koefKm              ;1(float)->koefKm
01FF 120000   F      645                     call    saver2
0202 78A0            646                     mov             r0,#koefKD
0204 120000   F      647                     call    saver2
0207 78CF            648                     mov             r0,#chbuf
0209 120000   F      649                     call    saver2
020C 900158          650                     mov             dptr,#158h;1 блок(2е с конца измерение) 
020F 79D3            651                     mov             r1,#saven_bl
0211 E583            652                     mov             a,dph
0213 F7              653                     mov             @r1,a
0214 09              654                     inc             r1
0215 E582            655                     mov             a,dpl
0217 F7              656                     mov             @r1,a
                     657     
0218 900478          658                     mov                     dptr,#478h;2 блок(2е с конца измерение) 
021B 79C0            659                     mov             r1,#saven_bl2
021D E583            660                     mov             a,dph
021F F7              661                     mov             @r1,a
0220 09              662                     inc             r1
0221 E582            663                     mov             a,dpl
0223 F7              664                     mov             @r1,a
0224 900798          665                     mov                     dptr,#798h;3 блок(2е с конца измерение) 
0227 79C2            666                     mov             r1,#saven_bl3
0229 E583            667                     mov             a,dph
022B F7              668                     mov             @r1,a
022C 09              669                     inc             r1
022D E582            670                     mov             a,dpl
022F F7              671                     mov             @r1,a
0230 900AB8          672                     mov             dptr,#0ab8h;4 блок(2е с конца измерение)        
0233 79D9            673                     mov             r1,#saven_bl4
0235 E583            674                     mov             a,dph
0237 F7              675                     mov             @r1,a
0238 09              676                     inc             r1
0239 E582            677                     mov             a,dpl
023B F7              678                     mov             @r1,a
023C 753801          679                     mov             nblok,#1                        ;номер введенного блока
023F 753701          680                     mov             nelem,#1
0242 78CD            681                     mov             r0,#interva
0244 7600            682                     mov             @r0,#0
0246 08              683                     inc             r0
0247 7601            684                     mov             @r0,#1
0249 7840            685                     mov             r0,#bufind
024B                 686     age2:
024B 76FD            687                     mov             @r0,#0fdh         ;погасить индикатор
024D 08              688                     inc             r0
024E B84CFA          689                     cjne    r0,#bufind+12,age2              
0251 120000   F      690                     call    ind
0254 120000   F      691                     call    z_1s
                     692     
                     693                     ;зажечь все лементы индикации
0257 7840            694                     mov     r0,#bufind
0259 7669            695     ageon:  mov     @r0,#69h;0feh;?
025B 08              696                     inc     r0
025C B84CFA          697                     cjne    r0,#bufind+12,ageon             
025F 120000   F      698                     call    ind
0262 120000   F      699                     call    z_1s            ;1sec
                     700     
0265 120000   F      701                     call    z_15;z_1ms
0268 434B10          702                     orl     bufind+11,#10h;бит точки после 1 знакоместа
                     703     
026B 7C60            704                     mov     r4,#60h
026D 7D00            705                     mov     r5,#00         
026F 120000   F      706                     call    iniacp;инициализация acp
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    12

0272 120000   F      707                     call    loadUS          ;us 10-7 A
                     708     ;?after_2:              
                     709     ;?              setb            bitizm
                     710                             
0275 7527DB          711             mov     p_in,#buf_in    ; for receive
0278 752400          712             mov     cnt_out,#0      ;??
027B 752500          713             mov     cnt_in,#0
027E 75A890          714             mov     IE,#90h ;Снятие блокировки всех прерываний+RS
                     715     
0281                 716     rebyte:
                     717     
0281 301D03          718             jnb     is_cmd,me3              ;??
0284 120000   F      719             call    cmd_tree
0287                 720     me3:
                     721     
0287 C217            722                     clr             bitoll
0289 3095FD          723                     jnb             p1.5,$
028C 2095FD          724                     jb              p1.5,$
                     725                     ;mov            a,P6            ;p6.4=0
                     726                     ;anl            a,#0efh
                     727                     ;mov            P6,a
                     728                     ;nop
                     729                     ;nop
                     730                                     
                     731                     ;mov            a,P6                    ;p6.4=1 
                     732                     ;orl            a,#10h
                     733                     ;mov            P6,a                        
028F 7411            734                     mov             a,#11h
0291 120000   F      735                     call    write
                     736             ;чтение acp
0294 120000   F      737                     call    read    
0297 F578            738                     mov     reacp+1,A       ;старший байт 
0299 120000   F      739                     call    read    
029C F579            740                     mov     reacp+2,A       ;средний байт 
029E 120000   F      741                     call    read
02A1 F57A            742                     mov     reacp+3,A               ;мл байт
                     743     
02A3 7878            744                     mov             r0,#reacp+1
02A5 E6              745                     mov             a,@r0
02A6 20E743          746                     jb              acc.7,znplus;
02A9 D200            747                     setb    bitznak
02AB 4480            748                     orl             a,#80h  ;ост содерж яч 
02AD F6              749                     mov             @r0,a
                     750                                     
02AE 18              751     mmm:            dec             r0;,#reacp
02AF 76FF            752                     mov             @r0,#0ffh
02B1 8041            753                     jmp             goznak
                     754     
02B3 120000   F      755     mem10ms:        call            ind
02B6 80C9            756                     jmp             rebyte  ;10ms
                     757     
02B8                 758     labelA: ;разрешить ie6,ie7
                     759     ;               mov             a,chkl+1                ;low
                     760     ;               jnz             no0key
02B8 E53D            761                     mov             a,chkl
02BA 30E70B          762                     jnb             acc.7,no0key;jnz                        no0key
02BD E5AD            763                     mov             a,P3IF
02BF 543F            764                     anl             a,#3fh
02C1 F5AD            765                     mov             P3IF,a
02C3 75E730          766                     mov             EIE2,#30h ;EIE2.5,EIE2.4
02C6 800D            767                     jmp             yes0key
                     768                        
02C8                 769     no0key: ;mov            r1,#chkl 
                     770                     ;call   chdec
02C8 C3              771                     clr             c
02C9 E53E            772                     mov             a,chkl+1;chkl-1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    13

02CB 9401            773                     subb            a,#1
02CD F53E            774                     mov             chkl+1,a
02CF E53D            775                     mov             a,chkl
02D1 9400            776                     subb            a,#0
02D3 F53D            777                     mov             chkl,a
                     778     
02D5                 779     yes0key:
02D5 2004A9          780                     jb              bitizm,rebyte
                     781              ;буфер 2 выдать на индикацию
02D8 E533            782                     mov             a,chind2                        ;реже выдавать на индикацию
02DA 700B            783                     jnz             nochind
02DC 753364          784                     mov             chind2,#100
02DF 120000   F      785                     call            ind
02E2 120000   F      786     yes0key1:       call            z_1ms;z_01s
                     787                     ;call   z_01s
                     788                     ;call   z_01s
02E5 80D1            789                     jmp             labelA
                     790     
02E7 14              791     nochind:        dec             a
02E8 F533            792                     mov             chind2,a
02EA 80F6            793                     jmp             yes0key1;labelA
                     794             
02EC C200            795     znplus: clr     bitznak
02EE 547F            796                     anl             a,#7fh;fdh                      ;+
02F0 F6              797                     mov             @r0,a
02F1 18              798                     dec             r0      ;,#reacp
02F2 7600            799                     mov             @r0,#00h
                     800                             
02F4                 801     goznak:
02F4 787A            802                     mov             r0,#reacp+3
02F6 E6              803                     mov             a,@r0
02F7 7F05            804                     mov             r7,#5           ;6 сдвиг на 5 разрядов вправо
02F9 C3              805     sdvig3:         clr             c
02FA 13              806                     rrc             a
02FB DFFC            807                     djnz            r7,sdvig3       ;d7,d6,d5         мл байт
02FD FA              808                     mov             r2,a            ;сохр байт
02FE 18              809                     dec             r0              ;reacp+2
02FF E6              810                     mov             a,@r0
0300 C0E0            811                     push    acc
0302 C3              812                     clr             c
0303 7F03            813                     mov             r7,#3;2
0305 C3              814     sdvig2:         clr             c
0306 33              815                     rlc             a
0307 DFFC            816                     djnz            r7,sdvig2       ;d12..d11        средний байт
0309 4A              817                     orl             a,r2
030A F57A            818                     mov             reacp+3,a       ;сформ мл байт
030C D0E0            819                     pop     acc
030E 7F05            820                     mov             r7,#5;6
0310 C3              821     sdvig1:         clr             c
0311 13              822                     rrc             a
0312 DFFC            823                     djnz    r7,sdvig1               ;d15,d14          ср байт
0314 FA              824                     mov             r2,a    ;сохр
0315 E578            825                     mov             a,reacp+1
0317 C0E0            826                     push    acc
                     827                     ;       push    acc
0319 7F03            828                     mov             r7,#3;2
031B C3              829     sdvig0:         clr             c
031C 33              830                     rlc             a
031D DFFC            831                     djnz    r7,sdvig0               ;d21..d16
031F 4A              832                     orl             a,r2
0320 F579            833                     mov             reacp+2,a       ;сформ средний  байт
0322 D0E0            834                     pop             acc             ;reacp+1
0324 20E70B          835                     jb              acc.7,sdvm
0327 C3              836                     clr             c
0328 7F05            837                     mov             r7,#5;6
032A C3              838     sdvig4:         clr             c
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    14

032B 13              839                     rrc             a
032C DFFC            840                     djnz            r7,sdvig4       ;d23,d22
032E F578            841                     mov             reacp+1,a
0330 8008            842                     jmp             readyacp        ;ankor;klmas
                     843     
0332 7F05            844     sdvm:           mov             r7,#5;6
0334 D3              845     sdvig6: setb            c
0335 13              846                     rrc             a
0336 DFFC            847                     djnz            r7,sdvig6 ;       d23,d22
0338 F578            848                     mov             reacp+1,a
                     849     ; reacp..reacp+3-результат чтения асп(hex) 
033A 7898            850     readyacp:       mov             r0,#chinkor
033C E6              851                     mov             a,@r0
033D 30E702          852                     jnb             acc.7,gopart
0340 8044            853                     jmp             sumt2
                     854                     
0342                 855     gopart:
0342 789A            856                     mov             r0,#parT        ;параметр времени
0344 793F            857                     mov             r1,#chmasN      ;суммир-ние n значений =20
0346 B6013A          858                     cjne            @r0,#1,noparT1
                     859             ;РЕЗ+РЕЗ
0349 7877            860                     mov             r0,#reacp
034B 120000   F      861                     call            resar2  ;reacp->r2..r5
034E 78B6            862                     mov             r0,#summa+3     ;rez_A+3
0350 120000   F      863                     call            ladd
0353 78B3            864                     mov             r0,#summa;rez_A
0355 120000   F      865                     call            saver2
0358 793F            866                     mov             r1,#chmasN
035A 7714            867                     mov             @r1,#20;10
035C 789B            868                     mov             r0,#chbefore
035E B6631E          869                     cjne            @r0,#99,nobef99
                     870             ;РЕЗ/100
0361 900000   F      871                     MOV     DPTR,#ch100 
0364 120000   F      872     allsum: CALL  ldc_ltemp          ; ltemp <-- 100
0367 120000   F      873                     call    zdiv;divide
036A 7862            874                     mov     r0,#rez_A
036C 120000   F      875                     call    saver2          ;сумма 100 отсчетов /100
036F 78C5            876                     mov     r0,#Rez_del
0371 120000   F      877                     call    saver2  
                     878     
0374 78B3            879                     mov             r0,#summa
0376 120000   F      880                     call            clear4
                     881     
0379 799B            882                     mov             r1,#chbefore
037B 7700            883                     mov             @r1,#0
037D 8070            884                     jmp             klmas           ;загр в массив скользящее ср
037F 06              885     nobef99:        inc             @r0                     ;chbefore
0380 020000   F      886                     jmp             rebyte;labelA;метка A
                     887     ;сначала суммируем 100 знач (не выводим на индикатор не расп в скользящий массив )
                     888     ;а потом уже располагаем  в скользящий массив  из n
                     889     
                     890     
0383 B6021D          891     noparT1:        cjne    @r0,#2,noparT2
                     892             ;РЕЗ+РЕЗ
0386                 893     sumt2:
0386 7877            894                     mov     r0,#reacp
0388 120000   F      895                     call    resar2          ;reacp->r2..r5
038B 78B6            896                     mov     r0,#summa+3;rez_A+3
038D 120000   F      897                     call    ladd
0390 78B3            898                     mov     r0,#summa;rez_A
0392 120000   F      899                     call    saver2
0395 789B            900                     mov     r0,#chbefore
0397 793F            901                     mov     r1,#chmasN
0399 770A            902                     mov     @r1,#10
039B B613E1          903                     cjne    @r0,#19,nobef99;9,nobef99
                     904             ;РЕЗ/20
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    15

039E 900000   F      905                     MOV     DPTR,#ch20;ch10 
03A1 80C1            906                     jmp     allsum
                     907     
03A3 B6031D          908     noparT2:        cjne    @r0,#3,noparT3
03A6 7877            909                     mov     r0,#reacp
03A8 120000   F      910                     call    resar2          ;reacp->r2..r5
03AB 78B6            911                     mov     r0,#summa+3;rez_A+3
03AD 120000   F      912                     call    ladd
03B0 78B3            913                     mov     r0,#summa;rez_A
03B2 120000   F      914                     call    saver2
03B5 789B            915                     mov     r0,#chbefore
03B7 793F            916                     mov     r1,#chmasN
03B9 7702            917                     mov     @r1,#2;4                                        ;n=4
03BB B609C1          918                     cjne    @r0,#9,nobef99;9,nobef99
                     919             ;РЕЗ/10
03BE 900000   F      920                     MOV             DPTR,#ch10 
03C1 80A1            921                     jmp             allsum
                     922                             
03C3 B6041D          923     noparT3:        cjne    @r0,#4,noparT4
03C6                 924     aapar:          
03C6 7877            925                     mov             r0,#reacp
03C8 120000   F      926                     call            resar2          ;reacp->r2..r5
03CB 78B6            927                     mov             r0,#summa+3;rez_A+3
03CD 120000   F      928                     call            ladd
03D0 78B3            929                     mov             r0,#summa;rez_A
03D2 120000   F      930                     call            saver2
03D5 789B            931                     mov             r0,#chbefore
03D7 793F            932                     mov             r1,#chmasN
03D9 7702            933                     mov             @r1,#2;4
03DB B604A1          934                     cjne    @r0,#4,nobef99;9,nobef99
                     935             ;РЕЗ/10
03DE 900000   F      936                     MOV             DPTR,#ch5
03E1 8081            937                     jmp             allsum
                     938     
03E3 7702            939     noparT4:        mov             @r1,#2          ;chmasN n=2
03E5 7877            940                     mov             r0,#reacp
03E7 120000   F      941                     call            resar2          ;reacp->r2..r5
03EA 7862            942                     mov             r0,#rez_A
03EC 120000   F      943                     call            saver2
                     944     ;загрузить А в массив из 2/10 значений
                     945     
03EF                 946     klmas:           
03EF 793F            947                     mov     r1,#chmasN
03F1 B7021A          948                     cjne    @r1,#2,mas10
03F4 900100          949                     MOV     dptr,#MASS0
03F7 120000   F      950                     CALL    xCIKLWR           ; MASS0 --> MASS1
                     951     
03FA 7862            952                     mov     r0,#rez_A
03FC 120000   F      953                     call    resar2          ;->r2..r5
03FF 900100          954                     mov     dptr,#MASS0
0402 120000   F      955                   call      saveIr2                 ; R2-R5 --> MAS0
                     956                     
0405 900107          957                   MOV       dptr,#MASS1+3
0408 120000   F      958                   CALL      addx
040B 020000   F      959                     jmp     endsum
                     960     ;массив из 10-ти измерений      ?
040E B70A7D          961     mas10:  cjne    @r1,#10,mas20
0411 900120          962                     mov     dptr,#MASS8
0414 120000   F      963                   CALL      xCIKLWR         ;MASS8->MASS9
0417 90011C          964                     mov     dptr,#MASS7
041A 120000   F      965                   CALL      xCIKLWR         ;MASS7->MASS8
041D 900118          966             MOV     dptr,#MASS6
0420 120000   F      967                   CALL      xCIKLWR            ; MASS6 --> MASS7
0423 900114          968                   MOV       dptr,#MASS5
0426 120000   F      969                     CALL    xCIKLWR           ; MASS5 --> MASS6
0429 900110          970                   MOV       dptr,#MASS4
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    16

042C 120000   F      971                     CALL    xCIKLWR           ; MASS4 --> MASS5
042F 90010C          972                     mov     dptr,#MASS3
0432 120000   F      973                     CALL    xCIKLWR         ;MASS3->MASS4
0435 900108          974             MOV     dptr,#MASS2
                     975     
0438 120000   F      976                   CALL      xCIKLWR            ; MASS2 --> MASS3
043B 900104          977                     MOV     dptr,#MASS1
043E 120000   F      978                   CALL      xCIKLWR           ; MASS1 --> MASS2
0441 900100          979                   MOV       dptr,#MASS0
0444 120000   F      980                     CALL    xCIKLWR           ; MASS0 --> MASS1
                     981     
0447 7862            982                     mov     r0,#rez_A
0449 120000   F      983                     call    resar2          ;->r2..r5
                     984             ;call   aform
044C 900100          985                     mov     dptr,#MASS0
044F 120000   F      986                   call      saveIr2                 ; R2-R5 --> MAS0
                     987              
0452 900107          988                   MOV       dptr,#MASS1+3
0455 120000   F      989                   CALL      addx
0458 90010B          990                   MOV       dptr,#MASS2+3
045B 120000   F      991                   CALL      addx
045E 90010F          992                   MOV       dptr,#MASS3+3
0461 120000   F      993                  CALL       addx
0464 900113          994                   MOV       dptr,#MASS4+3
0467 120000   F      995                   call      addx
046A 900117          996                     MOV     dptr,#MASS5+3
046D 120000   F      997                  CALL       addx
0470 90011B          998                   MOV       dptr,#MASS6+3
0473 120000   F      999                   CALL      addx
0476 90011F         1000                   MOV       dptr,#MASS7+3
0479 120000   F     1001                  CALL       addx
047C 900123         1002                  MOV        dptr,#MASS8+3
047F 120000   F     1003                   call      addx
0482 900127         1004                     MOV     dptr,#MASS9+3
0485 120000   F     1005                  call       addx
0488 020000   F     1006                     jmp             endsum
                    1007     
048B 020000   F     1008     rmas4:  jmp             mas4
                    1009     ;массив из 20-ти измерений
048E B714FA         1010     mas20:  cjne    @r1,#20,rmas4
0491 900148         1011                     mov             dptr,#MASS18
0494 120000   F     1012                   CALL              xCIKLWR         ;MASS18->MASS19 ?
0497 900144         1013                     mov             dptr,#MASS17
049A 120000   F     1014                   CALL              xCIKLWR         ;MASS17->MASS18
049D 900140         1015             MOV       dptr,#MASS16
04A0 120000   F     1016                   CALL         xCIKLWR         ; MASS16 --> MASS17
04A3 90013C         1017                   MOV          dptr,#MASS15
                    1018                    
04A6 120000   F     1019                   CALL         xCIKLWR        ; MASS15 --> MASS16
04A9 900138         1020                   MOV          dptr,#MASS14
04AC 120000   F     1021                   CALL         xCIKLWR        ; MASS14 --> MASS15
04AF 900134         1022                     mov             dptr,#MASS13
04B2 120000   F     1023                   CALL              xCIKLWR         ;MASS13->MASS14
04B5 900130         1024             MOV        dptr,#MASS12
04B8 120000   F     1025                   CALL         xCIKLWR         ; MASS12 --> MASS13
04BB 90012C         1026                   MOV          dptr,#MASS11
                    1027                     
04BE 120000   F     1028                   CALL         xCIKLWR        ; MASS11 --> MASS12
04C1 900128         1029                   MOV          dptr,#MASS10
04C4 120000   F     1030                   CALL         xCIKLWR        ; MASS10 --> MASS11
04C7 900124         1031                     MOV        dptr,#MASS9
04CA 120000   F     1032                   CALL         xCIKLWR        ; MASS9 --> MASS10
04CD 900120         1033                     mov             dptr,#MASS8
04D0 120000   F     1034                   CALL              xCIKLWR         ;MASS8->MASS9
04D3 90011C         1035                     mov             dptr,#MASS7
04D6 120000   F     1036                  CALL               xCIKLWR         ;MASS7->MASS8
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    17

04D9 900118         1037                     MOV       dptr,#MASS6
04DC 120000   F     1038                   CALL         xCIKLWR         ; MASS6 --> MASS7
04DF 900114         1039                   MOV          dptr,#MASS5
04E2 120000   F     1040                   CALL         xCIKLWR        ; MASS5 --> MASS6
04E5 900110         1041                   MOV          dptr,#MASS4
04E8 120000   F     1042                   CALL         xCIKLWR        ; MASS4 --> MASS5
04EB 90010C         1043                     mov             dptr,#MASS3
                    1044     
04EE 120000   F     1045                   CALL              xCIKLWR         ;MASS3->MASS4
04F1 900108         1046             MOV        dptr,#MASS2
04F4 120000   F     1047                   CALL         xCIKLWR         ; MASS2 --> MASS3
04F7 900104         1048                   MOV          dptr,#MASS1
04FA 120000   F     1049                   CALL         xCIKLWR        ; MASS1 --> MASS2
04FD 900100         1050                   MOV          dptr,#MASS0
0500 120000   F     1051                   CALL         xCIKLWR        ; MASS0 --> MASS1
                    1052                             
0503 7862           1053                     mov             r0,#rez_A
0505 120000   F     1054                     call    resar2          ;->r2..r5
                    1055             ;call   aform
0508 900100         1056                     mov     dptr,#MASS0
050B 120000   F     1057                   call      saveIr2                 ; R2-R5 --> MAS0
050E 900107         1058                   MOV       dptr,#MASS1+3
0511 120000   F     1059                   CALL      addx
0514 90010B         1060                   MOV       dptr,#MASS2+3
0517 120000   F     1061                   CALL      addx
051A 90010F         1062                   MOV       dptr,#MASS3+3
051D 120000   F     1063                  CALL       addx
0520 900113         1064                   MOV       dptr,#MASS4+3
0523 120000   F     1065                   call      addx
0526 900117         1066                     MOV     dptr,#MASS5+3
0529 120000   F     1067                  CALL       addx
052C 90011B         1068                  MOV        dptr,#MASS6+3
052F 120000   F     1069                  CALL       addx
0532 90011F         1070                  MOV        dptr,#MASS7+3
0535 120000   F     1071                  CALL       addx
0538 900123         1072                  MOV        dptr,#MASS8+3
053B 120000   F     1073                  call       addx
053E 900127         1074                     MOV     dptr,#MASS9+3
0541 120000   F     1075                  call       addx
                    1076     ;27
0544 90012B         1077                     MOV        dptr,#MASS10+3
0547 120000   F     1078                   CALL       addx
054A 90012F         1079                     MOV     dptr,#MASS11+3
054D 120000   F     1080                   CALL       addx
0550 900133         1081                   MOV       dptr,#MASS12+3
0553 120000   F     1082                   CALL       addx
0556 900137         1083                   MOV       dptr,#MASS13+3
0559 120000   F     1084                  CALL        addx
055C 90013B         1085                   MOV       dptr,#MASS14+3
055F 120000   F     1086                   call       addx
0562 90013F         1087                     MOV   dptr,#MASS15+3
0565 120000   F     1088                     CALL     addx
0568 900143         1089                   MOV       dptr,#MASS16+3
056B 120000   F     1090                   CALL       addx
056E 900147         1091                   MOV       dptr,#MASS17+3
0571 120000   F     1092                  CALL        addx
0574 90014B         1093                  MOV        dptr,#MASS18+3
0577 120000   F     1094                   call       addx
057A 90014F         1095                     MOV     dptr,#MASS19+3
057D 120000   F     1096                  call        addx
0580 802F           1097                     jmp             endsum
                    1098     ;массив из 4х измерений
0582                1099     mas4:                   
0582 900108         1100                     MOV        dptr,#MASS2
0585 120000   F     1101                   CALL         xCIKLWR         ; MASS2 --> MASS3
0588 900104         1102                   MOV          dptr,#MASS1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    18

058B 120000   F     1103                   CALL         xCIKLWR        ; MASS1 --> MASS2
058E 900100         1104                   MOV          dptr,#MASS0
0591 120000   F     1105                   CALL         xCIKLWR        ; MASS0 --> MASS1
                    1106                     
0594 7862           1107                     mov     r0,#rez_A
0596 120000   F     1108                     call    resar2          ;->r2..r5
                    1109             ;call   aform
0599 900100         1110                     mov     dptr,#MASS0
059C 120000   F     1111                   call      saveIr2                 ; R2-R5 --> MAS0
                    1112              
059F 900107         1113                   MOV       dptr,#MASS1+3
05A2 120000   F     1114                   CALL      addx
05A5 90010B         1115                   MOV       dptr,#MASS2+3
05A8 120000   F     1116                   CALL      addx
05AB 90010F         1117                   MOV       dptr,#MASS3+3
05AE 120000   F     1118                  CALL       addx
                    1119                  
05B1                1120     endsum: ;23.03  
05B1 786E           1121                     mov     r0,#chmas;8.11.06               ;0..n(0..2,0..10)
05B3 06             1122                     inc     @r0
05B4 E6             1123                     mov     a,@r0   
05B5 200105         1124                     jb      bitmas,masfull          ;массив заполнен 2/10 значениями
05B8 B53F31         1125                     cjne    a,chmasN,masx5
05BB D201           1126                     setb    bitmas                  ;массив заполнен
05BD 853F6E         1127     masfull:        mov     chmas,chmasN
05C0 783F           1128                     mov     r0,#chmasN
05C2 E6             1129                     mov     a,@r0
                    1130     ;masfull:
05C3 B40208         1131                     cjne    a,#2,nochn2
05C6 900000   F     1132                     MOV     DPTR,#ch2;10 
05C9 120000   F     1133                     CALL  ldc_ltemp          ; ltemp <-- 2
05CC 8028           1134                     jmp     mas5div
                    1135     
05CE B40A08         1136     nochn2: cjne    a,#10,nochn10
05D1 900000   F     1137                     MOV     DPTR,#ch10 
05D4 120000   F     1138                     CALL  ldc_ltemp          ; ltemp <-- 10
05D7 801D           1139                     jmp     mas5div
                    1140     
05D9 B41408         1141     nochn10:        cjne    a,#20,nochn20
05DC 900000   F     1142                     MOV     DPTR,#ch20 
05DF 120000   F     1143                     CALL  ldc_ltemp          ; ltemp <-- 20
05E2 8012           1144                     jmp     mas5div
                    1145     
05E4 900000   F     1146     nochn20:        MOV     DPTR,#ch4 
05E7 120000   F     1147                     CALL  ldc_ltemp          ; ltemp <-- 4
05EA 800A           1148                     jmp     mas5div
                    1149     
05EC 856E0B         1150     masx5:  mov     ltemp+3,chmas                   ;массив не заполнен
05EF E4             1151                     clr     a
05F0 F50A           1152                     mov     ltemp+2,a
05F2 F509           1153                     mov     ltemp+1,a
05F4 F508           1154                     mov     ltemp,a
                    1155     
05F6 120000   F     1156     mas5div:        CALL    zdiv;divide, R2-R5 =(MAS0+MAS1+MAS2+MAS3+MAS4)/5
                    1157     ;получен результат 3 байта и знак
05F9 7866           1158                     mov     r0,#rez_A1
05FB 120000   F     1159                     call    saver2           ;сохр среднее по массиву
                    1160     ;;8.11.06                       mov             chmasN,#0
05FE C3             1161                     clr     c
05FF 799A           1162                     mov     r1,#parT
0601 7402           1163                     mov     a,#2
0603 97             1164                     subb    a,@r1
0604 501D           1165                     jnc     ankor           ;T<3
                    1166                             ;A-=РЕЗ1                                ;T>3
0606 120402         1167                     call    altof                   ;r2..r5->float
0609 785E           1168                     mov     r0,#rez_Ame
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    19

060B 120000   F     1169                     call    saver2
                    1170     
060E 7890           1171                     mov     r0,#koefKp;->r8..r11
0610 EA             1172                     mov     a,r2
0611 30E702         1173                     jnb     acc.7,nminus3
0614 7894           1174                     mov     r0,#koefKm;->r8..r11
0616 120000   F     1175     nminus3:        call    resar8
0619 120203         1176                     call    flmul  ;результат в плавающем формате м.б. его сохранить?
061C 785E           1177                     mov     r0,#rez_Ame
061E 120000   F     1178                     call    saver2
0621 8027           1179                     jmp     gotoKD
                    1180     
0623 7898           1181     ankor:  mov     r0,#chinkor
0625 E6             1182                     mov     a,@r0
0626 30E709         1183                     jnb     acc.7,nokorr
0629 78C4           1184                             mov     r0,#byte_kor    ;igor
062B E6             1185                             mov     a,@r0                   ;
062C 20E003         1186                             jb      acc.0,nokorr    ;
                    1187                     ;коррекция 0
062F 020000   F     1188                     jmp     kornul
0632                1189     nokorr: 
                    1190                     ;mov    r10,#00         ;       chavt
                    1191                     ;mov    r11,#00h
0632 7881           1192                     mov     r0,#chavt       
0634 E6             1193                     mov     a,@r0;call      chcmp           ;сравн счетчик авто калибровки с 0h
0635 30E737         1194                     jnb     acc.7,nonulavt;jnz              nonulavt        
0638 750A00         1195                     mov     r10,#0;1;00;02          
063B 750BC8         1196                     mov     r11,#0c8h;90h;0c8h;58h
063E 7898           1197                     mov     r0,#chinkor
0640 120000   F     1198                     call    chcmp
0643 7045           1199                     jnz     noavk
                    1200             ;автокалибровка
0645 020000   F     1201                     jmp             autoka;noavk;
                    1202     
0648 8079           1203     rafterK:        jmp             afterK
                    1204     
064A C3             1205     gotoKD:         clr             c
064B 799A           1206                     mov             r1,#parT
064D 7404           1207                     mov             a,#4
064F 97             1208                     subb            a,@r1
0650 50F6           1209                     jnc             rafterK         ;T<5
                    1210             ;A1-=A- *KD                     ;T>5
                    1211             ;call           findkoef                                ;r2,r3-hex
                    1212             ;call           rebyte2                         ;r2..r5- hex
                    1213             ;       call    altof                   ;r2..r5->float
                    1214             ;       mov     dptr,#CHtho;100000
                    1215             ;       call    ldc_ltemp                       ;r8..r11
                    1216             ;       call    fldiv
                    1217             ;       call    move28
0652 785E           1218                     mov     r0,#rez_Ame;->r2..r5   ?/ float
0654 120000   F     1219                     call    resar2
                    1220             ;call   flmul
0657 120343         1221                     call    ftol                    ;float->int
065A 7866           1222                     mov     r0,#rez_A1
065C 120000   F     1223                     call    saver2
065F 786A           1224                     mov     r0,#rez_A0;->r8..r11 hex
0661 120000   F     1225                     call    resar8
0664 120000   F     1226                     call    lsub            ;A3=A-1-A0
0667 789C           1227                     mov     r0,#rez_A3
0669 120000   F     1228                     call    saver2
                    1229     
066C 020000   F     1230                     jmp     labelB  ;?upper
                    1231      ;;;;;;;;;;; 9.11.06
066F 789A           1232     nonulavt:       mov     r0,#parT
0671 E6             1233                     mov     a,@r0
0672 6401           1234                     xrl     a,#01
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    20

0674 700F           1235                     jnz     avtdec1
0676 7982           1236                     mov     r1,#chavt+1     ;T=1 chavt-10
0678 120000   F     1237                     call    tenmin
067B 7999           1238     kordec10:       mov     r1,#chinkor+1
067D 120000   F     1239                     call    tenmin
0680 801E           1240                     jmp     rezmul
                    1241     
0682 020000   F     1242     rmo220: jmp     mo220
                    1243     
0685 7981           1244     avtdec1:        mov     r1,#chavt       
0687 120000   F     1245                     call    chdec           ;chavt-1
                    1246     ;               jmp             kordec1;rezmul
068A 789A           1247     noavk:  mov     r0,#parT
068C E6             1248                     mov     a,@r0
068D 6401           1249                     xrl     a,#01
068F 700A           1250                     jnz     kordec1
                    1251             ;T=1 chinkor-10
0691 7999           1252                     mov     r1,#chinkor+1
0693 120000   F     1253                     call    tenmin
0696 8008           1254                     jmp     rezmul
                    1255     
0698 020000   F     1256     rnotestizm:     jmp     notestizm
069B 7998           1257     kordec1:        mov     r1,#chinkor
069D 120000   F     1258                     call    chdec           ; chinkor-1
                    1259                        ;9.11.06
                    1260     ;(РЕЗ1-АN)*K
06A0 7866           1261     rezmul: mov     r0,#rez_A1;->r2..r5
06A2 120000   F     1262                     call    resar2
06A5 120402         1263                     call    altof   ;r2..r5->float  6.06    
06A8 7884           1264                     mov     r0,#kor0_AN;->r8..r11
06AA 120000   F     1265                     call    resar8
06AD 1201D1         1266                     call    flsub
06B0 7890           1267                     mov     r0,#koefKp;->r8..r11
06B2 EA             1268                     mov     a,r2
06B3 30E702         1269                     jnb     acc.7,nminus
                    1270                     ;jnb            bitznak,nminus
                    1271                     
06B6 7894           1272                     mov     r0,#koefKm;->r8..r11
06B8 120000   F     1273     nminus: call    resar8
06BB 120203         1274                     call    flmul  ;результат в плавающем формате м.б. его сохранить?
06BE 785E           1275                     mov     r0,#rez_Ame
06C0 120000   F     1276                     call    saver2
                    1277      
06C3 EA             1278     afterK: mov     a,r2
06C4 547F           1279                     anl     a,#7fh
06C6 FA             1280                     mov     r2,a
06C7 900000   F     1281                     mov     dptr,#ch_250;220;220000
06CA 120000   F     1282                     call    ldc_ltemp                       ;r8..r11=8
06CD 1201D6         1283                     call    flcmp
06D0 50B0           1284                     jnc     rmo220          ;A>220000
                    1285     
06D2 3015C3         1286                     jnb     biteizm,rnotestizm
06D5 78B1           1287                     mov     r0,#vichR
06D7 B62155         1288                     cjne    @r0,#21h,note21
06DA 7A50           1289                     mov     r2,#50h         ;-11a
06DC 7B18           1290                     mov     r3,#18h         ;k8
06DE 12046C         1291                     call    rebyte2                         ;r2..r5- hex
06E1 120402         1292                     call    altof                   ;r2..r5->float
06E4 C002           1293                     push    rr2
06E6 C003           1294                     push    rr3
06E8 C004           1295                     push    rr4
06EA C005           1296                     push    rr5
06EC 7A50           1297                     mov     r2,#50h         ;k10
06EE 7B20           1298                     mov     r3,#20h
06F0 12046C         1299     re11_7: call    rebyte2                 ;r2..r5
06F3 120402         1300                     call    altof                   ;r2..r5->float
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    21

06F6 120000   F     1301                     call    move28
06F9 D005           1302                     pop     rr5
06FB D004           1303                     pop     rr4
06FD D003           1304                     pop     rr3
06FF D002           1305                     pop     rr2
0701 1202B7         1306                     call    fldiv
                    1307             ;       mov                     dptr,#ch_10
                    1308             ;       call            ldc_ltemp                       ;r8..r11
                    1309             ;       call            flmul
                    1310             ;;;;;2.02.07
0704 C002           1311                     push    rr2
0706 C003           1312                     push    rr3
0708 C004           1313                     push    rr4
070A C005           1314                     push    rr5
070C 7A50           1315                     mov     r2,#50h                 ;-11a
070E 7B2C           1316                     mov     r3,#2ch                 ;Km
0710 12046C         1317                     call    rebyte2                         ;r2..r5- hex
0713 120402         1318                     call    altof                   ;r2..r5->float
0716 120000   F     1319                     call    move28
0719 D005           1320                     pop     rr5
071B D004           1321                     pop     rr4
071D D003           1322                     pop     rr3
071F D002           1323                     pop     rr2
0721 120203         1324                     call    flmul                           ;*Km
0724 900000   F     1325                     mov     dptr,#CHtho;100000
0727 120000   F     1326                     call    ldc_ltemp                       ;r8..r11=8
072A 1202B7         1327                     call    fldiv
                    1328     
072D 8050           1329                     jmp     temul
072F B62218         1330     note21: cjne    @r0,#22h,note22
0732 7A50           1331                     mov     r2,#50h                 ;-09a
0734 7B10           1332                     mov     r3,#10h                 ;k6
0736 12046C         1333                     call    rebyte2                 ;r2..r5- hex
0739 120402         1334                     call    altof                   ;r2..r5->float
073C C002           1335                     push    rr2
073E C003           1336                     push    rr3
0740 C004           1337                     push    rr4
0742 C005           1338                     push    rr5
0744 7A50           1339                     mov     r2,#50h                 ;k8
0746 7B18           1340                     mov     r3,#18h
0748 80A6           1341                     jmp     re11_7
074A 7A50           1342     note22: mov     r2,#50h                 ;-7a
074C 7B08           1343                     mov     r3,#08h                 ;k4
074E 12046C         1344                     call    rebyte2                         ;r2..r5- hex
0751 120402         1345                     call    altof                   ;r2..r5->float
0754 C002           1346                     push    rr2
0756 C003           1347                     push    rr3
0758 C004           1348                     push    rr4
075A C005           1349                     push    rr5
075C 7A50           1350                     mov     r2,#50h                 ;k6
075E 7B10           1351                     mov     r3,#10h
0760 808E           1352                     jmp     re11_7  
                    1353     
0762                1354     notestizm:
0762 301208         1355                     jnb     bitklb,komulpz
0765 900000   F     1356                     mov     dptr,#chk       ;100000
0768 120000   F     1357                     call    ldc_long        ;r2..r5
076B 8006           1358                     jmp     komul
076D 120000   F     1359     komulpz:        call    findkoef        ;r2,r3-hex
0770 12046C         1360                     call    rebyte2         ;r2..r5- hex
                    1361                                     
0773 120402         1362     komul:  call    altof                   ;r2..r5->float
0776 900000   F     1363                     mov     dptr,#CHtho;100000
0779 120000   F     1364                     call    ldc_ltemp                       ;r8..r11=8
077C 1202B7         1365                     call    fldiv
                    1366     ;A0,..  call    move28
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    22

077F 120000   F     1367     temul:  call    move28
0782 785E           1368                     mov     r0,#rez_Ame
0784 120000   F     1369                     call    resar2
0787 120203         1370                     call    flmul     ;A1-=A-*KD  fl
078A 120343         1371                     call    ftol                    ;float->int
078D 7866           1372                     mov     r0,#rez_A1
078F 120000   F     1373                     call    saver2
0792 120402         1374                     call    altof                   ;r2..r5->float
0795 EA             1375                     mov     a,r2
0796 547F           1376                     anl     a,#7fh
0798 FA             1377                     mov     r2,a
0799 900000   F     1378                     mov     dptr,#ch_220;200;200000
079C 120000   F     1379                     call    ldc_ltemp                       ;r8..r11=8
079F 1201D6         1380                     call    flcmp
07A2 502D           1381                     jnc     rrmo220         ;A>200000
                    1382             ;       jnb             knizm,noavp;goA2;               bitizm,goA2     
                    1383             ;       jb              bitavp,yesavp
07A4 301808         1384                     jnb     knizm,goA2
07A7 300602         1385                     jnb     bitvi11,qu_avp
07AA 8003           1386                     jmp     goA2
07AC 20052F         1387     qu_avp:         jb      bitavp,yesavp
07AF                1388     noavp:  ;jb     bitvi11,yesvich  ;уст после ввода A B (ввод ВЫЧИСЛИТЬ)
07AF                1389     goA2:           ;A2=A1-
07AF 7866           1390                     mov     r0,#rez_A1
07B1 120000   F     1391                     call    resar2
07B4 787B           1392                     mov     r0,#rez_A2
07B6 120000   F     1393                     call    saver2
07B9                1394     goA3A2: ;A3=A2-A0
07B9 786A           1395                     mov     r0,#rez_A0
07BB 120000   F     1396                     call    resar8
07BE 120000   F     1397                     call    lsub
07C1 789C           1398                     mov     r0,#rez_A3
07C3 120000   F     1399                     call    saver2
07C6 200666         1400                     jb      bitvi11,yesvich
                    1401     
07C9                1402     goonin: ;jmp    goonind;indA3;8.11.06
07C9 78AC           1403                     mov     r0,#chind
07CB B60006         1404                     cjne    @r0,#0,rnochi0
07CE 020000   F     1405                     jmp     goonind;indA3
                    1406     
07D1 020000   F     1407     rrmo220:        jmp     mo220
07D4 020000   F     1408     rnochi0:        jmp     nochi0
07D7 7866           1409     gokaA2: mov     r0,#rez_A1              ;(float)
07D9 120000   F     1410                     call    saver2          ;то необх для калибровки ,goA2 работает с тим знач
07DC 80D1           1411                     jmp     goA2
                    1412     
07DE EA             1413     yesavp: mov     a,r2
07DF 547F           1414                     anl     a,#7fh
07E1 FA             1415                     mov     r2,a
07E2 900000   F     1416                     mov     dptr,#ch_10th;10000
07E5 120000   F     1417                     call    ldc_ltemp                       ;r8..r11=8
07E8 1201D6         1418                     call    flcmp
07EB 50C2           1419                     jnc     noavp           ;A>10000        
07ED 78AE           1420                     mov     r0,#diap                ;10-11
07EF B60902         1421                     cjne    @r0,#9,avpgo
07F2 80BB           1422                     jmp     noavp
07F4                1423     avpgo:
07F4 06             1424                     inc     @r0             ;переключ диапазон на 1 позицию вниз
07F5 B60A01         1425                     cjne    @r0,#0ah,clmasv
07F8 16             1426                     dec     @r0
07F9                1427     clmasv: ;сбросить массив
07F9 120000   F     1428                     call    loadUS
                    1429                     ;call   louizm
07FC 120000   F     1430                     call    clmassix
07FF 78B3           1431                     mov     r0,#summa
0801 120000   F     1432                     call    clear4
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    23

0804 786A           1433                     mov     r0,#rez_A0
0806 120000   F     1434                     call    clear4
0809 C20F           1435                     clr     bitnul
080B D207           1436                     setb    bitzus  ;bitbuf
080D 80BA           1437                     jmp     goonin
                    1438     
080F D00B           1439     erra01: pop     r11
0811 D00A           1440                     pop     r10
0813 D009           1441                     pop     r9
0815 D008           1442                     pop     r8
0817 C214           1443                     clr     bitvich
0819 C206           1444                     clr     bitvi11
081B 753934         1445                     mov     nuerr,#34h;константа не должна быть равна0
081E 120000   F     1446                     call    error
0821 120000   F     1447                     call    ind
0824 120000   F     1448                     call    z_1s
0827 80A0           1449                     jmp     goonin
                    1450     
0829                1451     mo500R_:
0829 020000   F     1452                     jmp     mo500R
082C                1453     mo500I_:
082C 020000   F     1454                     jmp     mo500I          ;error
                    1455     
082F                1456     yesvich:
                    1457                     ;       mov             r0,#konstB
                    1458                     ;       call    resar2
                    1459                     ;       call    move28
082F 789C           1460                     mov     r0,#rez_A3;A1
0831 120000   F     1461                     call    resar2                          ;HEX
0834 120402         1462                     call    altof                   ;r2..r5->float
0837 EA             1463                     mov     a,r2                    ;модуль
0838 547F           1464                     anl     a,#7fh
083A FA             1465                     mov     r2,a
                    1466     ;               call            fladd                           ;A1+B
                    1467                                     
083B 900000   F     1468                     mov     dptr,#CH_500;
083E 120000   F     1469                     call    ldc_ltemp                       ;r8..r11
0841 1201D6         1470                     call    flcmp
0844 40E3           1471                     jc      mo500R_ ;error <500 >22000
                    1472     ;!
0846 900000   F     1473                     mov     dptr,#CH_22T;
0849 120000   F     1474                     call    ldc_ltemp                       ;r8..r11
084C 1201D6         1475                     call    flcmp
084F 50DB           1476                     jnc     mo500I_
                    1477     ;!
0851 120000   F     1478                     call    move28
0854 C008           1479                     push    r8
0856 C009           1480                     push    r9
0858 C00A           1481                     push    r10
085A C00B           1482                     push    r11
085C 78BC           1483                     mov     r0,#konstA
085E 120000   F     1484                     call    resar2
0861 900000   F     1485                     mov     dptr,#ch0
0864 120000   F     1486                     call    ldc_ltemp
0867 1201D6         1487                     call    flcmp
086A 60A3           1488                     jz      erra01
086C 900000   F     1489                     mov     dptr,#CH_B
086F 120000   F     1490                     CALL  ldc_ltemp          ; ltemp <-- 10-7
0872 120203         1491                     call    flmul                           ;A*10-7
0875 D00B           1492                     pop     r11
0877 D00A           1493                     pop     r10
0879 D009           1494                     pop     r9
087B D008           1495                     pop     r8
087D 1202B7         1496                     call    fldiv                   ;результат R
0880 78C9           1497                     mov     r0,#rez_R
0882 120000   F     1498                     call    saver2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    24

0885 120343         1499                     call    ftol                    ;float->hex
                    1500     
0888 784F           1501                     mov     r0,#abin
088A 120000   F     1502                     call    saver2
                    1503     
                    1504     
088D 301E33         1505                             jnb     is_rs,mr_5              ;??
0890 300630         1506                             jnb     bitvi11,mr_5    ;alternative
0893 78C9           1507                     mov     r0,#rez_R       ;?
0895 301704         1508                             jnb     bitoll,moveR3_
0898 78C9           1509                             mov     r0,#rez_R
089A 7681           1510                             mov     @R0,#81h
089C                1511     moveR3_:
089C C2AF           1512                             clr     EA      ;?
                    1513     ;                       mov     A,#rez_R        ;Ame,..; bufind - no use: for fastest isn't
                              screen output
                    1514     ;                       mov     p_out,A
                    1515     ;                       mov     cnt_out,#4
089E 75997F         1516                             mov     SBUF0,#7Fh      ;was cmd_rez
                    1517     
08A1                1518     tx1:    ;?fragment
08A1 3099FD         1519                     jnb   TI,tx1
08A4 C299           1520                     clr   TI
08A6 8699           1521                     mov     SBUF0,@r0
08A8 08             1522                     inc     r0
08A9                1523     tx2:
08A9 3099FD         1524                     jnb   TI,tx2
08AC C299           1525                     clr   TI
08AE 8699           1526                     mov     SBUF0,@r0
08B0 08             1527                     inc     r0
08B1                1528     tx3:
08B1 3099FD         1529                     jnb   TI,tx3
08B4 C299           1530                     clr   TI
08B6 8699           1531                     mov             SBUF0,@r0
08B8 08             1532                     inc             r0
08B9                1533     tx4:
08B9 3099FD         1534                     jnb   TI,tx4
08BC C299           1535                     clr   TI
08BE 8699           1536                     mov             SBUF0,@r0
08C0 08             1537                     inc             r0
08C1 D2AF           1538                     setb    EA
                    1539             ;?
08C3                1540     mr_5:
                    1541     
                    1542     
08C3 7840           1543                     mov     r0,#bufind
08C5                1544     age9:
08C5 7620           1545                     mov     @r0,#" "          ;погасить индикатор
08C7 08             1546                     inc     r0
08C8 B84BFA         1547                     cjne    r0,#bufind+11,age9
08CB 78C9           1548                     mov     r0,#rez_R
08CD 120000   F     1549                     call    resar2
                    1550     
08D0 900000   F     1551                     mov     dptr,#CH_fl
08D3 120000   F     1552                     CALL  ldc_ltemp
08D6 1202B7         1553                     call    fldiv
08D9 78B8           1554                     mov     r0,#work                ;степень +
08DB 7600           1555                     mov     @r0,#0
08DD 78B9           1556                     mov     r0,#work+1;степень -
08DF 7600           1557                     mov     @r0,#0
08E1 900000   F     1558     compa1: mov     dptr,#ch_1;
08E4 120000   F     1559                     call    ldc_ltemp                       ;r8..r11
08E7 1201D6         1560                     call    flcmp
08EA 4026           1561                     jc      equ0            ;<1
08EC 78B8           1562                     mov     r0,#work                        ;степень +
08EE 06             1563                     inc     @r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    25

08EF 900000   F     1564                     mov     dptr,#ch_10;
08F2 120000   F     1565                     call    ldc_ltemp                       ;r8..r11
08F5 1202B7         1566                     call    fldiv
08F8 80E7           1567                     jmp     compa1                          ;work значение степени n(hex)  
                    1568     
08FA 900000   F     1569     mo500R: mov     dptr,#teOLR
08FD 120000   F     1570                     call    lotext           
0900 120000   F     1571                     call    ind
0903 020000   F     1572                     jmp     nobavp;nobitizm
0906 900000   F     1573     mo500I: mov     dptr,#teOLI
0909 120000   F     1574                     call    lotext           
090C 120000   F     1575                     call    ind
090F 020000   F     1576                     jmp     nobavp;nobitizm
0912                1577     equ0:           ;       call            ftol                    ;float->int
0912 78B8           1578                     mov     r0,#work                ;степень +
0914 B60019         1579                     cjne    @r0,#0,equ00
                    1580                                     
0917 900000   F     1581     compa2: mov     dptr,#ch_1;
091A 120000   F     1582                     call    ldc_ltemp                       ;r8..r11
091D 1201D6         1583                     call    flcmp
0920 500E           1584                     jnc     equ00           ;>1
0922 78B9           1585                     mov     r0,#work+1                      ;степень -
0924 16             1586                     dec     @r0                                                     ;0,ff(-1),f
                             e(-2)...
0925 900000   F     1587                     mov     dptr,#ch_10;
0928 120000   F     1588                     call    ldc_ltemp                       ;r8..r11
092B 120203         1589                     call    flmul
092E 80E7           1590                     jmp     compa2                          ;work значение степени n(hex)  
                    1591     
0930                1592     equ00:          
0930 7853           1593                     mov     r0,#adec
0932 7952           1594                     mov     r1,#abin+3      ;hex->10
0934 120000   F     1595                     call    bindec
                    1596     
                    1597     ;если степень полож убирать младший байт
                    1598     ;чтобы уложиться в 5 разрядов, если отриц располагать
                    1599     ;число в bufind..bufind+5
0937 78B8           1600                     mov     r0,#work
0939 B60021         1601                     cjne    @r0,#0,outr
093C 08             1602                     inc     r0                      ;work+1
093D B6FF05         1603                     cjne    @r0,#0ffh,bufr3 ;6разрядов нужно вывести 5
0940 06             1604                     inc     @r0;!!!!!!!!!?
0941 785B           1605                     mov     r0,#adec+8              ;разместить в буфер индикации R
0943 8003           1606                     jmp     bufr30
                    1607     
0945 06             1608     bufr3:  inc     @r0                     ;?!!!!!!!!n+1
0946 785C           1609                     mov     r0,#adec+9
0948 7945           1610     bufr30: mov     r1,#bufind+5;6
094A 7F05           1611                     mov     r7,#5;7
094C E6             1612     bufr2:  mov     a,@r0
094D 2430           1613                     add     a,#30h
094F F7             1614                     mov     @r1,a
0950 19             1615                     dec     r1
0951 18             1616                     dec     r0
0952 DFF8           1617                     djnz    r7,bufr2
                    1618     
0954 784F           1619                     mov     r0,#abin
0956 120000   F     1620                     call    clear4
0959 78B9           1621                     mov     r0,#work+1
095B 801C           1622                     jmp     outr5
                    1623     ;work!=0 значит после дел на 10**9 получили число > с чем 6 разрядов                       
                                          
095D 785C           1624     outr:           mov     r0,#adec+9;разместить в буфер индикации R
095F C3             1625                     clr     c
0960 79B8           1626                     mov     r1,#work
0962 E8             1627                     mov     a,r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    26

0963 14             1628                     dec     a                                       ;n-1
0964 97             1629                     subb    a,@r1
0965 F8             1630                     mov     r0,a                    ;adec+9-n !!!!!!!!!!!!!!!
0966 7945           1631                     mov     r1,#bufind+5;т к число разрядов > чем знакомест
0968 7F05           1632                     mov     r7,#5;7
096A E6             1633     bufr:           mov     a,@r0
096B 2430           1634                     add     a,#30h
096D F7             1635                     mov     @r1,a
096E 19             1636                     dec     r1
096F 18             1637                     dec     r0
0970 DFF8           1638                     djnz    r7,bufr
                    1639     
0972 784F           1640                     mov     r0,#abin
0974 120000   F     1641                     call    clear4
0977 78B8           1642                     mov     r0,#work
0979 E6             1643     outr5:  mov     a,@r0
097A F552           1644                     mov     abin+3,a
                    1645                             ;n(hex)->abin
097C 120000   F     1646                     call    findR                           ;a=2(10-2)...11(10-11)
097F 2552           1647                     add     a,abin+3
0981 F552           1648                     mov     abin+3,a
0983 7853           1649                     mov     r0,#adec
0985 7952           1650                     mov     r1,#abin+3      ;hex->10
0987 120000   F     1651                     call    bindec
098A 855C48         1652                     mov     bufind+8,adec+9
098D 855B47         1653                     mov     bufind+7,adec+8
0990 754966         1654                     mov     bufind+9,#66h
0993 434B10         1655                     orl     bufind+11,#10h;запятая после 1го знакоместа
0996 020000   F     1656                     jmp     nobavp;nobitizm;        goonin;call     ind
                    1657                                             
0999 300508         1658     mo220:  jnb     bitavp,indoll
099C 301805         1659                     jnb     knizm,indoll    ;bitizm,indoll
099F 78AE           1660                     mov     r0,#diap
09A1 B6001A         1661                     cjne    @r0,#0,nodi2
                    1662                        ;10-2
09A4 300414         1663     indoll: jnb     bitizm,goonin1;чтобы не OLL было при нажатии кнопок меню,пам,вычR
09A7 900000   F     1664                     mov     dptr,#teOLL;OLL
09AA 120000   F     1665                     call    lotext
09AD 300609         1666                     jnb     bitvi11,goonin2
09B0 900000   F     1667                     mov     dptr,#teOLI
09B3 120000   F     1668                     call    lotext
09B6 120000   F     1669                     call    ind
09B9 D217           1670     goonin2:        setb    bitoll
09BB 020000   F     1671     goonin1:        jmp     goonin
                    1672     
09BE 16             1673     nodi2:  dec     @r0     ;переключить на 1 позицию вверх
09BF B6FF01         1674                     cjne    @r0,#0ffh,nodi9
09C2 06             1675                     inc     @r0
09C3 120000   F     1676     nodi9:  call    loadUS
                    1677                     ;call   louizm
                    1678                     ;сбросить массив
09C6 120000   F     1679                     call    clmassix
09C9 78B3           1680                     mov     r0,#summa
09CB 120000   F     1681                     call    clear4
09CE 786A           1682                     mov     r0,#rez_A0
09D0 120000   F     1683                     call    clear4
09D3 C20F           1684                     clr     bitnul  
09D5 D207           1685                     setb    bitzus  ;bitbuf флаг задержки   после установки us                 
                                                           
09D7 020000   F     1686                     jmp     goonin
                    1687     
09DA 16             1688     nochi0: dec     @r0                     ;СТИ-1
09DB 020000   F     1689                     jmp     labelB  
09DE                1690     nop3_0: ;;      ;rez_A-rez_A0
                    1691                     ;;                      mov             r0,#rez_A0
                    1692                     ;;                      call    resar8
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    27

                    1693                     ;;                      call    lsub
                    1694                     ;;                      mov             r0,#rez_A
                    1695                     ;;;                     call    saver2
                    1696     
09DE B70207         1697     no3parN:        cjne    @r1,#2,no2parN
                    1698                     ;в байт 0  записать пробел
09E1 7946           1699                     mov     r1,#bufind+6
09E3 7720           1700                     mov     @r1,#" ";0fdh;
09E5 020000   F     1701                     jmp     seeind          ;moveA3
                    1702     
09E8                1703     no2parN:                        ;в байты 0 и 1 записать пробел
09E8 7945           1704                     mov     r1,#bufind+5
09EA 7720           1705                     mov     @r1,#" ";0fdh;" "
09EC 09             1706                     inc     r1
09ED 7720           1707                     mov     @r1,#" ";0fdh;" "
09EF 8077           1708                     jmp     seeind          ;moveA3
09F1 8075           1709     rseeind:        jmp     seeind
                    1710     
09F3                1711     goonind:                  ; ВЫДАЧА НА ИНДИКАТОР РЕЗУЛЬТАТА
                    1712     
                    1713     
09F3                1714     moveA3: ;нажата кн вычR не выдавать на индикатор не портить bufind..
                    1715                     ;по нажатию кн по прерыванию по выходу из прерыв прог доходит
                    1716                     ;до конца цикла измерения результат не размещать в буфере
                    1717                     ;не забывать сбрасывать по выходу из режима обр кнопки 
                    1718                     ;и возврату в режим измерения
09F3 20145C         1719                     jb              bitvich,rnorvich
09F6 201059         1720                     jb              bitt2,rnorvich
09F9 2017F5         1721                     jb              bitoll,rseeind
09FC 2011F2         1722                     jb              bitmenu,rseeind
09FF 200BEF         1723                     jb              bitmem,rseeind
                    1724             ; mov           r0,#rez_A3
                    1725             ;call   resar2
                    1726             ;call   ftol                    ;float->int r2..r5
0A02 789C           1727                     mov     r0,#rez_A3;->r2..r5       передать A3 в индикатор
0A04 120000   F     1728                     call    resar2;????????????????17.01.07
                    1729                                     
0A07 120000   F     1730                     call    maform
0A0A 784F           1731                     mov     r0,#abin
0A0C 120000   F     1732                     call    saver2
0A0F 7853           1733                     mov     r0,#adec
0A11 7952           1734                     mov     r1,#abin+3      ;hex->10
0A13 120000   F     1735                     call    bindec
                    1736                                     
0A16 785C           1737                     mov     r0,#adec+9;разместить в буфер индикации
0A18 7946           1738                     mov     r1,#bufind+6
0A1A 7F07           1739                     mov     r7,#7
0A1C E6             1740     bufdec: mov     a,@r0
0A1D 2430           1741                     add     a,#30h
0A1F F7             1742                     mov     @r1,a
0A20 19             1743                     dec     r1
0A21 18             1744                     dec     r0
0A22 DFF8           1745                     djnz    r7,bufdec
0A24 7847           1746                     mov     r0,#bufind+7
0A26 762D           1747                     mov     @r0,#2dh          ;-2..-9
0A28 7840           1748                     mov     r0,#bufind
0A2A 762B           1749                     mov     @r0,#2bh
0A2C 300202         1750                     jnb     znmat,nozzmi;bitznak,nozzmi
0A2F 762D           1751                     mov     @r0,#2dh
0A31 79AE           1752     nozzmi: mov     r1,#diap
0A33 7848           1753                     mov     r0,#bufind+8
0A35 E7             1754                     mov     a,@r1
0A36 B4080B         1755                     cjne    a,#8,nodi8
0A39 20151E         1756                     jb      biteizm,seegoon
0A3C 7630           1757                     mov     @r0,#30h                 ;10-10
0A3E 18             1758                     dec     r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    28

0A3F 7663           1759                     mov     @r0,#63h;31h
0A41 08             1760                     inc     r0
0A42 8016           1761                     jmp     seegoon
0A44 B40910         1762     nodi8:  cjne    a,#9,nodis9
0A47 201510         1763                     jb      biteizm,seegoon
0A4A 7631           1764                     mov     @r0,#31h           ;10-11
0A4C 18             1765                     dec     r0
0A4D 7663           1766                     mov     @r0,#63h;31h
                    1767                             
0A4F 08             1768                     inc     r0
0A50 8008           1769                     jmp     seegoon
                    1770     
0A52 020000   F     1771     rnorvich:       jmp     norvich
0A55 8087           1772     rno3parN:       jmp     no3parN
                    1773     
0A57 2432           1774     nodis9: add     a,#32h
0A59 F6             1775                     mov     @r0,a;#37h;"T";
0A5A 08             1776     seegoon:        inc     r0
0A5B 7641           1777                     mov     @r0,#"A";"E";
0A5D 08             1778                     inc     r0
0A5E 7600           1779                     mov     @r0,#00h ;=feh в нач установе для поджига всех сегм
0A60 08             1780                     inc     r0;             mov             bufind+11
0A61 7610           1781                     mov     @r0,#010h               ;bufind+11.4 точка после первой цифры
                    1782                                             
                    1783     ;;;;;;goonind:
0A63 79AF           1784                     mov     r1,#parN        ; ??????
0A65 B703ED         1785                     cjne    @r1,#3,rno3parN ;  8.11.06
                    1786             
0A68                1787     seeind:                         ;;;;;;;;;;;;;
0A68 784A           1788                     mov             r0,#bufind+10
0A6A E6             1789                     mov             a,@r0
0A6B 300F03         1790                     jnb             bitnul,nnnul
0A6E 4408           1791                     orl             a,#08h
0A70 F6             1792                     mov             @r0,a
0A71 799A           1793     nnnul:  mov             r1,#parT
0A73 B70205         1794                     cjne            @r1,#2,nsec1
0A76 4420           1795                     orl             a,#20h    ;1s
0A78 F6             1796                     mov             @r0,a
0A79 800B           1797                     jmp             nsec10
0A7B B70105         1798     nsec1:  cjne            @r1,#1,nsec11
0A7E 4440           1799                     orl             a,#40h                  ;10s
0A80 F6             1800                     mov             @r0,a
0A81 8003           1801                     jmp             nsec10
                    1802                                     
0A83 4410           1803     nsec11: orl             a,#10h
0A85 F6             1804                     mov             @r0,a                    ;0,1s
                    1805     
0A86 784A           1806     nsec10: mov             r0,#bufind+10   
0A88 E6             1807                     mov             a,@r0;mov               @r0,a
0A89 300503         1808                     jnb             bitavp,nobavp
0A8C 4404           1809                     orl             a,#04           ;bufind+10.2
0A8E F6             1810                     mov             @r0,a
                    1811             ;       mov             @r0,a   
0A8F 784A           1812     nobavp: mov             r0,#bufind+10   
0A91 E6             1813                     mov             a,@r0;mov               @r0,a   
0A92 301803         1814                     jnb             knizm,nobitizm
0A95 4402           1815                     orl             a,#02
0A97 F6             1816                     mov             @r0,a
0A98                1817     nobitizm:                       
0A98 301A07         1818                     jnb             bitakt,notakt
0A9B C21A           1819                     clr             bitakt
0A9D 534AFE         1820                     anl             bufind+10,#0feh
0AA0 8005           1821                     jmp             taktind
0AA2 D21A           1822     notakt: setb    bitakt
0AA4 434A01         1823                     orl             bufind+10,#01                                   
0AA7                1824     taktind:                
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    29

                    1825     ;;;;;;;;;
0AA7 301517         1826                     jnb             biteizm,yesind
0AAA 79B1           1827                     mov             r1,#vichR
0AAC 7848           1828                     mov             r0,#bufind+8
0AAE 7654           1829                     mov             @r0,#'T'
0AB0 08             1830                     inc             r0
0AB1 B72104         1831                     cjne    @r1,#21h,test9i
0AB4 7631           1832                     mov             @r0,#31h;11A
                    1833                     ;       dec             r0
                    1834                     ;       mov             @r0,#63h
0AB6 8009           1835                     jmp             yesind
                    1836     
0AB8 B72204         1837     test9i: cjne            @r1,#22h,test7i
0ABB 7632           1838                     mov             @r0,#32h;39h;09A
0ABD 8002           1839                     jmp             yesind
0ABF 7633           1840     test7i: mov             @r0,#33h;37h;07A
                    1841     ;;;;;;;;;
0AC1                1842     yesind:         
0AC1 301203         1843                     jnb             bitklb,noklb
0AC4 434A80         1844                     orl             bufind+10,#80h; on kmp
0AC7 300A03         1845     noklb:  jnb             bitbon,nobuf
0ACA 434B02         1846                     orl             bufind+11,#02h; on pysk
0ACD                1847     nobuf:          ;;;;;
0ACD 301808         1848                     jnb             knizm,anlp1
0AD0 79AE           1849                     mov             r1,#diap
0AD2 C3             1850                     clr             c
0AD3 7401           1851                     mov             a,#1
0AD5 97             1852                     subb            a,@r1
0AD6 4009           1853                     jc              nop1oll
0AD8 309106         1854     anlp1:  jnb             p1.1,nop1oll
0ADB 753935         1855                     mov             nuerr,#35h
0ADE 120000   F     1856                     call            error   ;ошибка 5 перегрузка на диап 10-2,10-3  
0AE1 120000   F     1857     nop1oll:        call            ind     ;пп выдачи на индикатор
                    1858     
                    1859     
                    1860     ;       jnb     is_cmd,norvich          ;??
                    1861     ;       call    cmd_tree
                    1862     
                    1863     
                    1864     
0AE4                1865     norvich: 
0AE4 789A           1866                     mov             r0,# parT
0AE6 79AC           1867                     mov             r1,#chind
0AE8 B60152         1868                     cjne            @r0,#1,rnot1in
0AEB                1869     labelB: ;;;;;;;;;;;
                    1870                     ;сдвиг по алгоритму чтобы посмотреть в цапе 
0AEB 789F           1871                     mov             r0,#rez_A3+3
                    1872                     ;;;;;;;;
0AED 79BB           1873                     mov             r1,#work+3
0AEF E6             1874                     mov             a,@r0
0AF0 7F07           1875                     mov             r7,#7;кол сдв вправо
0AF2 C3             1876     dvig3:  clr             c
0AF3 13             1877                     rrc             a
0AF4 DFFC           1878                     djnz    r7,dvig3 ;d7,d6,d5        мл байт
0AF6 FA             1879                     mov             r2,a    ;сохр байт
0AF7 18             1880                     dec             r0              ;rez_A3+2
0AF8 E6             1881                     mov             a,@r0
0AF9 C0E0           1882                     push    acc
0AFB C3             1883                     clr             c
0AFC 7F01           1884                     mov             r7,#1
0AFE C3             1885     dvig2:  clr             c
0AFF 33             1886                     rlc             a
0B00 DFFC           1887                     djnz    r7,dvig2 ;d12..d11       средний байт
0B02 4A             1888                     orl             a,r2
0B03 F7             1889                     mov             @r1,a;сформ мл байт
0B04 19             1890                     dec             r1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    30

0B05 D0E0           1891                     pop             acc
                    1892                             
0B07 7F07           1893                     mov             r7,#7
0B09 C3             1894     dvig1:  clr             c
0B0A 13             1895                     rrc             a
0B0B DFFC           1896                     djnz    r7,dvig1 ;d18     ср байт
0B0D FA             1897                     mov             r2,a   ;сохр
0B0E 18             1898                     dec             r0
0B0F E6             1899                     mov             a,@r0 ;rez_A3+1
0B10 C0E0           1900                     push    acc
                    1901                     
0B12 7F01           1902                     mov             r7,#1
0B14 C3             1903     dvig0:  clr             c
0B15 33             1904                     rlc             a
0B16 DFFC           1905                     djnz    r7,dvig0 ;        d21..d16
0B18 4A             1906                     orl             a,r2
0B19 F7             1907                     mov             @r1,a   ; сформ средний  байт
0B1A 19             1908                     dec             r1
0B1B D0E0           1909                     pop             acc       ;rez_A3+1
                    1910                             ;;;;;;;;;;;;;;
                    1911     ;                       jb              acc.7,dvm
0B1D C3             1912                     clr             c
0B1E 7F07           1913                     mov             r7,#7
0B20 C3             1914     dvig4:  clr             c
0B21 13             1915                     rrc             a
0B22 DFFC           1916                     djnz    r7,dvig4 ;        d22
0B24 FA             1917                     mov             r2,a    ;сохр
0B25 18             1918                     dec             r0              ;       rez_A3
0B26 E6             1919                     mov             a,@r0
                    1920                     ;;;;;
0B27 7F01           1921                     mov             r7,#1
0B29 C3             1922     vig0:           clr             c
0B2A 33             1923                     rlc             a
0B2B DFFC           1924                     djnz    r7,vig0 ;         d24..d30
0B2D 4A             1925                     orl             a,r2
0B2E F7             1926                     mov             @r1,a   ; сформ   байт
0B2F 19             1927                     dec             r1
0B30 E6             1928                     mov             a,@r0
                    1929                     ;;;;;
0B31 20E70C         1930                     jb              acc.7,dvm
0B34 C3             1931                     clr             c
0B35 7F07           1932                     mov             r7,#7
0B37 C3             1933     vig4:           clr             c
0B38 13             1934                     rrc             a
0B39 DFFC           1935                     djnz    r7,vig4 ;         d
0B3B 8009           1936                     jmp             endsdv
                    1937     
0B3D 020000   F     1938     rnot1in:        jmp             not1in
                    1939     
                    1940     ;;;;;;;;;;;;                                    
0B40 7F07           1941     dvm:            mov             r7,#7
0B42 D3             1942     dvig6:  setb            c
0B43 13             1943                     rrc             a
0B44 DFFC           1944                     djnz    r7,dvig6 ;        d31
0B46 F7             1945     endsdv: mov             @r1,a
                    1946                                                             
                    1947      ;->work   
                    1948     ;?              jnb                     is_mem,md_3             ???????????????????????
                    1949     ;               call            resa_hl
                    1950     ;               call            reA3_m          ;write A3 to Mem
                    1951     ;               call            save_hlm                ;bound of 200
                    1952     ;               setb            EA
                    1953     ;               sjmp            me_5
                    1954     
0B47                1955     md_3:
0B47                1956     md_5:
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    31

0B47 301E70         1957             jnb     is_rs,me_5              ;out RS rez_A3
                    1958     ;       jb      bitvi11,me_5    ;rez_R is out
0B4A 301704         1959             jnb     bitoll,moveA3_  ;бит  перегрузки
0B4D 7840           1960             mov     r0,#bufind      ;20.11.09#rez_A3#rez_A3
0B4F 7681           1961             mov     @R0,#81h
0B51                1962     moveA3_:
                    1963     ;------------------ 23.11.09---------------------
0B51 789C           1964                     mov     r0,#rez_A3;->r2..r5       передать A3 в индикатор
0B53 120000   F     1965                     call    resar2;????????????????17.01.07
                    1966                                     
0B56 120000   F     1967                     call    maform
0B59 784F           1968                     mov     r0,#abin
0B5B 120000   F     1969                     call    saver2
0B5E 7853           1970                     mov     r0,#adec
0B60 7952           1971                     mov     r1,#abin+3      ;hex->10
0B62 120000   F     1972                     call    bindec
                    1973                                     
0B65 785C           1974                     mov     r0,#adec+9;разместить в буфер индикации
0B67 7947           1975                     mov     r1,#bufind+7    ;20.11.09       6
0B69 7F06           1976                     mov     r7,#6
0B6B E6             1977     bufdecRS:       mov     a,@r0
0B6C 2430           1978                     add     a,#30h
0B6E F7             1979                     mov     @r1,a
0B6F 19             1980                     dec     r1
0B70 18             1981                     dec     r0
0B71 DFF8           1982                     djnz    r7,bufdecRS
0B73 F7             1983                                             mov     @r1,a           ;
0B74 09             1984                                             inc     r1                      ;вставить точку
                    1985     ;                                       inc     r1
0B75 772E           1986                                             mov     @r1,#2eh        ;       
0B77 7848           1987                     mov     r0,#bufind+8
0B79 762D           1988                     mov     @r0,#2dh          ;-2..-9
0B7B 7840           1989                     mov     r0,#bufind
0B7D 762B           1990                     mov     @r0,#2bh
0B7F 300202         1991                     jnb     znmat,nozzmiRS;bitznak,nozzmi
0B82 762D           1992                     mov     @r0,#2dh
0B84 79AE           1993     nozzmiRS:       mov     r1,#diap
0B86 7849           1994                     mov     r0,#bufind+9
0B88 E7             1995                     mov     a,@r1
0B89 B4080D         1996                     cjne    a,#8,nodi8RS
0B8C 201520         1997                     jb      biteizm,seegoonRS
0B8F 7631           1998                     mov     @r0,#31h                 ;10-10
0B91 08             1999                             inc     r0
                    2000     ;;              dec     r0
0B92 7630           2001                     mov     @r0,#30h
                    2002     ;;              inc     r0
0B94 75240B         2003             mov     cnt_out,#11     ;20.11.09#4
0B97 8016           2004                     jmp     seegoonRS
0B99 B4090D         2005     nodi8RS:        cjne    a,#9,nodis9RS
0B9C 201510         2006                     jb      biteizm,seegoonRS
0B9F 7631           2007                     mov     @r0,#31h           ;10-11
0BA1 08             2008                             inc     r0
                    2009     ;;              dec     r0
0BA2 7631           2010                     mov     @r0,#31h
0BA4 75240B         2011             mov     cnt_out,#11     ;20.11.09#4                     
                    2012     ;;              inc     r0
0BA7 8006           2013                     jmp     seegoonRS
                    2014     
                    2015     ;;rnorvich:     jmp     norvich
                    2016     ;;rno3parN:     jmp     no3parN
                    2017     
0BA9 2432           2018     nodis9RS:       add     a,#32h
0BAB F6             2019                     mov     @r0,a;#37h;"T";
0BAC 75240A         2020             mov     cnt_out,#10     ;20.11.09#4
0BAF                2021     seegoonRS:      
0BAF 7847           2022                     mov     r0,#bufind+7
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    32

0BB1 7645           2023                     mov     @r0,#"E";
                    2024     ;               mov     r0,#bufind+10
                    2025     ;               mov     @r0,#0Ah;
                    2026     ;------------------------------------------------
                    2027     
0BB3 7440           2028             mov     A,#bufind       ;20.11.09#rez_A3        ;Ame,..; bufind - no use: for faste
                             st isn't screen output
0BB5 F526           2029             mov     p_out,A
                    2030     ;       mov     cnt_out,#10     ;20.11.09#4
0BB7 75990A         2031             mov     SBUF0,#0Ah      ;#7Fh   ;was cmd_rez
0BBA                2032     me_5:                   ;??????????????????
0BBA 300C37         2033                     jnb     is_2,me_6
0BBD 120000   F     2034                     call    resa_hl ;dptr=(saven_bl)/2/3/4
0BC0 120000   F     2035                     call    loA3_X;адрес след ячейки внешн озу храним в ячейке saven_bl
0BC3 120000   F     2036                     call            save_hl
0BC6 78AE           2037                     mov                     r0,#diap
0BC8 E6             2038                     mov                     a,@r0
0BC9 7938           2039                     mov                     r1,#nblok
0BCB B70104         2040                     cjne            @r1,#1,nosv1    ;?????
0BCE F534           2041                     mov                     sadiap,a
0BD0 8010           2042                     jmp                     tostro
0BD2 B70204         2043     nosv1:  cjne            @r1,#2,nosv2
0BD5 F532           2044                     mov                     sadiap2,a
0BD7 8009           2045                     jmp                     tostro
0BD9 B70304         2046     nosv2:  cjne            @r1,#3,nosv3
0BDC F531           2047                     mov                     sadiap3,a
0BDE 8002           2048                     jmp                     tostro
0BE0                2049     nosv3:          
0BE0 F530           2050                     mov                     sadiap4,a
0BE2                2051     tostro:
                    2052     
                    2053     ;               inc             cnt_out
                    2054     ;               mov             a,#200
                    2055     ;               subb    a,cnt_out
0BE2 1524           2056                     dec             cnt_out
0BE4 E524           2057                     mov             A,cnt_out
0BE6 700C           2058                     jnz             me_6
0BE8 C20C           2059                     clr             is_2
0BEA 789A           2060                     mov             R0,#parT
0BEC 7602           2061                     mov             @R0,#2  ;1 sec
0BEE 75A890         2062                     mov     IE,#90h ;Снятие блокировки всех прерываний+RS
                    2063     ;       setb    is_izm  ;???
0BF1 020000   F     2064             jmp     after_2 ;keyb1
0BF4                2065     me_6:
                    2066                             ;??????????????????
0BF4 900000   F     2067                     mov             dptr,#chzap
0BF7 120000   F     2068                     call    ldc_long
0BFA 78BB           2069                     mov             r0,#work+3
0BFC 120000   F     2070                     call    ladd
0BFF ED             2071                     mov             a,r5
0C00 F5D2           2072                     mov             DAC0L,a
                    2073                             
0C02 EC             2074                     mov             a,r4
0C03 F5D3           2075                     mov             DAC0H,a
                    2076     
                    2077                                             ;;;;;;;;;;
0C05 78CF           2078                     mov                     r0,#chbuf               ;float
0C07 120000   F     2079                     call            resar2
0C0A 900000   F     2080                     mov                     dptr,#ch_2;ch0;ch_1
0C0D 120000   F     2081                     call            ldc_ltemp
0C10 1201D6         2082                     call            flcmp
0C13 5020           2083                     jnc                     rnobuf0
                    2084                                             
0C15 900000   F     2085                     mov                     dptr,#ch_1
0C18 120000   F     2086                     call            ldc_ltemp
0C1B 1201D1         2087                     call            flsub
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    33

0C1E 900E00         2088                     mov                     dptr,#chbuf1                    ;СБ1 внешн озу
0C21 EA             2089                     mov                     a,r2
0C22 F0             2090                     movx            @dptr,a
0C23 A3             2091                     inc                     dptr
0C24 EB             2092                     mov                     a,r3
0C25 F0             2093                     movx            @dptr,a
0C26 A3             2094                     inc                     dptr
0C27 EC             2095                     mov                     a,r4
0C28 F0             2096                     movx            @dptr,a
0C29 A3             2097                     inc                     dptr
0C2A ED             2098                     mov                     a,r5
0C2B F0             2099                     movx            @dptr,a
                    2100                                             
                    2101                                             
                    2102                                             ;jnc                    rnobuf0
0C2C 200909         2103                     jb              bitprd,yesprd   ;передать   A3 в буфер
0C2F 200A08         2104                     jb              bitbon,yesbuf   ;записать   A3 в буфер
0C32 020000   F     2105                     jmp             gocikle
0C35 020000   F     2106     rnobuf0:        jmp             nobuf0
0C38                2107     yesprd: ;передать   A3 в буфер
0C38 8045           2108                     jmp             goonT
0C3A                2109     yesbuf:         ;записать   A3 в буфер
0C3A 120000   F     2110                     call            resa_hl;dptr-
0C3D 120000   F     2111                     call            loA3_X  ;адрес след ячейки внешн озу храним
                    2112                                                                             ;в ячейке saven_bl
0C40 120000   F     2113                     call            save_hl
0C43 78AE           2114                     mov                     r0,#diap
0C45 E6             2115                     mov                     a,@r0
0C46 7938           2116                     mov                     r1,#nblok
0C48 B70104         2117                     cjne            @r1,#1,nosav1
0C4B F534           2118                     mov                     sadiap,a
0C4D 8012           2119                     jmp                     gotostrob
0C4F B70204         2120     nosav1: cjne            @r1,#2,nosav2
0C52 F532           2121                     mov                     sadiap2,a
0C54 800B           2122                     jmp                     gotostrob
0C56 B70304         2123     nosav2: cjne            @r1,#3,nosav3
0C59 F531           2124                     mov                     sadiap3,a
0C5B 8004           2125                     jmp                     gotostrob
0C5D                2126     nosav3:         
0C5D F530           2127                     mov                     sadiap4,a
0C5F 8000           2128                     jmp                     gotostrob
                    2129     
                    2130                             ;строб
0C61                2131     gotostrob:
0C61 E586           2132                     mov             a,P6            ;p6.4=0
0C63 54EF           2133                     anl             a,#0efh
0C65 F586           2134                     mov             P6,a
0C67 00             2135                     nop
0C68 00             2136                     nop
0C69 E586           2137                     mov             a,P6                    ;p6.4=1 
0C6B 4410           2138                     orl             a,#10h
0C6D F586           2139                     mov             P6,a
                    2140                                     ;;;;;;;;;
0C6F E5DA           2141                     mov             a,PCA0CPM0;     
0C71 4446           2142                     orl             a,#46h;anl              a,#0fbh
0C73 F5DA           2143                     mov             PCA0CPM0,a
0C75 75CDD0         2144                     mov             TH2,#0d0h
0C78 75CC00         2145                     mov             TL2,#00
                    2146     
0C7B D2CA           2147                     setb            T2CON.2
0C7D D2AD           2148                     setb            ET2;IE.5                            
0C7F 78CD           2149     goonT:  mov             r0,#interva;high  byte loadr2
0C81 E6             2150                     mov             a,@r0
0C82 FC             2151                     mov             r4,a
0C83 08             2152                     inc             r0
0C84 E6             2153                     mov             a,@r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    34

0C85 FD             2154                     mov             r5,a
0C86 E4             2155                     clr             a
0C87 FB             2156                     mov             r3,a
0C88 FA             2157                     mov             r2,a                            ;r2..r5-interval(hex)
0C89 120402         2158                     call            altof                   ;r2..r5->interval (float)
                    2159     
0C8C 789A           2160                     mov             r0,#parT
0C8E B60108         2161                     cjne            @r0,#1,nott1
0C91 900000   F     2162                     mov             dptr,#ch_2       
0C94 120000   F     2163                     call            ldc_ltemp
0C97 8009           2164                     jmp             intmul
                    2165     
0C99 B60225         2166     nott1:  cjne    @r0,#2,nott2
0C9C 900000   F     2167                     mov             dptr,#ch_10      
0C9F 120000   F     2168                     call            ldc_ltemp
                    2169                                                                             
0CA2 120203         2170     intmul: call            flmul                                   ;*10
0CA5 900E00         2171     intmul1:        mov             dptr,#chbuf1    ;СБ1
0CA8 E0             2172                     movx    a,@dptr
0CA9 F508           2173                     mov             r8,a
0CAB A3             2174                     inc             dptr
0CAC E0             2175                     movx    a,@dptr
0CAD F509           2176                     mov             r9,a
0CAF A3             2177                     inc             dptr
0CB0 E0             2178                     movx    a,@dptr
0CB1 F50A           2179                     mov             r10,a
0CB3 A3             2180                     inc             dptr
0CB4 E0             2181                     movx    a,@dptr
0CB5 F50B           2182                     mov             r11,a
0CB7 120166         2183                     call            fladd           ;СБ+СБ1
0CBA 78CF           2184     intmul2:        mov                     r0,#chbuf
0CBC 120000   F     2185                     call            saver2          ;*2
                    2186                                     
0CBF 8035           2187                     jmp             gocikle
                    2188     
0CC1 B6030B         2189     nott2:  cjne    @r0,#3,nott3
0CC4 900000   F     2190                     mov                     dptr,#ch_2       
0CC7 120000   F     2191                     call            ldc_ltemp
0CCA 120203         2192                     call            flmul
0CCD 80EB           2193                     jmp                     intmul2                                 ;*2
                    2194     
                    2195     
0CCF B60414         2196     nott3:  cjne    @r0,#4,nott4
0CD2 900000   F     2197                     mov                     dptr,#ch_10      
0CD5 120000   F     2198                     call            ldc_ltemp       ;/10*4
0CD8 1202B7         2199                     call            fldiv
0CDB 900000   F     2200                     mov                     dptr,#ch_4       
0CDE 120000   F     2201                     call            ldc_ltemp
0CE1 120203         2202                     call            flmul
0CE4 80D4           2203                     jmp             intmul2
                    2204     
0CE6 B6050B         2205     nott4:  cjne    @r0,#5,nott5
0CE9 900000   F     2206                     mov             dptr,#ch_2       
0CEC 120000   F     2207                     call            ldc_ltemp;*2
0CEF 120203         2208                     call            flmul
0CF2 80C6           2209                     jmp             intmul2;T=5
0CF4                2210     nott5:  ;       mov             dptr,#ch_1       
                    2211                     ;       call            ldc_ltemp
                    2212                     ;       call            flmul
0CF4 80C4           2213                     jmp     intmul2                                 ;*1
                    2214     
                    2215     
0CF6 300708         2216     gocikle:        jnb     bitzus,nofz                     
0CF9 120000   F     2217                     call    z_05s    ;0,5c
0CFC 120000   F     2218                     call    z_05s    ;0,5c
0CFF C207           2219                     clr     bitzus  ;bitbuf бит задержки засылки us
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    35

0D01 020000   F     2220     nofz:           jmp     labelA;rebyte
                    2221     
                    2222     
0D04 80F0           2223     yestt5: jmp             gocikle
                    2224     
0D06 78CF           2225     nobuf0: mov             r0,#chbuf
0D08 120000   F     2226                     call            resar2
0D0B 900000   F     2227                     mov                     dptr,#ch_1       
0D0E 120000   F     2228                     call            ldc_ltemp
0D11 1201D1         2229                     call            flsub
0D14 78CF           2230                     mov                     r0,#chbuf       
0D16 120000   F     2231                     call            saver2  
0D19 80DB           2232                     jmp             gocikle
                    2233     
                    2234     
0D1B B60205         2235     not1in: cjne    @r0,#2,not2in
0D1E 7701           2236                     mov             @r1,#1           ;T=2
0D20 020000   F     2237                     jmp     labelB
                    2238     
0D23 B60305         2239     not2in: cjne    @r0,#3,not3in
0D26 7701           2240                     mov             @r1,#1;9                ;T=3
0D28 020000   F     2241                     jmp     labelB
0D2B 7703           2242     not3in: mov             @r1,#3;19
0D2D 020000   F     2243                     jmp     labelB
                    2244     
                    2245     
                    2246     ;;;;;;;;;;;3.11.06
                    2247     
                    2248     ;;коррекция 0
0D30 7883           2249     KORnul: mov             r0,#chdel
0D32 B60010         2250                     cjne    @r0,#0,nonuldel
                    2251                                     
0D35 E584           2252                     mov             a,p4                    ;сохр  us
0D37 F536           2253                     mov             saus,a
0D39 E585           2254                     mov             a,p5
0D3B F537           2255                     mov             saus+1,a
                    2256     
0D3D 900000   F     2257                     mov             dptr,#kor0us
0D40 120000   F     2258                     call    lospus          ;упр слово коррекции 0
0D43 8018           2259                     jmp     chdelmo
                    2260     
0D45                2261     nonuldel:       ;cjne   @r0,#7,no4del
0D45 B6031B         2262                     cjne    @r0,#3,no4del
                    2263                             ;рез ->AN
0D48 7862           2264                     mov     r0,#rez_A;->r2..r5
0D4A 120000   F     2265                     call    resar2
                    2266                                             ;;;;;;;;;;
0D4D 120402         2267                     call    altof           ;r2..r5->float
0D50 7884           2268                     mov     r0,#kor0_AN;->kor0_AN
0D52 120000   F     2269                     call    saver2
                    2270                                     
0D55 E536           2271                     mov             a,saus                  ;восстан исходное упр слово
0D57 F584           2272                     mov             p4,a
0D59 E537           2273                     mov             a,saus+1
0D5B F585           2274                     mov             p5,a            
0D5D 7883           2275     chdelmo:        mov             r0,#chdel
0D5F 06             2276                     inc             @r0             ;chdel+1
0D60 020000   F     2277                     jmp              rebyte
                    2278     
0D63                2279     no4del:         ;cjne   @r0,#14,chdelmo
0D63 B606F7         2280                     cjne    @r0,#6,chdelmo
0D66 7600           2281                     mov             @r0,#0          ;chdel
0D68 7898           2282                     mov             r0,#chinkor
0D6A 7602           2283                     mov             @r0,#2;00;
0D6C 08             2284                     inc             r0
0D6D 7658           2285                     mov             @r0,#58h;0c8h
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    36

0D6F 120000   F     2286                     call    clmassix;сбросить массив скольз среднего
0D72                2287     bonpart:
0D72 300A20         2288                     jnb             bitbon,rebyter
0D75 78CF           2289                     mov             r0,#chbuf
0D77 120000   F     2290                     call            resar2
0D7A 799A           2291                     mov             r1,#parT
0D7C B70211         2292                     cjne            @r1,#2,no6del
0D7F 900000   F     2293                     mov             dptr,#ch_7;5
0D82                2294     no5del:
0D82 120000   F     2295                     call            ldc_ltemp
0D85 1201D1         2296                     call            flsub   
0D88 78CF           2297                     mov             r0,#chbuf
0D8A 120000   F     2298                     call            saver2
0D8D 020000   F     2299                     jmp             rebyte
0D90                2300     no6del:
0D90 900000   F     2301                     mov             dptr,#ch_1
0D93 80ED           2302                     jmp             no5del
                    2303     
0D95 020000   F     2304     rebyter:        jmp             rebyte
                    2305     
0D98 7981           2306     tekaout:        mov             r1,#chavt
0D9A 770C           2307                     mov             @r1,#0ch;6;1;
0D9C 09             2308                     inc             r1
0D9D 7780           2309                     mov             @r1,#80h;40h;
0D9F 020000   F     2310                     jmp             noavk
                    2311     
                    2312     ;автокалибровка
0DA2 200AF3         2313     autoka: jb              bitbon,tekaout;rebyter
0DA5                2314     nulavt:  ;;;;;
0DA5 7883           2315                     mov             r0,#chdel
0DA7 B60016         2316                     cjne    @r0,#0,nndelch
0DAA E584           2317                     mov             a,p4                    ;сохр  us
0DAC F536           2318                     mov             saus,a
0DAE E585           2319                     mov             a,p5
0DB0 F537           2320                     mov             saus+1,a
                    2321     
0DB2 E585           2322                     mov   a,p5
0DB4 4404           2323                     orl             a,#04              ;p5.2=1
0DB6 00             2324                     nop
0DB7 00             2325                     nop
0DB8 543F           2326                     anl             a,#3fh          ;p5.6,p5.7=0
0DBA F585           2327                     mov   p5,a
0DBC 06             2328                     inc             @r0
0DBD 020000   F     2329                     jmp              rebyte
0DC0 B6033D         2330     nndelch:        cjne    @r0,#3,n4delch
                    2331                             ;pez->A+
                    2332                             ;K+=000/(A+-AN)
                    2333                             ;mov            r0,#rez_A;->r2..r5
                    2334                             ;call   resar2
0DC3 E577           2335                     mov             a,reacp         ;r2..r5 &&&&&&&&&&&
0DC5 FA             2336                     mov             r2,a
0DC6 E578           2337                     mov             a,reacp+1
0DC8 FB             2338                     mov             r3,a
0DC9 E579           2339                     mov             a,reacp+2
0DCB FC             2340                     mov             r4,a
0DCC E57A           2341                     mov             a,reacp+3
0DCE FD             2342                     mov             r5,a
                    2343                             ;;;;;;;;;;;;;;;
0DCF 120402         2344                     call    altof                   ;r2..r5->float
0DD2 7888           2345                     mov     r0,#rezAp;->rezAp
0DD4 120000   F     2346                     call    saver2                          
0DD7 7884           2347                     mov     r0,#kor0_AN;kor0_AN->r8..r11
0DD9 120000   F     2348                     call    resar8                          
0DDC 1201D1         2349                     call    flsub           ; r2..r5(A+-AN)
0DDF 120000   F     2350                     call    move28     ;r2..r5->r8..r11
0DE2 900000   F     2351                     mov     dptr,#CH2tho;000->r2..r5 float
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    37

0DE5 120000   F     2352                     call    ldc_long                
0DE8 1202B7         2353                     call    fldiv
0DEB EA             2354                     mov     a,r2
0DEC 547F           2355                     anl     a,#7fh
0DEE FA             2356                     mov     r2,a
0DEF 7890           2357                     mov     r0,#koefKp;->koefKp
0DF1 120000   F     2358                     call    saver2
                    2359                      
                    2360                     ;anl            P5,#0feh                ;p5.0=0 
0DF4 E585           2361                     mov     a,P5
0DF6 543B           2362                     anl     a,#3bh;acp-
0DF8 F585           2363                     mov     P5,a
0DFA 7883           2364                     mov     r0,#chdel
0DFC 06             2365                     inc     @r0                       ;ch+1
0DFD 020000   F     2366                     jmp     rebyte
                    2367     
0E00 B6063F         2368     n4delch:        cjne    @r0,#6,n8delch
                    2369                     ; pez->A-
                    2370                     ;K-=000/(A--AN)
                    2371                     ;       mov     r0,#rez_A;->r2..r5
                    2372                     ;       call    resar2
0E03 E577           2373                     mov     a,reacp         ;r2..r5 &&&&&&&&&&&
0E05 FA             2374                     mov     r2,a
0E06 E578           2375                     mov     a,reacp+1
0E08 FB             2376                     mov     r3,a
0E09 E579           2377                     mov     a,reacp+2
0E0B FC             2378                     mov     r4,a
0E0C E57A           2379                     mov     a,reacp+3
0E0E FD             2380                     mov     r5,a
                    2381                                     ;;;;;;;;;;;;;;;
0E0F 120402         2382                     call    altof                   ;r2..r5->float
0E12 788C           2383                     mov     r0,#rezAm;->rezAm
0E14 120000   F     2384                     call    saver2                          
0E17 7884           2385                     mov     r0,#kor0_AN;kor0_AN->r8..r11
0E19 120000   F     2386                     call    resar8                          
0E1C 1201D1         2387                     call    flsub                   ; r2..r5(A--AN)
0E1F 120000   F     2388                     call    move28                  ;r2..r5->r8..r11
0E22 900000   F     2389                     mov     dptr,#CH2tho    ;000->r2..r5 float
0E25 120000   F     2390                     call    ldc_long                
0E28 1202B7         2391                     call    fldiv
0E2B EA             2392                     mov     a,r2
0E2C 547F           2393                     anl     a,#7fh
0E2E FA             2394                     mov     r2,a
0E2F 7894           2395                     mov     r0,#koefKm;->koefKm
0E31 120000   F     2396                     call    saver2
                    2397                      
0E34 E536           2398                     mov     a,saus                  ;восстан исходное упр слово
0E36 F584           2399                     mov     p4,a
0E38 E537           2400                     mov     a,saus+1
0E3A F585           2401                     mov     p5,a            
0E3C 7883           2402                     mov     r0,#chdel
0E3E 06             2403                     inc     @r0                       ;ch+1
0E3F 020000   F     2404                     jmp     rebyte
                    2405     
0E42 B6090F         2406     n8delch:        cjne            @r0,#9,n12delch
0E45 7600           2407                     mov             @r0,#0
0E47 7981           2408                     mov             r1,#chavt
0E49 773E           2409                     mov             @r1,#3eh;0ch;
0E4B 09             2410                     inc             r1
0E4C 7780           2411                     mov             @r1,#80h;
0E4E 120000   F     2412                     call            clmassix     ;сбросить массив среднего
0E51 020000   F     2413                     jmp             rebyte; bonpart;
0E54 06             2414     n12delch:       inc             @r0
0E55 020000   F     2415                     jmp             rebyte
                    2416     
                    2417     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    38

                    2418     
                    2419                                 
0E58 020000   F     2420     rout6:  jmp             out6
0E5B 020000   F     2421     rlabelF:        jmp             labelF  
0E5E 020000   F     2422     rknrazr:        jmp             knrazr  
0E61 020000   F     2423     rknopt: jmp             knopt
0E64 020000   F     2424     rizman: jmp             izman
                    2425             
0E67 020000   F     2426     no0chkl:        jmp             kkout6
                    2427     ;?never here
0E6A 75AD00         2428                     mov             P3IF,#00;               обязательно сбросить опять приходит
                              на обработку прерывания
0E6D 75B0C0         2429                     mov             P3,#0c0h
0E70 32             2430                     reti
0E71                2431     keyb1:  ;IE6
                    2432     ;;;;;
                    2433                     ;       mov                     a,chkl+1                ;low
                    2434                     ;       jnz                     no0chkl
                    2435                     ;       mov                     a,chkl                          ;high
                    2436                     ;       jnz                     no0chkl
                    2437     ;;;;;
0E71 75E700         2438                     mov             EIE2,#00H
0E74 75AD00         2439                     mov             P3IF,#00
                    2440                                     
0E77 C0E0           2441                     push    acc
0E79 C0D0           2442                     push    psw
0E7B C000           2443                     push    rr0
0E7D C001           2444                     push    rr1
0E7F C002           2445                     push    rr2
0E81 C003           2446                     push    rr3
0E83 C004           2447                     push    rr4
0E85 C005           2448                     push    rr5
0E87 C006           2449                     push    rr6
0E89 C007           2450                     push    rr7
0E8B C082           2451                     push    dpl
0E8D C083           2452                     push    dph
                    2453                                     ;clr            bitmig
                    2454                       ;;;;;;;;;;;;;;
0E8F 120000   F     2455                      call   z_01s;0,1s
                    2456                                     ;       call    z_01s
                    2457                                     ;восстан знакоместо при мигании
                    2458                                     ;т к в соотв яч буфера индикации пишется 20h(пробел)
0E92 78B2           2459                     mov             r0,#marker
0E94 7440           2460                     mov             a,#bufind
0E96 26             2461                     add             a,@r0                   ;a=bufind+marker
0E97 F9             2462                     mov             r1,a
0E98 A73C           2463                     mov             @r1,savba
                    2464                                     ;;;;;;;;;;;
                    2465     ;???
                    2466                     
0E9A 301F05         2467                     jnb             is_izm,gout6__
0E9D C21F           2468                     clr             is_izm
0E9F 020000   F     2469                             jmp     izman   ;button 'izm'?
                    2470     
                    2471     ;gout6_:
                    2472     ;               jnb             is_mem,gout6__
                    2473     ;               clr             is_mem
                    2474     ;                       jmp     findmem ;button 'mem'?
                    2475     
0EA2                2476     gout6__:        ;usual
                    2477     
0EA2 E5B0           2478                     mov             a,p3
0EA4 20E644         2479                     jb              acc.6,outviR;выход из режима выч R
0EA7 E5B0           2480     gout6:  mov             a,p3
0EA9 44FF           2481                     orl             a,#0ffh         ; p3.(5-0)<-3f
0EAB F5B0           2482                     mov             p3,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    39

0EAD E5B0           2483                     mov             a,p3
0EAF 30E6A6         2484                     jnb             acc.6,rout6             ;error
0EB2 3004A6         2485                     jnb             bitizm,rlabelF
0EB5 75B0FE         2486                     mov             p3,#0feh                ;реж IZM
0EB8 E5B0           2487                     mov             a,p3
0EBA 30E6A7         2488                     jnb             acc.6,rizman
                    2489                                     ;;;;;;
0EBD 201232         2490                     jb              bitklb,goklb
0EC0 75B0FD         2491                     mov             p3,#0fdh
0EC3 E5B0           2492                     mov             a,p3
0EC5 30E696         2493                     jnb             acc.6,rknrazr             ;labelC
0EC8 75B0FB         2494                     mov             p3,#0fbh
0ECB E5B0           2495                     mov             a,p3
0ECD 30E64F         2496                     jnb             acc.6,knright           ;->
0ED0 75B0F7         2497                     mov             p3,#0f7h
0ED3 E5B0           2498                     mov             a,p3
0ED5 30E689         2499                     jnb             acc.6,rknopt                    ;T
0ED8 75B0EF         2500                     mov             p3,#0efh
0EDB E5B0           2501                     mov             a,p3
0EDD 30E615         2502                     jnb             acc.6,pyskst                    ;pysk/stop
0EE0 75B0DF         2503                     mov             p3,#0dfh
0EE3 E5B0           2504                     mov             a,p3
0EE5 30E658         2505                     jnb             acc.6,knvich
0EE8 020000   F     2506                     jmp             izmpaT
                    2507     
0EEB 3006B9         2508     outviR: jnb             bitvi11,gout6   
0EEE C214           2509                     clr             bitvich                         ;выход из режима выч R  
0EF0 C206           2510                     clr             bitvi11
                    2511                                     
0EF2 020000   F     2512     goklb:  jmp             out6
                    2513     
0EF5 200A0B         2514     pyskst: jb      bitbon,bufon            ;pysk/stop
0EF8 D20A           2515                     setb    bitbon  ;уст реж буфер вкл
                    2516     ;?              mov     r1,#volume      ;work   обьем блока
                    2517     ;               mov     @r1,#00
                    2518     ;               inc     r1
                    2519     ;?              mov     @r1,#0c7h               ;320h/4
0EFA 434B02         2520                     orl     bufind+11,#02h  ; on pysk
0EFD 120000   F     2521                     call    ind
0F00 020000   F     2522                     jmp     izmpaT
0F03 C20A           2523     bufon:  clr     bitbon  ;уст реж буфер выкл
0F05 534BFD         2524                     anl     bufind+11,#0fdh; off pysk
0F08 120000   F     2525                     call    ind
0F0B 020000   F     2526                     jmp     izmpaT
                    2527     
0F0E 79B0           2528     tizmri: mov     r1,#level
0F10 B70102         2529                     cjne    @r1,#1,right2
                    2530                                     ;10s->HET
0F13 8004           2531                     jmp             right3
                    2532     
0F15 07             2533     right2: inc             @r1
0F16 120000   F     2534                     call            lolevT
                    2535                     ;call   loadT   ;нажата кн-> в реж Tизм 
0F19 120000   F     2536     right3: call            ind
0F1C 020000   F     2537                     jmp             izmfun
                    2538     
                    2539                             
                    2540                             
0F1F 79AE           2541     knright:        mov             r1,#diap
                    2542                     ;перекл диапазон 1 поз вверх сбр массив
0F21 17             2543                     dec             @r1
0F22 B7FF04         2544                     cjne    @r1,#0ffh,diinc
0F25 7700           2545                     mov             @r1,#0
0F27 807A           2546                     jmp             izmfun
0F29 120000   F     2547     diinc:  call            clmassix
0F2C 78B3           2548                     mov             r0,#summa
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    40

0F2E 120000   F     2549                     call            clear4
0F31 786A           2550                     mov             r0,#rez_A0
0F33 120000   F     2551                     call            clear4
0F36 C20F           2552                     clr             bitnul          ;гасить светодиод НУЛЬ  
0F38 120000   F     2553                     call            loadUS
0F3B 8066           2554                     jmp             izmfun
                    2555     
0F3D 020000   F     2556     vit2_10:        jmp             out6
                    2557     
                    2558     
0F40                2559     knvich: ;12.02.07
0F40 789A           2560                     mov             r0,#parT
0F42 C3             2561                     clr             c
0F43 7404           2562                     mov             a,#4 
0F45 96             2563                     subb            a,@r0
0F46 40F5           2564                     jc              vit2_10;не нажимать кнопку ВЫЧ R T=10ms,2ms
0F48 2015F2         2565                     jb              biteizm,vit2_10;не нажимать кнопку ВЫЧ во время теста
0F4B 200613         2566                     jb              bitvi11,onvich
0F4E C204           2567                     clr             bitizm
0F50 D214           2568                     setb            bitvich
                    2569                                     
0F52 78B1           2570                     mov             r0,#vichR
0F54 7611           2571                     mov             @r0,#11h;;????????or 0
                    2572                             ;ВЫЧИСЛИТЬ
0F56 900000   F     2573                     mov             dptr,#teVICH
0F59 120000   F     2574                     call            lotext
0F5C 120000   F     2575                     call            z_1s;;;;;;;
0F5F 8073           2576                     jmp             viout;izmpaT
                    2577     
0F61 C214           2578     onvich: clr             bitvich ;???
                    2579                                                     ;;;;;;;;28.02
0F63 C206           2580                     clr             bitvi11
0F65 D204           2581                     setb            bitizm
                    2582                                                     ;;;;;;;;;
0F67 78B1           2583                     mov             r0,#vichR
0F69 7600           2584                     mov             @r0,#0
0F6B 803A           2585                     jmp             izmpaT
                    2586     ; изм упр слова при нажатии ИЗМ d3(k5 p4),d3(u5 p5)
0F6D 301820         2587     louizm: jnb             knizm,lou
0F70 79AE           2588                     mov             r1,#diap
0F72 C3             2589                     clr             c
0F73 7403           2590                     mov             a,#3
0F75 97             2591                     subb            a,@r1
0F76 5006           2592                     jnc             lldi23  ;10-2..10-5
                    2593                             ;10-6..10-11
0F78 E584           2594                     mov             a,p4
0F7A 54F7           2595                     anl             a,#0f7h ;d3
0F7C F584           2596                     mov             p4,a
0F7E E7             2597     lldi23: mov             a,@r1
0F7F 6403           2598                     xrl             a,#3
0F81 7002           2599                     jnz             lldi3
0F83 8005           2600                     jmp             lldi2           ;10-5
0F85 E7             2601     lldi3:  mov             a,@r1
0F86 6402           2602                     xrl             a,#2            ;
0F88 7006           2603                     jnz             lou             
0F8A E585           2604     lldi2:  mov             a,p5            ;10-4
0F8C 4408           2605                     orl             a,#08
0F8E F585           2606                     mov             p5,a
0F90 22             2607     lou:            ret
                    2608                               ;;;;;;
0F91 201511         2609     izman:  jb              biteizm,ontest  
0F94 201807         2610                     jb              knizm,knizmon
0F97                2611     izman1:
0F97 D218           2612                     setb            knizm           ;уст реж ИЗМ ВКЛ
                    2613                     ;       d3(k5 p4),d3(u5 p5)заслать us
0F99 120000   F     2614                     call            louizm 
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    41

0F9C 8005           2615                     jmp             izmfun
                    2616     
                    2617     
0F9E C218           2618     knizmon:        clr             knizm           ;уст реж ИЗМ ВЫКЛ
0FA0 120000   F     2619                     call            loadUS;восстановить us
0FA3                2620     izmfun:                 
0FA3 D207           2621                     setb            bitzus;bitbuf
0FA5 8000           2622     ontest: jmp             labelE;;;;;;;;;;;;
                    2623                                     ;;;;;;;;;;;;;;
0FA7                2624     izmpaT:
                    2625     ;;;;;;;;;;;;;;;;;
                    2626                     ;       clr             c 
                    2627                     ;       mov             r1,#parN
                    2628     
                    2629                     ;       mov             r0,#diap
                    2630                     ;       mov             a,#6            
                    2631                     ;       subb    a,@r0
                    2632                     ;       jnc             labelE          ;         ;10-2..10-8
                    2633                               
                    2634                     ;       mov             @r1,#2          ;10-9..10-11            
                    2635                     ;       jmp             labelE
                    2636     
                    2637     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0FA7 789A           2638     labelE: mov             r0,#parT
0FA9 793D           2639                     mov             r1,#chkl
0FAB B60108         2640                     cjne    @r0,#1,izmt2
0FAE 7700           2641                     mov             @r1,#0
0FB0 09             2642                     inc             r1
0FB1 7701           2643                     mov             @r1,#1;2
0FB3 020000   F     2644                     jmp             out6
0FB6 B60208         2645     izmt2:  cjne    @r0,#2,izmt3
0FB9 7700           2646                     mov             @r1,#0
0FBB 09             2647                     inc             r1
0FBC 7702           2648                     mov             @r1,#2;10;20
0FBE 020000   F     2649                     jmp             out6
                    2650     
0FC1 7700           2651     izmt3:  mov             @r1,#0
0FC3 09             2652                     inc             r1
0FC4 770A           2653                     mov             @r1,#10;20;0
0FC6 020000   F     2654                     jmp             out6
                    2655     
                    2656     
                    2657     
                    2658     
0FC9                2659     knopt: ;кнопка T                                ???
0FC9 C204           2660                     clr             bitizm
0FCB D210           2661                     setb            bitt2
0FCD 79B7           2662                     mov             r1,#load
0FCF 7704           2663                     mov             @r1,#4;1s
0FD1 120000   F     2664                     call            loadT           ;T=1S,10S,HET,0.1S,50mS,
                    2665                     
0FD4 793D           2666     viout:  mov             r1,#chkl
0FD6 7703           2667                     mov             @r1,#03
0FD8 09             2668                     inc             r1
0FD9 77E8           2669                     mov             @r1,#0e8h               ;1000
0FDB 020000   F     2670                     jmp             out6
                    2671     
0FDE                2672     knrazr:          ;???
0FDE C3             2673     labelC: clr             c
0FDF 78AF           2674                     mov             r0,#parN
0FE1 799A           2675                     mov             r1,#parT
0FE3 7402           2676                     mov             a,#2
0FE5 97             2677                     subb            a,@r1
0FE6 40BF           2678                     jc              labelE          ;T>2
0FE8 B60104         2679                     cjne            @r0,#1,noN1c
0FEB 7602           2680                     mov             @r0,#2          ;N=2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    42

0FED 80B8           2681                     jmp             labelE
                    2682     
0FEF B60204         2683     noN1c:  cjne            @r0,#2,not_1
0FF2 7603           2684                     mov             @r0,#3          ;N=3      ;10-2..10-8
0FF4 80B1           2685                     jmp             labelE
                    2686     
0FF6                2687     not_10: 
0FF6 7601           2688     not_1:  mov             @r0,#1                          ;N=1
0FF8 80AD           2689                     jmp             labelE
                    2690     
0FFA 020000   F     2691     rtizmri:        jmp             tizmri
                    2692     
0FFD 75B0F7         2693     ttout:  mov             p3,#0f7h
1000 20B6D1         2694                     jb              p3.6,viout
1003 D204           2695                     setb            bitizm  ;отжатие кнопки t
1005 C210           2696                     clr             bitt2
1007 809E           2697                     jmp             labelE
1009                2698     labelf:                 
1009 301035         2699                     jnb             bitt2,nofizm
100C 75B0FB         2700                     mov             p3,#0fbh
100F E5B0           2701                     mov             a,p3
1011 20E6E9         2702                     jb              acc.6,ttout;outF
1014 79B7           2703                     mov             r1,#load;parT
1016 B70502         2704                     cjne            @r1,#5,noft1
                    2705                        ;t=10s
1019 80B9           2706                     jmp             viout;out6;ft1izm
                    2707     
101B 07             2708     noft1:  inc             @r1;dec         @r1
101C 120000   F     2709     ft1izm: call    loadT;в буфер 2 записать текст с соотв load(parT)
                    2710                             ;call   ind
101F 80B3           2711                     jmp             viout;out6;??????????????/
                    2712     
                    2713                     ;увеличить счетчик задержки клавиатуры
1021 783D           2714     outF:           mov             r0,#chkl
1023 7627           2715                     mov             @r0,#27h
1025 08             2716                     inc             r0
1026 7610           2717                     mov             @r0,#10h
1028 020000   F     2718                     jmp             out6;out7
                    2719     
102B 020000   F     2720     noviR1: jmp             noviR
102E 78B1           2721     outvich:        mov             r0,#vichR
1030 7600           2722                     mov             @r0,#0
1032 C214           2723                     clr             bitvich
1034 C206           2724                     clr             bitvi11
1036 C211           2725                     clr             bitmenu
1038 D204           2726                     setb            bitizm
103A 78B2           2727                     mov             r0,#marker
103C 76FF           2728                     mov             @r0,#0ffh
103E 020000   F     2729                     jmp             labelE;out6     
                    2730     
1041 3014E7         2731     nofizm: jnb             bitvich,noviR1
1044 75B0DF         2732                     mov             p3,#0dfh
1047 30B6E4         2733                     jnb             p3.6,outvich;отжатие кнопки вычR
104A 78B1           2734                     mov             r0,#vichR
104C B61111         2735                     cjne    @r0,#11h,no11v6
104F 75B0FB         2736                     mov             p3,#0fbh;->
1052 20B61C         2737                     jb              p3.6,rviout;outF
1055 7612           2738                     mov             @r0,#12h                ;11= вычислить
1057 900000   F     2739     vvrr6:  mov             dptr,#teIZMK    ;       изм конст;teVICH
105A 120000   F     2740                     call            lotext
105D 020000   F     2741                     jmp             viout   ;outF
                    2742             
1060 B61211         2743     no11v6: cjne    @r0,#12h,no12v6
1063 75B0FB         2744                     mov             p3,#0fbh;->
1066 20B608         2745                     jb              p3.6,rviout;outF
1069 7611           2746                     mov             @r0,#11h;13h
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    43

106B 900000   F     2747                     mov             dptr,#teVICH;teOUT
106E 120000   F     2748                     call            lotext
1071 020000   F     2749     rviout: jmp             viout;outF
                    2750                     
1074 B61311         2751     no12v6: cjne    @r0,#13h,no13v6
1077 75B0FB         2752                     mov             p3,#0fbh;->
107A 20B6F4         2753                     jb              p3.6,rviout;outF
107D 7611           2754                     mov             @r0,#11h
107F 900000   F     2755                     mov             dptr,#teVICH
1082 120000   F     2756                     call            lotext
1085 020000   F     2757                     jmp             viout;outF
                    2758     
                    2759     ;кн -> A= 0000          ???
                    2760     ;кн -> B= +00000
1088 75B0FB         2761     no13v6: mov             p3,#0fbh
108B E5B0           2762                     mov             a,p3
108D 20E635         2763                     jb              acc.6,chanZ
1090 E53B           2764                     mov             a,movrig
1092 B40714         2765                     cjne    a,#7,kon_B      
1095 78B2           2766                     mov             r0,#marker      ;A= 0000
1097 B60716         2767                     cjne    @r0,#7,mark0_8  ;курсор справа ?
109A E53A           2768     rikn:           mov             a,movleft
109C F6             2769                     mov             @r0,a           ; уст курсор в кр левую поз+1
                    2770     ;                       29.12.06
                    2771     ;необходимо не портить цифру в следуюем справа знакоместе
                    2772     ;т е сохранить ее в ячейке для мигания в противном случае
                    2773     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего знакоместа
109D 78B2           2774                     mov             r0,#marker
109F 7440           2775                     mov             a,#bufind
10A1 26             2776                     add             a,@r0                   ;a=bufind+marker
10A2 F9             2777                     mov             r1,a
10A3 09             2778                     inc             r1
10A4 873C           2779                     mov             savba,@r1
10A6 020000   F     2780                     jmp             viout;outF
                    2781     
10A9 78B2           2782     kon_B:  mov             r0,#marker      ;B= +00000
10AB B60802         2783                     cjne    @r0,#8,mark0_8          ;курсор справа ?
10AE 80EA           2784                     jmp             rikn
10B0                2785     mark0_8:
                    2786     ;                               29.12.06
                    2787     ;;;;;;;;;;;;;;;;;;
                    2788     ;необходимо не портить цифру в следуюем справа знакоместе
                    2789     ;т е сохранить ее в ячейке для мигания в противном случае
                    2790     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    2791     ;       знакоместа ->B=+00000
10B0 78B2           2792                     mov             r0,#marker
10B2 7440           2793                     mov             a,#bufind
10B4 26             2794                     add             a,@r0                   ;a=bufind+marker
10B5 F9             2795                     mov             r1,a
10B6 09             2796                     inc             r1
10B7 873C           2797                     mov             savba,@r1
10B9 78B2           2798                     mov             r0,#marker
10BB 06             2799                     inc             @r0             ;       сдвинуть курсор вправо на 1
10BC C219           2800                     clr             bitmig
10BE B60901         2801                     cjne    @r0,#9,outma
10C1 18             2802                     dec             r0;ppp
10C2 020000   F     2803     outma:  jmp             viout;outF
                    2804     
10C5 75B0FE         2805     chanZ:  mov             p3,#0feh
10C8 E5B0           2806                     mov             a,p3
10CA 20E611         2807                     jb              acc.6,chanma
                    2808                             ;изм знак в старшем разряде на противоположн
10CD E543           2809                     mov             a,bufind+3
10CF B42B06         2810                     cjne            a,#2bh,noplus
10D2 75432D         2811                     mov             bufind+3,#2dh           ;+->-   
10D5 020000   F     2812                     jmp             viout;outF
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    44

10D8                2813     noplus:
10D8 75432B         2814                     mov             bufind+3,#2bh           ;-/+-
10DB 020000   F     2815                     jmp             viout;outF
10DE 75B0FD         2816     chanma: mov             p3,#0fdh
10E1 E5B0           2817                     mov             a,p3
10E3 20E603         2818                     jb              acc.6,outFl;labelL1
                    2819                     ;clr            bitmig
10E6 120000   F     2820     labelL1:        call            vvchibl;f       ;увеличить цифру 
                    2821     
10E9 793D           2822     outFl:  mov             r1,#chkl
10EB 7701           2823                     mov             @r1,#01
10ED 09             2824                     inc             r1
10EE 77F4           2825                     mov             @r1,#0f4h               ;1000
10F0 020000   F     2826                     jmp             out6
                    2827                     
                    2828     ;;;;;;;;;кнопка -> в режиме кнопки меню
                    2829     
10F3 020000   F     2830     rlabelL:        jmp             labelL
                    2831     
10F6 020000   F     2832     rfindmem:       jmp             findmem
                    2833     
10F9 3011FA         2834     noviR:  jnb             bitmenu,rfindmem;17.01.07
                    2835     ;;;;;;;;;;;;;
10FC 78B1           2836                     mov             r0,#vichR
10FE 7415           2837                     mov             a,#15h
1100 C3             2838                     clr             c
1101 96             2839                     subb            a,@r0
1102 4016           2840                     jc              ri21_23
                    2841     
1104 75B0FB         2842                     mov             p3,#0fbh; реж кн меню ->
1107 20B60A         2843                     jb              p3.6,ri6
110A 78B1           2844                     mov             r0,#vichR
110C B61508         2845                     cjne    @r0,#15h,norime
110F 7611           2846                     mov             @r0,#11h
1111 120000   F     2847     norime1:        call            lomenu
1114 020000   F     2848     ri6:            jmp             viout;out6
1117 06             2849     norime: inc             @r0
1118 80F7           2850                     jmp             norime1
                    2851             
111A 7423           2852     ri21_23:        mov             a,#23h          ;->
111C C3             2853                     clr             c
111D 96             2854                     subb            a,@r0
111E 4014           2855                     jc              ri_31
1120 75B0FB         2856                     mov             p3,#0fbh
1123 20B6EE         2857                     jb              p3.6,ri6
1126 B62308         2858                     cjne            @r0,#23h,no23ri
1129 7621           2859                     mov             @r0,#21h
112B 120000   F     2860                     call            lomenu
112E 020000   F     2861                     jmp             viout;out6
1131 06             2862     no23ri: inc             @r0
1132 80DD           2863                     jmp             norime1
1134 B63130         2864     ri_31:  cjne            @r0,#31h,no31ri;->19.2->57.6->19.2
                    2865     
                    2866     ;;
1137 75B0FB         2867                     mov             p3,#0fbh
113A 20B6D7         2868                     jb              p3.6,ri6
                    2869     ;;
113D 301312         2870                     jnb             bitv19,gosk19
1140 900000   F     2871                     mov             dptr,#teS57_6;57,6
1143 120000   F     2872                     call            lotext
1146 534B03         2873                     anl             bufind+11,#03h
1149 434B80         2874                     orl             bufind+11,#80h
114C C213           2875                     clr             bitv19
114E 7800           2876             mov     R0,#0           ;?
1150 8010           2877             sjmp    viout2  ;?
                    2878     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    45

1152 900000   F     2879     gosk19: mov             dptr,#teS19_2
1155 120000   F     2880                     call            lotext
1158 534B03         2881                     anl             bufind+11,#03h
115B 434B80         2882                     orl             bufind+11,#80h
115E D213           2883                     setb            bitv19
1160 7800           2884             mov     R0,#0   ;?
                    2885     
1162                2886     viout2:
                    2887     ;               mov             r0,#chkl                        ;???
                    2888     ;               mov             @r0,#3
                    2889     ;               inc             r0
                    2890     ;               mov             @r0,#0e8h               ;1000
                    2891     ;               jmp             viout;out6
1162 D208           2892             setb    speed_rs                ;?
1164 020000   F     2893             jmp     viout   ;begin  ;?
                    2894     
                    2895     
                    2896     
                    2897     ;labelS2:       jmp             out6
                    2898     
1167 7452           2899     no31ri: mov             a,#52h;42h              ;->
1169 C3             2900                     clr             c
116A 96             2901                     subb            a,@r0
116B 40A7           2902                     jc              ri6
116D 75B0FB         2903                     mov             p3,#0fbh                        ;41,42
1170 30B609         2904                     jnb             p3.6,rlabelN    ;кнопка ->(пароль 000)
1173 75B0FD         2905                     mov             p3,#0fdh
1176 20B69B         2906                     jb              p3.6,ri6
1179 020000   F     2907                     jmp             labelL1                                 ;кнопка 0..9  (паро
                             ль 000)
117C 020000   F     2908     rlabelN:        jmp             labelN
117F 020000   F     2909     moutF:  jmp             viout;outF
                    2910     ;;;;;;;;;;;;;;;;;;;;;;;;;
1182 020000   F     2911     rnnmemb:        jmp             nnmemb
                    2912     
1185                2913     nbimenu:
1185 300BFA         2914     findmem:        jnb             bitmem,rnnmemb
1188 79B0           2915                     mov             r1,#level                                                  
                                  ;-> кн ПАМЯТЬ (ОЧИСТКА ->ЗАПИСЬ-> ПРОСМОТР)
118A B71113         2916                     cjne            @r1,#11h,nomem11
                    2917                                             
118D 75B0FB         2918                     mov             p3,#0fbh
1190 E5B0           2919                     mov             a,p3
1192 20E6EA         2920                     jb              acc.6,moutF
1195 7712           2921                     mov             @r1,#12h
1197 900000   F     2922                     mov             dptr,#teWR      ;                       ЗАПИСЬ
119A 120000   F     2923                     call            lotext
119D 020000   F     2924                     jmp             viout;outF
                    2925     
11A0 B71213         2926     nomem11:   cjne         @r1,#12h,nomem12
11A3 75B0FB         2927                     mov             p3,#0fbh
11A6 E5B0           2928                     mov             a,p3
11A8 20E6D4         2929                     jb              acc.6,moutF
11AB 7713           2930                     mov             @r1,#13h
11AD 900000   F     2931                     mov             dptr,#teLIST            ;ПРОСМОТР
11B0 120000   F     2932                     call            lotext
11B3 020000   F     2933                     jmp             viout;outF
11B6 B71313         2934     nomem12:        cjne            @r1,#13h,nomem13
11B9 75B0FB         2935                     mov             p3,#0fbh
11BC E5B0           2936                     mov             a,p3
11BE 20E6BE         2937                     jb              acc.6,moutF
11C1 7714           2938                     mov             @r1,#14h
11C3 900000   F     2939                     mov             dptr,#teSTAT                    ;СТАТИСТИКА
11C6 120000   F     2940                     call            lotext
11C9 020000   F     2941                     jmp             viout;outF
                    2942                             
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    46

11CC B71413         2943     nomem13:        cjne            @r1,#14h,labelL
11CF 75B0FB         2944                     mov             p3,#0fbh
11D2 E5B0           2945                     mov             a,p3
11D4 20E6A8         2946                     jb              acc.6,moutF
11D7 7711           2947                     mov             @r1,#11h
11D9 900000   F     2948                     mov             dptr,#teCLE                     ;ОЧИСТКА
11DC 120000   F     2949                     call            lotext
11DF 020000   F     2950                     jmp             viout;outF
11E2                2951     labelL: 
                    2952                     ;;;;;
11E2 75B0DF         2953                     mov                     p3,#0dfh
11E5 30B697         2954                     jnb                     p3.6,moutF;в реж очистка полная не отрабатывать ВЫЧ
                              R
                    2955                     
                    2956                     ;ПОЛНАЯ->БЛОК 00(level 21->22)  ???
11E8 78B0           2957                     mov             r0,#level
11EA B6210E         2958                     cjne            @r0,#21h,nobl21
11ED 7622           2959                     mov             @r0,#22h                ;->БЛОК 
11EF 900000   F     2960                     mov             dptr,#teBL
11F2 120000   F     2961     me21_22:        call            lotext
                    2962                             
11F5 120000   F     2963                     call            z_05s;задержка чтобы не проскакивала пргр на следующий уров
                             ень
11F8 020000   F     2964                     jmp             viout;outF
                    2965     
11FB B62207         2966     nobl21: cjne            @r0,#22h,nobl22
11FE 900000   F     2967                     mov             dptr,#teFULL
1201 7621           2968                     mov             @r0,#21h                ;->ПОЛНАЯ
                    2969     
1203 80ED           2970                     jmp             me21_22
                    2971     
                    2972     ;labl21:           cjne @r0,#21h,nolev1
                    2973     ;                       mov             p3,#0fbh
                    2974     ;                       mov             a,p3
                    2975     ;                       jb              acc.6,loutF
                    2976     ;                       cjne    @r0,#21h,labl22
                    2977     ;                       mov             @r0,#22h
                    2978                             ;БЛОК
                    2979     ;                       call    lotext
                    2980     ;                       jmp             outF
                    2981     ;labl22:                mov             @r0,#21h
                    2982                             ;ПОЛНАЯ
                    2983     ;                       call    lotext
                    2984     ;                       jmp             outF
                    2985                      
1205 B62325         2986     nobl22: cjne    @r0,#23h,go31l
1208 75B0FB         2987     rigblo: mov             p3,#0fbh
120B 20B629         2988                     jb              p3.6,llev2
                    2989     
120E                2990     labL2:    ;  уст курсор в правую позицию 
                    2991                                     ;       кнопка                  ->
                    2992     ;;;;;;;;;;;;;;;;;;
                    2993     ;необходимо не портить цифру в следуюем справа знакоместе
                    2994     ;т е сохранить ее в ячейке для мигания в противном случае
                    2995     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    2996     ;       знакоместа
120E 78B2           2997                     mov             r0,#marker
1210 7440           2998                     mov             a,#bufind
1212 26             2999                     add             a,@r0                   ;a=bufind+marker
1213 F9             3000                     mov             r1,a
1214 09             3001                     inc             r1
1215 873C           3002                     mov             savba,@r1
1217 C219           3003                     clr             bitmig
                    3004     ;;;;;;;;;;;;;;;;
1219 78B2           3005                     mov             r0,#marker      ;курсор справа  ?
121B E53B           3006                     mov             a,movrig
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    47

121D C3             3007                     clr             c
121E 96             3008                     subb            a,@r0
121F 6006           3009                     jz              equ1l
1221 E53B           3010                     mov             a,movrig;уст в правую позицию
1223 F6             3011                     mov             @r0,a
1224 020000   F     3012                     jmp             viout;outF                                       
1227 E53A           3013     equ1l:  mov             a,movleft;уст в левую позицию
1229 F6             3014                     mov             @r0,a   
122A 020000   F     3015     loutF:  jmp             viout;outF
                    3016                     
                    3017     
122D B63102         3018     go31l:  cjne    @r0,#31h,go41l
1230 80D6           3019                     jmp             rigblo
1232 B6410B         3020     go41l:  cjne    @r0,#41h,norig2
1235 80D1           3021                     jmp             rigblo
                    3022     
1237 75B0FD         3023     llev2:  mov             p3,#0fdh
123A 20B6ED         3024                     jb              p3.6,loutF
123D 020000   F     3025                     jmp             labelL1
                    3026     
                    3027     ;->
1240 C3             3028     norig2: clr             c               ;32,33,34,42
1241 7431           3029                     mov             a,#31h
1243 96             3030                     subb            a,@r0
1244 50E4           3031                     jnc             loutF
1246 75B0FB         3032     rigblok:        mov             p3,#0fbh  ;32,33,34,42
1249 20B630         3033                     jb              p3.6,lev2go
124C B64302         3034     labelN: cjne            @r0,#43h,labN_2
124F 80D9           3035                     jmp             loutF
1251 B64402         3036     labN_2: cjne            @r0,#44h,labN_1 
1254 80D4           3037                     jmp             loutF                           
                    3038                             ;                               29.12.06
                    3039     ;;;;;;;;;;;;;;;;;;
                    3040     ;необходимо не портить цифру в следуюем справа знакоместе
                    3041     ;т е сохранить ее в ячейке для мигания в противном случае
                    3042     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3043     ;       знакоместа
1256 78B2           3044     labN_1: mov             r0,#marker
1258 7440           3045                     mov             a,#bufind
125A 26             3046                     add             a,@r0                   ;a=bufind+marker
125B F9             3047                     mov             r1,a
125C 09             3048                     inc             r1
125D 873C           3049                     mov             savba,@r1
                    3050     ;;;;;;;;;;;;;;;;;;;
125F 78B2           3051                     mov             r0,#marker      ;курсор справа  ?
1261 E53B           3052                     mov             a,movrig
1263 C3             3053                     clr             c
1264 96             3054                     subb            a,@r0
1265 7006           3055                     jnz             noequ1
1267 E53A           3056                     mov             a,movleft;уст в крайнюю левую позицию
1269 F6             3057                     mov             @r0,a
126A 020000   F     3058                     jmp             viout;outF
126D                3059     noequ1: ;29.12.06
                    3060     ;;;;;;;;;;;;;;;;;;
                    3061                             ;восстан знакоместо при мигании
                    3062                               ;т к в соотв яч буфера индикации пишется 20h(пробел)
126D 78B2           3063                     mov             r0,#marker
126F 7440           3064                     mov             a,#bufind
1271 26             3065                     add             a,@r0                   ;a=bufind+marker
1272 F9             3066                     mov             r1,a
                    3067                     ;mov            @r1,savba
1273 09             3068                     inc             r1
1274 873C           3069                     mov             savba,@r1
                    3070     ;;;;;;;;;;;;;;; 
1276 120000   F     3071                     call            marri;уст сдвиг в правую        позицию
1279 020000   F     3072                     jmp             viout;outF
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    48

127C 75B0FD         3073     lev2go: mov             p3,#0fdh
127F 30B603         3074                     jnb             p3.6,rlabelL1
1282 020000   F     3075                     jmp             viout;outF
                    3076     
1285 020000   F     3077     rlabelL1:       jmp             labelL1
                    3078     
1288                3079     nnmemb:
                    3080     
1288                3081     norim6:    ;kn menu
1288 D083           3082     out6:           pop             dph
128A D082           3083                     pop             dpl
128C D007           3084                     pop             rr7     
128E D006           3085                     pop             rr6
1290 D005           3086                     pop             rr5
1292 D004           3087                     pop             rr4
1294 D003           3088                     pop             rr3
1296 D002           3089                     pop             rr2
1298 D001           3090                     pop             rr1                             
129A D000           3091                     pop             rr0
129C D0D0           3092                     pop             psw
129E D0E0           3093                     pop             acc
                    3094             ;clr            bitmig
                    3095             ;mov            EIE2,#30H
                    3096             ;mov            a,P3IF
                    3097             ;anl            a,#0bfh
                    3098             ;mov            P3IF,a
                    3099             ;mov            P3,#0c0h
                    3100             ;;;;;;
12A0                3101     kkout6:
12A0 75AD00         3102                     mov             P3IF,#00 ;обязательно сбросить опять приходит на обработку 
                             прерывания
12A3 75B0C0         3103                     mov             P3,#0c0h
12A6 C219           3104                     clr             bitmig
12A8 E586           3105                     mov             a,P6            ;p6.4=0
12AA 54EF           3106                     anl             a,#0efh
12AC F586           3107                     mov             P6,a
12AE 00             3108                     nop
12AF 00             3109                     nop
12B0 E586           3110                     mov             a,P6                    ;p6.4=1 
12B2 4410           3111                     orl             a,#10h
12B4 F586           3112                     mov             P6,a    
                    3113                             ;;;;;;;;;
12B6 E5DA           3114                     mov             a,PCA0CPM0;     
12B8 4446           3115                     orl             a,#46h;anl              a,#0fbh
12BA F5DA           3116                     mov             PCA0CPM0,a
                    3117     
12BC 75CDD0         3118                     mov             TH2,#0d0h
12BF 75CC00         3119                     mov             TL2,#00
                    3120     
12C2 D2CA           3121                     setb            T2CON.2
12C4 D2AD           3122                     setb            ET2;IE.5
                    3123                             ;;;;;;;;                    
12C6 32             3124                     reti
                    3125     
                    3126     
12C7 020000   F     3127     knKMP:  jmp             out7
12CA 020000   F     3128     rout7:  jmp             out7    
12CD 020000   F     3129     rlabelH:        jmp             labelH
12D0 020000   F     3130     rknNUL: jmp             knNUL
12D3 020000   F     3131     rknleft:        jmp             knleft
                    3132     
12D6 75AD00         3133     no0chk: mov             P3IF,#00;               обязательно сбросить опять приходит на обра
                             ботку прерывания
12D9 75B0C0         3134                     mov             P3,#0c0h
12DC 32             3135                     reti
                    3136     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    49

12DD 020000   F     3137     rknMEM: jmp             knMEM
                    3138     
12E0                3139     keyb2:  ;IE7
                    3140     ;;;;;
                    3141                     ;       mov                     a,chkl          ;low
                    3142                     ;       jb                      acc.7,no0chk;
                    3143                             ;jnz                    no0chk
                    3144                             ;mov                    a,chkl                          ;high
                    3145                             ;jnz                    no0chk
                    3146     ;;;;
12E0 75E700         3147                     mov             EIE2,#00H
12E3 75AD00         3148                     mov             P3IF,#00
                    3149     
12E6 C0E0           3150                     push    acc
12E8 C0D0           3151                     push    psw
12EA C000           3152                     push    rr0
12EC C001           3153                     push    rr1
12EE C002           3154                     push    rr2
12F0 C003           3155                     push    rr3
12F2 C004           3156                     push    rr4
12F4 C005           3157                     push    rr5
12F6 C006           3158                     push    rr6
12F8 C007           3159                     push    rr7
12FA C082           3160                     push    dpl
12FC C083           3161                     push    dph
                    3162                             ;clr            bitmig
                    3163                       ;;;;;;;;;;;;;;
12FE 120000   F     3164                     call    z_01s   ;0,1s
                    3165                               ;восстан знакоместо при мигании
                    3166                               ;т к в соотв яч буфера индикации пишется 20h(пробел)
1301 78B2           3167                     mov             r0,#marker
1303 7440           3168                     mov             a,#bufind
1305 26             3169                     add             a,@r0                   ;a=bufind+marker
1306 F9             3170                     mov             r1,a
1307 A73C           3171                     mov             @r1,savba
                    3172                                     ;;;;;;;;;;;
                    3173     
1309 E5B0           3174                     mov             a,p3
130B 20E7BC         3175                     jb              acc.7,rout7
130E E5B0           3176                     mov             a,p3
1310 74FF           3177                     mov             a,#0ffh         ; p3.(5-0)<-3f
1312 F5B0           3178                     mov             p3,a
1314 E5B0           3179                     mov             a,p3
1316 30E7B1         3180                     jnb             acc.7,rout7             ;error
1319 3004B1         3181                     jnb             bitizm,rlabelH
131C 75B0FE         3182                     mov             p3,#0feh                ;реж IZM
131F E5B0           3183                     mov             a,p3
1321 30E7AC         3184                     jnb             acc.7,rknNUL
1324 75B0FD         3185                     mov             p3,#0fdh
1327 E5B0           3186                     mov             a,p3
1329 30E79B         3187                     jnb             acc.7,knKMP
132C 75B0FB         3188                     mov             p3,#0fbh
132F E5B0           3189                     mov             a,p3
1331 30E79F         3190                     jnb             acc.7,rknleft
1334 75B0F7         3191                     mov             p3,#0f7h
1337 00             3192                     nop
1338 00             3193                     nop
1339 00             3194                     nop
133A 00             3195                     nop
133B E5B0           3196                     mov             a,p3
133D 30E76F         3197                     jnb             acc.7,knAVP
1340 75B0EF         3198                     mov             p3,#0efh
1343 E5B0           3199                     mov             a,p3
1345 30E795         3200                     jnb             acc.7,rknMEM
1348 75B0DF         3201                     mov             p3,#0dfh
134B E5B0           3202                     mov             a,p3    
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    50

134D 30E722         3203                     jnb             acc.7,knmenu
1350                3204     an_t7:             ;;;;;;;;;;;;
                    3205                     
                    3206     ;       clr             c
                    3207     ;       mov             r1,#parN
                    3208     ;
                    3209     ;                       mov             r0,#diap
                    3210     ;                       mov             a,#6            
                    3211     ;                       subb    a,@r0
                    3212     ;                       jnc             goto7           ;         ;10-2..10-8
                    3213                               
                    3214     ;                       mov             @r1,#2          ;10-9..10-11            
                    3215                             
                    3216                             ;;;;;;;;;;;;
1350 799A           3217     goto7:  mov             r1,#parT
1352 783D           3218                     mov             r0,#chkl
1354 B70108         3219                     cjne            @r1,#1,not1_7
1357 7600           3220                     mov             @r0,#00
1359 08             3221                     inc             r0
135A 7601           3222                     mov             @r0,#1;2
135C 020000   F     3223                     jmp             out7
                    3224                             
                    3225     
135F B70208         3226     not1_7: cjne            @r1,#2,not2_7
1362 7600           3227                     mov             @r0,#00
1364 08             3228                     inc             r0
1365 7602           3229                     mov             @r0,#2;10;20
1367 020000   F     3230                     jmp             out7
136A 7600           3231     not2_7: mov             @r0,#00
136C 08             3232                     inc             r0
136D 760A           3233                     mov             @r0,#10;20;0
136F 020000   F     3234     merr:           jmp             out7
                    3235     
                    3236     
1372                3237     knmenu:
                    3238     
                    3239     ;               mov     cnt_out,#33             ;+
                    3240     ;               mov     p_out,#0DAh
                    3241     
                    3242     
1372 2006FA         3243                     jb              bitvi11,merr
1375 20151C         3244                     jb              biteizm,menuoff
                    3245                                     ;;;;;
1378 201225         3246                     jb              bitklb,klboff
137B C204           3247                     clr             bitizm          ;off IZM
137D D211           3248                     setb            bitmenu
137F C217           3249                     clr             bitoll
1381 900000   F     3250                     mov             dptr,#teTESI    ;в буф2 записать ТЕСТ-ИЗМЕР
1384 120000   F     3251                     call            lotext
1387 534B03         3252                     anl             bufind+11,#03h  ;погасить запятые
138A 120000   F     3253                     call            ind
138D 78B1           3254                     mov             r0,#vichR
138F 7611           3255                     mov             @r0,#11h
1391 020000   F     3256                     jmp             onmem11
1394                3257     menuoff:
1394 78B1           3258                     mov             r0,#vichR
1396 7600           3259                     mov             @r0,#00
1398 C215           3260                     clr             biteizm
139A 120000   F     3261                     call            loadus
139D 020000   F     3262                     jmp             out7
                    3263     
13A0 C212           3264     klboff: clr             bitklb
13A2 120000   F     3265                     call            loadUS
13A5 78B1           3266                     mov             r0,#vichR
13A7 7600           3267                     mov             @r0,#00
13A9 020000   F     3268                     jmp             out7
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    51

                    3269     
13AC 020000   F     3270     rendkalib:      jmp             endkalib
                    3271     
13AF 2012FA         3272     knAVP:  jb              bitklb,rendkalib        
13B2 200504         3273                     jb              bitavp,meavp
13B5 D205           3274                     setb            bitavp
13B7 8097           3275                     jmp             an_t7;onmem11
13B9 C205           3276     meavp:  clr             bitavp
13BB 8093           3277                     jmp             an_t7;onmem11
                    3278     
13BD 201207         3279     knleft: jb              bitklb,lefkl
                    3280                                     ;;;;;;;;
13C0 79AE           3281                     mov             r1,#diap
13C2 07             3282                     inc             @r1             ;перекл диапазон 1 поз в сбр массив
13C3 B70A03         3283                     cjne    @r1,#0ah,nodi6
13C6 17             3284                     dec             @r1
13C7 8087           3285     lefkl:  jmp             an_t7
                    3286     
13C9                3287     nodi6:             ;    cjne    @r1,#0,an_t7
13C9 120000   F     3288                     call            clmassix
13CC 78B3           3289                     mov             r0,#summa
13CE 120000   F     3290                     call            clear4  
13D1 786A           3291                     mov             r0,#rez_A0
13D3 120000   F     3292                     call            clear4
13D6 C20F           3293                     clr             bitnul          ;гасить светодиод НУЛЬ  
13D8 120000   F     3294                     call            loadUS
13DB 020000   F     3295                     jmp             an_t7
                    3296     
13DE 200F0F         3297     knNUL:  jb              bitnul,ybnul
13E1 D20F           3298                     setb            bitnul
13E3 789C           3299                     mov             r0,#rez_A3      ;A3
13E5 120000   F     3300                     call            resar2
13E8 786A           3301                     mov             r0,#rez_A0      
13EA 120000   F     3302                     call            saver2;A0<-A3
13ED 020000   F     3303                     jmp             goto7;an_t7
                    3304     
13F0 C20F           3305     ybnul:  clr             bitnul
13F2 900000   F     3306                     mov             DPTR,#ch0 
13F5 120000   F     3307                     CALL    ldc_long                 ; r2..r5 <-- 0
13F8 786A           3308                     mov             r0,#rez_A0      ;A0=0
13FA 120000   F     3309                     call            saver2
13FD 020000   F     3310                     jmp             goto7;an_t7
                    3311     
1400 301021         3312     labelH: jnb             bitt2,nolah
1403 75B0FB         3313                     mov             p3,#0fbh   ;вход в режим изм Т
1406 534A8F         3314                     anl             bufind+10,#8fh
1409 79B7           3315                     mov             r1,#load;parT
140B 20B70D         3316                     jb              p3.7,rhnot1
140E B70003         3317                     cjne    @r1,#0,inct;
1411 020000   F     3318                     jmp             out7;hyest6
1414 17             3319     inct:           dec             @r1                     ;Tизм+1
                    3320                             
1415 120000   F     3321                     call            loadT   ;в буфер2 записать текст  в соотв с     Tизм
1418                3322     hnot2:          ;       call    ind
1418 020000   F     3323                     jmp             onmem11;out7
141B 020000   F     3324     rhnot1: jmp             hnot1
                    3325      ;rnoviR:               jmp             noviR
141E 020000   F     3326     rlabelK:        jmp             labelK
1421 020000   F     3327     rlabelI:        jmp             labelI          
                    3328      ;;;;;;;;;;;;;;;;;;;
                    3329     
1424 3014F7         3330     nolah:  jnb             bitvich,rlabelK 
                    3331                     ;увеличить счетчик задержки клавиатуры
                    3332                     ;;              mov             r0,#chkl
                    3333                     ;;              mov             @r0,#27h
                    3334                     ;;              inc             r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    52

                    3335                     ;;              mov             @r0,#10h
                    3336     
1427 78B1           3337                     mov             r0,#vichR
1429 B61128         3338                     cjne    @r0,#11h,rhnor11;rlabelI;;
142C 75B0FB         3339                     mov             p3,#0fbh   ;<-
142F 20B730         3340                     jb              p3.7,noh37;routF
1432 B6110B         3341                     cjne    @r0,#11h,hr12
1435 7612           3342                     mov             @r0,#12h;11h;= вычислить
1437 900000   F     3343                     mov             dptr,#teIZMK    ;       изм конст;teVICH
143A 120000   F     3344     hvi1113:        call            lotext  ;в буфер 2 записать текст в соотв с состоянием
143D 020000   F     3345                     jmp             onmem11;goto7
                    3346     
1440 B61207         3347     hr12:           cjne    @r0,#12h,hnor12                 ;???
1443 7611           3348     lovich: mov             @r0,#11h
1445 900000   F     3349                     mov             dptr,#teVICH
1448 80F0           3350                     jmp             hvi1113         
144A B61307         3351     hnor12: cjne    @r0,#13h,rhnor11
144D 7612           3352     loizmk: mov             @r0,#12h
144F 900000   F     3353                     mov             dptr,#teIZMK    ;       изм конст
                    3354                                        
1452 80E6           3355                     jmp             hvi1113
                    3356     
1454 804C           3357     rhnor11:        jmp             hnor11
                    3358     
1456 8057           3359     rvvizko:        jmp             vvizko
1458 C214           3360     vioutF: clr             bitvich
145A C206           3361                     clr             bitvi11
145C 020000   F     3362                     jmp             viout;outF
145F 020000   F     3363     toutF:  jmp             viout;outF
                    3364     
1462 75B0F7         3365     noh37:  mov             p3,#0f7h
1465 20B7F7         3366                     jb              p3.7,toutF;vioutF
1468 B611EB         3367                     cjne    @r0,#11h,rvvizko
146B D206           3368                     setb            bitvi11    ;нажат ввод ВЫЧИСЛИТЬ
146D D204           3369                     setb            bitizm
146F 534B07         3370                     anl             bufind+11,#07h
1472 434B10         3371                     orl             bufind+11,#10h;точка после 1 знакоместа
1475 020000   F     3372                     jmp             goto7;
                    3373     
                    3374     
1478 80E8           3375     rnoh37: jmp             noh37
147A B6120D         3376     norr11: cjne    @r0,#12h,norr12
147D 75B0FB         3377                     mov             p3,#0fbh   ;<-
1480 20B7F5         3378                     jb              p3.7,rnoh37;routF
1483 760B           3379                     mov             @r0,#11;12->11
1485 80BC           3380                     jmp             lovich
                    3381     
1487 020000   F     3382     labelI2:        jmp             labelI
148A B613FA         3383     norr12: cjne    @r0,#13h,labelI2
148D 75B0FB         3384                     mov             p3,#0fbh   ;<-
1490 20B7E5         3385                     jb              p3.7,rnoh37
1493 7612           3386                     mov             @r0,#12h
1495 80B6           3387                     jmp             loizmk
                    3388                             ;;;;
1497 C214           3389     clrvich:        clr             bitvich
1499 D204           3390                     setb            bitizm
149B A8B2           3391                     mov             r0,marker
149D 76FF           3392                     mov             @r0,#0ffh
149F 020000   F     3393                     jmp             goto7;  routF
                    3394     
                    3395     ;rnoh37:        jmp             noh37
                    3396      ;ввод изм конст
14A2 B612E5         3397     hnor11: cjne    @r0,#12h,norr12;clrvich
14A5 75B0FB         3398                     mov             p3,#0fbh   
14A8 20B7CD         3399                     jb              p3.7,rnoh37;lovich;;изм конст <-  выч
14AB 7611           3400                     mov             @r0,#11h
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    53

14AD 8094           3401                     jmp             lovich
                    3402     
14AF 78B1           3403     vvizko: mov             r0,#vichR
14B1 E6             3404                     mov             a,@r0
                    3405                     ;       cjne    @r0,#12h,clrvich
14B2 B412E2         3406                     cjne    a,#12h,clrvich
14B5 7621           3407                     mov             @r0,#21h                ;изм конст->U=+0000     (vvod)
14B7 78B2           3408                     mov             r0,#marker
14B9 7604           3409                     mov             @r0,#4;9
14BB 753A04         3410                     mov             movleft,#4
14BE 753B07         3411                     mov             movrig,#7
14C1 900000   F     3412                     mov             dptr,#teAequ0
14C4 120000   F     3413                     call            lotext
14C7 120000   F     3414                     call            outA
14CA 534B0F         3415                     anl             bufind+11,#0fh
                    3416             ;       mov             a,bufind+11
                    3417             ;       anl             a,#0f0h
                    3418             ;       mov             bufind+11,a
14CD 434B40         3419                     orl             bufind+11,#40h;бит точки после 7 знакоместа(a=000.0 v)
14D0 020000   F     3420                     jmp             goto7;routF
                    3421     ;hnor13:        jmp             hnor12          
14D3 B6210C         3422     izchi:  cjne    @r0,#21h,tlabelI
                    3423     ;<- при вводе цифр А                            
                    3424                     ;mov            p3,#0fbh   
                    3425                     ;jnb            p3.7,li21
                    3426                     ;clr            bitmig
14D6 78B2           3427                     mov             r0,#marker
14D8 16             3428                     dec             @r0
14D9 B60201         3429                     cjne    @r0,#2,li21
14DC 06             3430                     inc             @r0;marker=3 +/-
14DD C219           3431     li21:           clr             bitmig
14DF 020000   F     3432                     jmp             goto7;outF
                    3433     
14E2 020000   F     3434     tlabelI:        jmp             labelI
                    3435     
                    3436     ;                       load    0 1 2 3 4 5             
14E5 06050403       3437     sootv:  db              6,5,4,3,2,1;parT
14E9 0201                    
                    3438     ;
14EB 020000   F     3439     nnnott: jmp             viout
                    3440     ;нажата кн ввод при наборе Т
14EE 75B0F7         3441     hnot1:  mov             p3,#0f7h
14F1 20B7F7         3442                     jb              p3.7,nnnott;routF;out7
14F4 B70549         3443                     cjne    @r1,#5,nohnot1  ;r1=load
14F7 794A           3444                     mov             r1,#bufind+10;в буфере 1 зажечь 10s
14F9 E7             3445                     mov             a,@r1
14FA 548F           3446                     anl             a,#8fh
14FC 4440           3447                     orl             a,#40h;.6
14FE F7             3448                     mov             @r1,a
14FF 8000           3449                     jmp             loadb
                    3450                             
                    3451                                     
1501 789A           3452     loadB:  mov             r0,#parT
1503 900000   F     3453                     mov             dptr,#sootv
1506 79B7           3454                     mov             r1,#load                
1508 E7             3455                     mov             a,@r1;load
1509 93             3456                     movc    a,@a+dptr
150A F6             3457                     mov             @r0,a
150B 120000   F     3458                     call            loab12  ;установить B1,B2 в соотв с Tизм
                    3459                              ;r4=b1 r5=b2
150E 120000   F     3460                     call            iniacp;инициализация АЦП
1511 120000   F     3461                     call            loadUS
1514 120000   F     3462                     call            clmassix        
1517 D204           3463                     setb            bitizm
1519 C210           3464                     clr             bitt2
151B 534A8F         3465                     anl             bufind+10,#8fh
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    54

151E C3             3466                     clr             c
151F 789A           3467                     mov             r0,#parT
1521 79AF           3468                     mov             r1,#parN
1523 7402           3469                     mov             a,#2
1525 96             3470                     subb            a,@r0
1526 5005           3471                     jnc             loadB2
1528 7701           3472                     mov             @r1,#1;N=1         ;T>=2
152A 020000   F     3473     bout7:  jmp             goto7;out7
                    3474     
152D B702FA         3475     loadB2: cjne    @r1,#2,bout7
1530 7702           3476                     mov             @r1,#2;N=2
1532 020000   F     3477                     jmp             goto7;out7
1535                3478     nohnot2:        ;в буфере 1 зажечь <=0,1s
1535 794A           3479                     mov             r1,#bufind+10
1537 E7             3480                     mov             a,@r1
1538 4410           3481                     orl             a,#10h;.4
153A F7             3482                     mov             @r1,a
153B 120000   F     3483                     call            ind
153E 80C1           3484                     jmp             loadB
1540 B704F2         3485     nohnot1:        cjne    @r1,#4,nohnot2  ;ввод кнопка Т  
1543 794A           3486                     mov             r1,#bufind+10;в буфере 1 зажечь 1s
1545 E7             3487                     mov             a,@r1
1546 4420           3488                     orl             a,#20h;.5
1548 F7             3489                     mov             @r1,a
1549 80B6           3490                     jmp             loadB
                    3491     
                    3492     ;кнопка ПАМЯТЬ                  ???
154B 2012DC         3493     knMEM:  jb              bitklb,bout7    ;в реж калибровки не нажимать память
154E C204           3494                     clr             bitizm          ;off IZM
1550 900000   F     3495                     mov             dptr,#teLIST    ;CLE
1553 120000   F     3496                     call            lotext          ;в буф2 записать ОЧИСТКА
1556 D20B           3497                     setb            bitmem          ;нажата кнопка ПАМЯТЬ
1558 534BEF         3498                     anl             bufind+11,#0efh ;убрать точку с 1го знакоместа
155B 434B01         3499                     orl             bufind+11,#01   ;зажечь светодиод память
155E 120000   F     3500                     call            ind
1561 78B0           3501                     mov             r0,#level
1563 7613           3502                     mov             @r0,#13h;11h
                    3503     
1565 783D           3504     onmem11:        mov             r0,#chkl
1567 7603           3505                     mov             @r0,#03
1569 08             3506                     inc             r0
156A 76E8           3507                     mov             @r0,#0e8h       ;1000
156C 020000   F     3508                     jmp             out7            ;goto7
                    3509     
156F 020000   F     3510     rnomemk:        jmp             nomemk          ;
1572 78B0           3511     outkmem:        mov             r0,#level
1574 7600           3512                     mov             @r0,#0
1576 78B1           3513                     mov             r0,#vichR
1578 7600           3514                     mov             @r0,#0
157A C20B           3515                     clr             bitmem
157C C214           3516                     clr             bitvich
157E C206           3517                     clr             bitvi11
1580 C211           3518                     clr             bitmenu
1582 D204           3519                     setb            bitizm
1584 78B2           3520                     mov             r0,#marker
1586 76FF           3521                     mov             @r0,#0ffh
1588 020000   F     3522                     jmp             vvod2_10
                    3523                                     
158B 020000   F     3524     offmenum:       jmp     goto7   
                    3525     
158E                3526     labelK:
158E 300BDE         3527                     jnb     bitmem,rnomemk          ;кн память (ввод и <-)
                    3528                             ;;;;;;;
1591 75B0DF         3529                     mov     p3,#0dfh;(код кнопки меню)
1594 30B7F4         3530                     jnb     p3.7,offmenum
                    3531                             ;;;;;;;
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    55

1597 75B0EF         3532                     mov     p3,#0efh
159A 30B7D5         3533                     jnb     p3.7,outkmem            ;отжатие кн память на любом уровне обработк
                             и памяти
159D 78B0           3534                     mov     r0,#level
159F B6114A         3535                     cjne    @r0,#11h,klev1;nome11
15A2 75B0FB         3536     lefmem11:       mov     p3,#0fbh
15A5 E5B0           3537                     mov     a,p3
15A7 20E70D         3538                     jb      acc.7,rkvvod0
15AA B6110D         3539                     cjne    @r0,#11h,locle          ;<-memory
15AD 7614           3540                     mov     @r0,#14h
15AF 900000   F     3541     lolist: mov     dptr,#teSTAT
15B2 120000   F     3542                     call    lotext           ;СТАТИСТИКА
15B5 80AE           3543                     jmp     onmem11;goto7;
15B7 020000   F     3544     rkvvod0:        jmp     kvvod0
                    3545     
                    3546     
15BA B6120A         3547     locle:  cjne            @r0,#12h,lowr           ;<-memory
15BD 7611           3548                     mov             @r0,#11h                   ;ОЧИСТКА
15BF 900000   F     3549     loadcle:        mov             dptr,#teCLE
15C2 120000   F     3550                     call            lotext
15C5 809E           3551                     jmp             onmem11;goto7
                    3552     
15C7 B6130A         3553     lowr:           cjne    @r0,#13h,lostat
15CA 7612           3554                     mov             @r0,#12h
15CC 900000   F     3555     lowr1:  mov             dptr,#teWR                ;ЗАПИСЬ
15CF 120000   F     3556                     call            lotext
15D2 8091           3557                     jmp             onmem11;goto7
                    3558     
15D4 7613           3559     lostat: mov             @r0,#13h
15D6 900000   F     3560                     mov             dptr,#teLIST              ;ПРОСМОТР
15D9 120000   F     3561                     call            lotext
15DC 8087           3562                     jmp             onmem11;goto7
15DE B6141A         3563     me_14:  cjne    @r0,#14h,klev22
15E1 7613           3564                     mov             @r0,#13h
15E3 900000   F     3565                     mov             dptr,#teLIST              ;;ПРОСМОТР
15E6 120000   F     3566                     call            lotext
15E9 020000   F     3567                     jmp             goto7
15EC B61202         3568      klev1: cjne    @r0,#12h,klev2
15EF 80B1           3569                     jmp             lefmem11
15F1 B61302         3570     klev2:  cjne    @r0,#13h,klev3;11-14   klev22     ;11-13 нет
15F4 80AC           3571                     jmp             lefmem11
15F6 B61402         3572     klev3:  cjne    @r0,#14h,klev22;
15F9 80A7           3573                     jmp             lefmem11
                    3574     ;<- vvod на более низких уровнях
15FB B62117         3575     klev22: cjne    @r0,#21h,klev21
15FE 75B0FB         3576     lev220: mov             p3,#0fbh
1601 20B776         3577                     jb              p3.7,kgo23
1604 B6210B         3578                     cjne    @r0,#21h,kfullr
1607 7622           3579                     mov             @r0,#22h
1609 900000   F     3580                     mov             dptr,#teBL
160C 120000   F     3581                     call            lotext
160F 020000   F     3582                     jmp             goto7;outF
1612 020000   F     3583     kfullr: jmp             kfull                           
1615 B6220E         3584     klev21: cjne    @r0,#22h,klev23
1618 80E4           3585                     jmp             lev220
                    3586     
161A 020000   F     3587     rlabL2: jmp             labL2
161D 020000   F     3588     rlabM:  jmp             labM
1620 020000   F     3589     ques:           jmp             out7
1623 020000   F     3590     ddoutfr:        jmp             ddoutf
                    3591     
1626 B623F4         3592     klev23: cjne    @r0,#23h,rlabM
1629 75B0FB         3593                     mov     p3,#0fbh
162C 30B7F1         3594                     jnb             p3.7,ques;errr labL2
162F 75B0F7         3595                     mov     p3,#0f7h
1632 20B7EE         3596                     jb              p3.7,ddoutfr
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    56

                    3597                                     ;       считать с индикатора  
1635 C3             3598                     clr                     c
1636 E547           3599                     mov             a,bufind+7      
1638 9430           3600                     subb            a,#30h
163A B40002         3601                     cjne            a,#0,chaibl
163D 7401           3602                     mov             a,#1                    ;номера блоков 1..4
163F F538           3603     chaibl: mov             nblok,a
                    3604                                      ;очистить блок памяти с набранным номером
                    3605                                     ;150h..1000h( 150h+nblok*320h)
1641 120000   F     3606                     call            adrblok         ;dptr-
1644 79B8           3607                     mov                     r1,#work                ;обьем блока
1646 7703           3608                     mov                     @r1,#03
1648 09             3609                     inc                     r1
1649 7720           3610                     mov                     @r1,#20h                        ;320h
                    3611     
164B 79D5           3612             mov     r1,#volume      ;?обьем блока for write
164D 7700           3613             mov     @r1,#00
164F 09             3614             inc     r1
1650 77C7           3615             mov     @r1,#0c7h       ;?320h/4
                    3616     
1652                3617     goonoff:
1652 E4             3618                     clr             a
1653 F0             3619                     movx            @dptr,a
1654 A3             3620                     inc             dptr
1655 79B9           3621                     mov             r1,#work+1
1657 120000   F     3622                     call            chminus
165A 78B8           3623                     mov             r0,#work
165C E6             3624                     mov             a,@r0
165D 30E7F2         3625                     jnb             acc.7,goonoff
1660 C20B           3626                     clr     bitmem  ;сбр признак памяти 
1662 D204           3627                     setb    bitizm
                    3628                     ;после очистки блока сохраняем в saven_bl 
                    3629                     ;адрес второго с конца измерения потому добавляем 8
1664 120000   F     3630                     call            adrblok;dptr-начало блока
                    3631                     ;       mov                     a,dpl
                    3632                     ;       add                     a,#8
                    3633                     ;       mov                     dpl,a
                    3634                     ;       mov                     a,dph
                    3635                     ;       addc            a,#0
                    3636                     ;       mov                     dph,a
1667 120000   F     3637                     call            save_hl;подготовка записи в начало блока
166A 78B2           3638                     mov             r0,#marker
166C 76FF           3639                     mov             @r0,#0ffh
166E 020000   F     3640                     jmp                     vvod2_10
1671 020000   F     3641                     jmp     goto7
                    3642     
1674 020000   F     3643     rddoutf:        jmp             ddoutf
1677 020000   F     3644     rgo23no:        jmp             go23no
                    3645     
                    3646     ;vvod   БЛОК->БЛОК 00           
167A 75B0F7         3647     kgo23:  mov     p3,#0f7h
167D 20B7F4         3648                     jb              p3.7,rddoutf
1680 B621F4         3649                     cjne    @r0,#21h,rgo23no
                    3650                     ;очистить память 150..dd0h
                    3651                             ;1й блок
1683 900150         3652                     mov                     dptr,#150h
1686 79B8           3653                     mov                     r1,#work                ;обьем блока
1688 7703           3654                     mov                     @r1,#03
168A 09             3655                     inc                     r1
168B 7720           3656                     mov                     @r1,#20h                        ;320h
168D                3657     gooff1:
168D E4             3658                     clr                     a
168E F0             3659                     movx            @dptr,a
168F A3             3660                     inc                     dptr
1690 79B9           3661                     mov                     r1,#work+1
1692 120000   F     3662                     call            chminus
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    57

1695 78B8           3663                     mov             r0,#work
1697 E6             3664                     mov             a,@r0
1698 30E7F2         3665                     jnb             acc.7,gooff1
169B 900150         3666                     mov                     dptr,#150h;начало 1 го блока
                    3667                     ;после очистки блока сохраняем в saven_bl 
                    3668                     ;адрес второго с конца измерения потому добавляем 8
                    3669     ;                               call            save_hl;подготовка записи в начало блока
                    3670     ;2й блок
169E 900470         3671                     mov                     dptr,#470h
16A1 79B8           3672                     mov                     r1,#work                ;обьем блока
16A3 7703           3673                     mov                     @r1,#03
16A5 09             3674                     inc                     r1
16A6 7720           3675                     mov                     @r1,#20h                        ;320h
16A8                3676     gooff2:
16A8 E4             3677                     clr                     a
16A9 F0             3678                     movx            @dptr,a
16AA A3             3679                     inc                     dptr
16AB 79B9           3680                     mov                     r1,#work+1
16AD 120000   F     3681                     call            chminus
16B0 78B8           3682                     mov             r0,#work
16B2 E6             3683                     mov             a,@r0
16B3 30E7F2         3684                     jnb             acc.7,gooff2
16B6 900470         3685                     mov                     dptr,#470h;начало 2 го блока
                    3686     ;                       call            save_hl;подготовка записи в начало блока
                    3687     ;3й блок
16B9 900790         3688                     mov                     dptr,#790h
16BC 79B8           3689                     mov                     r1,#work                ;обьем блока
16BE 7703           3690                     mov                     @r1,#03
16C0 09             3691                     inc                     r1
16C1 7720           3692                     mov                     @r1,#20h                        ;320h
                    3693     
16C3                3694     gooff3:
16C3 E4             3695                     clr                     a
16C4 F0             3696                     movx            @dptr,a
16C5 A3             3697                     inc                     dptr    
16C6 79B9           3698                     mov                     r1,#work+1
16C8 120000   F     3699                     call            chminus
16CB 78B8           3700                     mov             r0,#work
16CD E6             3701                     mov             a,@r0
16CE 30E7F2         3702                     jnb             acc.7,gooff3
16D1 900790         3703                     mov                     dptr,#790h;начало 3 го блока
                    3704                     ;после очистки блока сохраняем в saven_bl 
                    3705                     ;адрес второго с конца измерения потому добавляем 8
                    3706                     ;       call            save_hl;подготовка записи в начало блока
                    3707     ;4й блок
16D4 900AB0         3708                     mov                     dptr,#0ab0h
16D7 79B8           3709                     mov                     r1,#work                ;обьем блока
16D9 7703           3710                     mov                     @r1,#03h
16DB 09             3711                     inc                     r1
16DC 7720           3712                     mov                     @r1,#20h                        ;320h
16DE                3713     gooff4:
16DE E4             3714                     clr                     a
16DF F0             3715                     movx            @dptr,a
16E0 A3             3716                     inc                     dptr
16E1 79B9           3717                     mov                     r1,#work+1
16E3 120000   F     3718                     call            chminus
16E6 78B8           3719                     mov             r0,#work
16E8 E6             3720                     mov             a,@r0
16E9 30E7F2         3721                     jnb             acc.7,gooff4
16EC 900AB0         3722                     mov                     dptr,#0ab0h;начало 4 го блока
                    3723                     ;после очистки блока сохраняем в saven_bl 
                    3724                     ;адрес второго с конца измерения потому добавляем 8
                    3725     ;                       call            save_hl;подготовка записи в начало блока
                    3726                             ;;;;26.02.07
16EF E538           3727                     mov             a,nblok
16F1 B40117         3728                     cjne    a,#1,cl_hl1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    58

16F4 900150         3729                     mov             dptr,#150h
16F7 79D3           3730                     mov             r1,#saven_bl
16F9 E583           3731     cl_hl:  mov             a,dph
16FB F7             3732                     mov             @r1,a
16FC 09             3733                     inc             r1
16FD E582           3734                     mov             a,dpl
16FF F7             3735                     mov             @r1,a
                    3736                     ;;;;;;;;
1700 C20B           3737                     clr             bitmem
1702 D204           3738                     setb    bitizm
1704 78B2           3739                     mov             r0,#marker
1706 76FF           3740                     mov             @r0,#0ffh
1708 020000   F     3741                     jmp                     vvod2_10;jmp            goto7
170B B40207         3742     cl_hl1: cjne            a,#2,cl_hl2
170E 900470         3743                     mov                     dptr,#470h
1711 79C0           3744                     mov             r1,#saven_bl2
1713 80E4           3745                     jmp                     cl_hl
                    3746     
1715 B40307         3747     cl_hl2: cjne            a,#3,cl_hl3
1718 900790         3748                     mov                     dptr,#790h
171B 79C2           3749                     mov             r1,#saven_bl3
171D 80DA           3750                     jmp                     cl_hl
                    3751     
171F 900AB0         3752     cl_hl3: mov                     dptr,#0ab0h
1722 79D9           3753                     mov             r1,#saven_bl4
1724 80D3           3754                     jmp                     cl_hl
                    3755     
1726 7623           3756     go23no: mov             @r0,#23h
1728 753B08         3757                     mov                     movrig,#8
172B 753A07         3758                     mov             movleft,#7
172E 8056           3759                     jmp             loblok;БЛОК 00
1730 7621           3760     kfull:  mov             @r0,#21h
1732 8025           3761                     jmp             gofull
                    3762                             
                    3763                                             
1734 020000   F     3764     nomemk: jmp             labelS                  ;нажат ввод меню
                    3765                             
1737 75B0FB         3766     nome11: mov             p3,#0fbh
173A E5B0           3767                     mov             a,p3
173C 20E70D         3768                     jb              acc.7,kvvod0
173F B61205         3769                     cjne            @r0,#12h,mem12no        
1742 7611           3770                     mov             @r0,#11h                ;ОЧИСТКА
1744 020000   F     3771                     jmp              loadcle
                    3772     
1747                3773     mem12no:        ;cjne           @r0,#13h,lowr           
1747 7612           3774                     mov             @r0,#12h                   ;
1749 020000   F     3775                     jmp             lowr1                     ;ЗАПИСЬ
174C 75B0F7         3776     kvvod0: mov             p3,#0f7h                        ;knopka vvod
174F 20B710         3777                     jb              p3.7,ddoutf
1752 78B0           3778                     mov             r0,#level
1754 B6112A         3779                     cjne            @r0,#11h,mvv11
1757 7621           3780                     mov             @r0,#21h                ;ПОЛНАЯ
1759 900000   F     3781     gofull: mov             dptr,#teFULL
175C 120000   F     3782                     call            lotext
175F 020000   F     3783                     jmp             onmem11;mlabL2  ;<-????????/
                    3784     
1762                3785     ddoutf:         ;<- БЛОК 00(ОЧИСТКА)
                    3786     ;необходимо не портить цифру в следуюем сслева знакоместе
                    3787     ;т е сохранить ее в ячейке для мигания в противном случае
                    3788     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3789     ;       знакоместа
1762 78B2           3790                     mov             r0,#marker
1764 7440           3791                     mov             a,#bufind
1766 26             3792                     add             a,@r0                   ;a=bufind+marker
1767 F9             3793                     mov             r1,a
1768 19             3794                     dec             r1      ;       inc             r1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    59

1769 873C           3795                     mov             savba,@r1
176B C219           3796                     clr             bitmig
                    3797     ;;;;;;;;;;;;;;;;
176D 78B2           3798                     mov             r0,#marker      ;курсор слева   ?
176F E53A           3799                     mov             a,movleft
1771 C3             3800                     clr             c
1772 96             3801                     subb            a,@r0
1773 7006           3802                     jnz             left21
1775 E53B           3803                     mov             a,movrig;уст в правую позицию
1777 F6             3804                     mov             @r0,a
                    3805     
1778 020000   F     3806                     jmp             goto7                                            
177B E53A           3807     left21: mov             a,movleft;уст в левую позицию
177D F6             3808                     mov             @r0,a   
177E 020000   F     3809                     jmp             goto7
                    3810     
                    3811     
1781 B61215         3812     mvv11:  cjne            @r0,#12h,mvv12
1784 7631           3813                     mov             @r0,#31h
1786 900000   F     3814     loblok: mov             dptr,#teBL0;БЛОК 0
1789 120000   F     3815                     call            lotext
178C E538           3816                     mov             a,nblok
178E 2430           3817                     add             a,#30h
1790 F547           3818                     mov             bufind+7,a
1792 78B2           3819                     mov             r0,#marker
1794 7607           3820                     mov             @r0,#7
                    3821                                     ;mov            movrig,#9
                    3822                                     ;mov            movleft,#6
1796 020000   F     3823                     jmp             onmem11
1799 B61411         3824     mvv12:  cjne            @r0,#14h,bl_li
179C 7661           3825                     mov             @r0,#61h
179E 900000   F     3826                     mov             dptr,#teMIN;
17A1 120000   F     3827                     call    lotext
17A4 120000   F     3828                     call    vichmin
17A7 120000   F     3829                     call    z_1s
17AA 020000   F     3830                     jmp             onmem11
                    3831     
17AD 7641           3832     bl_li:  mov             @r0,#41h                ; БЛОК 00(ЗАПИСЬ И ПРОСМОТР)
17AF 80D5           3833                     jmp             loblok
                    3834     
                    3835     
                    3836     
17B1                3837     mlabL2:         ;jmp            labL2
                    3838                                             ;  уст курсор в правую позицию 
                    3839                                     ;                               29.12.06
                    3840     ;;;;;;;;;;;;;;;;;;
                    3841     ;необходимо не портить цифру в следуюем справа знакоместе
                    3842     ;т е сохранить ее в ячейке для мигания в противном случае
                    3843     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3844     ;       знакоместа
17B1 78B2           3845                     mov             r0,#marker
17B3 7440           3846                     mov             a,#bufind
17B5 26             3847                     add             a,@r0                   ;a=bufind+marker
17B6 F9             3848                     mov             r1,a
17B7 09             3849                     inc             r1
17B8 873C           3850                     mov             savba,@r1
                    3851     ;;;;;;;;;;;;;;;;
17BA 78B2           3852                     mov             r0,#marker      ;курсор справа  ?
17BC E53B           3853                     mov             a,movrig
17BE C3             3854                     clr             c
17BF 96             3855                     subb    a,@r0
17C0 6006           3856                     jz         equ2l
17C2 E53B           3857                     mov             a,movrig;уст в правую позицию
17C4 F6             3858                     mov             @r0,a
                    3859     ;                       lool
17C5 020000   F     3860                     jmp             goto7                                            
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    60

17C8 E53A           3861     equ2l:  mov             a,movleft;уст в левую позицию
17CA F6             3862                     mov             @r0,a   
17CB 020000   F     3863                     jmp             goto7
                    3864                     
17CE 020000   F     3865     rnom31: jmp                     nom31
17D1 B631FA         3866     labM:           cjne    @r0,#31h,rnom31
17D4 75B0FB         3867                     mov             p3,#0fbh
17D7 30B7D7         3868                     jnb             p3.7,mlabL2
17DA 75B0F7         3869                     mov             p3,#0f7h
17DD 20B782         3870                     jb              p3.7,ddoutf
                    3871                                
17E0 7632           3872                     mov             @r0,#32h                        ;ИНТ 0000
                    3873                                     ;       считать с индикатора  
17E2 C3             3874     blokvv: clr             c
17E3 E547           3875                     mov             a,bufind+7      
17E5 9430           3876                     subb            a,#30h
17E7 B40002         3877                     cjne            a,#0,blokvvc
17EA 7401           3878                     mov             a,#1                    ;номера блоков 1..4
                    3879     
17EC F538           3880     blokvvc:        mov             nblok,a
17EE 900000   F     3881                     mov             dptr,#teINT;ИНТ 0000c
17F1 120000   F     3882                     call            lotext
17F4 78CE           3883                     mov             r0,#interva+1
17F6 7952           3884                     mov             r1,#abin+3
17F8 E6             3885                     mov             a,@r0
17F9 F7             3886                     mov             @r1,a
17FA 18             3887                     dec                     r0
17FB 19             3888                     dec                     r1
17FC E6             3889                     mov             a,@r0
17FD F7             3890                     mov             @r1,a
17FE 19             3891                     dec             r1
17FF E4             3892                     clr             a
1800 F7             3893                     mov             @r1,a
1801 19             3894                     dec             r1
1802 F7             3895                     mov             @r1,a
                    3896                                                                             
1803 7853           3897                     mov             r0,#adec
1805 7952           3898                     mov             r1,#abin+3      ;hex->10
1807 120000   F     3899                     call    bindec
                    3900                                     
180A 785C           3901                     mov             r0,#adec+9;разместить в буфер индикации
180C 7948           3902                     mov             r1,#bufind+8
180E 7F04           3903                     mov             r7,#4
1810 E6             3904     bloin:  mov             a,@r0
1811 2430           3905                     add             a,#30h
1813 F7             3906                     mov             @r1,a
1814 19             3907                     dec             r1
1815 18             3908                     dec             r0
1816 DFF8           3909                     djnz    r7,bloin
1818 78B2           3910                     mov             r0,#marker
181A 7605           3911                     mov             @r0,#5
181C 753B08         3912                     mov             movrig,#8
181F 753A05         3913                     mov             movleft,#5
1822 789A           3914                     mov             r0,#parT
1824 B60609         3915                     cjne            @r0,#6,innot6
1827 534BF0         3916                     anl             bufind+11,#0f0h;after 5- 0.000c
182A 434B04         3917                     orl             bufind+11,#04h
                    3918                             
182D 020000   F     3919                     jmp             goto7
1830 B60309         3920     innot6: cjne            @r0,#3,innot3
1833 534BF0         3921                     anl             bufind+11,#0f0h;after 7- 000.0c
1836 434B20         3922                     orl             bufind+11,#20h
                    3923                                     ;call           ind
1839 020000   F     3924                     jmp             out7;goto7
183C C3             3925     innot3: clr             c
183D 7403           3926                     mov             a,#3
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    61

183F 96             3927                     subb            a,@r0
1840 5009           3928                     jnc             innot1_2
1842 534BF0         3929                     anl             bufind+11,#0f0h;after 6- 00.00c
1845 434B40         3930                     orl             bufind+11,#40h
1848 020000   F     3931                     jmp             goto7
                    3932     
184B                3933     innot1_2:
184B 534B0F         3934                     anl             bufind+11,#0fh;0h;0000c
184E C219           3935                     clr             bitmig
                    3936                                     ;call           ind             нет необходимости пришет пр
                             обел         
1850 020000   F     3937     rgoto7: jmp        goto7;outF
                    3938     
1853 B63276         3939     nom31:  cjne            @r0,#32h,nom32
1856 75B0FB         3940                     mov             p3,#0fbh
1859 20B71F         3941                     jb              p3.7,vvinte             ;ввод интервал;no31n
                    3942                                     
185C                3943     lefcur:         ;;кн <- 32 нач блок 000
                    3944     ;необходимо не портить цифру в следуюем сслева знакоместе
                    3945     ;т е сохранить ее в ячейке для мигания в противном случае
                    3946     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    3947     ;       знакоместа
185C C219           3948                     clr             bitmig
185E 78B2           3949                     mov             r0,#marker;нажата кн <- при вводе цифр нач блок 000
1860 7440           3950                     mov             a,#bufind
1862 26             3951                     add             a,@r0                   ;a=bufind+marker
1863 F9             3952                     mov             r1,a
1864 19             3953                     dec             r1;;;;;;;;;;;
1865 873C           3954                     mov             savba,@r1
                    3955                                             
1867 78B2           3956                     mov             r0,#marker      ;курсор слева?
1869 E53A           3957                     mov             a,movleft
186B C3             3958                     clr             c
186C 96             3959                     subb    a,@r0
186D 7006           3960                     jnz        noequ2
186F E53B           3961                     mov             a,movrig
1871 F6             3962                     mov             @r0,a;уст в крайнюю правую позицию
1872 020000   F     3963                     jmp             goto7
1875 120000   F     3964     noequ2: call    marle;сдвинуть курсор в  лево на 1позицию       
1878 020000   F     3965                     jmp        goto7        
                    3966                                                                       
                    3967     
                    3968     ;;;;;;;;;;;;;;;;;;
187B                3969     vvinte:         ;ввод интервал                          
187B 75B0F7         3970     no31n:  mov             p3,#0f7h
187E 20B7CF         3971                     jb              p3.7,rgoto7
1881 7633           3972                     mov             @r0,#33h
                    3973                                     ;считать с индикатора введенный интервал
1883 7F0A           3974                     mov             r7,#10
1885 7853           3975                     mov             r0,#adec
1887 120000   F     3976                     call    clearN
188A 120000   F     3977                     call    upak4                   
188D 784F           3978                     mov             r0,#abin
188F 7953           3979                     mov             r1,#adec                        ;мл         ст
1891 120000   F     3980                     call    decbin                  ;abin..abin+3 (hex)
1894 794F           3981                     mov             r1,#abin
1896 78CE           3982                     mov             r0,#interva+1
1898 E7             3983                     mov             a,@r1
1899 F6             3984                     mov             @r0,a
189A 18             3985                     dec             r0
189B 09             3986                     inc             r1
189C E7             3987                     mov             a,@r1
189D F6             3988                     mov             @r0,a
                    3989                                     
189E 78D5           3990                     mov             r0,#volume                      ;объем блока
18A0 7600           3991                     mov             @r0,#0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    62

18A2 08             3992                     inc             r0
18A3 76C7           3993                     mov             @r0,#0c7h
18A5 120000   F     3994                     call            adrblok;dptr
18A8 120000   F     3995                     call            save_hl;1я ячейка блока
18AB 78B2           3996                     mov             r0,#marker
18AD 76FF           3997                     mov             @r0,#0ffh
18AF D204           3998                     setb            bitizm
18B1 C20B           3999                     clr             bitmem
18B3 789A           4000     vvod2_10:       mov             r0,#parT
18B5 B6050C         4001                     cjne            @r0,#5,no10msv
18B8 900000   F     4002                     mov                     dptr,#te10ms
18BB 120000   F     4003     t2msme: call            lotext
                    4004                                             
18BE 120000   F     4005                     call            ind
18C1 020000   F     4006     no2msv:         jmp        goto7;
18C4 B606FA         4007     no10msv:        cjne            @r0,#6,no2msv   
18C7 900000   F     4008                     mov                     dptr,#te2ms
18CA 80EF           4009                     jmp                     t2msme
                    4010     
                    4011     
                    4012     
18CC B6332B         4013     nom32:  cjne            @r0,#33h,nom33
18CF 75B0FB         4014                     mov             p3,#0fbh
18D2 30B787         4015                     jnb             p3.7,lefcur
18D5 75B0F7         4016                     mov             p3,#0f7h
18D8 20B7E6         4017                     jb              p3.7,no2msv;rgoto7
                    4018                     ;запомнить номер ячейки конца блока
18DB 7634           4019                     mov     @r0,#34h
18DD 7F0A           4020     INTn:           mov             r7,#10
18DF 7853           4021                     mov             r0,#adec
18E1 120000   F     4022                     call    clearN
18E4 120000   F     4023                     call    upak3                   
18E7 784F           4024                     mov             r0,#abin
18E9 7953           4025                     mov             r1,#adec                        ;мл         ст
18EB 120000   F     4026                     call    decbin                  ;abin..abin+3 (hex)
18EE 120000   F     4027                     call    loadr2                  ;r2..r5
18F1 120402         4028                     call    altof                   ;r2..r5->int
18F4 020000   F     4029     dgoto7: jmp             goto7
                    4030     
18F7 020000   F     4031     rlefcur:        jmp             lefcur
                    4032     
18FA B63464         4033     nom33:  cjne            @r0,#34h,labelP
18FD 75B0FB         4034                     mov             p3,#0fbh
1900 30B7F4         4035                     jnb             p3.7,rlefcur
1903 75B0F7         4036                     mov             p3,#0f7h
1906 20B7EB         4037                     jb              p3.7,dgoto7
1909 7635           4038                     mov             @r0,#35h
190B 78B2           4039                     mov             r0,#marker
190D 76FF           4040                     mov             @r0,#0ffh
                    4041                     ;T1<-число на индикаторе
                    4042                     ;vvod КОН БЛ 000
190F 78CF           4043                     mov             r0,#chbuf               ;счетчик периода загрузки в буфер и
                              интерфейс
1911 7630           4044                     mov             @r0,#30h  
1913 C20B           4045                     clr             bitmem
1915 D204           4046                     setb            bitizm;;;;      
1917 020000   F     4047                     jmp        goto7
191A 020000   F     4048     vodm11_15:      jmp             vvodm11_15
191D 020000   F     4049     me11_15de:      jmp             me11_15dec
1920 020000   F     4050     moutkmem:       jmp             outkmem
                    4051     
1923 020000   F     4052     nmem_menu:      jmp             out7                    ;нажата память в режиме меню
                    4053     ;обработка кнопки меню ввод
1926 301138         4054     labelS: jnb                     bitmenu,labelP
1929 75B0EF         4055                     mov                     p3,#0efh
192C 30B7F4         4056                     jnb                     p3.7,nmem_menu
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    63

192F 75B0DF         4057                     mov                     p3,#0dfh
1932 30B7EB         4058                     jnb                     p3.7,moutkmem
1935 78B1           4059                     mov                     r0,#vichR
1937 7415           4060                     mov                     a,#15h
1939 C3             4061                     clr                     c
193A 96             4062                     subb            a,@r0
193B 4021           4063                     jc              rme21_23
                    4064                             
193D 75B0FB         4065                     mov             p3,#0fbh
1940 20B7D7         4066                     jb              p3.7,vodm11_15
1943 78B1           4067                     mov             r0,#vichR
1945 B611D5         4068                     cjne            @r0,#11h,me11_15de;<-
1948 7615           4069                     mov             @r0,#15h
194A 900000   F     4070                     mov             dptr,#teKALIB
194D 120000   F     4071                     call            lotext
1950 020000   F     4072                     jmp             onmem11
1953 C211           4073     menuon: clr             bitmenu                 ;off menu
1955 D204           4074                     setb            bitizm
                    4075     
1957 78B1           4076                     mov             r0,#vichR
1959 7600           4077                     mov             @r0,#0
195B 020000   F     4078                     jmp             onmem11
                    4079     
                    4080                                             ;;;;;
                    4081             
195E 020000   F     4082     rme21_23:       jmp             me21_23 
                    4083                             
                    4084     ;режим просмотра
1961 B64130         4085     labelP:         cjne            @r0,#41h,govvlist
1964 7642           4086                     mov             @r0,#42h
                    4087                             ;       считать с индикатора  
1966 C3             4088                     clr             c
1967 E547           4089                     mov             a,bufind+7      
1969 9430           4090                     subb            a,#30h
196B B40002         4091                     cjne            a,#0,chaipr
196E 7401           4092                     mov             a,#1
1970 F538           4093     chaipr:         mov             nblok,a
1972 900000   F     4094                     mov             dptr,#teCH;ОТСЧЕТ 000
1975 120000   F     4095                     call            lotext
1978 534BEF         4096                     anl             bufind+11,#0efh;убрать точку с 1го знакоместа
197B 78B2           4097                     mov             r0,#marker
197D 7607           4098                     mov             @r0,#7
197F 753B09         4099                     mov             movrig,#9
1982 753A07         4100                     mov             movleft,#7
1985 120000   F     4101                     call            z_1s
1988 020000   F     4102                     jmp        goto7;outF
198B 020000   F     4103     label43:        jmp             label7
                    4104     
198E 020000   F     4105     rlist_43:       jmp                     list_43                                 
1991 020000   F     4106     mlabL2r:        jmp                     mlabL2
1994 B642F7         4107     govvlist:       cjne            @r0,#42h,rlist_43       ;?button
1997 75B0FB         4108                     mov                     p3,#0fbh
199A 30B7F4         4109                     jnb                     p3.7,mlabL2r;кн <- ОТСЧЕТ 000
199D 75B0F7         4110                     mov                     p3,#0f7h
19A0 20B7E8         4111                     jb                      p3.7,label43
19A3 7643           4112                     mov                     @r0,#43h;vvod 
19A5 78B2           4113                     mov                     r0,#marker
19A7 76FF           4114                     mov                     @r0,#0ffh
19A9 7F0A           4115                     mov             r7,#10
19AB 7853           4116                     mov             r0,#adec
19AD 120000   F     4117                     call    clearN
19B0 120000   F     4118                     call    upak3                   
19B3 784F           4119                     mov             r0,#abin
19B5 7953           4120                     mov             r1,#adec                        ;мл         ст
19B7 120000   F     4121                     call    decbin                  ;abin..abin+3 (hex)
19BA 120000   F     4122                     call    loadr2                  ;r2..r5
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    64

19BD ED             4123                     mov             a,r5                            ;сохр номер лемента
19BE F537           4124                     mov             nelem,a
19C0 120402         4125                     call    altof                   ;r2..r5->int
19C3 900000   F     4126                     mov             dptr,#ch_1;
19C6 120000   F     4127                     call    ldc_ltemp                       ;r8..r11
19C9 1201D1         4128                     call    flsub
19CC 900000   F     4129                     mov             dptr,#ch_4;
19CF 120000   F     4130                     call    ldc_ltemp                       ;r8..r11
19D2 120203         4131                     call    flmul                           ;(n(номер отсчета)-1)*4+адр нач бло
                             ка
19D5 120343         4132                     call            ftol                    ;r2..r5->hex
19D8 C002           4133                     push            rr2
19DA C003           4134                     push            rr3
19DC C004           4135                     push            rr4
19DE C005           4136                     push            rr5
19E0 120000   F     4137                     call            adrblok;dptr-
19E3 D005           4138                     pop                     rr5
19E5 D004           4139                     pop                     rr4
19E7 D003           4140                     pop                     rr3
19E9 D002           4141                     pop                     rr2
19EB 79D8           4142                     mov                     r1,#copy_hl+1;saven_bl+1;сохр адрес внешн озу введе
                             нного лемента
19ED E582           4143                     mov                     a,dpl
19EF 2D             4144                     add                     a,r5
19F0 F582           4145                     mov                     dpl,a
19F2 F7             4146                     mov                     @r1,a           ;low
19F3 E583           4147                     mov                     a,dph
19F5 3C             4148                     addc            a,r4
19F6 F583           4149                     mov                     dph,a
19F8 19             4150                     dec                     r1
19F9 F7             4151                     mov                     @r1,a                   ;high
19FA                4152     li42_43:
19FA 120000   F     4153                     call            reA3_X          ;r2..r5/выдать рез из внешн пам на индикато
                             р
19FD 900000   F     4154                     mov             dptr,#ch10
1A00 120000   F     4155                     call    ldc_ltemp
1A03 120000   F     4156                     call    zdiv                    ;form4=invertif <0; divide
1A06 120000   F     4157                     call    maform          ;setb/clr       znmat
1A09 784F           4158                     mov             r0,#abin
1A0B 120000   F     4159                     call    saver2          ;r2..r5-> @r0..@r0+3
1A0E 7853           4160                     mov             r0,#adec
1A10 7952           4161                     mov             r1,#abin+3      ;hex->10
1A12 120000   F     4162                     call    bindec
                    4163                             
1A15 785C           4164                     mov             r0,#adec+9;разместить в буфер индикации
1A17 7945           4165                     mov             r1,#bufind+5
1A19 7F07           4166                     mov             r7,#7
1A1B E6             4167     ch43:           mov             a,@r0
1A1C 2430           4168                     add             a,#30h
1A1E F7             4169                     mov             @r1,a
1A1F 19             4170                     dec             r1
1A20 18             4171                     dec             r0
1A21 DFF8           4172                     djnz    r7,ch43
1A23 7847           4173                     mov             r0,#bufind+7
1A25 762D           4174                     mov             @r0,#2dh          ;-2..-9
1A27 7840           4175                     mov             r0,#bufind
1A29 762B           4176                     mov             @r0,#2bh
1A2B 300202         4177                     jnb             znmat,nozzmi43;bitznak,nozzmi
1A2E 762D           4178                     mov             @r0,#2dh        ;'-'
                    4179     
1A30 E538           4180     nozzmi43:       mov             a,nblok
1A32 B40104         4181                     cjne    a,#1,nozzmi1            
1A35 7934           4182                     mov             r1,#sadiap;diap
1A37 8010           4183                     jmp             nozzbl
1A39 B40204         4184     nozzmi1:        cjne    a,#2,nozzmi2            
1A3C 7932           4185                     mov             r1,#sadiap2;diap
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    65

1A3E 8009           4186                     jmp             nozzbl
1A40 B40304         4187     nozzmi2:        cjne    a,#3,nozzmi3            
1A43 7931           4188                     mov             r1,#sadiap3;diap
1A45 8002           4189                     jmp             nozzbl
                    4190     
1A47 7930           4191     nozzmi3: mov            r1,#sadiap4;diap
1A49 7848           4192     nozzbl:  mov            r0,#bufind+8
1A4B E7             4193                                     mov             a,@r1
1A4C B40808         4194                     cjne    a,#8,nodi8_43
1A4F 7630           4195                     mov             @r0,#30h                 ;10-10
1A51 18             4196                     dec             r0
1A52 7663           4197                     mov             @r0,#63h;31h
1A54 08             4198                     inc             r0
1A55 800E           4199                     jmp             see_l43
                    4200     
1A57 B40908         4201     nodi8_43:       cjne    a,#9,nodi9_43
1A5A 7631           4202                     mov             @r0,#31h           ;10-11
1A5C 18             4203                     dec             r0
1A5D 7663           4204                     mov             @r0,#63h;31h
1A5F 08             4205                     inc             r0
1A60 8003           4206                     jmp             see_l43
                    4207     
1A62 2432           4208     nodi9_43:       add             a,#32h
1A64 F6             4209                     mov             @r0,a;
1A65 08             4210     see_l43:        inc             r0
1A66 7641           4211                     mov             @r0,#"A";"E";
                    4212                     ;       inc             r0
                    4213                     ;       mov             @r0,#00h ;=feh в нач установе для поджига всех сегм
                    4214                     ;       inc             r0;             mov             bufind+11
                    4215                     ;       mov             @r0,#0d0h               ;bufind+11.4 точка после пе
                             рвой цифры
1A68 434B10         4216                     orl             bufind+11,#10h
1A6B 120000   F     4217     out43:  call            ind
1A6E 120000   F     4218                     call            z_1s
1A71 020000   F     4219                     jmp             out7                                    
                    4220     
                    4221                     ;;;;;;;;        
1A74 783D           4222     label7: mov             r0,#chkl
1A76 7603           4223                     mov             @r0,#3
1A78 08             4224                     inc             r0
1A79 76E8           4225                     mov             @r0,#0e8h               ;1000
1A7B 020000   F     4226                     jmp             out7;
1A7E B64352         4227     list_43:        cjne    @r0,#43h,noli_43
1A81 75B0FB         4228                     mov             p3,#0fbh                ;43h <-
1A84 20B70B         4229                     jb              p3.7,vvod43             ;vvod
1A87 C20B           4230                     clr             bitmem
1A89 D204           4231                     setb    bitizm
1A8B 78B2           4232                     mov             r0,#marker
1A8D 76FF           4233                     mov             @r0,#0ffh
1A8F 020000   F     4234                     jmp             goto7;6.03.07;label7;по кн <- выход из просмотра
                    4235     
1A92 7644           4236     vvod43: mov             @r0,#44h
1A94 E537           4237                     mov             a,nelem;вывод порядкового номера в блоке 
1A96 04             4238                     inc             a
1A97 F552           4239                     mov             abin+3,a
                    4240                                                     
1A99 F537           4241                     mov             nelem,a
1A9B E4             4242                     clr             a
1A9C F551           4243                     mov             abin+2,a
1A9E F550           4244                     mov             abin+1,a
1AA0 F54F           4245                     mov             abin,a
                    4246                                             
1AA2 7853           4247                     mov             r0,#adec
1AA4 7952           4248                     mov             r1,#abin+3      ;hex->10
1AA6 120000   F     4249                     call    bindec
1AA9 7840           4250                     mov             r0,#bufind;почистить индикатор
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    66

1AAB 7F0A           4251                     mov             r7,#10
1AAD 7420           4252                     mov             a,#20h
1AAF F6             4253     cle20:  mov             @r0,a
1AB0 08             4254                     inc             r0
1AB1 DFFC           4255                     djnz    r7,cle20
                    4256                             ;;;;;;
1AB3 900000   F     4257                     mov             dptr,#teCH;ОТСЧЕТ 000
1AB6 120000   F     4258                     call            lotext
1AB9 534BEF         4259                     anl             bufind+11,#0efh;убрать точку с 1го знакоместа
1ABC 785C           4260                     mov             r0,#adec+9;разместить в буфер индикации
1ABE 7949           4261                     mov             r1,#bufind+9
1AC0 7F03           4262                     mov             r7,#3
1AC2 E6             4263     ch43_42:        mov             a,@r0
1AC3 2430           4264                     add             a,#30h
1AC5 F7             4265                     mov             @r1,a
1AC6 19             4266                     dec             r1
1AC7 18             4267                     dec             r0
1AC8 DFF8           4268                     djnz    r7,ch43_42
1ACA 120000   F     4269                     call            ind
1ACD 120000   F     4270                     call            z_1s
1AD0 020000   F     4271                     jmp             out7
1AD3 B64419         4272     noli_43:        cjne            @r0,#44h,vvosta
1AD6 7643           4273                     mov                     @r0,#43h
1AD8 79D8           4274                     mov                     r1,#copy_hl+1;saven_bl+1
1ADA E7             4275                     mov                     a,@r1
1ADB F582           4276                     mov                     dpl,a
1ADD 19             4277                     dec                     r1
1ADE E7             4278                     mov                     a,@r1;high
1ADF F583           4279                     mov                     dph,a
1AE1 A3             4280                     inc                     dptr
1AE2 A3             4281                     inc                     dptr
1AE3 A3             4282                     inc                     dptr
1AE4 A3             4283                     inc                     dptr
1AE5 E583           4284                     mov                     a,dph
1AE7 F7             4285                     mov                     @r1,a
1AE8 09             4286                     inc                     r1
1AE9 E582           4287                     mov                     a,dpl
1AEB F7             4288                     mov                     @r1,a                           ;сохр адр внешн озу
1AEC 020000   F     4289                     jmp                     li42_43;вывод значения следующего в блоке
                    4290     
1AEF B66111         4291     vvosta: cjne            @r0,#61h,vvostad
1AF2 7662           4292                     mov                     @r0,#62h
1AF4 900000   F     4293                     mov                     dptr,#teMAX;
1AF7 120000   F     4294                     call            lotext
1AFA 120000   F     4295                     call            vichmax
1AFD 120000   F     4296                     call            z_05s;z_1s
1B00 020000   F     4297                     jmp             goto7
                    4298     
1B03 B66211         4299     vvostad:        cjne            @r0,#62h,rousta
1B06 7663           4300                     mov                     @r0,#63h
1B08 900000   F     4301                     mov             dptr,#teMid;
1B0B 120000   F     4302                     call    lotext
1B0E 120000   F     4303                     call            vichmean
1B11 120000   F     4304                     call            z_05s
1B14 020000   F     4305                     jmp             goto7
                    4306     
1B17 B6630E         4307     rousta: cjne            @r0,#63h,rousta1
1B1A 7661           4308                     mov                     @r0,#61h
1B1C 900000   F     4309                     mov             dptr,#teMin;
1B1F 120000   F     4310                     call    lotext
1B22 120000   F     4311                     call            vichmin
1B25 120000   F     4312                     call            z_05s
1B28 020000   F     4313     rousta1:        jmp             goto7
                    4314     
1B2B 020000   F     4315     rLABELP:        jmp             LABELP
1B2E 78B1           4316     vvodm11_15:     mov             r0,#vichR;vvod
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    67

1B30 75B0F7         4317                     mov             p3,#0f7h
1B33 20B7F5         4318                     jb              p3.7,rLABELP;????
                    4319                                     
1B36 B61115         4320                     cjne            @r0,#11h,tome21
1B39 7621           4321                     mov             @r0,#21h;vvod
1B3B 900000   F     4322                     mov             dptr,#teTE11
1B3E 120000   F     4323                     call            lotext
1B41 534B03         4324                     anl             bufind+11,#03h ;погасить запятые
1B44 020000   F     4325                     jmp             onmem11
                    4326     
1B47 16             4327     me11_15dec:     dec             @r0                             ;<-
1B48 120000   F     4328     lokame1:        call            lomenu
1B4B 020000   F     4329                     jmp             onmem11
                    4330     
1B4E B61206         4331     tome21: cjne            @r0,#12h,tome13
                    4332                     ;вкл тест интерфейса
1B51 020000   F     4333                     jmp             testrs;??????????
1B54 020000   F     4334                     jmp             onmem11
                    4335     
1B57 B6132A         4336     tome13: cjne            @r0,#13h,tome14
1B5A 7631           4337                     mov             @r0,#31h
                    4338                                             
1B5C 7A50           4339                     mov             r2,#50h                         ;57.6->19.2
1B5E 7B2C           4340                     mov             r3,#2ch
1B60 120454         4341                     call            re4byte                 ;28..2bh 3bait-parol,1 bait skor
1B63 E508           4342                     mov             a,r8
1B65 B4000E         4343                     cjne            a,#00,skor19
1B68 900000   F     4344                     mov             dptr,#teS57_6;57,6
1B6B 120000   F     4345                     call            lotext
1B6E 434B80         4346                     orl             bufind+11,#80h
1B71 C213           4347                     clr             bitv19
1B73 020000   F     4348                     jmp             onmem11
1B76 900000   F     4349     skor19: mov             dptr,#teS19_2
1B79 120000   F     4350                     call            lotext
1B7C D213           4351                     setb            bitv19
1B7E 434B80         4352                     orl             bufind+11,#80h
1B81 020000   F     4353                     jmp             onmem11
                    4354                                             
                    4355     
1B84 B61415         4356     tome14: cjne            @r0,#14h,tome15
1B87 D204           4357                     setb            bitizm
1B89 7881           4358                     mov             r0,#chavt
1B8B 7600           4359                     mov             @r0,#0
1B8D 08             4360                     inc             r0
1B8E 7600           4361                     mov             @r0,#0
1B90 C211           4362     outmenu:        clr             bitmenu
1B92 020000   F     4363                     jmp             out7
                    4364     
1B95 78B1           4365     goparom:        mov             r0,#vichR               ;режим меню 52
1B97 7652           4366                     mov             @r0,#52h                        ;пароль уже ввели
1B99 020000   F     4367                     jmp             goparol
1B9C 3090F6         4368     tome15: jnb             p1.0,goparom
1B9F 753936         4369                     mov             nuerr,#36h
1BA2 120000   F     4370                     call            error
1BA5 120000   F     4371                     call            ind
1BA8 120000   F     4372                     call            z_01s
1BAB 80EF           4373                     jmp             tome15; onmem11
                    4374     
1BAD 80E6           4375                     jmp             goparom;jb              bitpar,goparom  
1BAF 7651           4376                     mov             @r0,#51h;ПАРОЛЬ 000
1BB1 120000   F     4377                     call            lomenu
1BB4 78B2           4378                     mov             r0,#marker
1BB6 7607           4379                     mov             @r0,#7
1BB8 753B09         4380                     mov             movrig,#9
1BBB 753A07         4381                     mov             movleft,#7
                    4382                     ;setb           bitizm
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    68

1BBE 020000   F     4383                     jmp             onmem11
                    4384     
                    4385     
1BC1 78B1           4386     me21_23:        mov             r0,#vichR               ;<-
1BC3 7423           4387                     mov             a,#23h
1BC5 C3             4388                     clr             c
1BC6 96             4389                     subb            a,@r0
1BC7 403F           4390                     jc              labelS1
1BC9 75B0FB         4391                     mov             p3,#0fbh
1BCC 20B715         4392                     jb              p3.7,vv21_23
1BCF B6210B         4393                     cjne            @r0,#21h,me21_23dec;-<
1BD2 7623           4394                     mov             @r0,#23h
1BD4 900000   F     4395                     mov             dptr,#teTE7
1BD7 120000   F     4396                     call            lotext
1BDA 020000   F     4397                     jmp             onmem11
1BDD 16             4398     me21_23dec:     dec             @r0
1BDE 120000   F     4399                     call            lomenu
1BE1 020000   F     4400                     jmp             onmem11
                    4401     ;onmem12:       jmp             viout;  outF    ;(ie7)
                    4402                                                     
1BE4 75B0F7         4403     vv21_23:        mov             p3,#0f7h                ;vvod
1BE7 20B719         4404                     jb              p3.7,onmem12
1BEA B6210C         4405                     cjne            @r0,#21h,test22
                    4406                     ;mov            dptr,#tabt11;заслать ус 11А
1BED 120000   F     4407     tests:  call            lotpus
1BF0 D215           4408                     setb            biteizm;запомнить режим ТИ
1BF2 D204           4409                     setb            bitizm
1BF4 C211           4410                     clr             bitmenu;обнулить т к не будет индикации измерения       
1BF6 020000   F     4411                     jmp             goto7;onmem11
1BF9 B62202         4412     test22: cjne            @r0,#22h,test23
                    4413                     ;       mov                     dptr,#tabt9;заслать ус 9А
1BFC 80EF           4414                     jmp             tests   
1BFE                4415     test23:
                    4416                     ;       mov                     dptr,#tabt7;заслать ус 7А
1BFE 80ED           4417                     jmp             tests   
1C00 020000   F     4418     left_s: jmp             left_sk
                    4419     
1C03                4420     onmem12:
1C03 7FFF           4421                     mov             r7,#0ffh        ;?
1C05 020000   F     4422                     jmp             viout           ;?
                    4423     
1C08 B6317C         4424     labelS1:        cjne            @r0,#31h,me_41
1C0B 75B0FB         4425                     mov                     p3,#0fbh                        ;<-
1C0E 30B7EF         4426                     jnb                     p3.7,left_s
1C11 75B0F7         4427                     mov                     p3,#0f7h
1C14 20B7EC         4428                     jb                      p3.7,onmem12
                    4429                     ;запомнить признак установленной скорости в рпзу
                    4430     ;чтение пам прогр(5000h) 1 страница(ffh)
                    4431     ;и запись во внешнее озу(0000h)
1C17 7900           4432                     mov             r1,#0                   ;
1C19 7A50           4433                     mov             r2,#50h
1C1B 7B00           4434                     mov             r3,#00
1C1D 120499         4435                     call    copyPP
                    4436                     ;внести изменения во внешн озу
                    4437                     ;KD=00 01 86 A0 (KD=1)
                    4438                     ;кофф *100000 и переведенный в hex формат
                    4439                     ;согласно адресов диапазонов и адресов яч вн озу 
1C20 792C           4440                     mov             r1,#2ch
1C22 7400           4441                     mov             a,#0;57,6
1C24 301302         4442                     jnb             bitv19,spwri
1C27 7401           4443                     mov             a,#1;19.6
1C29 F3             4444     spwri:  movx    @r1,a
                    4445     ;стереть страницу пап прогр 
1C2A 905000         4446                     mov             dptr,#5000h
1C2D 7FFF           4447                     mov             r7,#0ffh
1C2F 12043E         4448                     call    cle256
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    69

                    4449     ;и запись в ячейки кофф памяти прогр (3000h) 
1C32 7FFF           4450                     mov             r7,#0ffh
1C34 7900           4451                     mov             r1,#0                           ;external ram
1C36 905000         4452                     mov             dptr,#5000h
1C39 120480         4453                     call    wrpage
                    4454             
1C3C 75EF10         4455                     mov     RSTSRC,#10h             ;?reset
1C3F C28E           4456                     clr     TR1                     ;?stop Timer1
1C41 201305         4457                     jb      bitv19,outsko1  ;загр Т1 в соотв с установленной скоростью
1C44 758DF4         4458                     mov     TH1,#244                ;57.6
1C47 8005           4459                     jmp     outsko
1C49 758DDC         4460     outsko1:        mov     TH1,#220                ;19.6
1C4C D28E           4461                     setb    TR1     ;start Timer1
                    4462     
1C4E C211           4463     outsko: clr     bitmenu
1C50 D204           4464                     setb    bitizm
1C52 020000   F     4465                     jmp     out7
                    4466     
1C55 020000   F     4467     rlabels4:       jmp             labels4
1C58 020000   F     4468     rlabelS13:      jmp             labelS13
                    4469     
1C5B B652F7         4470     me_52:  cjne            @r0,#52h,rlabels4
1C5E 75B0FB         4471                     mov                     p3,#0fbh;<-
1C61 20B717         4472                     jb                      p3.7,vv_52v     ;ввод в калибровке
1C64 78B2           4473                     mov             r0,#marker              ;сдвиг маркера влево при калибр
1C66 7440           4474                     mov             a,#bufind
1C68 26             4475                     add             a,@r0                   ;a=bufind+marker
1C69 F9             4476                     mov             r1,a
1C6A 19             4477                     dec             r1;inc          r1
1C6B 873C           4478                     mov             savba,@r1
                    4479                                                     
1C6D 78B2           4480                     mov             r0,#marker
1C6F 16             4481                     dec             @r0                             
1C70 C219           4482                     clr             bitmig
1C72 E53A           4483                     mov             a,movleft
1C74 B60001         4484                     cjne    @r0,#0,me_52v;ажата кн <- при вводе цифр калибровки
1C77 06             4485                     inc                     @r0
1C78 020000   F     4486     me_52v: jmp                     goto7
                    4487             
1C7B 75B0F7         4488     vv_52v: mov             p3,#0f7h
1C7E 30B703         4489                     jnb             p3.7,rvvkali52
1C81 020000   F     4490                     jmp                     goto7
1C84 020000   F     4491     rvvkali52:      jmp             vvkali52
                    4492     
                    4493     
1C87 B651D1         4494     me_41:  cjne            @r0,#51h,me_52;rlabels4
1C8A 75B0FB         4495                     mov             p3,#0fbh;<-
1C8D 30B7C8         4496                     jnb             p3.7,rlabelS13
1C90 75B0F7         4497                     mov             p3,#0f7h
1C93 20B773         4498                     jb              p3.7,vvmenu
                    4499                     ;ввод пароля
                    4500                             
                    4501     ;       считать с индикатора 
1C96 7F0E           4502                     mov             r7,#14
1C98 784F           4503                     mov             r0,#abin
1C9A 120000   F     4504                     call    clearN                  
                    4505                             
                    4506     ;чтение номера байта с индикатора(3байта)
                    4507     ;bufind+3..bufind+9
                    4508     ;-  - - -
                    4509     ;- - - - - - - - - -
                    4510     ;adec..adec+9
                    4511     ;ст            мл
1C9D 7849           4512                     mov             r0,#bufind+9;
1C9F 795C           4513                     mov             r1,#adec+9
1CA1 7F03           4514                     mov             r7,#3;3bait
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    70

1CA3 C3             4515     upav1:          clr             c
1CA4 E6             4516                     mov             a,@r0
1CA5 9430           4517                     subb    a,#30h
1CA7 F7             4518                     mov             @r1,a
1CA8 18             4519                     dec             r0
1CA9 19             4520                     dec             r1
1CAA DFF7           4521                     djnz    r7,upav1;adec+7..adec+9
1CAC 7A50           4522                     mov             r2,#50h                         ;parol 000x    (5028h )
1CAE 7B28           4523                     mov             r3,#28h
1CB0 120454         4524                     call            re4byte                 ;r8..r11(3 bait parol)
1CB3 800F           4525                     jmp                     goparol
                    4526     
1CB5 E508           4527                     mov                     a,r8                    ;сравнить пароль с индикато
                             ром
1CB7 B55A52         4528                     cjne            a,adec+7,parerr
1CBA E509           4529                     mov                     a,r9    
1CBC B55B4D         4530                     cjne            a,adec+8,parerr
1CBF E50A           4531                     mov                     a,r10
1CC1 B55C48         4532                     cjne            a,adec+9,parerr
                    4533                                     ;равны
1CC4 78B1           4534     goparol:        mov             r0,#vichR               ;режим меню 52
1CC6 7652           4535                     mov             @r0,#52h                ;0000-n
1CC8 900000   F     4536                     mov             dptr,#teKD;00000-nA
1CCB 120000   F     4537                     call            lotext
                    4538                     ;;;;;;;;;
                    4539                     ;n(hex)->abin
1CCE 120000   F     4540                     call    findR                           ;a=2(10-2)...11(10-11)
1CD1 2552           4541                     add             a,abin+3
1CD3 F552           4542                     mov             abin+3,a
1CD5 7853           4543                     mov             r0,#adec
1CD7 7952           4544                     mov             r1,#abin+3      ;hex->10
1CD9 120000   F     4545                     call    bindec
1CDC 855C48         4546                     mov             bufind+8,adec+9
1CDF 75472D         4547                     mov             bufind+7,#2dh
1CE2 434A80         4548                     orl                     bufind+10,#80h;зажечь KMП
1CE5 434B10         4549                     orl                     bufind+11,#10h;точка после 1 знакоместа
1CE8 79AE           4550                     mov             r1,#diap
1CEA 7848           4551                     mov             r0,#bufind+8
1CEC E7             4552                     mov             a,@r1
1CED B40807         4553                     cjne    a,#8,nodi8k
1CF0 7630           4554                     mov             @r0,#30h                 ;10-10
1CF2 18             4555                     dec             r0
1CF3 7663           4556                     mov             @r0,#63h;31h
1CF5 8008           4557                     jmp             nodisk9
1CF7 B40905         4558     nodi8k: cjne    a,#9,nodisk9
                    4559                                     
1CFA 7631           4560                     mov             @r0,#31h           ;10-11
1CFC 18             4561                     dec             r0
1CFD 7663           4562                     mov             @r0,#63h;31h
                    4563                                     
                    4564     
1CFF 78B2           4565     nodisk9:        mov             r0,#marker
1D01 7601           4566                     mov             @r0,#1
1D03 753A01         4567                     mov             movleft,#1
1D06 753B05         4568                     mov             movrig,#5
                    4569                                             
1D09 020000   F     4570     vvmenu: jmp             goto7
                    4571     
1D0C 753932         4572     parerr: mov             nuerr,#32h
1D0F 120000   F     4573                     call            error
1D12 120000   F     4574                     call            ind
1D15 120000   F     4575                     call            z_1s
1D18 C211           4576                     clr             bitmenu
1D1A D204           4577                     setb            bitizm
1D1C 78B2           4578                     mov             r0,#marker
1D1E 76FF           4579                     mov             @r0,#0ffh
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    71

1D20 020000   F     4580                     jmp             goto7
                    4581     
1D23 30130E         4582     left_sk:        jnb             bitv19,tosk19;<-
1D26 900000   F     4583                     mov             dptr,#teS57_6;57,6
1D29 120000   F     4584                     call            lotext
1D2C 434B80         4585                     orl             bufind+11,#80h
1D2F C213           4586                     clr             bitv19
1D31 020000   F     4587                     jmp             onmem11;goto7
1D34 900000   F     4588     tosk19: mov             dptr,#teS19_2
1D37 120000   F     4589                     call            lotext
1D3A 434B80         4590                     orl             bufind+11,#80h
1D3D D213           4591                     setb            bitv19
1D3F 020000   F     4592                     jmp             onmem11;goto7
                    4593     
1D42                4594     labelS13:;<- MENU(ПАРОЛЬ 000)
                    4595             
                    4596     ;;;;;;;;;;;;;;;;;;
                    4597     ;необходимо не портить цифру в следуюем слева знакоместе
                    4598     ;т е сохранить ее в ячейке для мигания в противном случае
                    4599     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4600     ;       знакоместа
1D42 78B2           4601                     mov             r0,#marker
1D44 7440           4602                     mov             a,#bufind
1D46 26             4603                     add             a,@r0                   ;a=bufind+marker
1D47 F9             4604                     mov             r1,a
1D48 19             4605                     dec             r1;inc          r1
1D49 873C           4606                     mov             savba,@r1
                    4607                                             
1D4B 78B2           4608                     mov             r0,#marker
1D4D 16             4609                     dec             @r0                             
1D4E C219           4610                     clr             bitmig
1D50 E53A           4611                     mov             a,movleft
1D52 B60652         4612                     cjne            @r0,#6,onmem13;;нажата кн <- при вводе цифр ПАРОЛЬ 000
1D55 06             4613                     inc             @r0
1D56 020000   F     4614                     jmp             goto7
                    4615     ;;;;;;;
                    4616     
1D59                4617     vvkali52:       ;введено значение для калибровки
                    4618                                             ;число на индикаторе ->Ak  (52h)
                    4619                                             ;       считать с индикатора 
1D59 7F0E           4620                     mov             r7,#14
1D5B 784F           4621                     mov             r0,#abin
1D5D 120000   F     4622                     call    clearN                  
                    4623                                     
                    4624     ;чтение номера байта с индикатора(3байта)
                    4625     ;bufind+1..bufind+5
                    4626     ;-  - - -
                    4627     ;- - - - - - - - - -
                    4628     ;adec..adec+9
                    4629     ;ст            мл
1D60 7845           4630                     mov             r0,#bufind+5;
1D62 795C           4631                     mov             r1,#adec+9
1D64 7F05           4632                     mov             r7,#5;5bait
1D66 C3             4633     upav2:  clr             c
1D67 E6             4634                     mov             a,@r0
1D68 9430           4635                     subb    a,#30h
1D6A F7             4636                     mov             @r1,a
1D6B 18             4637                     dec             r0
1D6C 19             4638                     dec             r1
1D6D DFF7           4639                     djnz    r7,upav2;adec+7..adec+9
                    4640     
1D6F 784F           4641                     mov             r0,#abin
1D71 7953           4642                     mov             r1,#adec                        ;мл         ст
1D73 120000   F     4643                     call    decbin                  ;abin..abin+3 (hex)
1D76 120000   F     4644                     call    loadr2                  ;r2..r5
1D79 120402         4645                     call    altof   ;r2..r5->float
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    72

1D7C 900000   F     4646                     mov     dptr,#ch_10;10
1D7F 120000   F     4647                     call    ldc_ltemp                       ;r8..r11=8
1D82 120203         4648                     call    flmul
1D85 78A4           4649                     mov             r0,#rez_Ak
1D87 120000   F     4650                     call    saver2
1D8A C211           4651                     clr                     bitmenu
1D8C D212           4652                     setb            bitklb
1D8E 434A80         4653                     orl             bufind+10,#80h;зажечь KMП
1D91 D204           4654                     setb            bitizm;бит калибровки уже установлен
1D93 78B2           4655                     mov             r0,#marker
1D95 76FF           4656                     mov             @r0,#0ffh
1D97 783D           4657                     mov             r0,#chkl
1D99 76FF           4658                     mov             @r0,#0ffh
1D9B 08             4659                     inc             r0
1D9C 76FF           4660                     mov             @r0,#0ffh;38h
1D9E 120000   F     4661                     call            z_1s
1DA1 020000   F     4662                     jmp             out7
                    4663     
                    4664     
1DA4 020000   F     4665                     jmp             goto7
                    4666                                              
1DA7 020000   F     4667     onmem13:        jmp             goto7   ;(ie7)
                    4668     
1DAA B642AC         4669     labels4:        cjne            @r0,#42h,vvkali52
1DAD 75B0FB         4670                     mov                     p3,#0fbh;<-
1DB0 30B7F4         4671                     jnb             p3.7,onmem13
1DB3 75B0F7         4672                     mov             p3,#0f7h;vvod
1DB6 20B7EE         4673                     jb              p3.7,onmem13
1DB9 020000   F     4674                     jmp             out7                                                    
                    4675     ;;;;;;;
1DBC                4676     labelI:
1DBC 75B0FE         4677                     mov             p3,#0feh
1DBF E5B0           4678                     mov             a,p3
1DC1 20E703         4679                     jb              acc.7,nopoint
                    4680                     ;
1DC4 020000   F     4681                     jmp             goto7;out7
                    4682     
1DC7 75B0FB         4683     nopoint:        mov             p3,#0fbh
1DCA E5B0           4684                     mov             a,p3
1DCC 20E72C         4685                     jb              acc.7,nopoin7
1DCF 78B2           4686     labelS3:        mov             r0,#marker
1DD1 E53A           4687                     mov             a,movleft
1DD3 B40309         4688                     cjne            a,#3,poina1
1DD6 B6030B         4689                     cjne            @r0,#3,nomarl;26
                    4690                     ;mov            @r0,#9
1DD9 E53B           4691     poina2: mov             a,movrig                ;кн <- B=+00000
1DDB F6             4692                     mov             @r0,a
1DDC 020000   F     4693                     jmp             goto7;  out7
                    4694     
1DDF B60402         4695     poina1: cjne            @r0,#4,nomarl;кн <- A= 0000
1DE2 80F5           4696                     jmp             poina2
                    4697     
                    4698     
1DE4                4699     nomarl:                 ;                               29.12.06
                    4700     ;;;;;;;;;;;;;;;;;;
                    4701     ;необходимо не портить цифру в следуюем справа знакоместе
                    4702     ;т е сохранить ее в ячейке для мигания в противном случае
                    4703     ;при сдвиге курсора мигания вправо переносилась цифра с предыдущего 
                    4704     ;       знакоместа
1DE4 78B2           4705                     mov             r0,#marker
1DE6 7440           4706                     mov             a,#bufind
1DE8 26             4707                     add             a,@r0                   ;a=bufind+marker
1DE9 F9             4708                     mov             r1,a
1DEA 09             4709                     inc             r1
1DEB 873C           4710                     mov             savba,@r1
                    4711                                                     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    73

1DED 78B2           4712                     mov             r0,#marker
1DEF 16             4713                     dec             @r0                             
1DF0 C219           4714                     clr             bitmig
1DF2 E53A           4715                     mov                     a,movleft
1DF4 B4036B         4716                     cjne            a,#3,poinA
1DF7 B60266         4717                     cjne    @r0,#2,gogo7;out7;;нажата кн <- при вводе цифр B=+00000
1DFA 06             4718     poin3:  inc             @r0
                    4719     ;нажат ввод А =000000 запомнить константу А
1DFB 75B0F7         4720     nopoin7:        mov             p3,#0f7h
1DFE E5B0           4721                     mov             a,p3
1E00 20E75D         4722                     jb              acc.7,gogo7;out7
1E03 78B1           4723                     mov             r0,#vichR
1E05 E6             4724                     mov             a,@r0
1E06 B6215E         4725                     cjne    @r0,#21h,no21p7
1E09 7611           4726                     mov             @r0,#11h
                    4727                             ;       считать с индикатора  упаковать в плавающий формат
                    4728                             ;   сохранить
1E0B 7F0E           4729                     mov             r7,#14
1E0D 784F           4730                     mov             r0,#abin
1E0F 120000   F     4731                     call    clearN                  
1E12 120000   F     4732                     call    upakA
                    4733                                     
1E15 784F           4734                     mov             r0,#abin
1E17 7953           4735                     mov             r1,#adec                        ;мл         ст
1E19 120000   F     4736                     call    decbin                  ;abin..abin+3 (hex)
1E1C 120000   F     4737                     call    loadr2                  ;r2..r5
1E1F 120402         4738                     call    altof                   ;r2..r5->float
1E22 78BC           4739                     mov     r0,#konstA
1E24 120000   F     4740                     call    saver2
1E27 900000   F     4741                     mov     dptr,#ch0
1E2A 120000   F     4742                     call    ldc_ltemp
1E2D 1201D6         4743                     call            flcmp
1E30 6010           4744                     jz              erra0
                    4745     ;26
1E32 78B2           4746                     mov             r0,#marker
1E34 76FF           4747                     mov             @r0,#0ffh
                    4748                                     
1E36 900000   F     4749                     mov             dptr,#teVICH;teBequ0
1E39 120000   F     4750                     call    lotext
                    4751                     ;       call            outB
1E3C 534BBF         4752                     anl             bufind+11,#0bfh         ;гашение точки bufind+7
                    4753                     ;       orl             bufind+11,#80h
1E3F 020000   F     4754                     jmp             goto7
                    4755     
1E42 78B2           4756     erra0:  mov             r0,#marker
1E44 76FF           4757                     mov             @r0,#0ffh
1E46 753934         4758                     mov                     nuerr,#34h;константа не должна быть равна0
1E49 120000   F     4759                     call            error
1E4C 120000   F     4760                     call            ind
1E4F 120000   F     4761                     call            z_1s
1E52 78B1           4762                     mov                     r0,#vichR
1E54 7600           4763                     mov                     @r0,#0
1E56 C214           4764                     clr                     bitvich
1E58 C206           4765                     clr                     bitvi11
1E5A D204           4766                     setb            bitizm
1E5C 78B2           4767                     mov                     r0,#marker
1E5E 76FF           4768                     mov                     @r0,#0ffh
1E60 802E           4769     gogo7:  jmp                     out7;goto7
                    4770     
1E62 B6032B         4771     poinA:  cjne    @r0,#3,out7;;нажата кн <- при вводе цифр A= 0000
1E65 8093           4772                     jmp             poin3
                    4773     
1E67                4774     no21p7:         ;считать с индикатора  упаковать в плавающий формат
                    4775                             ;сохранить
1E67 7F0E           4776                     mov             r7,#14
1E69 784F           4777                     mov             r0,#abin
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    74

1E6B 120000   F     4778                     call    clearN                  
1E6E 120000   F     4779                     call    upakB                   
1E71 784F           4780                     mov             r0,#abin
1E73 7953           4781                     mov             r1,#adec                        ;мл         ст
1E75 120000   F     4782                     call    decbin                  ;abin..abin+3 (hex)
1E78 120000   F     4783                     call    loadr2                  ;r2..r5
1E7B 120402         4784                     call    altof                   ;r2..r5->int
1E7E 301B04         4785                     jnb             bitznB,pozB
1E81 EA             4786                     mov             a,r2
1E82 4480           4787                     orl             a,#80h
1E84 FA             4788                     mov             r2,a                    ;знак-
1E85                4789     pozB:           ;mov            r0,#konstB
                    4790                     ;call   saver2
                    4791     
1E85 79B2           4792                     mov             r1,#marker       ;B=000000-> ВЫЧИСЛИТЬ
1E87 77FF           4793                     mov             @r1,#0ffh
1E89 78B1           4794                     mov             r0,#vichR
1E8B 7611           4795                     mov             @r0,#11h
1E8D 020000   F     4796                     jmp             lovich     ;3.01.07ВЫЧИСЛИТЬ
                    4797                                     
                    4798     
1E90                4799     out7:            ;mov           IE,#80h
1E90 D083           4800                     pop             dph
1E92 D082           4801                     pop             dpl
1E94 D007           4802                     pop             rr7     
1E96 D006           4803                     pop             rr6
1E98 D005           4804                     pop             rr5
1E9A D004           4805                     pop             rr4
1E9C D003           4806                     pop             rr3
1E9E D002           4807                     pop             rr2
1EA0 D001           4808                     pop             rr1                             
1EA2 D000           4809                     pop             rr0
1EA4 D0D0           4810                     pop             psw
1EA6 D0E0           4811                     pop             acc
1EA8 75AD00         4812                     mov             P3IF,#00;               обязательно сбросить опять приходит
                              на обработку прерывания
1EAB 75B0C0         4813                     mov             P3,#0c0h
                    4814                     ;       mov             EIE2,#30H
1EAE C219           4815                     clr             bitmig
1EB0 E586           4816                     mov             a,P6            ;p6.4=0
1EB2 54EF           4817                     anl             a,#0efh
1EB4 F586           4818                     mov             P6,a
1EB6 00             4819                     nop
1EB7 00             4820                     nop
1EB8 E586           4821                     mov             a,P6                    ;p6.4=1 
1EBA 4410           4822                     orl             a,#10h
1EBC F586           4823                     mov             P6,a
                    4824                     ;;;;;;;;;
1EBE E5DA           4825                     mov             a,PCA0CPM0;             TOG0
1EC0 4446           4826                     orl             a,#46h  ;anl            a,#0fbh
1EC2 F5DA           4827                     mov             PCA0CPM0,a
1EC4 75CDD0         4828                     mov             TH2,#0d0h
1EC7 75CC00         4829                     mov             TL2,#00
1ECA D2CA           4830                     setb            T2CON.2
1ECC D2AD           4831                     setb            ET2     ;IE.5
                    4832                                                 
1ECE 32             4833                     reti
                    4834     
                    4835             ;;;;
1ECF 78B1           4836     lomenu: mov             r0,#vichR
1ED1 B61107         4837                     cjne    @r0,#11h,menu12
1ED4 900000   F     4838                     mov             dptr,#teTESI
1ED7 120000   F     4839     lome1:  call    lotexT
1EDA 22             4840                     ret
1EDB B61205         4841     menu12: cjne    @r0,#12h,menu13
1EDE 900000   F     4842                     mov             dptr,#teTESR
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    75

1EE1 80F4           4843                     jmp             lome1
1EE3 B61305         4844     menu13: cjne    @r0,#13h,menu14
1EE6 900000   F     4845                     mov             dptr,#teSKOR
1EE9 80EC           4846                     jmp             lome1
1EEB B61405         4847     menu14: cjne    @r0,#14h,menu15
1EEE 900000   F     4848                     mov             dptr,#teAVK
1EF1 80E4           4849                     jmp             lome1
1EF3 B61505         4850     menu15: cjne    @r0,#15h,menu21
1EF6 900000   F     4851                     mov             dptr,#teKALIB
1EF9 80DC           4852                     jmp             lome1
                    4853     
1EFB B62105         4854     menu21: cjne    @r0,#21h,menu22
1EFE 900000   F     4855                     mov             dptr,#teTE11
1F01 80D4           4856                     jmp             lome1
1F03 B62205         4857     menu22: cjne    @r0,#22h,menu23
1F06 900000   F     4858                     mov             dptr,#teTE9
1F09 80CC           4859                     jmp             lome1
1F0B B62305         4860     menu23: cjne    @r0,#23h,menu31
1F0E 900000   F     4861                     mov             dptr,#teTE7
1F11 80C4           4862                     jmp             lome1
1F13 B63105         4863     menu31: cjne    @r0,#31h,menu41
1F16 900000   F     4864                     mov             dptr,#teS57_6
1F19 80BC           4865                     jmp             lome1
                    4866     
1F1B                4867     menu41:         
1F1B 900000   F     4868                     mov             dptr,#tePAR
1F1E 80B7           4869                     jmp             lome1
1F20 020000   F     4870     yesvi_kr:       jmp             yesvi_km
1F23                4871     endkalib:;KD=Ak/A3
1F23 200DFA         4872                     jb              bifl_kt,yesvi_kr;выч кофф Км
1F26 789C           4873                     mov             r0,#rez_A3
1F28 120000   F     4874                     call            resar2
                    4875                                     
1F2B 120402         4876                     call            altof                   ;->float
1F2E EA             4877                     mov             a,r2
1F2F 547F           4878                     anl             a,#7fh
1F31 FA             4879                     mov             r2,a
1F32 120000   F     4880                     call            move28
1F35 78A4           4881                     mov             r0,#rez_Ak
1F37 120000   F     4882                     call            resar2
1F3A 1202B7         4883                     call            fldiv
                    4884                                                     
1F3D 900000   F     4885                     mov             dptr,#CHtho;100000
1F40 120000   F     4886                     call            ldc_ltemp                       ;r8..r11=8
1F43 120203         4887                     call            flmul
1F46 120343         4888                     call            ftol            ;r2..r5->hex кофф KD (РЕЗ ИЗМ ЧИСЛО 6разряд
                             ное)
                    4889     
1F49 78A0           4890                     mov             r0,#koefKD
1F4B 120000   F     4891                     call            saver2
                    4892                     ;запись в рпзу в соотв ячейку
                    4893                             
1F4E 7900           4894                     mov             r1,#0                   ;счит рпзу во внешн озу
1F50 7A50           4895                     mov             r2,#50h
1F52 7B00           4896                     mov             r3,#00
1F54 120499         4897                     call            copyPP
                    4898                     ;внести изменения во внешн озу
1F57 120000   F     4899                     call            findext                 ;r1-внешн озу
1F5A 78A0           4900                     mov             r0,#koefKD
1F5C 120000   F     4901                     call            resar2
1F5F EA             4902                     mov             a,r2
1F60 F3             4903                     movx            @r1,a
1F61 09             4904                     inc             r1
1F62 EB             4905                     mov             a,r3
1F63 F3             4906                     movx            @r1,a
1F64 09             4907                     inc             r1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    76

1F65 EC             4908                     mov             a,r4
1F66 F3             4909                     movx            @r1,a
1F67 09             4910                     inc             r1
1F68 ED             4911                     mov             a,r5
1F69 F3             4912                     movx            @r1,a
                    4913                     ;кофф *100000 и переведенный в hex формат
                    4914                     ;согласно адресов диапазонов и адресов яч вн озу 
                    4915                     ;стереть страницу пап прогр 
1F6A 905000         4916                     mov             dptr,#5000h
1F6D 7FFF           4917                     mov             r7,#0ffh
1F6F 12043E         4918                     call            cle256
                    4919     ;и запись в ячейки кофф памяти прогр (3000h) 
1F72 7FFF           4920                     mov             r7,#0ffh
1F74 7900           4921                     mov             r1,#0                           ;external ram
1F76 905000         4922                     mov             dptr,#5000h
1F79 120480         4923                     call            wrpage
                    4924     ;2.2.07
1F7C 79AE           4925                     mov             r1,#diap
1F7E B70511         4926                     cjne            @r1,#5,fulkalib
                    4927                     ;jb             bifl_kt,yesvi_km;выч кофф Км
1F81 D20D           4928                     setb            bifl_kt
                    4929                     ;call           loadus
1F83 900000   F     4930                     mov             dptr,#tabt7;заслать ус 7А       
1F86 E4             4931                     clr             a
1F87 93             4932                     movc            a,@a+dptr                               ;high byte
1F88 F584           4933                     mov             p4,a
1F8A A3             4934                     inc             dptr
1F8B E4             4935                     clr             a
1F8C 93             4936                     movc            a,@a+dptr                               ;low byte
1F8D F585           4937                     mov             p5,a
1F8F 020000   F     4938                     jmp             goto7;  out_kali
                    4939     
                    4940     ;;;
1F92                4941     fulkalib:
1F92 C212           4942                     clr             bitklb
1F94 D216           4943                     setb            bitpar                  ;пароль провели 1 раз успешно
1F96 900000   F     4944                     mov             dptr,#teEND
1F99 120000   F     4945                     call            lotext
1F9C 120000   F     4946                     call            ind
1F9F 120000   F     4947     out_kali:       call            z_1s
1FA2 120000   F     4948                     call            z_1s
1FA5 020000   F     4949                     jmp             goto7
1FA8                4950     yesvi_km:               ;выч кофф Км=(10**5/A2)*K7/K5
1FA8 7A50           4951                     mov             r2,#50h                 ;-11a
1FAA 7B14           4952                     mov             r3,#14h                 ;k7
1FAC 12046C         4953                     call            rebyte2                         ;r2..r5- hex
1FAF 120402         4954                     call            altof                   ;r2..r5->float
1FB2 C002           4955                     push            rr2
1FB4 C003           4956                     push            rr3
1FB6 C004           4957                     push            rr4
1FB8 C005           4958                     push            rr5
1FBA 7A50           4959                     mov             r2,#50h                 ;k5
1FBC 7B0C           4960                     mov             r3,#0ch
1FBE 12046C         4961                     call            rebyte2                 ;r2..r5
1FC1 120402         4962                     call            altof                   ;r2..r5->float
1FC4 120000   F     4963                     call            move28
1FC7 D005           4964                     pop             rr5
1FC9 D004           4965                     pop             rr4
1FCB D003           4966                     pop             rr3
1FCD D002           4967                     pop             rr2
1FCF 1202B7         4968                     call            fldiv                   ;K7/K5
                    4969     
1FD2 900000   F     4970                     mov     dptr,#CHtho;100000
1FD5 120000   F     4971                     call    ldc_ltemp                       ;r8..r11=8
1FD8 120203         4972                     call    flmul                           ;r2..r5 ;K7/K5*10**5
1FDB C002           4973                     push            rr2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    77

1FDD C003           4974                     push            rr3
1FDF C004           4975                     push            rr4
1FE1 C005           4976                     push            rr5
                    4977                                     
1FE3 789C           4978                     mov                     r0,#rez_A3
1FE5 120000   F     4979                     call            resar2
1FE8 120402         4980                     call            altof                           ;r2..r5->float
1FEB 120000   F     4981                     call            move28
1FEE D005           4982                     pop                     rr5
1FF0 D004           4983                     pop                     rr4
1FF2 D003           4984                     pop                     rr3
1FF4 D002           4985                     pop                     rr2
1FF6 1202B7         4986                     call            fldiv           ;Km     
                    4987     
1FF9 900000   F     4988                     mov     dptr,#CHtho;100000
1FFC 120000   F     4989                     call    ldc_ltemp                       ;r8..r11=8
1FFF 120203         4990                     call    flmul                           ;r2..r5
2002 120343         4991                     call    ftol                    ;r2..r5->hex кофф Km(РЕЗ ИЗМ ЧИСЛО 6разрядн
                             ое)
2005 78A0           4992                     mov                     r0,#koefKD;2ое исп ячейки koefKD
2007 120000   F     4993                     call            saver2
                    4994                     ;запись в рпзу в соотв ячейку
200A 7900           4995                     mov             r1,#0                   ;счит рпзу во внешн озу
200C 7A50           4996                     mov             r2,#50h
200E 7B00           4997                     mov             r3,#00
2010 120499         4998                     call    copyPP
                    4999                     ;внести изменения во внешн озу
2013 78A0           5000                     mov                     r0,#koefKD
2015 120000   F     5001                     call            resar2
2018 792C           5002                     mov                     r1,#2ch                 ;r1-внешн озу кофф Km
                    5003                             
201A EA             5004                     mov                     a,r2
201B F3             5005                     movx            @r1,a
201C 09             5006                     inc                     r1
201D EB             5007                     mov                     a,r3
201E F3             5008                     movx            @r1,a
201F 09             5009                     inc                     r1
2020 EC             5010                     mov                     a,r4
2021 F3             5011                     movx            @r1,a
2022 09             5012                     inc                     r1
2023 ED             5013                     mov                     a,r5
2024 F3             5014                     movx            @r1,a
                    5015                     ;кофф *100000 и переведенный в hex формат
                    5016                     ;согласно адресов диапазонов и адресов яч вн озу 
                    5017     ;стереть страницу пап прогр 
2025 905000         5018                     mov             dptr,#5000h
2028 7FFF           5019                     mov             r7,#0ffh
202A 12043E         5020                     call    cle256
                    5021     ;и запись в ячейки кофф памяти прогр (3000h) 
202D 7FFF           5022                     mov             r7,#0ffh
202F 7900           5023                     mov             r1,#0                           ;external ram
2031 905000         5024                     mov             dptr,#5000h
2034 120480         5025                     call    wrpage
                    5026     
2037 C20D           5027                     clr             bifl_kt
2039 120000   F     5028                     call    loadus
203C 020000   F     5029                     jmp             fulkalib
                    5030     
                    5031     ;выч среднего по блоку
                    5032     ;вых r2..r5
203F                5033     vichmean:       
                    5034                                             ;;;;;;;;;;
203F 120000   F     5035                     call            adrblok;dptr-адр ячейки 1й соотв блока 
2042 E582           5036                     mov                     a,dpl
2044 FF             5037                     mov                     r7,a
2045 E583           5038                     mov                     a,dph
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    78

2047 FE             5039                     mov                     r6,a
2048 120000   F     5040                     call            resa_hl;save_bl->dptr
                    5041     
204B C3             5042                     clr             c; в начало блока?
204C E582           5043                     mov                     a,dpl
204E 9F             5044                     subb            a,r7
204F FF             5045                     mov                     r7,a
2050 7006           5046                     jnz                     oldmean
2052 E583           5047                     mov                     a,dph
2054 9E             5048                     subb            a,r6
2055 FE             5049                     mov                     r6,a
2056 6065           5050                     jz                      outmea;
                    5051     ;;;;;;;;;;
2058                5052     oldmean:
2058 120000   F     5053                     call            resa_hl;save_bl->dptr
205B 78D7           5054                     mov                     r0,#copy_hl
205D E583           5055                     mov                     a,dph
205F F6             5056                     mov                     @r0,a
2060 08             5057                     inc                     r0
2061 E582           5058                     mov                     a,dpl
2063 F6             5059                     mov                     @r0,a
2064 78B8           5060                     mov                     r0,#work
2066 120000   F     5061                     call            clear4
2069 78D6           5062                     mov                     r0,#chblok;volume
206B 7600           5063                     mov                     @r0,#0
206D 120000   F     5064     meng:           call            adrblok;dptr-адр ячейки 1й соотв блока 
2070 E582           5065                     mov                     a,dpl
2072 FF             5066                     mov                     r7,a
2073 E583           5067                     mov                     a,dph
2075 FE             5068                     mov                     r6,a
2076 78D7           5069                     mov                     r0,#copy_hl;call                resa_hl;save_bl->dp
                             tr
2078 E6             5070                     mov                     a,@r0
2079 F583           5071                     mov                     dph,a
207B 08             5072                     inc                     r0
207C E6             5073                     mov                     a,@r0
207D F582           5074                     mov                     dpl,a
207F C3             5075                     clr                     c;-4
2080 E582           5076                     mov                     a,dpl
2082 9404           5077                     subb            a,#4
2084 F582           5078                     mov                     dpl,a
2086 E583           5079                     mov                     a,dph
2088 9400           5080                     subb            a,#0
208A F583           5081                     mov                     dph,a;dptr-4
                    5082                     ;;;;;;;;
208C 79D7           5083                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
208E E583           5084                     mov             a,dph
2090 F7             5085                     mov             @r1,a
2091 09             5086                     inc             r1
2092 E582           5087                     mov             a,dpl
2094 F7             5088                     mov             @r1,a
                    5089                     ;;;;;;;;;
2095 C3             5090                     clr             c;пришли в начало блока?
2096 E582           5091                     mov                     a,dpl
2098 9F             5092                     subb            a,r7
2099 FF             5093                     mov                     r7,a
209A 7006           5094                     jnz                     nextmea
209C E583           5095                     mov                     a,dph
209E 9E             5096                     subb            a,r6
209F FE             5097                     mov                     r6,a
20A0 601B           5098                     jz                      outmea;
                    5099                                             
                    5100                     ;продолжаем сравнение
                    5101                     ;;;;;;;;;;;             
20A2 120000   F     5102     nextmea:        call            loahl_r2        ;из яч внешн озу ->r2..r5
20A5 120402         5103                     call            altof;->float
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    79

20A8 120000   F     5104                     call            move28                  ;r8..r11
20AB 78B8           5105                     mov                     r0,#work
20AD 120000   F     5106                     call            resar2
20B0 120166         5107                     call            fladd
20B3 78B8           5108                     mov                     r0,#work
20B5 120000   F     5109                     call            saver2
20B8 78D6           5110                     mov                     r0,#chblok;volume;кол измерений блока
20BA 06             5111                     inc                     @r0
20BB 80B0           5112                     jmp                     meng
20BD                5113     outmea:         
20BD 120000   F     5114                     call            loahl_r2        ;из яч внешн озу ->r2..r5
20C0 120402         5115                     call            altof;->float
20C3 120000   F     5116                     call            move28                  ;r8..r11
20C6 78B8           5117                     mov                     r0,#work
20C8 120000   F     5118                     call            resar2
20CB 120166         5119                     call            fladd
20CE 78B8           5120                     mov                     r0,#work
20D0 120000   F     5121                     call            saver2
20D3 E4             5122                     clr                     a
20D4 FA             5123                     mov                     r2,a
20D5 FB             5124                     mov                     r3,a
20D6 FC             5125                     mov                     r4,a
20D7 78D6           5126                     mov                     r0,#chblok;volume;кол измерений блока...200d
20D9 E6             5127                     mov                     a,@r0
20DA 2401           5128                     add                     a,#1
20DC FD             5129                     mov                     r5,a
20DD 120402         5130                     call            altof;r2..r5 float
20E0 120000   F     5131                     call            move28
20E3 78B8           5132                     mov                     r0,#work
20E5 120000   F     5133                     call            resar2
20E8 1202B7         5134                     call            fldiv
20EB 900000   F     5135                     mov                     dptr,#ch_10      
20EE 120000   F     5136                     call            ldc_ltemp
20F1 1202B7         5137                     call            fldiv
20F4 120343         5138                     call            ftol                            ;->hex
20F7 120000   F     5139                     call    maform
20FA 784F           5140                     mov             r0,#abin
20FC 120000   F     5141                     call    saver2
                    5142     ;;;;;;;;
                    5143                                             
20FF 7853           5144                     mov             r0,#adec
2101 7952           5145                     mov             r1,#abin+3      ;hex->10
2103 120000   F     5146                     call    bindec
                    5147                                     
2106 785C           5148                     mov             r0,#adec+9;разместить в буфер индикации
2108 7949           5149                     mov             r1,#bufind+9
210A 7F05           5150                     mov             r7,#5
210C E6             5151     bufmea: mov             a,@r0
210D 2430           5152                     add             a,#30h
210F F7             5153                     mov             @r1,a
2110 19             5154                     dec             r1
2111 18             5155                     dec             r0
2112 DFF8           5156                     djnz    r7,bufmea
2114 7844           5157                     mov             r0,#bufind+4
2116 762B           5158                     mov             @r0,#2bh          
2118 300202         5159                     jnb             znmat,nozmea
211B 762D           5160                     mov             @r0,#2dh
211D 434B05         5161     nozmea: orl             bufind+11,#05h
2120 22             5162                     ret
                    5163     
                    5164     
2121 E0             5165     loahl_r2:       movx            a,@dptr         ;из яч внешн озу ->r2..r5
2122 FA             5166                     mov                     r2,a
2123 A3             5167                     inc                     dptr
2124 E0             5168                     movx            a,@dptr
2125 FB             5169                     mov                     r3,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    80

2126 A3             5170                     inc                     dptr
2127 E0             5171                     movx            a,@dptr
2128 FC             5172                     mov                     r4,a
2129 A3             5173                     inc                     dptr
212A E0             5174                     movx            a,@dptr
212B FD             5175                     mov                     r5,a    
212C 22             5176                     ret
                    5177     
212D C3             5178     min4_hl:        clr                     c;-4
212E E582           5179                     mov                     a,dpl
2130 9404           5180                     subb            a,#4
2132 F582           5181                     mov                     dpl,a
2134 E583           5182                     mov                     a,dph
2136 9400           5183                     subb            a,#0
2138 F583           5184                     mov                     dph,a;dptr-4
213A 22             5185                     ret
                    5186     
213B 020000   F     5187     routmin:        jmp             outmin
                    5188     ;мин значение по по блоку
213E                5189     vichmin:        ;;;;;;;;;;
213E 120000   F     5190                     call            adrblok;dptr-адр ячейки 1й соотв блока 
2141 E582           5191                     mov                     a,dpl
2143 FF             5192                     mov                     r7,a
2144 E583           5193                     mov                     a,dph
2146 FE             5194                     mov                     r6,a
2147 120000   F     5195                     call            resa_hl;save_bl->dptr
                    5196     
214A C3             5197                     clr             c; в начало блока?
214B E582           5198                     mov                     a,dpl
214D 9F             5199                     subb            a,r7
214E FF             5200                     mov                     r7,a
214F 7006           5201                     jnz                     oldmin
2151 E583           5202                     mov                     a,dph
2153 9E             5203                     subb            a,r6
2154 FE             5204                     mov                     r6,a
2155 60E4           5205                     jz                      routmin;
                    5206     ;;;;;;;;;;
2157                5207     oldmin:
2157 120000   F     5208                     call            resa_hl;save_bl->dptr
                    5209                                                                                     
                    5210     ;с конца блока адрес 2го измерение
215A 120000   F     5211                     call            min4_hl
                    5212                                             
215D 78B8           5213                     mov             r0,#work        ;блок анализируется с конца 1я измерение за
                             гружается в work
                    5214                                             
215F E0             5215                     movx            a,@dptr
2160 F6             5216                     mov             @r0,a
2161 08             5217                     inc             r0
2162 A3             5218                     inc             dptr
2163 E0             5219                     movx            a,@dptr
2164 F6             5220                     mov             @r0,a
2165 08             5221                     inc             r0
2166 A3             5222                     inc             dptr
2167 E0             5223                     movx            a,@dptr
2168 F6             5224                     mov             @r0,a
2169 08             5225                     inc             r0
216A A3             5226                     inc             dptr
216B E0             5227                     movx            a,@dptr
216C F6             5228                     mov             @r0,a
216D A3             5229                     inc             dptr
                    5230                                             
216E 78B8           5231                     mov             r0,#work
2170 120000   F     5232                     call            resar2
2173 120402         5233                     call            altof;->float;r2..r5
2176 78B8           5234                     mov             r0,#work
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    81

2178 120000   F     5235                     call            saver2
                    5236     
217B 120000   F     5237                     call            min4_hl
                    5238                     ;call           min4_hl
217E 78D7           5239                     mov             r0,#copy_hl
2180 E583           5240                     mov             a,dph
2182 F6             5241                     mov             @r0,a
2183 08             5242                     inc             r0
2184 E582           5243                     mov             a,dpl
2186 F6             5244                     mov             @r0,a
                    5245                             
2187 78D6           5246                     mov             r0,#chblok;volume
2189 7600           5247                     mov             @r0,#0
218B 120000   F     5248     ming:           call            adrblok;dptr-адр ячейки 1й соотв блока 
218E E582           5249                     mov             a,dpl
2190 FF             5250                     mov             r7,a
2191 E583           5251                     mov             a,dph
2193 FE             5252                     mov             r6,a
                    5253     
2194 78D7           5254                     mov             r0,#copy_hl;call                resa_hl;save_bl->dptr
2196 E6             5255                     mov             a,@r0
2197 F583           5256                     mov             dph,a
2199 08             5257                     inc             r0
219A E6             5258                     mov             a,@r0
219B F582           5259                     mov             dpl,a
                    5260                                     
219D C3             5261                     clr             c;-4
219E E582           5262                     mov             a,dpl
21A0 9404           5263                     subb            a,#4
21A2 F582           5264                     mov             dpl,a
21A4 E583           5265                     mov             a,dph
21A6 9400           5266                     subb            a,#0
21A8 F583           5267                     mov             dph,a;dptr-4
                    5268                     ;;;;;;;;
21AA 79D7           5269                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
21AC E583           5270                     mov             a,dph
21AE F7             5271                     mov             @r1,a
21AF 09             5272                     inc             r1
21B0 E582           5273                     mov             a,dpl
21B2 F7             5274                     mov             @r1,a
                    5275                                                     ;;;;;;;;;
21B3 C3             5276                     clr             c;пришли в начало блока?
21B4 E582           5277                     mov                     a,dpl
21B6 9F             5278                     subb            a,r7
21B7 FF             5279                     mov                     r7,a
21B8 7006           5280                     jnz                     nextmin
21BA E583           5281                     mov                     a,dph
21BC 9E             5282                     subb            a,r6
21BD FE             5283                     mov                     r6,a
21BE 601D           5284                     jz                      outmin;
                    5285                                                     
                    5286                     ;продолжаем сравнение
                    5287                                                     ;;;;;;;;;;;             
21C0 78B8           5288     nextmin:        mov                     r0,#work
21C2 120000   F     5289                     call            resar2
                    5290                     ;call           altof;->float;r2..r5
21C5 120000   F     5291                     call            move28;->r8..r11
21C8 120000   F     5292                     call            loahl_r2                ;из яч внешн озу ->r2..r5
                    5293     
21CB 120402         5294                     call            altof;->float;r2..r5
                    5295                                             
21CE 1201D6         5296                     call            flcmp
21D1 5005           5297                     jnc                     nomini
21D3 78B8           5298                     mov                     r0,#work;<
21D5 120000   F     5299                     call            saver2;r2..r5
21D8 78D6           5300     nomini: mov                     r0,#chblok;volume;кол измерений блока
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    82

21DA 06             5301                     inc                     @r0
21DB 80AE           5302                     jmp                     ming
                    5303     
21DD 78B8           5304     outmin: mov                     r0,#work;1ое измерение блока
21DF 120000   F     5305                     call            resar2
                    5306                     ;call           altof;->float;r2..r5
21E2 120000   F     5307                     call            move28;->r8..r11
21E5 120000   F     5308                     call            loahl_r2                ;из яч внешн озу ->r2..r5
                    5309     
21E8 120402         5310                     call            altof;->float;r2..r5
                    5311                                             
21EB 1201D6         5312                     call            flcmp
21EE 5005           5313                     jnc                     minivix
21F0 78B8           5314                     mov                     r0,#work;<
21F2 120000   F     5315                     call            saver2;r2..r5
                    5316                                             ;;;;;;;;;
                    5317     
21F5 78B8           5318     minivix:        mov             r0,#work
21F7 120000   F     5319                     call            resar2
                    5320                     ;call           altof;->float
21FA 900000   F     5321                     mov             dptr,#ch_10      
21FD 120000   F     5322                     call            ldc_ltemp
2200 1202B7         5323                     call            fldiv
2203 120343         5324                     call            ftol                            ;->hex
                    5325                     ;;;
2206 120000   F     5326                     call            maform
2209 784F           5327                     mov             r0,#abin
220B 120000   F     5328                     call            saver2
                    5329     ;;;;;;;;
220E 7853           5330                     mov             r0,#adec
2210 7952           5331                     mov             r1,#abin+3      ;hex->10
2212 120000   F     5332                     call            bindec
2215 785C           5333                     mov             r0,#adec+9;разместить в буфер индикации
2217 7949           5334                     mov             r1,#bufind+9
2219 7F05           5335                     mov             r7,#5
221B E6             5336     bufmin: mov             a,@r0
221C 2430           5337                     add             a,#30h
221E F7             5338                     mov             @r1,a
221F 19             5339                     dec             r1
2220 18             5340                     dec             r0
2221 DFF8           5341                     djnz            r7,bufmin
2223 7844           5342                     mov             r0,#bufind+4
2225 762B           5343                     mov             @r0,#2bh          
2227 300202         5344                     jnb             znmat,nozmin
222A 762D           5345                     mov             @r0,#2dh
222C 434B05         5346     nozmin: orl             bufind+11,#05h
222F 22             5347                     ret
                    5348     
                    5349     
2230 020000   F     5350     routmax:        jmp             outmax
                    5351     ;мин значение по по блоку
2233                5352     vichmax:        ;;;;;;;;;;
2233 120000   F     5353                     call            adrblok;dptr-адр ячейки 1й соотв блока 
2236 E582           5354                     mov             a,dpl
2238 FF             5355                     mov             r7,a
2239 E583           5356                     mov             a,dph
223B FE             5357                     mov             r6,a
223C 120000   F     5358                     call            resa_hl;save_bl->dptr
223F C3             5359                     clr             c; в начало блока?
2240 E582           5360                     mov             a,dpl
2242 9F             5361                     subb            a,r7
2243 FF             5362                     mov             r7,a
2244 7006           5363                     jnz             oldmax
2246 E583           5364                     mov             a,dph
2248 9E             5365                     subb            a,r6
2249 FE             5366                     mov             r6,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    83

224A 60E4           5367                     jz              routmax;
                    5368     ;;;;;;;;;;
224C                5369     oldmax:
224C 120000   F     5370                     call            resa_hl;save_bl->dptr
                    5371     ;с конца блока адрес 2го измерение
224F 120000   F     5372                     call            min4_hl
2252 78B8           5373                     mov             r0,#work        ;блок анализируется с конца 1я измерение за
                             гружается в work
2254 E0             5374                     movx            a,@dptr
2255 F6             5375                     mov             @r0,a
2256 08             5376                     inc             r0
2257 A3             5377                     inc             dptr
2258 E0             5378                     movx            a,@dptr
2259 F6             5379                     mov             @r0,a
225A 08             5380                     inc             r0
225B A3             5381                     inc             dptr
225C E0             5382                     movx            a,@dptr
225D F6             5383                     mov             @r0,a
225E 08             5384                     inc             r0
225F A3             5385                     inc             dptr
2260 E0             5386                     movx            a,@dptr
2261 F6             5387                     mov             @r0,a
2262 A3             5388                     inc             dptr
                    5389                                             
2263 78B8           5390                     mov             r0,#work
2265 120000   F     5391                     call            resar2
2268 120402         5392                     call            altof;->float;r2..r5
226B 78B8           5393                     mov             r0,#work
226D 120000   F     5394                     call            saver2
2270 120000   F     5395                     call            min4_hl
                    5396                     ;       call            min4_hl
2273 78D7           5397                     mov             r0,#copy_hl
2275 E583           5398                     mov             a,dph
2277 F6             5399                     mov             @r0,a
2278 08             5400                     inc             r0
2279 E582           5401                     mov             a,dpl
227B F6             5402                     mov             @r0,a
227C 78D6           5403                     mov             r0,#chblok;volume
227E 7600           5404                     mov             @r0,#0
2280 120000   F     5405     maxg:           call            adrblok;dptr-адр ячейки 1й соотв блока 
2283 E582           5406                     mov             a,dpl
2285 FF             5407                     mov             r7,a
2286 E583           5408                     mov             a,dph
2288 FE             5409                     mov             r6,a
2289 78D7           5410                     mov             r0,#copy_hl;call                resa_hl;save_bl->dptr
228B E6             5411                     mov             a,@r0
228C F583           5412                     mov             dph,a
228E 08             5413                     inc             r0
228F E6             5414                     mov             a,@r0
2290 F582           5415                     mov             dpl,a
2292 C3             5416                     clr             c;-4
2293 E582           5417                     mov             a,dpl
2295 9404           5418                     subb            a,#4
2297 F582           5419                     mov             dpl,a
2299 E583           5420                     mov             a,dph
229B 9400           5421                     subb            a,#0
229D F583           5422                     mov             dph,a;dptr-4
                    5423                             ;;;;;;;;
229F 79D7           5424                     mov             r1,#copy_hl;saven_bl    ;сохранить dptr 
22A1 E583           5425                     mov             a,dph
22A3 F7             5426                     mov             @r1,a
22A4 09             5427                     inc             r1
22A5 E582           5428                     mov             a,dpl
22A7 F7             5429                     mov             @r1,a
                    5430             ;;;;;;;;;
22A8 C3             5431                     clr             c;пришли в начало блока?
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    84

22A9 E582           5432                     mov             a,dpl
22AB 9F             5433                     subb            a,r7
22AC FF             5434                     mov             r7,a
22AD 7006           5435                     jnz             nextmax
22AF E583           5436                     mov             a,dph
22B1 9E             5437                     subb            a,r6
22B2 FE             5438                     mov             r6,a
22B3 601D           5439                     jz              outmax;
                    5440                     ;продолжаем сравнение
                    5441                     ;;;;;;;;;;;             
22B5 78B8           5442     nextmax:        mov             r0,#work
22B7 120000   F     5443                     call            resar2
                    5444                     ;call           altof;->float;r2..r5
22BA 120000   F     5445                     call            move28;->r8..r11
22BD 120000   F     5446                     call            loahl_r2                ;из яч внешн озу ->r2..r5
22C0 120402         5447                     call            altof;->float;r2..r5
22C3 1201D6         5448                     call            flcmp
22C6 4005           5449                     jc              nomaxi
22C8 78B8           5450                     mov             r0,#work;>
22CA 120000   F     5451                     call            saver2;r2..r5
22CD 78D6           5452     nomaxi: mov             r0,#chblok;volume;кол измерений блока
22CF 06             5453                     inc             @r0
22D0 80AE           5454                     jmp             maxg
22D2 78B8           5455     outmax: mov             r0,#work;1ое измерение блока
22D4 120000   F     5456                     call            resar2
                    5457                     ;call           altof;->float;r2..r5
22D7 120000   F     5458                     call            move28;->r8..r11
22DA 120000   F     5459                     call            loahl_r2                ;из яч внешн озу ->r2..r5
22DD 120402         5460                     call            altof;->float;r2..r5
22E0 1201D6         5461                     call            flcmp
22E3 4005           5462                     jc              maxvix
22E5 78B8           5463                     mov             r0,#work;>
22E7 120000   F     5464                     call            saver2;r2..r5
22EA 020000   F     5465     maxvix: jmp             minivix
                    5466     
                    5467     
22ED 78CF           5468     bufl_dec:       mov             r0,#chbuf       
22EF 120000   F     5469                     call            resar2  
22F2 900000   F     5470                     mov             dptr,#ch_1       
22F5 120000   F     5471                     call            ldc_ltemp
22F8 1201D1         5472                     call            flsub
22FB 78CF           5473                     mov             r0,#chbuf       
22FD 120000   F     5474                     call            saver2  
2300 22             5475                     ret
                    5476     
                    5477     ;прерывание таймера Т2
2301                5478     inter2:         
2301 E5DA           5479                     mov             a,PCA0CPM0
2303 54BF           5480                     anl             a,#0bfh                         
2305 F5DA           5481                     mov             PCA0CPM0,a
                    5482                     ;mov            a,T2CON         ;T2CON.2=0
                    5483                     ;anl            a,#0fbh
2307 75C800         5484                     mov             T2CON,#00;a
230A C2AD           5485                     clr             IE.5
230C 32             5486                     reti
                    5487     
                    5488     ;пп выдачи на индикатор 12 байт   bufind..bufind+11
230D                5489      ind:   ;;;
230D E5E7           5490                     mov             a,EIE2
230F FA             5491                     mov             r2,a;save
2310 75E700         5492                     mov             EIE2,#00H
2313 120000   F     5493                     call            mign
2316 7840           5494                     mov             r0,#bufind;+11
2318 7F0C           5495                     mov             r7,#12
231A C287           5496      nexin: clr             p0.7;6
231C E6             5497                     mov             a,@r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    85

231D F59B           5498                     mov             SPI0DAT,a
231F 20FBFD         5499                     jb              TXBSY,$
2322 D287           5500                     setb            p0.7;6
2324 120000   F     5501                     call            z_9             ;25mks
2327 08             5502                     inc             r0;dec          r0
2328 DFF0           5503                     djnz            r7,nexin
232A EA             5504                     mov             a,r2
232B F5E7           5505                     mov             EIE2,a;#30H
232D 22             5506                     ret
                    5507     ;;=====================================
232E                5508     rs_byte:
                    5509     ;               jnb     RI,S_R2
                    5510     ;               clr     RI
                    5511     ;               clr     C
                    5512     ;               mov     A,SBUF
                    5513     
                    5514     ;S_R2:          ;transfer
                    5515     ;               jnb   TI,$
                    5516     ;               clr   TI
                    5517             ;       mov   SBUF0,r2
                    5518             ;       reti
                    5519     ;!!! real interrupt filling
                    5520                     ;jnb    is_2,S_R2       ;256 samples -> clr
                    5521                     ;reti   ;there direct out
232E                5522     S_R2:
232E C0D0           5523                     push    PSW     ;?
2330 C0E0           5524                     push    ACC     ;?
                    5525     
2332 E524           5526                     mov     A,cnt_out
2334 6017           5527                     jz      S_R4    ;after last
2336 C3             5528                     clr     C
2337 9401           5529                     subb    A,#1
2339 4014           5530                     jc      S_R5            ;empty buf
233B 30990E         5531                     jnb   TI,S_R3
233E C299           5532                     clr   TI
2340 F524           5533                     mov     cnt_out,A
                    5534     ;??             push    1
2342 852601         5535                     mov     1,p_out
2345 E7             5536                     mov     A,@R1
                    5537     ;               pop     1
2346 0526           5538                     inc     p_out
                    5539     ;S_R_:
                    5540     ;               jnb   TI,S_R_
                    5541     ;               clr   TI
2348 F599           5542                     mov   SBUF0,A
234A 8003           5543                     jmp     S_R5
234C                5544     S_R3:
234C 00             5545                     nop
                    5546             
234D                5547     S_R4:
234D C299           5548                     clr     TI
                    5549                     
234F                5550     S_R5:
                    5551     ;?              jb      is_cmd,S_R9             deadloop RS?
234F E525           5552                     mov     A,cnt_in
2351 C3             5553                     clr     C
2352 9403           5554                     subb    A,#3
2354 400A           5555                     jc      S_R7    ;cmd isn't received
2356 752500         5556     S_R6:           mov     cnt_in,#0
2359 7527DB         5557                     mov     p_in,#buf_in    ; for new
235C D21D           5558                     setb    is_cmd
235E 8015           5559                     jmp     S_R9;?reti
                    5560     
2360                5561     S_R7: 
2360 309812         5562                     jnb     RI,S_R9
2363 C298           5563                     clr     RI
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    86

2365 E599           5564                     mov     A,SBUF0
                    5565     ;??             push    1
2367 A927           5566                     mov     R1,p_in
2369 F7             5567                     mov     @R1,A
236A 0527           5568                     inc     p_in
236C 0525           5569                     inc     cnt_in
236E E525           5570                     mov     A,cnt_in
2370 B40302         5571                     cjne    A,#3,S_R9
                    5572     ;??             pop     1
2373 80E1           5573                     jmp     S_R6
                    5574     
2375                5575     S_R9:
2375 D0E0           5576                     pop     ACC     ;?
2377 D0D0           5577                     pop     PSW     ;?
                    5578     
2379 32             5579                     reti
                    5580     ;-------------------Call from main programm-------------
237A                5581     cmd_tree:                                       ;??
237A 754E7F         5582                     mov     cmd_rez,#7Fh
237D 78DB           5583                     mov     r0,#buf_in
                    5584     ;               mov     A,#'B'
                    5585     ;               subb    A,@R0
                    5586     ;               jz      ta0
237F B64202         5587                     cjne    @R0,#'B',tb_0
2382 8003           5588                     jmp             ta0
2384                5589     tb_0:
2384 020000   F     5590                             jmp             tb
2387                5591     ta0:
2387 08             5592                     inc     r0
2388 B63005         5593                     cjne    @R0,#30h,ta1
238B C21E           5594                     clr     is_rs           ;B0
238D 020000   F     5595                     jmp     tr9
2390                5596     ta1:
2390 B63125         5597                     cjne    @R0,#31h,ta2
2393 D21E           5598                     setb    is_rs   ;?
2395 789A           5599                     mov             R0,#parT
2397 E6             5600                     mov             A,@R0
2398 B4060D         5601                     cjne    A,#6,ta2_
239B D20C           5602                     setb    is_2
239D 75A880         5603             mov     IE,#80h ;Снятие enable RS
23A0 7524C8         5604                     mov     cnt_out,#200    ;??0
23A3 C21E           5605                     clr             is_rs
23A5 020000   F     5606                     jmp     tr9
23A8                5607     ta2_:
23A8 B4050A         5608                     cjne    A,#5,ta3_
23AB D20C           5609                     setb    is_2
23AD 75A880         5610                     mov     IE,#80h
23B0 7524C8         5611                     mov     cnt_out,#200    ;??0
23B3 C21E           5612                     clr             is_rs
23B5                5613     ta3_:
23B5 020000   F     5614                     jmp     tr9
23B8                5615     ta2:    ;?#2 real need
23B8 78F4           5616                     mov     R0,#0F4h        ;?F8h   ;abin
23BA C2AF           5617                     clr     EA
23BC 740A           5618                             mov     A,#0Ah
23BE F6             5619                             mov     @R0,A
23BF 08             5620                             inc     R0
23C0 79AE           5621                     mov     R1,#diap
23C2 E7             5622                     mov     A,@R1
23C3 F6             5623                     mov     @R0,A
23C4 08             5624                     inc     R0
23C5 799A           5625                     mov     R1,#parT
23C7 E7             5626                     mov     A,@R1
23C8 F6             5627                     mov     @R0,A
23C9 08             5628                     inc     R0
23CA 7938           5629                     mov     R1,#nblok
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    87

23CC E7             5630                     mov     A,@R1
23CD F6             5631                     mov     @R0,A
23CE 08             5632                     inc     R0
23CF 79AF           5633                     mov     R1,#parN
23D1 E7             5634                     mov     A,@R1
23D2 F6             5635                     mov     @R0,A
23D3 08             5636                     inc     R0
23D4 E520           5637                     mov     A,20h   ;bitizm,AVP,bitvi11 usefool
23D6 300F04         5638             jnb             bitnul,ta3
23D9 4480           5639                     orl     A,#80h
23DB 8002           5640                     jmp     ta4
23DD                5641     ta3:
23DD 547F           5642                     anl     A,#7Fh
23DF                5643     ta4:
23DF 301804         5644             jnb             knizm,ta5
23E2 4401           5645                     orl     A,#1h
23E4 8002           5646                     jmp     ta6
23E6                5647     ta5:
23E6 54FE           5648                     anl     A,#0FEh
23E8                5649     ta6:
23E8 F6             5650                     mov     @R0,A
23E9 08             5651                     inc     R0
                    5652     
23EA 79CD           5653                     mov     R1,#interva
23EC E7             5654                     mov     A,@R1
23ED F6             5655                     mov     @R0,A
23EE 08             5656                     inc     r0
23EF 09             5657                     inc     r1
23F0 E7             5658                     mov     A,@R1
23F1 F6             5659                     mov     @R0,A           ;interva+1
23F2 08             5660                     inc     r0
                    5661     
23F3 79BC           5662                     mov     R1,#konstA      ;?B3 to make
23F5 E7             5663                     mov     A,@R1
                    5664     ;               mov     @R0,A
                    5665     ;               inc     r0
                    5666     ;               inc     r1
                    5667     ;               mov     A,@R1
                    5668     ;               mov     @R0,A
                    5669     ;               inc     r0
                    5670     ;               inc     r1
                    5671     ;               mov     A,@R1
                    5672     ;               mov     @R0,A
                    5673     ;               inc     r0
                    5674     ;               inc     r1
                    5675     ;               mov     A,@R1
                    5676     ;               mov     @R0,A
                    5677     ;               mov     p_out,#00F4h    ;abin
                    5678     ;               mov     cnt_out,#11
                    5679     ;               mov     cmd_rez,#7Ah    ;B2 sign
23F6 FA             5680                     mov     R2,A            ;?fragment
23F7 09             5681                     inc     r1
23F8 E7             5682                     mov     A,@R1
23F9 FB             5683                     mov     R3,A
23FA 09             5684                     inc     r1
23FB E7             5685                     mov     A,@R1
23FC FC             5686                     mov     R4,A
23FD 09             5687                     inc     r1
23FE E7             5688                     mov     A,@R1
23FF FD             5689                     mov     R5,A
2400 120343         5690                     call    ftol
2403 EC             5691                     mov     A,R4
2404 F6             5692                     mov     @R0,A
2405 08             5693                     inc     r0
2406 ED             5694                     mov     A,R5
2407 F6             5695                     mov     @R0,A
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    88

2408 08             5696                             inc     R0
2409 740A           5697                             mov     A,#0Ah
240B F6             5698                             mov     @R0,A
240C 7526F4         5699                     mov     p_out,#00F4h    ;abin
240F 75240B         5700                             mov     cnt_out,#11             ;#9             ;?was 11
                    5701     
2412 020000   F     5702                     jmp     tr9
                    5703                     
2415                5704     tb:
2415 B64C1E         5705                     cjne    @R0,#'L',tc             
2418 08             5706                     inc     r0                              ;-----------L-----------
2419 E6             5707                     mov     A,@R0
241A C3             5708                             clr     C
241B 9430           5709                             subb            A,#30h
241D 4011           5710                             jc      mtb2
241F C3             5711                     clr     C
2420 940A           5712                     subb    A,#10
2422 500C           5713                     jnc     mtb2    ;
2424 E6             5714                     mov     A,@R0
2425 9430           5715                             subb    A,#30h
2427 78AE           5716                     mov     R0,#diap
2429 F6             5717                     mov     @R0,A
242A 120000   F     5718             call    loadUS
242D 020000   F     5719                     jmp     tr9
                    5720     
2430 754E7D         5721     mtb2:           mov     cmd_rez,#7Dh    ;Err par
2433 020000   F     5722                     jmp     tr9
                    5723     
                    5724     
2436                5725     tc:
2436 B65439         5726                     cjne    @R0,#'T',td
2439 08             5727                     inc     r0                                      ;-----T------
243A E6             5728                     mov     A,@R0
243B C3             5729                                             clr     C
243C 9430           5730                                             subb    A,#30h
243E 40F0           5731                                             jc              mtb2
2440 C3             5732                     clr     C
2441 9407           5733                     subb    A,#7
2443 4002           5734                     jc              tc1
2445 804B           5735                     jmp             mtf2    ;
2447                5736     tc1:
2447 E6             5737                     mov             A,@R0
2448 9530           5738                             subb    A,30h
244A 789A           5739                     mov             R0,#parT
244C F6             5740                     mov             @R0,A
244D B4060D         5741                     cjne    A,#6,tc2
                    5742     ;               jnb             is_rs,tc2               yet=0
2450 D20C           5743                     setb    is_2
2452 75A880         5744                             mov     IE,#80h
2455 7524C8         5745                     mov             cnt_out,#200    ;??0
2458 C21E           5746                     clr             is_rs
245A 020000   F     5747                     jmp             tr9
245D B4050D         5748     tc2:            cjne    A,#5,tc3
                    5749     ;               jnb             is_rs,tc3
2460 D20C           5750                     setb    is_2
2462 75A880         5751             mov     IE,#80h
2465 7524C8         5752                     mov             cnt_out,#200    ;??0
2468 C21E           5753                     clr             is_rs
246A 020000   F     5754                     jmp             tr9
246D C20C           5755     tc3: clr        is_2
246F 020000   F     5756                     jmp             tr9
                    5757     
2472                5758     td:
2472 B65245         5759                     cjne    @R0,#'R',te
2475 08             5760                     inc     r0                              ;-------------R---------
2476 E6             5761                     mov     A,@R0                   ;AAAAAAnn, nn=cmd
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    89

2477 5403           5762                     anl     A,#3
2479 B40005         5763                     cjne    A,#0,te1
247C C206           5764                     clr     bitvi11
247E 020000   F     5765                     jmp     tr9
2481                5766     te1:
2481 B40105         5767                     cjne    A,#1,te2
2484 D206           5768                     setb    bitvi11
2486 020000   F     5769                     jmp     tr9
2489                5770     te2:
2489 B40306         5771                     cjne    A,#03h,mtf2
248C 754E7D         5772                     mov     cmd_rez,#7Dh    ;Err par
248F 020000   F     5773                     jmp     tr9
2492                5774     mtf2:           ;=2
2492 E6             5775             mov     A,@R0
2493 C3             5776                     clr     C
2494 13             5777                     rrc     A
2495 C3             5778                     clr     C
2496 13             5779                     rrc     A
2497 C002           5780             push    2               ;?
2499 C003           5781             push    3               ;?
249B C004           5782             push    4               ;?
249D C005           5783             push    5               ;?
249F FC             5784                     mov     r4,A
24A0 08             5785                     inc     r0
24A1 E6             5786                     mov     A,@R0
24A2 FD             5787                     mov     r5,A
24A3 7B00           5788                     mov     r3,#0
24A5 7A00           5789                     mov     r2,#0
24A7 120402         5790                     call    altof                   ;r2..r5->float
24AA 78BC           5791                     mov     r0,#konstA
24AC 120000   F     5792                     call    saver2
24AF D005           5793             pop     5
24B1 D004           5794             pop     4
24B3 D003           5795             pop     3
24B5 D002           5796             pop     2
24B7 020000   F     5797                     jmp     tr9
                    5798     
24BA                5799     te:
24BA B64818         5800                     cjne    @R0,#'H',mtf
24BD 08             5801                     inc     r0                                      ;-----------H------
24BE E6             5802                     mov     A,@R0
24BF C3             5803                             clr     C
24C0 9430           5804                             subb            A,#30h
24C2 5003           5805                             jnc     mte2
24C4 020000   F     5806                             jmp     mtb2
24C7                5807     mte2:
24C7 C3             5808                     clr     C
24C8 9404           5809                     subb    A,#4
24CA 50C6           5810                     jnc     mtf2    ;
24CC E6             5811                     mov     A,@R0
24CD 9430           5812                             subb    A,#30h
24CF 78AF           5813                     mov     R0,#parN
                    5814     ;       inc     A
24D1 F6             5815                     mov     @R0,A
                    5816     ;               inc     parN
24D2 020000   F     5817                     jmp     tr9
                    5818     
                    5819     
24D5 B6410E         5820     mtf:            cjne    @R0,#'A',mtg 
24D8 08             5821                     inc     r0                                      ;-----A--------
24D9 B63005         5822                     cjne    @R0,#30h,mtf1
24DC C205           5823                     clr     bitavp
24DE 020000   F     5824                     jmp     tr9
24E1 D205           5825     mtf1:           setb    bitavp
24E3 020000   F     5826                     jmp     tr9
24E6 B6512D         5827     mtg:            cjne    @R0,#'Q',mtk            ;mth
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    90

24E9 08             5828                     inc     r0                                              ;-----Q-----
24EA B63112         5829                     cjne    @R0,#31h,mtf3
24ED D20F           5830                     setb    bitnul  ;?clr, as Izm?
24EF 789C           5831                     mov             r0,#rez_A3      ;A3
24F1 120000   F     5832                     call            resar2
24F4 786A           5833                     mov             r0,#rez_A0      
24F6 120000   F     5834                     call            saver2;A0<-A3
24F9 120000   F     5835                     call            loadUS
24FC 020000   F     5836                     jmp     tr9
24FF B63290         5837     mtf3:           cjne    @R0,#32h,mtf2
                    5838     ;               clr     bitnul  ;?clr, as Izm?
                    5839     ;               mov     r0,#rez_A0
                    5840     ;               call    clear4
                    5841     ;               call    loadUS
                    5842     ;               jmp     tr9
2502 D2AF           5843                     setb    EA
2504 C21D           5844                     clr     is_cmd
                    5845     ;               pop     1
                    5846     ;               jmp     ybnul
2506 C20F           5847                     clr     bitnul  ;?
2508 900000   F     5848                     mov     DPTR,#ch0 
250B 120000   F     5849                     CALL    ldc_long        ;?r2..r5 <-- 0
250E 786A           5850                     mov     r0,#rez_A0      ;?A0=0
2510 120000   F     5851                     call    saver2
2513 020000   F     5852                     jmp     tr9             ;?
                    5853     
                    5854     ;----------------igor-----------
2516 B64B1A         5855     mtk:            cjne    @R0,#'K',mth
2519 08             5856                     inc     r0
251A B63008         5857                     cjne    @R0,#30h,mtk1
251D 79C4           5858                             mov     r1,#byte_kor            ;откл. корр.0
251F 7401           5859                             mov             A,#1
2521 F7             5860                             mov     @R1,A                                           
2522 020000   F     5861                     jmp     tr9
2525                5862     mtk1:           
2525 79C4           5863                             mov     r1,#byte_kor            ;вкл.корр.0
2527 E4             5864                             clr     A
2528 F7             5865                             mov     @R1,A                                           
2529 7898           5866                     mov             r0,#chinkor
252B 7600           5867                     mov             @r0,#0;1;
252D 08             5868                     inc             r0
252E 7619           5869                     mov             @r0,#19h;64h;0c8h;90h;
2530 020000   F     5870                     jmp     tr9
                    5871     
                    5872     ;-------------------------------
                    5873     
2533 B64911         5874     mth:            cjne    @R0,#'I',mti0
2536 08             5875                     inc     r0
2537 B6300F         5876                     cjne    @R0,#30h,mth1
253A D218           5877                     setb    knizm   ;?bitizm
253C E54E           5878                     mov     A,cmd_rez
253E F599           5879                     mov     SBUF0,A
2540 C21D           5880                     clr     is_cmd
2542 D21F           5881             setb    is_izm
2544 020000   F     5882             jmp     keyb1           ;--
                    5883     
2547 8013           5884     mti0:   jmp     mti
                    5885     
2549                5886     mth1:
2549 B6310D         5887                     cjne    @R0,#31h,mth2
                    5888     ;               clr     bitizm                  ;begin reset
254C C218           5889                     clr     knizm   ;?bitizm
254E E54E           5890                     mov     A,cmd_rez
2550 F599           5891                     mov     SBUF0,A
2552 C21D           5892                     clr     is_cmd
2554 D21F           5893             setb    is_izm
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    91

2556 020000   F     5894             jmp     keyb1           ;--
                    5895     
2559                5896     mth2:   ;I2
                    5897     ;               clr     is_2    ;end 10&2 ms
                    5898     ;               clr     is_rs   ;end 10&2 ms
2559 020000   F     5899                     jmp     tr9
                    5900     
255C B65300         5901     mti:            cjne    @R0,#'S',mtx            ;RS speed
                    5902     ;               inc     r0
                    5903     ;       clr     EA
                    5904     ;               cjne    @R0,#0,mti1
                    5905     ;               mov     TH1,#220        ;19600
                    5906     ;               setb    EA
                    5907     ;               jmp     tr9
255F                5908     mti1:
                    5909     ;               mov     TH1,#244
                    5910     ;               setb    EA
                    5911     ;               jmp     tr9
                    5912     
255F                5913     mtx:
255F B64D1A         5914                     cjne    @R0,#'M',mty
2562 08             5915                     inc     r0
2563 E6             5916                     mov     A,@R0                   ;AAAAAnnn, nnn=cmd
2564 5407           5917                     anl     A,#7
2566 B40516         5918                     cjne    A,#5,mtx5
2569 E6             5919                     mov     A,@R0
256A C3             5920                     clr     C
256B 13             5921                     rrc     A
256C C3             5922                     clr     C
256D 13             5923                     rrc     A
256E C3             5924                     clr     C
256F 13             5925                     rrc     A
2570 7938           5926                     mov     R1,#nblok
2572 F7             5927                     mov     @R1,A
                    5928     
2573 120000   F     5929             call    adrblok ;?
2576 120000   F     5930             call    save_hl ;?
                    5931     
2579 020000   F     5932                     jmp     tr9
                    5933     
257C 020000   F     5934     mty: jmp        mty2
                    5935     
257F C3             5936     mtx5:           clr     C
2580 9406           5937                     subb    A,#6
2582 5007           5938                     jnc     mtf4
2584 E6             5939                     mov     A,@R0
2585 B63009         5940                     cjne    @R0,#30h,mtx0
2588 020000   F     5941                     jmp     chaibl9         ;clear??SP
258B 754E7D         5942     mtf4:           mov     cmd_rez,#7Dh    ;Err par
258E 020000   F     5943                     jmp     tr9
                    5944     
2591                5945     mtx0:
2591 B6330B         5946                     cjne    @R0,#33h,mtx1   
2594 C20A           5947                     clr             bitbon
2596 534BFD         5948                     anl     bufind+11,#0fdh;??jmp bufon
2599 120000   F     5949                     call    ind
259C 020000   F     5950                     jmp     tr9
                    5951     ;mtx0_:
                    5952     ;               mov     A,cmd_rez
                    5953     ;               mov     SBUF0,A
                    5954     ;               clr     is_cmd
                    5955     ;       setb    is_mem  ;?
                    5956     ;               pop     0               ;?
                    5957     ;       jmp     labelB;keyb1    ;---
                    5958     
259F                5959     mtx1:
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    92

259F B63212         5960                     cjne    @R0,#32h,mtx2           ;start
25A2 D20A           5961                     setb    bitbon  ;bitmem
25A4 79D5           5962                     mov     r1,#volume      ;work   обьем блока
25A6 7700           5963                     mov     @r1,#00
25A8 09             5964                     inc     r1
25A9 77C7           5965                     mov     @r1,#0c7h               ;320h/4
25AB 434B02         5966                     orl     bufind+11,#02h  ; on pysk
25AE 120000   F     5967                     call    ind
25B1 020000   F     5968                     jmp             tr9
                    5969     
25B4                5970     mtx2:
25B4 B6346A         5971                     cjne    @R0,#34h,mtx3           ;to PC
                    5972     ;---M4-----
25B7 120000   F     5973                     call    adrblok         ;dptr-
                    5974     
25BA 120000   F     5975             call    save_hl ;?
                    5976     
                    5977     ;               setb    is_mem
                    5978     ;-              setb    bitbon  ;?Mem will to fill?
                    5979     
25BD C2AF           5980                     clr     EA
25BF 7524FB         5981                     mov     cnt_out,#251            ;#200
25C2 75997F         5982                     mov     SBUF0,#7Fh
25C5                5983     mt0A:
25C5 3099FD         5984                     jnb   TI,mt0A
25C8 C299           5985                     clr   TI
25CA 75990A         5986                             mov     SBUF0,#0Ah
25CD                5987     mtxa:
25CD 120000   F     5988             call    reA3_X          ;over r2..r5<-внешн пам
25D0 79D8           5989             mov                     r1,#copy_hl+1;next?
25D2 E582           5990             mov                     a,dpl
25D4 F7             5991             mov                     @r1,a           ;low
25D5 E583           5992             mov                     a,dph
25D7 19             5993             dec                     r1
25D8 F7             5994             mov                     @r1,a                   ;high
25D9 900000   F     5995             mov             dptr,#ch10
25DC 120000   F     5996                     call    ldc_ltemp
25DF 120000   F     5997                     call    zdiv                    ;form4=invertif <0; divide
25E2 120000   F     5998                     call    maform          ;setb/clr       znmat
25E5 789C           5999                     mov             r0,#rez_A3      ;?
25E7                6000     mtxb:
25E7 3099FD         6001                     jnb   TI,mtxb
25EA C299           6002                     clr   TI
25EC 8699           6003                     mov     SBUF0,@r0
25EE 08             6004                     inc     r0
25EF                6005     mtxc:
25EF 3099FD         6006                     jnb   TI,mtxc
25F2 C299           6007                     clr   TI
25F4 8699           6008                     mov     SBUF0,@r0
25F6 08             6009                     inc     r0
25F7                6010     mtxd:
25F7 3099FD         6011                     jnb   TI,mtxd
25FA C299           6012                     clr   TI
25FC 8699           6013                     mov     SBUF0,@r0
25FE 08             6014                     inc     r0
25FF                6015     mtxe:
25FF 3099FD         6016                     jnb   TI,mtxe
2602 C299           6017                     clr   TI
2604 8699           6018                     mov             SBUF0,@r0
2606 75990A         6019                             mov             SBUF0,#0Ah
2609                6020     mtx0A:
2609 3099FD         6021                     jnb   TI,mtx0A          ;
260C C299           6022                     clr   TI                        ;25.11.09
260E 75990A         6023                     mov             SBUF0,#0Ah      ;
                    6024     
2611 79D8           6025                     mov                     r1,#copy_hl+1;saven_bl+1;сохр адрес внешн озу введе
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    93

                             нного лемента
2613 E7             6026                     mov                     A,@r1           ;low
2614 F582           6027                     mov                     dpl,A
2616 19             6028                     dec                     r1
2617 E7             6029                     mov                     A,@r1                   ;high
2618 F583           6030                     mov                     dph,A
261A D524B0         6031                     djnz    cnt_out,mtxa
                    6032     
261D D2AF           6033                     setb    EA
261F 801D           6034                     jmp     tr9
                    6035     
2621                6036     mtx3:           ;M1 only
2621 C2AF           6037                     clr     EA
2623 E6             6038                     mov     A,@R0
2624 C3             6039                     clr     C
2625 13             6040                     rrc     A
2626 C3             6041                     clr     C
2627 13             6042                     rrc     A
2628 C3             6043                     clr     C
2629 13             6044                     rrc     A
262A 79CD           6045                     mov     R1,#interva
262C F7             6046                     mov     @R1,A
262D 08             6047                     inc     r0
262E 09             6048                     inc     r1
262F E6             6049                     mov     A,@R0
2630 F7             6050                     mov     @R1,A           ;interva+1
2631 800B           6051                     jmp     tr9
                    6052     
                    6053     
2633                6054     mty2:
2633 B67F05         6055                     cjne    @R0,#7Fh,tz
2636 75997F         6056                     mov     SBUF0,#7Fh
2639 8003           6057                     jmp     tr9
                    6058     
263B                6059     tz:
263B 754E7E         6060                     mov     cmd_rez,#7Eh    ;Err cmd
                    6061     
263E E54E           6062     tr9:            mov     A,cmd_rez
2640 F599           6063                     mov     SBUF0,A
2642 D2AF           6064                     setb    EA
2644 C21D           6065                     clr     is_cmd
2646 22             6066                     ret
                    6067     
2647                6068     chaibl9:        ;M0-Mem clear
2647 C2AF           6069                     clr             EA
2649 120000   F     6070                     call    adrblok
264C 79B8           6071                     mov             r1,#work
264E 7703           6072                     mov             @r1,#03
2650 09             6073                     inc             r1
2651 7720           6074                     mov             @r1,#20h                        ;320h
2653                6075     goonof9:
2653 E4             6076                     clr             a
2654 F0             6077                     movx    @dptr,a
2655 A3             6078                     inc             dptr
2656 79B9           6079                     mov             r1,#work+1
2658 120000   F     6080                     call    chminus
265B 78B8           6081                     mov             r0,#work
265D E6             6082                     mov             a,@r0
265E 30E7F2         6083                     jnb             acc.7,goonof9
2661 120000   F     6084             call    adrblok
2664 120000   F     6085             call    save_hl
2667 80D5           6086                     jmp     tr9
                    6087     
2669 C2AF           6088     reA3_m: clr     EA              ;Mem to PC
                    6089     ;               mov             r0,#0F9h
                    6090     ;               movx    a,@dptr
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    94

                    6091     ;               mov             @r0,a
                    6092     ;               inc             r0
                    6093     ;               inc             dptr
                    6094     ;               movx    a,@dptr
                    6095     ;               mov             @r0,a
                    6096     ;               inc             r0
                    6097     ;               inc             dptr
                    6098     ;               movx    a,@dptr
                    6099     ;               mov             @r0,a
                    6100     ;               inc             r0
                    6101     ;               inc             dptr
                    6102     ;               movx    a,@dptr
                    6103     ;               mov             @r0,a
                    6104     ;               inc             dptr
                    6105     ;               mov             p_out,#0F9h
                    6106     ;               mov             cnt_out,#4
                    6107     ;               mov     SBUF0,#7Fh      ;was cmd_rez
                    6108     ;               ret
                    6109     
266B E538           6110     save_hlm:       mov             a,nblok
266D B40117         6111                     cjne    a,#1,sm_hl1
2670 79D3           6112                     mov             r1,#saven_bl
2672 E583           6113     sm_hl:  mov             a,dph
2674 F7             6114                     mov             @r1,a
2675 09             6115                     inc             r1
2676 E582           6116                     mov             a,dpl
2678 F7             6117                     mov             @r1,a
                    6118                     ;не конец ли блока
2679 79D6           6119                     mov                     r1,#volume+1;work+1
267B 120000   F     6120                     call            chminus
267E 78D5           6121                     mov             r0,#volume
2680 E6             6122                     mov             a,@r0
2681 30E702         6123                     jnb             acc.7,noend_m
2684 C20E           6124                     clr             is_mem                  ;?breakpoint
                    6125     ;               anl                     bufind+11,#0fdh ;?
                    6126     ;               call            ind                                                     ;?
2686 22             6127     noend_m: ret
2687 B40204         6128     sm_hl1: cjne    a,#2,sm_hl2
268A 79C0           6129                                     mov             r1,#saven_bl2
268C 80E4           6130                                     jmp             sm_hl
268E B40304         6131     sm_hl2: cjne    a,#3,sm_hl3
2691 79C2           6132                                     mov             r1,#saven_bl3
2693 80DD           6133                                     jmp             sm_hl
2695 79D9           6134     sm_hl3: mov             r1,#saven_bl4
2697 80D9           6135                                     jmp             sm_hl
                    6136     
                    6137     
                    6138     ;$include (subr7.asm) 
                +1  6139     ;тест интерфейса
2699            +1  6140     testrs: ;jb     p0.3,goprogr
2699 C2AC       +1  6141                     clr     IE.4
269B 759955     +1  6142     test1:  mov     SBUF0,#55h
269E 3099FD     +1  6143                     jnb     SCON0.1,$
26A1 78B8       +1  6144                     mov     r0,#work;chtest
26A3 76BE       +1  6145                     mov     @r0,#190d;60
                +1  6146     
26A5 309825     +1  6147     test01: jnb     SCON0.0,test2
26A8 E599       +1  6148                     mov     a,SBUF0
26AA B45512     +1  6149                     cjne    a,#55h,test3
26AD C299       +1  6150     test4:  clr     SCON0.1
26AF C298       +1  6151                     clr     SCON0.0
26B1 7D0A       +1  6152                     mov     r5,#10
26B3 7840       +1  6153                     mov     r0,#bufind              ;- - - -
26B5 762D       +1  6154     test04: mov     @r0,#2dh
26B7 08         +1  6155                     inc     r0
26B8 DDFB       +1  6156                     djnz    r5,test04
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    95

26BA 120000   F +1  6157                     call    ind
26BD 80DC       +1  6158                     jmp     test1
26BF            +1  6159     test3:  
26BF 753933     +1  6160                     mov     nuerr,#33h
26C2 120000   F +1  6161                     call    error           ;на кран прибора ERR 3
26C5 120000   F +1  6162                     call    ind;
26C8 120000   F +1  6163                     call    z_01s           ;100ms
26CB 80E0       +1  6164                     jmp     test4
26CD 78B8       +1  6165     test2:  mov     r0,#work;chtest
26CF B60002     +1  6166                     cjne    @r0,#0,test02
26D2 8003       +1  6167                     jmp     test5
26D4 16         +1  6168     test02: dec     @r0
26D5 80CE       +1  6169                     jmp     test01
26D7 120000   F +1  6170     test5:  call    z_1ms           ;1ms
26DA C299       +1  6171                     clr     SCON0.1
26DC 753933     +1  6172                     mov     nuerr,#33h
26DF 120000   F +1  6173                     call    error           ;на кран прибора ERR 3
26E2 120000   F +1  6174                     call    ind
26E5 120000   F +1  6175                     call    z_01s           ;100ms
26E8 80B1       +1  6176                     jmp     test1   
                +1  6177     
                +1  6178     
26EA 7A08       +1  6179     zapadc:     mov R2,#8
26EC D297       +1  6180     sdv:        setb P1.7
26EE 33         +1  6181                 rlc A
26EF 9296       +1  6182                     mov P1.6,C
26F1 120000   F +1  6183                     call tim2
                +1  6184                                     
26F4 C297       +1  6185                     clr P1.7
26F6 120000   F +1  6186                     call tim2
26F9 DAF1       +1  6187                     djnz R2,sdv
26FB D296       +1  6188                     setb P1.6
26FD 22         +1  6189                     ret
                +1  6190     
26FE 7A08       +1  6191     chtadc:     mov R2,#8
2700 D297       +1  6192     sdv1:       setb P1.7
2702 120000   F +1  6193                 call tim2
2705 C297       +1  6194                     clr P1.7
2707 A296       +1  6195                     mov C,P1.6
2709 33         +1  6196                     rlc A
270A 120000   F +1  6197                     call tim2
270D DAF1       +1  6198                     djnz R2,sdv1
270F 22         +1  6199                     ret
                +1  6200     
2710 7E30       +1  6201     tim:      mov R6,#30h;38h
2712 DEFE       +1  6202     tim1:     djnz R6,tim1
2714 22         +1  6203               ret
                +1  6204               
2715 7E10       +1  6205     tim2:     mov R6,#10h;14h
2717 DEFE       +1  6206     tim3:     djnz R6,tim3
2719 22         +1  6207               ret
                +1  6208     
                +1  6209     ;запись из acc
271A C3         +1  6210     write_x1:       clr     c
271B            +1  6211     writeD_x1:
271B 92B1       +1  6212                     mov P3.1,c        ;запись
271D F5A0       +1  6213                 mov P2,A
271F D2B3       +1  6214                     setb P3.3
2721 120000   F +1  6215                     call z_5
2724 C2B3       +1  6216                     clr P3.3
2726 75A0FF     +1  6217                     mov P2,#0FFh
2729 22         +1  6218                     ret
                +1  6219     
                +1  6220     ;чтение в acc
272A C3         +1  6221     read_x2:        clr     c  
272B 92B1       +1  6222                     mov P3.1,c        ;чтение
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    96

272D D2B2       +1  6223                     setb P3.2
272F D2B3       +1  6224                     setb P3.3
2731 120000   F +1  6225                     call z_5
2734 E5A0       +1  6226                     mov A,P2
2736 C2B3       +1  6227                     clr P3.3
2738 C2B2       +1  6228                     clr P3.2
273A 22         +1  6229                     ret
                +1  6230     
273B 120000   F +1  6231     loop:           call read_x2;x2    ;ожидание флага готовности
273E 20E7FA     +1  6232                     jb ACC.7,loop     ;переход на чтение, если бит А(7)=1
2741 22         +1  6233                     ret           ;возврат, если бит А(7)<>1
                +1  6234     
                +1  6235     
                +1  6236     ;принимаемый байт в acc
                +1  6237     ;прием байта последовательным кодом старшими разрядами вперед
2742 7A08       +1  6238     read:      mov R2,#8
2744 C297       +1  6239     re1:       clr P1.7;P1.2
2746 120000   F +1  6240                call tim2      ;5mks
2749 A294       +1  6241                     mov C,P1.4;P1.0
274B 33         +1  6242                     rlc A           
274C D297       +1  6243                     setb P1.7;P1.2
274E 120000   F +1  6244                     call tim2
2751 DAF1       +1  6245                     djnz R2,re1
2753 22         +1  6246                     ret
                +1  6247     
                +1  6248      ;in r0-count   
                +1  6249     ;r10,r11-значение с котоым сравнивается счетчик
                +1  6250     ;r2..r5 -значение счетчика
2754            +1  6251     chcmp:; mov              r0,#chavt                                      ;>=7500(1d4ch
2754 E6         +1  6252                     mov             a,@r0
2755 FC         +1  6253                     mov             r4,a
2756 08         +1  6254                     inc             r0
2757 E6         +1  6255                     mov             a,@r0
2758 FD         +1  6256                     mov             r5,a
2759 7B00       +1  6257                     mov             r3,#0
275B 7A00       +1  6258                     mov             r2,#0
275D 750800     +1  6259                     mov             r8,#0;clr                       r8
2760 750900     +1  6260                     mov             r9,#0;clr                       r9
2763 120000   F +1  6261                     call            lcmp
2766 22         +1  6262                     ret
                +1  6263     
                +1  6264     
                +1  6265     ;in-r1-count
2767            +1  6266     chdec:          ;mov            r1,#chavt               ;chavt-1
2767 E7         +1  6267                             mov             a,@r1
2768 FC         +1  6268                             mov             r4,a
2769 09         +1  6269                             inc             r1
276A E7         +1  6270                             mov             a,@r1
276B FD         +1  6271                             mov             r5,a
276C C202       +1  6272                             clr             rr2
276E C203       +1  6273                             clr             rr3
2770 900000   F +1  6274                             mov             dptr,#ch1        
2773 120000   F +1  6275                             call            ldc_ltemp
2776 120000   F +1  6276                             call            lsub
2779 ED         +1  6277                             mov             a,r5
277A F7         +1  6278                             mov             @r1,a
277B 19         +1  6279                             dec             r1
277C EC         +1  6280                             mov             a,r4
277D F7         +1  6281                             mov             @r1,a
277E 22         +1  6282                             ret      
                +1  6283     
                +1  6284     
277F            +1  6285     loadUS: ;если идет тест измерения ус восстановить для теста
277F 201533     +1  6286                             jb              biteizm,yestest
2782 79AE       +1  6287                             mov             r1,#diap
2784 E7         +1  6288                             mov             a,@r1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    97

2785 23         +1  6289                             rl              a;*2
2786 FC         +1  6290                             mov             r4,a                    ;save a
2787 900000   F +1  6291                             mov             dptr,#tabus
278A 93         +1  6292                             movc            a,@a+dptr
278B FA         +1  6293                             mov             r2,a                    ;high byte
278C E584       +1  6294                             mov             a,p4
278E 5401       +1  6295                             anl             a,#01
2790 4A         +1  6296                             orl             a,r2
2791 F584       +1  6297                             mov             p4,a
2793 0C         +1  6298                             inc             r4
2794 EC         +1  6299                             mov             a,r4
2795 93         +1  6300                             movc            a,@a+dptr
2796 FB         +1  6301                             mov             r3,a                    ;low byte
2797 E585       +1  6302                             mov             a,p5
2799 5401       +1  6303                             anl             a,#01
279B 4B         +1  6304                             orl             a,r3
279C F585       +1  6305                             mov             p5,a
279E 799A       +1  6306                             mov             r1,#parT
27A0 B7010E     +1  6307                             cjne            @r1,#1,bret
27A3 79AE       +1  6308                             mov             r1,#diap                  ;10s (parT=1)
27A5 7405       +1  6309                             mov             a,#5                      ;10-8..10-11 p4.1=1
27A7 C3         +1  6310                             clr             c
27A8 97         +1  6311                             subb            a,@r1
27A9 5006       +1  6312                             jnc             bret
27AB E584       +1  6313                             mov             a,p4
27AD 4402       +1  6314                             orl             a,#02
27AF F584       +1  6315                             mov             p4,a                     ;10-8..10-11 p4.1=1
27B1 120000   F +1  6316     bret:                   call            louizm          ;us если вкл кн ИЗМЕР
27B4 22         +1  6317                             ret
27B5            +1  6318     yestest:
27B5 120000   F +1  6319                             call            lotpus          ;ус теста измерения
27B8 22         +1  6320                             ret
                +1  6321                             
                +1  6322     ;загр ус для кор 0
                +1  6323     ;dptr-
27B9 E4         +1  6324     lospus:         clr             a
                +1  6325                             ;movc   a,@a+dptr
                +1  6326                             ;mov            r2,a                    ;high byte
                +1  6327                             ;mov            a,p4
                +1  6328                             ;anl            a,#01
                +1  6329                             ;orl            a,r2
                +1  6330                             ;mov            p4,a
                +1  6331                             ;inc            dptr
27BA E4         +1  6332                             clr             a
27BB 93         +1  6333                             movc            a,@a+dptr
27BC FB         +1  6334                             mov             r3,a                    ;low byte
27BD E585       +1  6335                             mov             a,p5
27BF 54BF       +1  6336                             anl             a,#0bfh;01
27C1 4B         +1  6337                             orl             a,r3
27C2 F585       +1  6338                             mov             p5,a
27C4 22         +1  6339                             ret
                +1  6340     
27C5 80         +1  6341     kor0us:         db              80h;18h,2eh             ;us режима коррекции 0
                +1  6342     
                +1  6343     ;us кнопка измерения выкл
27C6 88D6       +1  6344     tabus:          db              88h,0d6h         ;10-2
27C8 88F6       +1  6345                             db              88h,0f6h         ;10-3
27CA 88D6       +1  6346                             db              88h,0d6h         ;10-4
27CC 88F6       +1  6347                             db              88h,0f6h         ;10-5
27CE 9AD6       +1  6348                             db              9ah,0d6h         ;10-6
27D0 9AF6       +1  6349                             db              9ah,0f6h         ;10-7
27D2 ACD6       +1  6350                             db              0ach,0d6h        ;10-8
27D4 ACF6       +1  6351                             db              0ach,0f6h        ;10-9
27D6 C8D6       +1  6352                             db              0c8h,0d6h        ;10-10
27D8 C8F6       +1  6353                             db              0c8h,0f6h        ;10-11
                +1  6354     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    98

27DA 66E6       +1  6355     tabt11:         db              66h,0e6h;10-11
27DC 32E6       +1  6356     tabt9:          db              32h,0e6h;10-9
27DE 18EE       +1  6357     tabt7:          db              18h,0eeh;10-7
                +1  6358     
                +1  6359      ;загрузка текста в буфер 2 bufind+0..bufind9
                +1  6360     ;в зав от parT (Tизм)
27E0 79B7       +1  6361     loadT:          mov             r1,#load;parT
27E2 7840       +1  6362     lolevT:         mov             r0,#bufind+0
27E4 7B0A       +1  6363                             mov             r3,#10
27E6 75F00A     +1  6364                             mov             b,#10
27E9 E7         +1  6365                             mov             a,@r1
27EA A4         +1  6366                             mul             ab
27EB FC         +1  6367                             mov             r4,a                    ;save a
27EC 900000   F +1  6368                             mov             dptr,#textT
27EF 93         +1  6369             lod1:   movc    a,@a+dptr
27F0 F6         +1  6370                             mov             @r0,a
27F1 08         +1  6371                             inc             r0
27F2 0C         +1  6372                             inc             r4
27F3 EC         +1  6373                             mov             a,r4
27F4 DBF9       +1  6374                             djnz    r3,lod1
27F6 534B03     +1  6375                             anl                     bufind+11,#03h          ;гашение точек
27F9 22         +1  6376                             ret     
                +1  6377     ;загрузка текста в буфер 2 bufind+0..bufind9                    
                +1  6378     ;dptr-адр строки текста         
27FA            +1  6379     lotext:         
27FA 7B0A       +1  6380                             mov             r3,#10
27FC 7840       +1  6381                             mov             r0,#bufind+0
27FE E4         +1  6382     lodt:                   clr             a
27FF 93         +1  6383                             movc            a,@a+dptr
2800 F6         +1  6384                             mov             @r0,a
2801 08         +1  6385                             inc             r0
2802 A3         +1  6386                             inc             dptr
2803 DBF9       +1  6387                             djnz            r3,lodt
2805 534B03     +1  6388                             anl             bufind+11,#03h          ;гашение точек
2808 22         +1  6389                             ret                                     
                +1  6390     
                +1  6391     
                +1  6392     ;задержка 100 мкс
2809 7978       +1  6393     z_100:    mov R1,#78h     ;загрузка первого числа
280B 7A02       +1  6394     z100:     mov R2,#2h     ;загрузка второго числа
280D DAFE       +1  6395     count:    djnz R2, count;декремент R2 и внутренний цикл, если R2<>0     
280F D9FA       +1  6396               djnz R1, z100 ;декремент R1 и внутренний цикл, если R1<>0
2811 22         +1  6397               ret           
                +1  6398     
                +1  6399     ;задержка 34 мкс
2812 7B8B       +1  6400     z_5:      mov R3,#8Bh      ;загрузка числа
2814 DBFE       +1  6401     ct:       djnz R3,ct
2816 22         +1  6402               ret
                +1  6403     
                +1  6404     ;задержка 15 мс
2817 79FA       +1  6405     z_15:     mov R1,#0FAh    ;загрузка первого числа
2819 7AED       +1  6406     z15:      mov R2,#0EDh   ;загрузка второго числа
281B DAFE       +1  6407     zz:       djnz R2, zz   ;декремент R2 и внутренний цикл, если R2<>0
281D D9FA       +1  6408               djnz R1, z15  ;декремент R1 и внутренний цикл, если R1<>0
281F 22         +1  6409               ret   
                +1  6410                                               
                +1  6411     ;задержка 1 мс
2820 7910       +1  6412     z_1ms:     mov R1,#10h     
2822 7AED       +1  6413     ss1:       mov R2,#0EDh    
2824 DAFE       +1  6414                 djnz R2, $   
2826 D9FA       +1  6415                djnz R1, ss1   
2828 22         +1  6416                ret   
                +1  6417     
                +1  6418     ;задержка 1с
2829 7D1F       +1  6419     z_1s:           mov             r5,#01fh 
282B 7EFF       +1  6420     co2s:           mov     R6,#0ffh     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE    99

282D 7FFF       +1  6421     z1s:            mov     R7,#0ffh     
282F DFFE       +1  6422     co1s:           djnz    R7, co1s        
2831 DEFA       +1  6423                     djnz    R6, z1s 
2833 DDF6       +1  6424                     djnz    r5,co2s
2835 22         +1  6425                 ret
                +1  6426     
                +1  6427     ;задержка 0,1с
2836 7D03       +1  6428     z_01s:          mov             r5,#03h 
2838 7EFF       +1  6429     co02s:  mov     R6,#0ffh     
283A 7FFF       +1  6430     z01s:           mov     R7,#0ffh     
283C DFFE       +1  6431                     djnz    R7, $   
283E DEFA       +1  6432                     djnz    R6, z01s 
2840 DDF6       +1  6433                     djnz    r5,co02s
2842 22         +1  6434                      ret
                +1  6435                                               
                +1  6436     ;задержка 0,5с
2843 7D0D       +1  6437     z_05s:          mov             r5,#0dh 
2845 7EFF       +1  6438     co05s:          mov     R6,#0ffh     
2847 7FFF       +1  6439     z05s:           mov     R7,#0ffh     
2849 DFFE       +1  6440                             djnz    R7, $   
284B DEFA       +1  6441                     djnz    R6, z05s 
284D DDF6       +1  6442                             djnz    r5,co05s
284F 22         +1  6443                     ret                                                      
                +1  6444                                                               
2850 000007FF   +1  6445     chzap:          db      00,00,07h,0ffh             
2854 00000000   +1  6446     ch0:            db      00,00,00,00
2858 0000000A   +1  6447     ch10:           db      00,00,00,0ah                            ;10
285C 00000005   +1  6448     ch5:            db      00,00,00,05                                             ;5
2860 00000004   +1  6449     ch4:            db      00,00,00,04                                             ;4
2864 000003B9   +1  6450     ch954:          db 00,00,03,0b9h                                                ;954
2868 000003E8   +1  6451     ch10000:        db 00,00,03h,0e8h                                               ;10000
286C 00000064   +1  6452     ch100:          db 00,00,00,64h ;100
2870 00000002   +1  6453     ch2:            db      00,00,00,02                                             
                +1  6454     ;CH_953:        db 3fh,74h,37h,72h;0,953971
                +1  6455     ;CH_953:        db 3fh,74h,1ch,71h;0,953558
                +1  6456     ;CH_953:        db 3fh,74h,02,0d2h;0.953168
2874 00000001   +1  6457     ch1:            db  00,00,00,01
2878 49742400   +1  6458     ch_mln:         db      49h,74h,24h,00;10*6
287C 3F800000   +1  6459     ch_1:           db      3fh,80h,00,00   
2880 40000000   +1  6460     ch_2:           db      40h,00,00,00;2
2884 40800000   +1  6461     ch_4:           db      40h,80h,00,00;4 
2888 40A00000   +1  6462     ch_5:           db      40h,0a0h,00,00;5
288C 40E00000   +1  6463     ch_7:           db      40h,0e0h,00,00;7
                +1  6464             
2890 3F741EDF   +1  6465     CH_953:         db 3fh,74h,1eh,0dfh             ;0,953596
2894 47C35000   +1  6466     CHtho:          db      47h,0c3h,50h,00;48h,43h,50h,00;30d40 h  -000
2898 3F800347   +1  6467     KD:                     db      3fh,80h,03h,47h;1,0001
289C 48435000   +1  6468     CH2tho:         db      48h,43h,50h,00;200000
28A0 4856D800   +1  6469     ch_220:         db  48h,56h,0d8h,00;220000 -035b60 h
28A4 4856D800   +1  6470     ch_200:         db  48h,56h,0d8h,00;200000 -030d40 h
28A8 461C4000   +1  6471     ch_10th:        db  46h,1ch,40h,00;10000-2710h
28AC 41200000   +1  6472     ch_10:          db      41h,20h,00,00;10d
28B0 48742400   +1  6473     ch_250:         db      48h,74h,24h,00;250000
28B4 000186A0   +1  6474     chk:            db      00,01,86h,0a0h;
28B8 00000320   +1  6475     ch320h:         db      00,00,03h,20h;320h=800d
28BC 00000150   +1  6476     ch150h:         db      00,00,01h,50h;150h
28C0 C0400000   +1  6477     ch_m3:          db      0c0h,40h,00,00;-3
                +1  6478     
                +1  6479     
                +1  6480     ;r1- мл байт 2х байтного числа
28C4            +1  6481     tenmin:         ;-10
28C4 C3         +1  6482                     clr             c
28C5 E7         +1  6483             mov             a,@r1
28C6 9405       +1  6484                     subb    a,#5;10
28C8 F7         +1  6485                     mov             @r1,a
28C9 19         +1  6486                     dec             r1
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   100

28CA E7         +1  6487                     mov             a,@r1
28CB 9400       +1  6488                     subb    a,#0
28CD F7         +1  6489                     mov             @r1,a
28CE 22         +1  6490                     ret
                +1  6491       ;r0-обнуление ячеек памяти  
28CF 7F04       +1  6492     clear4: mov     r7,#4
28D1 E4         +1  6493                     clr             a
28D2 F6         +1  6494     cl4:    mov             @r0,a
28D3 08         +1  6495                     inc             r0
28D4 DFFC       +1  6496                     djnz    r7,cl4
28D6 22         +1  6497                     ret     
                +1  6498     
                +1  6499      ;r0-обнуление ячеек памяти             ;R7- 
28D7            +1  6500     clearN:  
28D7 E4         +1  6501                     clr             a
28D8 F6         +1  6502     cl4N:   mov             @r0,a
28D9 08         +1  6503                     inc             r0
28DA DFFC       +1  6504                     djnz    r7,cl4N
28DC 22         +1  6505                     ret     
                +1  6506     
                +1  6507       ;чтение номера байта с индикатора(2байта)
                +1  6508     ;bufind+8..bufind+9
                +1  6509     ;-  - - -
                +1  6510     ;- - - - - - - - - -
                +1  6511     ;adec..adec+9
                +1  6512     ;ст            мл
28DD 7848       +1  6513     upak2:  mov             r0,#bufind+8;
28DF 795C       +1  6514                     mov             r1,#adec+9
28E1 7F02       +1  6515                     mov             r7,#2;2bait
28E3 C3         +1  6516     upa2:   clr             c
28E4 E6         +1  6517                     mov             a,@r0
28E5 9430       +1  6518                     subb    a,#30h
28E7 F7         +1  6519                     mov             @r1,a
28E8 18         +1  6520                     dec             r0
28E9 19         +1  6521                     dec             r1
28EA DFF7       +1  6522                     djnz    r7,upa2
28EC 22         +1  6523                     ret  
                +1  6524     
                +1  6525     
                +1  6526         
                +1  6527      ;bufind+4..bufind+9
                +1  6528     ;-  - - -
                +1  6529     ;- - - - - - - - - -
                +1  6530     ;adec..adec+9
                +1  6531     ;ст            мл
28ED 7849       +1  6532     upak:   mov             r0,#bufind+9;
28EF 795C       +1  6533                     mov             r1,#adec+9
28F1 7F06       +1  6534                     mov             r7,#6
28F3 C3         +1  6535     upa:    clr             c
28F4 E6         +1  6536                     mov             a,@r0
28F5 9430       +1  6537                     subb    a,#30h
28F7 F7         +1  6538                     mov             @r1,a
28F8 18         +1  6539                     dec             r0
28F9 19         +1  6540                     dec             r1
28FA DFF7       +1  6541                     djnz    r7,upa
28FC 22         +1  6542                     ret
                +1  6543     
                +1  6544      ;чтение номера байта с индикатора(3байта)
                +1  6545     ;bufind+3..bufind+9
                +1  6546     ;-  - - -
                +1  6547     ;- - - - - - - - - -
                +1  6548     ;adec..adec+9
                +1  6549     ;ст            мл
28FD 7849       +1  6550     upak3:  mov             r0,#bufind+9;
28FF 795C       +1  6551                     mov             r1,#adec+9
2901 7F03       +1  6552                     mov             r7,#3;3bait
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   101

2903 C3         +1  6553     upa1:   clr             c
2904 E6         +1  6554                     mov             a,@r0
2905 9430       +1  6555                     subb    a,#30h
2907 F7         +1  6556                     mov             @r1,a
2908 18         +1  6557                     dec             r0
2909 19         +1  6558                     dec             r1
290A DFF7       +1  6559                     djnz    r7,upa1
290C 22         +1  6560                     ret
                +1  6561     
                +1  6562     ;вых-r2,r3-адрес ячее памяти прогр
290D            +1  6563     findkoef:
290D 79AE       +1  6564                     mov             r1,#diap
290F E7         +1  6565                     mov             a,@r1
2910 23         +1  6566                     rl              a                       ;diap*2(2bait )
2911 FC         +1  6567                     mov             r4,a                    ;save
2912 900000   F +1  6568                     mov             dptr,#diKDw             ;адрес таблицы поиска коффициентов
2915 93         +1  6569                     movc    a,@a+dptr                       ;ст байт
2916 FA         +1  6570                     mov             r2,a
2917 A3         +1  6571                     inc             dptr
2918 EC         +1  6572                     mov             a,r4
2919 93         +1  6573                     movc    a,@a+dptr
291A FB         +1  6574                     mov             r3,a                    ;мл байт
291B 22         +1  6575                     ret
                +1  6576     ;r2..r5 в опр яч внешн озу
291C            +1  6577     findext:
291C 79AE       +1  6578                     mov             r1,#diap
291E E7         +1  6579                     mov             a,@r1
291F 23         +1  6580                     rl              a                       ;diap*2(2bait )
2920 23         +1  6581                     rl              a                       ;diap*2(2bait )
2921 F9         +1  6582                     mov             r1,a                    ;r1-номер ячейки внешнего озу
2922 22         +1  6583                                     ret
                +1  6584     
                +1  6585     ;адрес ячеек прзу  коффициентов диапазона KD
                +1  6586     ;(5000h..5027h)
2923 5000       +1  6587     diKDw:  dw              5000h                   ;10-2
2925 5004       +1  6588                     dw              5004h                   ;10-3
2927 5008       +1  6589                     dw              5008h                   ;10-4
2929 500C       +1  6590                     dw              500ch                   ;10-5
292B 5010       +1  6591                     dw              5010h                   ;10-6
292D 5014       +1  6592                     dw              5014h                   ;10-7
292F 5018       +1  6593                     dw              5018h                   ;10-8
2931 501C       +1  6594                     dw              501ch                   ;10-9
2933 5020       +1  6595                     dw              5020h                   ;10-10
2935 5024       +1  6596                     dw              5024h                   ;10-11
2937 5028       +1  6597     dipar:  dw              5028h                   ;parol
2939 502C       +1  6598     diKm:   dw              502ch                   ;Km для теста измерения
293B 000186A0   +1  6599     chthou: db      00,01,86h,0a0h  ;100.000
                +1  6600     
293F AA08       +1  6601     move82: mov     r2,ltemp                        ;ltemp->r2..r5
2941 AB09       +1  6602                     mov     r3,ltemp+1
2943 AC0A       +1  6603                     mov     r4,ltemp+2
2945 AD0B       +1  6604                     mov     r5,ltemp+3
2947 22         +1  6605                     ret
                +1  6606     ;bufind+4..bufind+9
                +1  6607     ;-  - - -
                +1  6608     ;- - - - - - - - - -
                +1  6609     ;adec..adec+9
                +1  6610     ;ст            мл
2948 7847       +1  6611     upakA:  mov             r0,#bufind+7;
294A 795C       +1  6612                     mov             r1,#adec+9
294C 7F04       +1  6613                     mov             r7,#4
294E C3         +1  6614     upaa4:  clr             c
294F E6         +1  6615                     mov             a,@r0
2950 9430       +1  6616                     subb            a,#30h
2952 F7         +1  6617                     mov             @r1,a
2953 18         +1  6618                     dec             r0
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   102

2954 19         +1  6619                     dec             r1
2955 DFF7       +1  6620                     djnz            r7,upaa4
2957 22         +1  6621                     ret
                +1  6622     
                +1  6623     ;bufind+4..bufind+9
                +1  6624     ;-  - - -
                +1  6625     ;- - - - - - - - - -
                +1  6626     ;adec..adec+9
                +1  6627     ;ст            мл
2958 7848       +1  6628     upakB:  mov             r0,#bufind+8;
295A 795C       +1  6629                     mov             r1,#adec+9
295C 7F05       +1  6630                     mov             r7,#5
295E C3         +1  6631     upab:   clr             c
295F E6         +1  6632                     mov             a,@r0
2960 9430       +1  6633                     subb            a,#30h
2962 F7         +1  6634                     mov             @r1,a
2963 18         +1  6635                     dec             r0
2964 19         +1  6636                     dec             r1
2965 DFF7       +1  6637                     djnz            r7,upab
2967 C21B       +1  6638                     clr             bitznB
2969 E543       +1  6639                     mov             a,bufind+3
296B B42D02     +1  6640                     cjne            a,#2dh,abret
296E D21B       +1  6641                     setb            bitznB
2970            +1  6642     abret:
2970 22         +1  6643                     ret
2971            +1  6644     CH_B:   db      ;       4bh,18h,96h,80h;989680h=10 **7
2971 4E6E6AA8   +1  6645                     db      4eh,6eh,6ah,0a8h;10**9
2975 43FA0000   +1  6646     CH_500: db              43h,0fah,00,00;1fah=500
2979 4856D800   +1  6647     CH_22T: db              48h,56h,0d8h,00;46h,0abh,0e0h,00;55f0h=22000
297D 49742400   +1  6648     CH_fl:  db      49h,74h,24h,00;47h,0c3h,50h,00;100000
                +1  6649     
                +1  6650     
                +1  6651     
                +1  6652     ;управление AD7731              r4=b1 r5=b2
2981 7403       +1  6653     iniacp: mov             a,#03
2983 120000   F +1  6654                     call    write
2986 EC         +1  6655                     mov             a,r4;#80h
2987 120000   F +1  6656                     call    write
298A ED         +1  6657                     mov             a,r5;#04
298B 120000   F +1  6658                     call    write
298E 7402       +1  6659                     mov             a,#02
2990 120000   F +1  6660                     call    write
2993 74A1       +1  6661                     mov             a,#0a1h
2995 120000   F +1  6662                     call    write
2998 7474       +1  6663                     mov             a,#74h
299A 120000   F +1  6664                     call    write
299D 2095FD     +1  6665                     jb              p1.5,$;p1.3,$
29A0 7402       +1  6666                     mov             a,#02
29A2 120000   F +1  6667                     call    write
29A5 7481       +1  6668                     mov             a,#81h
29A7 120000   F +1  6669                     call    write
29AA 7474       +1  6670                     mov             a,#74h
29AC 120000   F +1  6671                     call    write
29AF 2095FD     +1  6672                     jb              p1.5,$;p1.3,$
29B2 7402       +1  6673                     mov             a,#02
29B4 120000   F +1  6674                     call    write
29B7 7421       +1  6675                     mov             a,#21h
29B9 120000   F +1  6676                     call    write
29BC 7474       +1  6677                     mov             a,#74h
29BE 120000   F +1  6678                     call    write
29C1 22         +1  6679                     ret
                +1  6680     
                +1  6681     
29C2 0000       +1  6682     tabB1_2:        db              00,00            ;B1,B2 в соотв с Tизм  
29C4 6000       +1  6683                             db              60h,00h;40h,04h         ;10s
29C6 6000       +1  6684                             db              60h,00;40h,04h          ;1s
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   103

29C8 6001       +1  6685                             db              60h,01h;40h,04h         ;0,1s
29CA 6001       +1  6686                             db              60h,01;00h;20h,04h              ;50ms
29CC 6001       +1  6687                             db              60h,01;00h;20h,04h               ;10ms
29CE 1333       +1  6688                             db              13h,33h;32h             ;2ms
                +1  6689     
                +1  6690     ;загр В1,В2 в завис от Т                                
29D0 799A       +1  6691     loab12:         mov             r1,#parT
29D2 900000   F +1  6692                             mov             dptr,#tabB1_2
29D5 E7         +1  6693                             mov             a,@r1
29D6 23         +1  6694                             rl              a;*2
29D7 FF         +1  6695                             mov             r7,a                    ;save a
29D8 93         +1  6696                             movc    a,@a+dptr
29D9 FC         +1  6697                             mov             r4,a   ;b1
29DA 0F         +1  6698                             inc             r7
29DB EF         +1  6699                             mov             a,r7
29DC 93         +1  6700                             movc    a,@a+dptr
29DD FD         +1  6701                             mov             r5,a
                +1  6702                     ;после загр В1,2 загр упр слово для нового Т
29DE 22         +1  6703                             ret
                +1  6704     
                +1  6705     
29DF 7852       +1  6706     loadr2: mov             r0,#abin+3              ;r2..r5
29E1 E6         +1  6707                     mov             a,@r0                   ; ст мл   
29E2 FA         +1  6708                     mov             r2,a
29E3 18         +1  6709                     dec             r0
29E4 E6         +1  6710                     mov             a,@r0
29E5 FB         +1  6711                     mov             r3,a
29E6 18         +1  6712                     dec             r0
29E7 E6         +1  6713                     mov             a,@r0
29E8 FC         +1  6714                     mov             r4,a
29E9 18         +1  6715                     dec             r0
29EA E6         +1  6716                     mov             a,@r0
29EB FD         +1  6717                     mov             r5,a
29EC 22         +1  6718                     ret
                +1  6719                                             
                +1  6720     
                +1  6721      ;загрузка KD в зависимости от диап изм  
                +1  6722      ;koef->r8..r11
29ED 78AE       +1  6723     loadKD: mov             r0,#diap
29EF E6         +1  6724                     mov             a,@r0
29F0 900000   F +1  6725                     mov             dptr,#diKDn
29F3 75F004     +1  6726                     mov             b,#4
29F6 A4         +1  6727                     mul             ab
29F7 FF         +1  6728                     mov             r7,a;save
29F8 93         +1  6729                     movc    a,@a+dptr
29F9 F508       +1  6730                     mov             r8,a
29FB A3         +1  6731                     inc             dptr
29FC EF         +1  6732                     mov             a,r7
29FD 93         +1  6733                     movc    a,@a+dptr
29FE F509       +1  6734                     mov             r9,a
2A00 A3         +1  6735                     inc             dptr
2A01 EF         +1  6736                     mov             a,r7
2A02 93         +1  6737                     movc    a,@a+dptr
2A03 F50A       +1  6738                     mov             r10,a
2A05 A3         +1  6739                     inc             dptr
2A06 EF         +1  6740                     mov             a,r7
2A07 93         +1  6741                     movc    a,@a+dptr
2A08 F50B       +1  6742                     mov             r11,a
2A0A 22         +1  6743                     ret
                +1  6744     
2A0B 3F506B7B   +1  6745      diKDn: db              3fh,50h,6bh,7bh;3fh,80h,00,00           ;10-2
2A0F 3F507FCC   +1  6746                     db              3fh,50h,7fh,0cch;3fh,80h,00,00          ;10-3
2A13 3F4F9D0B   +1  6747                     db              3fh,4fh,9dh,0bh;3fh,80h,00,00           ;10-4
2A17 3F4FE869   +1  6748                     db              3fh,4fh,0e8h,69h;3fh,80h,00,00          ;10-5
2A1B 3F50294A   +1  6749                     db              3fh,50h,29h,4ah;3fh,80h,00,00   ;4fh,0e9h,11h   ;0,81215   
                             10-6
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   104

2A1F 3F50639E   +1  6750                     db              3fh,50h,63h,9eh;3fh,80h,00,00           ;10-7
2A23 3F4BC9F0   +1  6751                     db              3fh,4bh,0c9h,0f0h;3fh,80h,00,00         ;10-8
2A27 3F4C063B   +1  6752                     db              3fh,4ch,06h,3bh;3fh,80h,00,00           ;10-9
2A2B 3F50EFDD   +1  6753                     db              3fh,50h,0efh,0ddh;3fh,80h,00,00         ;10-10
2A2F 3F512AD9   +1  6754                     db              3fh,51h,2ah,0d9h;3fh,80h,00,00          ;10-11
                +1  6755     
2A33 00000039   +1  6756     ch57:           db      00,00,00,39h;57
2A37 00000014   +1  6757     ch20:           db      00,00,00,14h;20
                +1  6758     
                +1  6759     ;загр ус для тестов ацп         ;dptr-
2A3B 78B1       +1  6760     lotpus: mov             r0,#vichR
2A3D B6210D     +1  6761                     cjne    @r0,#21h,te22
2A40 900000   F +1  6762                     mov                     dptr,#tabt11;заслать ус 11А
2A43 E4         +1  6763     lotp:   clr             a
2A44 93         +1  6764                     movc    a,@a+dptr                               ;high byte
2A45 F584       +1  6765                     mov             p4,a
2A47 A3         +1  6766                     inc             dptr
2A48 E4         +1  6767                     clr             a
2A49 93         +1  6768                     movc    a,@a+dptr                               ;low byte
2A4A F585       +1  6769                     mov             p5,a
2A4C 22         +1  6770                     ret
2A4D B62205     +1  6771     te22:   cjne    @r0,#22h,te23
2A50 900000   F +1  6772                     mov                     dptr,#tabt9;заслать ус 9А       
2A53 80EE       +1  6773                     jmp                     lotp
2A55 900000   F +1  6774     te23:   mov                     dptr,#tabt7;заслать ус 7А       
2A58 80E9       +1  6775                     jmp                     lotp
                +1  6776     
                +1  6777     
                +1  6778     
                +1  6779     
                +1  6780     
2A5A 02030405   +1  6781     Tabn:           db              2,3,4,5,6,7,8,9,10,11           ;порядок диапазонов степени
2A5E 06070809                
2A62 0A0B                    
                +1  6782     
2A64 78AE       +1  6783     findR:  mov                     r0,#diap
2A66 E6         +1  6784                     mov                     a,@r0
2A67 900000   F +1  6785                     mov                     dptr,#Tabn
2A6A 93         +1  6786                     movc            a,@a+dptr
2A6B 22         +1  6787                     ret
                +1  6788     ;bufind=30h..39h                                                                           
                                           ;
2A6C C219       +1  6789     vvchif: clr             bitmig
2A6E 79B2       +1  6790                     mov             r1,#marker
2A70 E7         +1  6791                     mov             a,@r1                   ;изм цифры
2A71 7840       +1  6792                     mov             r0,#bufind                      ;0000
2A73 28         +1  6793                     add             a,r0
2A74 F8         +1  6794                     mov             r0,a
2A75 06         +1  6795                     inc             @r0
2A76 B63A03     +1  6796                     cjne    @r0,#3ah,chif
2A79 7630       +1  6797                     mov             @r0,#30h
2A7B 22         +1  6798                     ret
2A7C C3         +1  6799     chif:   clr                     c
2A7D 7430       +1  6800                     mov                     a,#30h
2A7F 96         +1  6801                     subb            a,@r0
2A80 4002       +1  6802                     jc                      chif5
2A82 7630       +1  6803                     mov             @r0,#30h
2A84 22         +1  6804     chif5:  ret
                +1  6805     
2A85 80E5       +1  6806     vvnol41:        jmp                     vvchif  ;при наборе цифр в интервале и константах
                +1  6807     
2A87 B641FB     +1  6808     vvnol31:        cjne            @r0,#41h,vvnol41
2A8A 800A       +1  6809                             jmp                     chifour
2A8C B631F8     +1  6810     vvnol23:        cjne            @r0,#31h,vvnol31
2A8F 8005       +1  6811                             jmp                     chifour 
                +1  6812     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   105

2A91 78B0       +1  6813     vvchibl:        mov                     r0,#level
2A93 B623F6     +1  6814                             cjne            @r0,#23h,vvnol23;при наборе цифр в блоке
2A96 C219       +1  6815     chifour:        clr             bitmig
2A98 79B2       +1  6816                             mov             r1,#marker
2A9A E7         +1  6817                             mov             a,@r1                   ;изм цифры
2A9B 7840       +1  6818                             mov             r0,#bufind                      ;1..4
2A9D 28         +1  6819                             add             a,r0
2A9E F8         +1  6820                             mov             r0,a
2A9F 06         +1  6821                             inc             @r0
2AA0 B63504     +1  6822                             cjne    @r0,#35h,chifb
2AA3 7631       +1  6823                             mov             @r0,#31h
2AA5 8006       +1  6824                             jmp             chifb1
2AA7 B63003     +1  6825     chifb:          cjne    @r0,#30h,chifb1
2AAA 7631       +1  6826                             mov             @r0,#31h
2AAC 22         +1  6827                             ret
                +1  6828     
2AAD C3         +1  6829     chifb1: clr                     c
2AAE 7430       +1  6830                     mov                     a,#30h
2AB0 96         +1  6831                     subb            a,@r0
2AB1 4002       +1  6832                     jc                      chifl5
2AB3 7630       +1  6833                     mov             @r0,#30h
2AB5 22         +1  6834     chifl5: ret
                +1  6835     
                +1  6836       ;перевод маркера влево
2AB6            +1  6837     marle:  
2AB6 C219       +1  6838                     clr             bitmig
                +1  6839                     ;mov            savba,#0   нельзя обнулять
2AB8 78B2       +1  6840             mov             r0,#marker
2ABA 16         +1  6841                     dec             @r0
2ABB E6         +1  6842                     mov             a,@r0
2ABC C3         +1  6843                     clr             c
2ABD 953A       +1  6844                     subb    a,movleft         ;крайне левое положение
2ABF 5001       +1  6845                     jnc             rler
2AC1 06         +1  6846                     inc             @r0
2AC2 22         +1  6847     rler:   ret
                +1  6848         
                +1  6849     ;перевод маркера вправо
2AC3 C219       +1  6850     marri:  clr             bitmig
2AC5 78B2       +1  6851                     mov             r0,#marker
2AC7 06         +1  6852                     inc         @r0
2AC8 E53B       +1  6853                     mov             a,movrig           ;крайне правое положение
2ACA C3         +1  6854                     clr             c
2ACB 96         +1  6855                     subb            a,@r0
2ACC 5001       +1  6856                     jnc             rrir
2ACE 16         +1  6857                     dec             @r0
2ACF 22         +1  6858     rrir:   ret
                +1  6859         
                +1  6860     ;konstA->bufind+4..bufind+7
2AD0 78BC       +1  6861     outA:   mov             r0,#konstA
2AD2 120000   F +1  6862                     call            resar2
2AD5 120343     +1  6863                     call            ftol                    ;->hex
2AD8 784F       +1  6864                     mov             r0,#abin
2ADA 120000   F +1  6865                     call            saver2
2ADD 7853       +1  6866                     mov                     r0,#adec
2ADF 7952       +1  6867                     mov             r1,#abin+3
2AE1 120000   F +1  6868                     call            bindec
2AE4 785C       +1  6869                     mov                     r0,#adec+9
2AE6 7947       +1  6870                     mov                     r1,#bufind+7
2AE8 7F04       +1  6871                     mov                     r7,#4
2AEA E6         +1  6872     outa2:  mov             a,@r0
2AEB 2430       +1  6873                     add             a,#30h
2AED F7         +1  6874                     mov             @r1,a
2AEE 19         +1  6875                     dec             r1
2AEF 18         +1  6876                     dec             r0
2AF0 DFF8       +1  6877                     djnz    r7,outa2
2AF2 22         +1  6878                     ret
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   106

                +1  6879                                             
                +1  6880     ;konstB->bufind+4..bufind+8
                +1  6881     ;outB:  mov                     r0,#konstB
                +1  6882     ;               call            resar2
                +1  6883     ;               mov                     a,r2
                +1  6884     ;               anl                     a,#80h
                +1  6885     ;               jz                      outb3
                +1  6886     ;               mov             a,r2
                +1  6887     ;               anl                     a,#7fh
                +1  6888     ;               mov                     r2,a
                +1  6889     ;               mov                     bufind+3,#2dh
                +1  6890     ;outb3: call            ftol                    ;->hex
                +1  6891     ;               mov             r0,#abin
                +1  6892     ;               call            saver2
                +1  6893     ;               mov                     r0,#adec
                +1  6894     ;               mov             r1,#abin+3
                +1  6895     ;               call            bindec
                +1  6896     ;               mov                     r0,#adec+9
                +1  6897     ;               mov                     r1,#bufind+8
                +1  6898     ;               mov                     r7,#5
                +1  6899     ;outb2: mov             a,@r0
                +1  6900     ;               add             a,#30h
                +1  6901     ;               mov             @r1,a
                +1  6902     ;               dec             r1
                +1  6903     ;               dec             r0
                +1  6904     ;               djnz    r7,outb2
                +1  6905     ;               ret
                +1  6906     
                +1  6907     
                +1  6908     ;пп мигания индикации
2AF3 78B2       +1  6909     mign:   mov             r0,#marker
2AF5 B6FF03     +1  6910                     cjne    @r0,#0ffh,mignn
                +1  6911             ;реж изм мигает *
2AF8 C219       +1  6912                     clr             bitmig
2AFA 22         +1  6913                     ret
                +1  6914     
2AFB            +1  6915     mignn:  ;clr            c
2AFB 7440       +1  6916                     mov             a,#bufind
2AFD 26         +1  6917                     add             a,@r0                   ;a=bufind+marker
2AFE F9         +1  6918                     mov             r1,a
2AFF 201907     +1  6919                     jb              bitmig,onmig
2B02 873C       +1  6920                     mov             savba,@r1
                +1  6921             ;       mov             a,@r1
                +1  6922             ;       mov             savba,a
2B04 7720       +1  6923                     mov             @r1,#" "
2B06 D219       +1  6924                     setb    bitmig
2B08 22         +1  6925                     ret
                +1  6926     
2B09 A73C       +1  6927     onmig:  mov             @r1,savba
                +1  6928                     ;mov            a,savba
                +1  6929                     ; mov           @r1,a
2B0B C219       +1  6930                     clr             bitmig
2B0D 120000   F +1  6931                     call    z_01s
2B10 22         +1  6932                     ret
                +1  6933     ;номер ошибки bufind+6
2B11 900000   F +1  6934     error:  mov             dptr,#teERR
2B14 120000   F +1  6935                     call    lotext
2B17 853946     +1  6936                     mov             bufind+6,nuerr
2B1A 22         +1  6937                     ret
                +1  6938     
                +1  6939     
2B1B            +1  6940     textT:          
2B1B FD543D32   +1  6941     te2ms:          db              0fdh,"T","=",32h,"m",67h,0fdh,0fdh,0fdh,0fdh ;load=0..5
2B1F 6D67FDFD                
2B23 FDFD                    
2B25 FD543D31   +1  6942     te10ms:         db              0fdh,"T","=",31h,30h,"m",67h,0fdh,0fdh,0fdh
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   107

2B29 306D67FD                
2B2D FDFD                    
2B2F FD543D35   +1  6943                             db              0fdh,"T","=",35h,30h,"m",67h,0fdh,0fdh,0fdh
2B33 306D67FD                
2B37 FDFD                    
2B39 FD543D64   +1  6944                             db              0fdh,"T","=",64h,31h,67h,0fdh,0fdh,0fdh,0fdh
2B3D 3167FDFD                
2B41 FDFD                    
2B43 20202054   +1  6945                             db              " "," "," ","T","=",31h,67h," "," "," "
2B47 3D316720                
2B4B 2020                    
2B4D 2020543D   +1  6946                             db              " "," ","T","=",31h,30h,67h," "," "," "  
2B51 31306720                
2B55 2020                    
                +1  6947     ;teNO:          db              0fdh,0fdh,0fdh,"H","E","T",0fdh,0fdh,0fdh,0fdh
                +1  6948     
2B57 42753474   +1  6949     teVICH:         db              "B",75h,34h,74h,79h,76h,74h,"T",77h," ";вычислить
2B5B 79767454                
2B5F 7720                    
2B61 20553D20   +1  6950     teAequ0:        db              " ",'U','='," "," "," "," "," "," ",65h
2B65 20202020                
2B69 2065                    
2B6B 20423D2B   +1  6951     teBequ0:        db              " ",'B','=','+'," "," "," "," "," "," "
2B6F 20202020                
2B73 2020                    
2B75 20207145   +1  6952     teMENU:         db              " "," ",71h,"E","H",72h," "," "," "," "
2B79 48722020                
2B7D 2020                    
                +1  6953     
2B7F 20544579   +1  6954     teTESI:         db      " ","T","E",79h,"T",2dh,74h,33h,71h," ";ТЕСТ -ИЗМ    11
2B83 542D7433                
2B87 7120                    
2B89 54457954   +1  6955     teTESR:         db      "T","E",79h,"T"," ","R",35h," "," "," ";ТЕСТ RS 12
2B8D 20523520                
2B91 2020                    
2B93 20794B30   +1  6956     teSKOR:         db      " ",79h,'K',30h,"P"," ","R",35h," "," ";СКОР 232     13
2B97 50205235                
2B9B 2020                    
2B9D 20204142   +1  6957     teAVK:          db      " "," ",'A','B','K'," "," "," "," "," "  ;AВK           14
2BA1 4B202020                
2BA5 2020                    
2BA7 204B4176   +1  6958     teKALIB:        db      " " ,'K','A',76h,74h,73h,"P "," "," "," ";КАЛИБР     15
2BAB 74735020                
2BAF 202020                  
2BB2 20544579   +1  6959     teTE11:         db              " ",'T',"E",79h,'T'," "," "," ",'T',31h;       21
2BB6 54202020                
2BBA 5431                    
2BBC 20544579   +1  6960     teTE9:          db              " ",'T',"E",79h,'T'," "," "," ",'T',32h;                22
2BC0 54202020                
2BC4 5432                    
2BC6 20544579   +1  6961     teTE7:          db              " ",'T',"E",79h,'T'," "," "," ",'T',33h;                23
2BCA 54202020                
2BCE 5433                    
2BD0 20202035   +1  6962     teS57_6:        db              " "," "," ",35h,37h,36h," "," "," "," ";57.6
2BD4 37362020                
2BD8 2020                    
2BDA 20202031   +1  6963     teS19_2:        db              " "," "," ",31h,39h,32h," "," "," "," ";19,2
2BDE 39322020                
2BE2 2020                    
                +1  6964     
2BE4 61415030   +1  6965     tePAR:          db              61h,'A',"P",30h,76h,77h," ",30h,30h,30h;пароль
2BE8 76772030                
2BEC 3030                    
2BEE 20303030   +1  6966     teKD:           db              " ",30h,30h,30h,30h,30h," "," "," ",'A';00000
2BF2 30302020                
2BF6 2041                    
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   108

2BF8 74337120   +1  6967     teIZMK:         db      74h,33h,71h," ","K",30h,"H",79h,"T"," "
2BFC 4B304879                
2C00 5420                    
2C02 20204275   +1  6968     teOUT:          db      " "," ","B",75h,"X",30h,78h," "," "," "  ;ВЫХОД
2C06 58307820                
2C0A 2020                    
2C0C 2020304C   +1  6969     teOLL:          db      " "," ",30h,'L','L'," "," "," "," "," "  ;OLL
2C10 4C202020                
2C14 2020                    
2C16 20203034   +1  6970     teCLE:          db      " "," ",30h,34h,74h,79h,'T','K','A' ," " ;ОЧИСТКА
2C1A 7479544B                
2C1E 4120                    
2C20 20203041   +1  6971     teMEM:          db      " "," ",30h,'A',71h,79h,'T'," " ; ПАМЯТЬ
2C24 71795420                
2C28 20203341   +1  6972     teWR:           db      " "," ",33h,'A',61h,74h,79h,77h," "," ";ЗАПИСЬ
2C2C 61747977                
2C30 2020                    
2C32 20206150   +1  6973     teLIST:         db      " "," ",61h,'P',30h,79h,71h,30h,"T","P ";;ПРОСМОТР
2C36 30797130                
2C3A 545020                  
2C3D 20206130   +1  6974     teFULL:         db      " "," ",61h,30h,76h,"H",'A',62h," "," ";ПОЛНАЯ
2C41 76484162                
2C45 2020                    
2C47 20744854   +1  6975     teINT:          db      " ",74h,"H",'T'," ",30h,30h,30h,30h,67h;ИНТ 0000
2C4B 20303030                
2C4F 3067                    
2C51 20207376   +1  6976     teBL:           db      " "," ",73h,76h,30h,'K'," "," "," "," ";БЛОК
2C55 304B2020                
2C59 2020                    
2C5B 20207376   +1  6977     teBL0:          db      " "," ",73h,76h,30h,'K'," ",30h," "," ";БЛОК 0
2C5F 304B2030                
2C63 2020                    
2C65 30547934   +1  6978     teCH:           db      30h,'T',79h,34h,"E",'T'," ",30h,30h,31h;ОТСЧЕТ 001
2C69 45542030                
2C6D 3031                    
2C6F 79544154   +1  6979     teSTAT:         db      79h,'T','A','T',74h,79h,'T',74h,'K','A';СТАТИСТИКА
2C73 74795474                
2C77 4B41                    
2C79 71744820   +1  6980     teMIN:          db      71h,74h,"H"," "," "," "," "," "," "," ";МИН  00000
2C7D 20202020                
2C81 2020                    
2C83 71414B79   +1  6981     teMAX:          db      71h,'A','K',79h," "," "," "," "," "," ";МАКС 00000
2C87 20202020                
2C8B 2020                    
2C8D 79504578   +1  6982     teMID:          db      79h,"P","E",78h," "," "," "," "," "," ";СРЕД 00000
2C91 20202020                
2C95 2020                    
                +1  6983     
2C97 2020304C   +1  6984     teOLI:          db              " "," ",30h,"L","L"," ","I"," "," "," "
2C9B 4C204920                
2C9F 2020                    
2CA1 2020304C   +1  6985     teOLR:          db              " "," ",30h,"L","L"," ",66h," "," "," "
2CA5 4C206620                
2CA9 2020                    
2CAB 20204552   +1  6986     teERR:          db              " "," ","E","R","R"," "," "," "," "," " ;ERR
2CAF 52202020                
2CB3 2020                    
2CB5 2020454E   +1  6987     teEND:          db              " "," ","E","N","D"," "," "," "," "," " ;END
2CB9 44202020                
2CBD 2020                    
                +1  6988     
                +1  6989     ;dptr+4-приемник
                +1  6990     ;dptr-источник
                +1  6991     ;r7-кол байт  
2CBF 7F04       +1  6992     xCIKLWR:        mov             r7,#4   
2CC1 E0         +1  6993     lwrx:           movx            a,@dptr
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   109

2CC2 C083       +1  6994                             push            dph
2CC4 C082       +1  6995                             push            dpl
2CC6 A3         +1  6996                             inc             dptr
2CC7 A3         +1  6997                             inc             dptr
2CC8 A3         +1  6998                             inc             dptr
2CC9 A3         +1  6999                             inc             dptr
2CCA F0         +1  7000                             movx            @dptr,a
2CCB D082       +1  7001                             pop             dpl
2CCD D083       +1  7002                             pop             dph
2CCF A3         +1  7003                             inc             dptr
2CD0 DFEF       +1  7004                             djnz            r7,lwrx
2CD2 22         +1  7005                             ret
                +1  7006     ;r2..r5->@dptr..@dptr+3                         
2CD3 EA         +1  7007     saveIr2:        mov             a,r2
2CD4 F0         +1  7008                             movx    @dptr,a
2CD5 A3         +1  7009                             inc     dptr
2CD6 EB         +1  7010                             mov     a,r3
2CD7 F0         +1  7011                             movx    @dptr,a
2CD8 A3         +1  7012                             inc             dptr
2CD9 EC         +1  7013                             mov             a,r4
2CDA F0         +1  7014                             movx    @dptr,a
2CDB A3         +1  7015                             inc             dptr
2CDC ED         +1  7016                             mov             a,r5
2CDD F0         +1  7017                             movx    @dptr,a
2CDE 22         +1  7018                             ret
                +1  7019     ;r2..r5-> @r0..@r0+3
                +1  7020     
2CDF EA         +1  7021     saver2:         mov     a,r2
2CE0 F6         +1  7022                             mov     @r0,a
2CE1 08         +1  7023                             inc     r0
2CE2 EB         +1  7024                             mov     a,r3
2CE3 F6         +1  7025                             mov     @r0,a
2CE4 08         +1  7026                             inc     r0
2CE5 EC         +1  7027                             mov     a,r4
2CE6 F6         +1  7028                             mov     @r0,a
2CE7 08         +1  7029                             inc     r0
2CE8 ED         +1  7030                             mov     a,r5
2CE9 F6         +1  7031                             mov     @r0,a
2CEA 22         +1  7032                             ret 
                +1  7033     
2CEB 7F50       +1  7034     clmassix:       mov                     r7,#50h;28h
2CED 900100     +1  7035                             mov     dptr,#MASS0        ;забить массив A нулями
2CF0 7400       +1  7036     clmax:          mov          a,#00h
2CF2 F0         +1  7037                 movx    @dptr,a
2CF3 A3         +1  7038                 inc     dptr
2CF4 DFFA       +1  7039                 djnz                r7,clmax                
2CF6 F56E       +1  7040                 mov     chmas,a
2CF8 C201       +1  7041                 clr     bitmas
2CFA 22         +1  7042                 ret
                +1  7043     ;r1-яЁшхьшъ
                +1  7044     ;r0-шёЄюўшъ
                +1  7045     ;r7-ъюы срщЄ  
2CFB            +1  7046     CIKLWR:
2CFB 7F04       +1  7047                     mov             r7,#4   
2CFD E6         +1  7048     lwr:            mov     a,@r0
2CFE F7         +1  7049                     mov     @r1,a
2CFF 09         +1  7050                     inc             r1
2D00 08         +1  7051                     inc             r0
2D01 DFFA       +1  7052                     djnz    r7,lwr
2D03 22         +1  7053                     ret     
                +1  7054     ;r2..r5-> @dptr..@dptr+3
                +1  7055     
2D04 120000   F +1  7056     zmul:   call    maform
2D07 120000   F +1  7057                     call    lmul
2D0A 120000   F +1  7058                     call    bform
2D0D 22         +1  7059                     ret
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   110

                +1  7060     
2D0E 120000   F +1  7061     zdiv:   call    maform
2D11 120000   F +1  7062                     call    divide
2D14 120000   F +1  7063                     call    bform
2D17 22         +1  7064                     ret
                +1  7065     
2D18 EA         +1  7066     maform: mov a,r2
2D19 33         +1  7067             rlc a
2D1A 5006       +1  7068             jnc             fo1m
2D1C D202       +1  7069                     setb            znmat
2D1E 120000   F +1  7070                     call   form4
2D21 22         +1  7071                     ret
2D22 C202       +1  7072     fo1m:   clr             znmat
2D24 22         +1  7073                     ret
                +1  7074     
2D25 300203     +1  7075     bform:  jnb             znmat,fo2m
2D28 120000   F +1  7076                     call    form4
2D2B 22         +1  7077     fo2m:   ret
                +1  7078       
                +1  7079     ;r2..r5 яхЁхтхёЄш т фюя ъюф
2D2C ED         +1  7080     form4:  mov a,r5
2D2D F4         +1  7081                     cpl a
2D2E 2401       +1  7082             add a,#1
2D30 FD         +1  7083             mov r5,a
2D31 EC         +1  7084             mov a,r4
2D32 F4         +1  7085             cpl a
2D33 3400       +1  7086             addc    a,#0
2D35 FC         +1  7087             mov r4,a
2D36 EB         +1  7088             mov a,r3
2D37 F4         +1  7089                     cpl a
2D38 3400       +1  7090             addc    a,#0
2D3A FB         +1  7091             mov r3,a
2D3B EA         +1  7092             mov a,r2
2D3C F4         +1  7093             cpl a
2D3D 3400       +1  7094             addc    a,#0
2D3F FA         +1  7095             mov r2,a
2D40 22         +1  7096             ret
                +1  7097     
2D41 120000   F +1  7098     zcmp:   call            maform
2D44 120000   F +1  7099                     call            lcmp
2D47 C0D0       +1  7100                     push            psw
2D49 120000   F +1  7101                     call    bform
2D4C D0D0       +1  7102                     pop             psw
2D4E 22         +1  7103                     ret
                +1  7104     
                +1  7105     
                +1  7106     ;@r0..@r0+3->r8..r11
                +1  7107     
2D4F E6         +1  7108     resar8: mov     a,@r0
2D50 F508       +1  7109                     mov     ltemp,a
2D52 08         +1  7110                     inc     r0
2D53 E6         +1  7111                     mov     a,@r0
2D54 F509       +1  7112                     mov     ltemp+1,a
2D56 08         +1  7113                     inc     r0
2D57 E6         +1  7114                     mov     a,@r0
2D58 F50A       +1  7115                     mov     ltemp+2,a
2D5A 08         +1  7116                     inc     r0
2D5B E6         +1  7117                     mov     a,@r0
2D5C F50B       +1  7118                     mov     ltemp+3,a
2D5E 22         +1  7119                     ret
                +1  7120     
                +1  7121     ;
                +1  7122     ;r0- рфЁхё _ўхщъш єяръютрюую фтюшўюую ўшёыр  
                +1  7123     ;r2,a фтюшўюх ўшёыю 2 срщЄр 
                +1  7124     ;т_ї- @r0 єяръютрюх фхё_Єшўюх ўшёыю BCD 3 срщЄр 
                +1  7125     ;r2 a    ўшёыю 180
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   111

                +1  7126     ;00 b4
                +1  7127     ;т_ї- mabin..mabin+2
                +1  7128     ;     80 01 00
                +1  7129     
2D5F C8         +1  7130     cond:   xch     a,r0    
2D60 F9         +1  7131                     mov     r1,a
2D61 C8         +1  7132                     xch     a,r0
2D62 7C03       +1  7133                     mov     r4,#03
2D64 7700       +1  7134     dcoa:   mov     @r1,#00
2D66 09         +1  7135                     inc     r1
2D67 DCFB       +1  7136                     djnz    r4,dcoa
2D69 7B10       +1  7137                     mov     r3,#10h
2D6B C3         +1  7138     dcob:   clr     c
2D6C 33         +1  7139                     rlc     a
2D6D CA         +1  7140                     xch     a,r2
2D6E 33         +1  7141                     rlc     a
2D6F CA         +1  7142                     xch     a,r2
2D70 C8         +1  7143                     xch     a,r0
2D71 F9         +1  7144                     mov     r1,a
2D72 C8         +1  7145                     xch     a,r0
2D73 7C03       +1  7146                     mov     r4,#03
2D75 FD         +1  7147                     mov     r5,a
2D76 E7         +1  7148     dcoc:   mov     a,@r1 
2D77 37         +1  7149                     addc    a,@r1
2D78 D4         +1  7150                     da      a
2D79 F7         +1  7151                     mov     @r1,a
2D7A 09         +1  7152                     inc     r1
2D7B DCF9       +1  7153                     djnz    r4,dcoc
2D7D ED         +1  7154                     mov     a,r5
2D7E 4003       +1  7155                     jc      dcod
2D80 DBE9       +1  7156                     djnz    r3,dcob
2D82 C3         +1  7157                     clr     c
2D83 00         +1  7158     dcod:   nop
2D84 22         +1  7159                     ret
                +1  7160     
2D85 8A08       +1  7161     move28: mov     ltemp,r2                        ;r2..r5->ltemp
2D87 850309     +1  7162                     mov     ltemp+1,3
2D8A 85040A     +1  7163                     mov     ltemp+2,4
2D8D 85050B     +1  7164                     mov     ltemp+3,5
2D90 22         +1  7165                     ret
                +1  7166     
                +1  7167     ;@r0..@r0+3->r2..r5
                +1  7168     
2D91 E6         +1  7169     resar2: mov     a,@r0
2D92 FA         +1  7170                     mov     r2,a
2D93 08         +1  7171                     inc     r0
2D94 E6         +1  7172                     mov     a,@r0
2D95 FB         +1  7173                     mov     r3,a
2D96 08         +1  7174                     inc     r0
2D97 E6         +1  7175                     mov     a,@r0
2D98 FC         +1  7176                     mov     r4,a
2D99 08         +1  7177                     inc     r0
2D9A E6         +1  7178                     mov     a,@r0
2D9B FD         +1  7179                     mov     r5,a
2D9C 22         +1  7180                     ret
                +1  7181     
                +1  7182     ;25mkc !!!!!!!!!!!!!!!1
2D9D 7B4B       +1  7183     z_9:    mov R3,#4Bh      ;загрузка числа
2D9F DBFE       +1  7184                 djnz R3,$
2DA1 22         +1  7185             ret
                +1  7186     
                +1  7187     ;запись   передаваемый байт в acc
                +1  7188     ;передача байта послед кодом старшими разрядами  вперед
2DA2 7A08       +1  7189     write:  mov R2,#8
2DA4 C3         +1  7190                     clr  c  
2DA5 C297       +1  7191     wr1:    clr             p1.7;P1.2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   112

2DA7 00         +1  7192                     nop 
2DA8 33         +1  7193                     rlc A
2DA9 9296       +1  7194                     mov P1.6,C;P1.1,C
2DAB 120000   F +1  7195                     call tim2
2DAE D297       +1  7196                     setb P1.7;P1.2
2DB0 120000   F +1  7197             call tim2
2DB3 DAF0       +1  7198                     djnz R2,wr1
2DB5 C296       +1  7199                     clr P1.6;P1.1
2DB7 22         +1  7200                     ret
                +1  7201     
                +1  7202     ;чтение номера байта с индикатора(2байта)
                +1  7203     ;bufind+8..bufind+9
                +1  7204     ;adec..adec+9
                +1  7205     ;ст            мл
2DB8 7847       +1  7206     upak1:  mov             r0,#bufind+7;
2DBA 795C       +1  7207                     mov             r1,#adec+9
2DBC C3         +1  7208                     clr             c
2DBD E6         +1  7209                     mov             a,@r0
2DBE 9430       +1  7210                     subb    a,#30h
2DC0 FF         +1  7211                     mov             r7,a
2DC1 C3         +1  7212                     clr             c
2DC2 9405       +1  7213                     subb    a,#5
2DC4 4004       +1  7214                     jc              upk1
2DC6 7404       +1  7215                     mov             a,#4
2DC8 8001       +1  7216                     jmp             upk2
2DCA EF         +1  7217     upk1:   mov             a,r7
2DCB F7         +1  7218     upk2:   mov             @r1,a
2DCC 22         +1  7219                     ret  
                +1  7220     ;r1-мл байт счетчика ячеек
2DCD C3         +1  7221     chminus: clr                    c
2DCE E7         +1  7222                     mov                     a,@r1
2DCF 9401       +1  7223                     subb            a,#01
2DD1 F7         +1  7224                     mov                     @r1,a;low
2DD2 19         +1  7225                     dec                     r1
2DD3 E7         +1  7226                     mov                     a,@r1
2DD4 9400       +1  7227                     subb            a,#00
2DD6 F7         +1  7228                     mov                     @r1,a
2DD7 22         +1  7229                     ret
                +1  7230     
                +1  7231     
                +1  7232     ;чтение номера байта с индикатора(4байта)
                +1  7233     ;bufind+6..bufind+9
                +1  7234     ;adec..adec+9
                +1  7235     ;ст            мл
2DD8 7848       +1  7236     upak4:  mov             r0,#bufind+8;
2DDA 795C       +1  7237                     mov             r1,#adec+9
2DDC 7F04       +1  7238                     mov             r7,#4
2DDE C3         +1  7239     upaa:   clr             c
2DDF E6         +1  7240                     mov             a,@r0
2DE0 9430       +1  7241                     subb    a,#30h
2DE2 F7         +1  7242                     mov             @r1,a
2DE3 18         +1  7243                     dec             r0
2DE4 19         +1  7244                     dec             r1
2DE5 DFF7       +1  7245                     djnz    r7,upaa
2DE7 22         +1  7246                     ret
                +1  7247     
                +1  7248     ;dptr-адр ячейки 1й соотв блока 
2DE8 E538       +1  7249     adrblok:        mov             a,nblok
2DEA C3         +1  7250                     clr             c
2DEB 9401       +1  7251                     subb    a,#1
2DED FD         +1  7252                     mov             r5,a
2DEE E4         +1  7253                     clr             a
2DEF FC         +1  7254                     mov             r4,a
2DF0 FB         +1  7255                     mov             r3,a
2DF1 FA         +1  7256                     mov             r2,a
2DF2 900000   F +1  7257                     mov             dptr,#ch320h
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   113

2DF5 120000   F +1  7258                     CALL    ldc_ltemp                ; ltemp <-320
2DF8 120000   F +1  7259                     call    lmul;r2..r5
2DFB ED         +1  7260                     mov             a,r5
2DFC 2450       +1  7261                     add             a,#50h
2DFE F582       +1  7262                     mov             dpl,a
2E00 EC         +1  7263                     mov             a,r4
2E01 3401       +1  7264                     addc    a,#01           
2E03 F583       +1  7265                     mov             dph,a                   ;dptr-
2E05 22         +1  7266                     ret
                +1  7267     
                +1  7268     ;
                +1  7269     ;saven_bl<-dptr  адрес след ячейки внешн озу 
2E06 E538       +1  7270     save_hl:        mov             a,nblok
2E08 B4011D     +1  7271                     cjne    a,#1,sa_hl1
2E0B 79D3       +1  7272                     mov             r1,#saven_bl
2E0D E583       +1  7273     sa_hl:  mov             a,dph
2E0F F7         +1  7274                     mov             @r1,a
2E10 09         +1  7275                     inc             r1
2E11 E582       +1  7276                     mov             a,dpl
2E13 F7         +1  7277                     mov             @r1,a
                +1  7278             ;;;;;;;;;не конец ли блока
2E14 79D6       +1  7279                     mov                     r1,#volume+1;work+1
2E16 120000   F +1  7280                     call            chminus
2E19 78D5       +1  7281                     mov             r0,#volume
2E1B E6         +1  7282                     mov             a,@r0
2E1C 30E708     +1  7283                     jnb             acc.7,noendli
2E1F C20A       +1  7284                     clr                     bitbon                  ;блок закончился
2E21 534BFD     +1  7285                     anl                     bufind+11,#0fdh
2E24 120000   F +1  7286                     call            ind
2E27 22         +1  7287     noendli: ret
                +1  7288     
2E28 B40204     +1  7289     sa_hl1: cjne    a,#2,sa_hl2
2E2B 79C0       +1  7290                     mov             r1,#saven_bl2
2E2D 80DE       +1  7291                     jmp             sa_hl
                +1  7292     
2E2F B40304     +1  7293     sa_hl2: cjne    a,#3,sa_hl3
2E32 79C2       +1  7294                     mov             r1,#saven_bl3
2E34 80D7       +1  7295                     jmp             sa_hl
2E36 79D9       +1  7296     sa_hl3: mov             r1,#saven_bl4
2E38 80D3       +1  7297                     jmp             sa_hl
                +1  7298     
                +1  7299     ;загрузка dptr сохр ранее значением адреса ячейки
2E3A            +1  7300     resa_hl:
2E3A E538       +1  7301                     mov             a,nblok
2E3C B4010A     +1  7302                     cjne    a,#1,re_hl1
2E3F 79D3       +1  7303                     mov             r1,#saven_bl;блок1 150h..46fh
2E41 E7         +1  7304     re_hl:  mov             a,@r1   
2E42 F583       +1  7305                     mov             dph,a
2E44 09         +1  7306                     inc             r1
2E45 E7         +1  7307                     mov             a,@r1
2E46 F582       +1  7308                     mov             dpl,a
2E48 22         +1  7309                     ret
                +1  7310     
2E49 B40204     +1  7311     re_hl1: cjne    a,#2,re_hl2
2E4C 79C0       +1  7312                     mov             r1,#saven_bl2   ;блок2 470h..78fh
2E4E 80F1       +1  7313                     jmp             re_hl
                +1  7314     
2E50 B40304     +1  7315     re_hl2: cjne    a,#3,re_hl3
2E53 79C2       +1  7316                     mov             r1,#saven_bl3   ;блок3 790h..aafh
2E55 80EA       +1  7317                     jmp             re_hl
                +1  7318     
2E57 79D9       +1  7319     re_hl3: mov             r1,#saven_bl4   ;блок4 ab0h..dcfh
2E59 80E6       +1  7320                     jmp             re_hl
                +1  7321     ;загрузка rez_A3 в соотв яч внешн озу
2E5B 789C       +1  7322     loA3_X: mov             r0,#rez_A3
2E5D 120000   F +1  7323                     call    resar2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   114

2E60 EA         +1  7324                     mov             a,r2                    ;
2E61 F0         +1  7325                     movx    @dptr,a
2E62 A3         +1  7326                     inc             dptr
2E63 EB         +1  7327                     mov             a,r3
2E64 F0         +1  7328                     movx    @dptr,a
2E65 A3         +1  7329                     inc             dptr
2E66 EC         +1  7330                     mov             a,r4
2E67 F0         +1  7331                     movx    @dptr,a
2E68 A3         +1  7332                     inc             dptr
2E69 ED         +1  7333                     mov             a,r5
2E6A F0         +1  7334                     movx    @dptr,a
2E6B A3         +1  7335                     inc             dptr;адрес след ячейки внешн озу храним
2E6C 22         +1  7336                     ret             ;в ячейке saven_bl
                +1  7337     ;чтение в rez_A3 из соотв яч внешн озу
                +1  7338     
2E6D E0         +1  7339     reA3_X: movx    a,@dptr
2E6E FA         +1  7340                     mov             r2,a
2E6F A3         +1  7341                     inc             dptr
2E70 E0         +1  7342                     movx    a,@dptr
2E71 FB         +1  7343                     mov             r3,a
2E72 A3         +1  7344                     inc             dptr
2E73 E0         +1  7345                     movx    a,@dptr
2E74 FC         +1  7346                     mov             r4,a
2E75 A3         +1  7347                     inc             dptr
2E76 E0         +1  7348                     movx    a,@dptr
2E77 FD         +1  7349                     mov             r5,a
2E78 A3         +1  7350                     inc             dptr
2E79 789C       +1  7351                     mov             r0,#rez_A3
2E7B 120000   F +1  7352                     call    saver2
2E7E 22         +1  7353                     ret
                +1  7354     
                +1  7355     ;разбивка внешнего озу
                +1  7356     ;0..ffh считывается страница рпзу калибровочных коффициентов
                +1  7357     ;100h..150h обл внеш озу для скользящего массива измерения
                +1  7358     ;150h..46fh 1й блок
                +1  7359     ;470h..78fh     2й блок
                +1  7360     ;790h..aaf      3й блок
                +1  7361     ;ab0h..dcfh 4й блок
                +1  7362     ;dd0..fffh свободная область
                +1  7363     ;
                +1  7364     ;светодиоды и точки для индикатора
                +1  7365     ;такт
                +1  7366     ;измер
                +1  7367     ;avp
                +1  7368     ;нуль
                +1  7369     ;0,1s
                +1  7370     ;1s
                +1  7371     ;10s
                +1  7372     ;кмп
                +1  7373     ;память
                +1  7374     ;пуск
                    7375     
                    7376     ;$include (sarifm3.asm) 
                +1  7377     ; ” ©« SARIFM.ASM 8.11.95               ;файл арифметики
                +1  7378     
  0008          +1  7379     ltemp   equ       8           ;long temporary
  000C          +1  7380     xtemp   equ       12          ;other temporaries
  000A          +1  7381     DECSIZE EQU       10
  0004          +1  7382     NUMSIZE EQU       4
  0004          +1  7383     RR4             EQU       4
  0005          +1  7384     RR5             EQU       5
                +1  7385     
                +1  7386     ; rseg     ARIF ; Switch to this code segment.
                +1  7387     ; using    0    ; Specify register bank for the following program code.                    
                                            ; Arithmetics:  CLEARING string
                +1  7388     ; Input:
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   115

                +1  7389     ; R0 - pointer to string,
                +1  7390     ; NUMSIZE - byte count if CLRNUM used,
                +1  7391     ; DECSIZE - byte count if CLRDEC used,
                +1  7392     ; R2 - byte count if CLEAR used;
                +1  7393     ; Output:  none.
                +1  7394     
2E7F            +1  7395     CLRDEC:
2E7F 7A0A       +1  7396                 MOV R2, #DECSIZE
2E81 8002       +1  7397                 SJMP    CLEAR
2E83            +1  7398     CLRNUM:
2E83 7A04       +1  7399                 MOV R2, #NUMSIZE
                +1  7400                 ;JMP    CLEAR
2E85            +1  7401     CLEAR:
2E85 E4         +1  7402                 CLR A
2E86 F6         +1  7403     CLR11:  MOV @R0, A
2E87 08         +1  7404                 INC R0
2E88 DAFC       +1  7405                 DJNZ    R2, CLR11
2E8A 22         +1  7406                 RET
                +1  7407     
                +1  7408     ;**********************************
                +1  7409     ;mov    r1,#abin+3
                +1  7410     ;mov    r0,#adec
                +1  7411     ; _ _ _ _
                +1  7412     ;     03ff
                +1  7413     ;ст     мл   - вход
                +1  7414     ; _ _ _ _ _ _ _ _ _ _
                +1  7415     ;             1 0 2 3
                +1  7416     ;ст                мл 
                +1  7417     ;**********************************
                +1  7418     
2E8B            +1  7419     BINDEC:
                +1  7420     ; Arithmetics:  CONVERTING from binary into decimal "4->10"
                +1  7421     ; Input:
                +1  7422     ; R0 - pointer to destination (high digit is the first),
                +1  7423     ; R1 - pointer to source,
                +1  7424     ; NUMSIZE - byte count in binary number;
                +1  7425     ; DECSIZE - byte count in decimal number;
                +1  7426     ; Output:  none.
                +1  7427     ; Source saved
                +1  7428     
                +1  7429         ; 1. Clear result
2E8B 7A05       +1  7430         MOV R2, #DECSIZE/2
2E8D 120000   F +1  7431         CALL   CLEAR  ; incrementing R0
                +1  7432     
                +1  7433         ; 2. Prepare convertion
2E90 18         +1  7434         DEC R0
2E91 8804       +1  7435         MOV RR4, R0 ; R4 - pointer to low byte of packed decimal result
2E93 8905       +1  7436         MOV RR5, R1 ; R5 - pointer to low byte of binary number
2E95 7B20       +1  7437         MOV R3, #NUMSIZE*8  ; R3 - bit counter in binary number
                +1  7438     
                +1  7439         ; 3. Convert cyrcle
2E97            +1  7440     BIN30:
                +1  7441                 ; 3.1. Rotate binary number one bit to left and prepare <Carry>
2E97 A905       +1  7442                 MOV R1, RR5
2E99 7A04       +1  7443                 MOV R2, #NUMSIZE
2E9B E7         +1  7444     BIN31:  MOV A, @R1
2E9C 33         +1  7445                 RLC A
2E9D F7         +1  7446                 MOV @R1, A
2E9E 19         +1  7447                 DEC R1
2E9F DAFA       +1  7448                 DJNZ    R2, BIN31
2EA1 A905       +1  7449                 MOV R1, RR5
2EA3 E7         +1  7450                 MOV A, @R1
2EA4 92E0       +1  7451                 MOV ACC.0, C
2EA6 F7         +1  7452                 MOV @R1, A
                +1  7453      ; 3.2. Doubling decimal result with <Carry>
2EA7 A804       +1  7454                 MOV R0, RR4
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   116

2EA9 7A05       +1  7455                 MOV R2, #DECSIZE/2
2EAB E6         +1  7456     BIN32:  MOV A, @R0
2EAC 36         +1  7457                 ADDC    A, @R0
2EAD D4         +1  7458                 DA  A
2EAE F6         +1  7459                 MOV @R0, A
2EAF 18         +1  7460                 DEC R0
2EB0 DAF9       +1  7461                 DJNZ    R2, BIN32
                +1  7462     
                +1  7463       ; 3.3. End of convert cyrcle
2EB2 DBE3       +1  7464               DJNZ    R3, BIN30
                +1  7465     
                +1  7466         ; 4. Make bytes from half-bytes
2EB4 E8         +1  7467                MOV A, R0
2EB5 240A       +1  7468                ADD A, #DECSIZE
2EB7 F8         +1  7469                MOV R0, A   ; R0 - pointer to low byte of unpacked decimal result
2EB8 A904       +1  7470                MOV R1, RR4 ; R1 - pointer to low byte of packed decimal result
2EBA 7A05       +1  7471                MOV R2, #DECSIZE/2
2EBC E7         +1  7472     BIN41:  MOV A, @R1
2EBD 540F       +1  7473                 ANL A, #00FH
2EBF F6         +1  7474                 MOV @R0, A
2EC0 18         +1  7475                 DEC R0
2EC1 E7         +1  7476                 MOV A, @R1
2EC2 C4         +1  7477                 SWAP    A
2EC3 540F       +1  7478                 ANL A, #00FH
2EC5 F6         +1  7479                 MOV @R0, A
2EC6 18         +1  7480                 DEC R0
2EC7 19         +1  7481                 DEC R1
2EC8 DAF2       +1  7482                 DJNZ    R2, BIN41
2ECA 22         +1  7483                 RET
                +1  7484     
                +1  7485     
                +1  7486     ;*********************************
                +1  7487     ;mov    r0,#abin
                +1  7488     ;mov    r1,#adec
                +1  7489     ; _ _ _ _       -выход
                +1  7490     ; ff0000
                +1  7491     ;0004
                +1  7492     ;мл      ст
                +1  7493     
                +1  7494     ;ст                       мл
                +1  7495     ;_ _ _ _ _ _ _ _ _ _     вход
                +1  7496     ;                       2 5 5
                +1  7497     ;                   1 0 2 4
                +1  7498     
2ECB            +1  7499     DECBIN:
                +1  7500     ; Arithmetics:  CONVERTING from decimal into binary "10->4"
                +1  7501     ; Input:
                +1  7502     ; R0 - pointer to destination,
                +1  7503     ; R1 - pointer to source (high digit is the first),
                +1  7504     ; NUMSIZE - byte count in binary number;
                +1  7505     ; DECSIZE - byte count in decimal number;
                +1  7506     ; Output:  none
                +1  7507     ; Source cleared
                +1  7508     
                +1  7509         ; 1. Clear result
2ECB 120000   F +1  7510                 CALL    CLRNUM    ; + increment R0 by NUMSIZE
                +1  7511     
                +1  7512         ; 2. Prepare convertion
2ECE 18         +1  7513                 DEC R0
2ECF 8804       +1  7514                 MOV RR4, R0 ; R4 - pointer to high byte of binary result
2ED1 8905       +1  7515                 MOV RR5, R1 ; R5 - pointer to high byte of packed decimal number
2ED3 900000   F +1  7516                 MOV DPTR, #DECT2
2ED6 7B20       +1  7517                 MOV R3, #NUMSIZE*8  ; R3 - bit counter in binary number
                +1  7518     
                +1  7519         ; 3. Convert cyrcle
2ED8            +1  7520     DEC30:
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   117

                +1  7521         ; 3.1. Divide decimal number by 2 and prepare <Carry>
2ED8 C3         +1  7522                 CLR C
2ED9 A905       +1  7523                 MOV R1, RR5
2EDB 7A0A       +1  7524                 MOV R2, #DECSIZE
2EDD E7         +1  7525     DEC31:  MOV A, @R1
2EDE 540F       +1  7526                 ANL A, #00FH
2EE0 92E4       +1  7527                 MOV ACC.4, C
2EE2 93         +1  7528                 MOVC    A,@A+DPTR
2EE3 F7         +1  7529                 MOV @R1, A
2EE4 A2E7       +1  7530                 MOV C, ACC.7
2EE6 09         +1  7531                 INC R1
2EE7 DAF4       +1  7532                 DJNZ    R2, DEC31
                +1  7533         ; 3.2. Rotate binary result one bit to right with <Carry>
2EE9 A804       +1  7534                 MOV R0, RR4
2EEB 7A04       +1  7535                 MOV R2, #NUMSIZE
2EED E6         +1  7536     DEC32:  MOV A, @R0
2EEE 13         +1  7537                 RRC A
2EEF F6         +1  7538                 MOV @R0, A
2EF0 18         +1  7539                 DEC R0
2EF1 DAFA       +1  7540                 DJNZ    R2, DEC32
                +1  7541     
                +1  7542         ; 3.3. End of convert cyrcle
2EF3 DBE3       +1  7543                 DJNZ    R3, DEC30
2EF5 22         +1  7544                 RET
                +1  7545     
2EF6 00800181   +1  7546     DECT2:  DB  00,80H,001,81H,02,82H,03,83H,04,84H
2EFA 02820383                
2EFE 0484                    
2F00 00000000   +1  7547                     DB  00,00,00,00,00,00
2F04 0000                    
2F06 05850686   +1  7548                     DB  05,85H,06,86H,07,87H,08H,88H,09H,89H
2F0A 07870888                
2F0E 0989                    
                +1  7549     
                +1  7550     ;   Long comparison
                +1  7551     ;   Lcmp - called with arg1 in r2-r5 and arg2 in ltemp - returns with
                +1  7552     ;   flags and acc set as though a long subtraction was done.
                +1  7553     ;*******************************
                +1  7554     ;сравнить r2..r5 с (ltemp..ltemp+3)
                +1  7555     ;c=1     r2..r5< ltemp..ltemp+3     a<b
                +1  7556     ;c=0       r2..r5> ltemp..ltemp+3   a>b
                +1  7557     ;*******************************
2F10            +1  7558     lcmp:
2F10 C3         +1  7559         clr c
2F11 EA         +1  7560         mov a,r2
2F12 9508       +1  7561         subb    a,8
2F14 700F       +1  7562         jnz done
2F16 EB         +1  7563         mov a,r3
2F17 9509       +1  7564         subb    a,9
2F19 7008       +1  7565         jnz done1
2F1B EC         +1  7566         mov a,r4
2F1C 950A       +1  7567         subb    a,10
2F1E 7003       +1  7568         jnz done1
2F20 ED         +1  7569         mov a,r5
2F21 950B       +1  7570         subb    a,11
2F23            +1  7571     done1:
2F23 C2D2       +1  7572         clr ov      ;overflow is significant only for top byte
2F25            +1  7573     done:
2F25 22         +1  7574         ret
                +1  7575     
                +1  7576     ;   Load long into r2-5 from [dptr]
                +1  7577     
2F26            +1  7578     ldc_long:
2F26 E583       +1  7579         mov a,dph       ;is it in on board memory
2F28 6010       +1  7580         jz  onboard     ;yes
2F2A E4         +1  7581         clr a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   118

2F2B 93         +1  7582         movc    a,@a+dptr
2F2C FA         +1  7583         mov r2,a
2F2D 7401       +1  7584         mov a,#1
2F2F 93         +1  7585         movc    a,@a+dptr
2F30 FB         +1  7586         mov r3,a
2F31 7402       +1  7587         mov a,#2
2F33 93         +1  7588         movc    a,@a+dptr
2F34 FC         +1  7589         mov r4,a
2F35 7403       +1  7590         mov a,#3
2F37 93         +1  7591         movc    a,@a+dptr
2F38 FD         +1  7592         mov r5,a
2F39 22         +1  7593         ret
2F3A            +1  7594     onboard:
2F3A A882       +1  7595         mov r0,dpl
2F3C E6         +1  7596         mov a,@r0
2F3D FA         +1  7597         mov r2,a
2F3E 08         +1  7598         inc r0
2F3F E6         +1  7599         mov a,@r0
2F40 FB         +1  7600         mov r3,a
2F41 08         +1  7601         inc r0
2F42 E6         +1  7602         mov a,@r0
2F43 FC         +1  7603         mov r4,a
2F44 08         +1  7604         inc r0
2F45 E6         +1  7605         mov a,@r0
2F46 FD         +1  7606         mov r5,a
2F47 22         +1  7607         ret
                +1  7608     
                +1  7609     ;**************************************
                +1  7610     ;загрузить ltemp...+3 из памяти программ
                +1  7611     ;mov    dptr,#CH5
                +1  7612     ;call   ldc_ltemp        ltemp <--5
                +1  7613     ;**************************************
2F48            +1  7614     ldc_ltemp:
2F48 E583       +1  7615         mov a,dph       ;is it in on board memory
2F4A 6014       +1  7616         jz  oboard      ;yes
2F4C E4         +1  7617         clr a
2F4D 93         +1  7618         movc    a,@a+dptr
2F4E F508       +1  7619         mov 8,a
2F50 7401       +1  7620         mov a,#1
2F52 93         +1  7621         movc    a,@a+dptr
2F53 F509       +1  7622         mov 9,a
2F55 7402       +1  7623         mov a,#2
2F57 93         +1  7624         movc    a,@a+dptr
2F58 F50A       +1  7625         mov 10,a
2F5A 7403       +1  7626         mov a,#3
2F5C 93         +1  7627         movc    a,@a+dptr
2F5D F50B       +1  7628         mov 11,a
2F5F 22         +1  7629         ret
2F60            +1  7630     oboard:
2F60 A882       +1  7631         mov r0,dpl
2F62 8608       +1  7632         mov 8,@r0
2F64 08         +1  7633         inc r0
2F65 8609       +1  7634         mov 9,@r0
2F67 08         +1  7635         inc r0
2F68 860A       +1  7636         mov 10,@r0
2F6A 08         +1  7637         inc r0
2F6B 860B       +1  7638         mov 11,@r0
2F6D 22         +1  7639         ret
                +1  7640     
                +1  7641     ;*****************************
                +1  7642     ;mov    dptr,#k1
                +1  7643     ;call   ldx_long
                +1  7644     ;k1->r2..r5
                +1  7645     ;*****************************
                +1  7646     ;   Load long into r2-5 from [dptr]
                +1  7647     ;
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   119

                +1  7648     ; 01/30/90 JLZ      Updated from new library; added save/restore DPH, DPL
2F6E            +1  7649     ldx_long:
2F6E E583       +1  7650         mov a,dph       ;is it in on board memory
2F70 6014       +1  7651         jz  onboar1        ;yes
2F72 C082       +1  7652         push    dpl
2F74 C083       +1  7653         push    dph
2F76 E0         +1  7654         movx    a,@dptr
2F77 FA         +1  7655         mov r2,a
2F78 A3         +1  7656         inc dptr
2F79 E0         +1  7657         movx    a,@dptr
2F7A FB         +1  7658         mov r3,a
2F7B A3         +1  7659         inc dptr
2F7C E0         +1  7660         movx    a,@dptr
2F7D FC         +1  7661         mov r4,a
2F7E A3         +1  7662         inc dptr
2F7F E0         +1  7663         movx    a,@dptr
2F80 FD         +1  7664         mov r5,a
2F81 D083       +1  7665         pop dph
2F83 D082       +1  7666         pop dpl
2F85 22         +1  7667         ret
2F86            +1  7668     onboar1:
2F86 A882       +1  7669         mov r0,dpl
2F88 E6         +1  7670         mov a,@r0
2F89 FA         +1  7671         mov r2,a
2F8A 08         +1  7672         inc r0
2F8B E6         +1  7673         mov a,@r0
2F8C FB         +1  7674         mov r3,a
2F8D 08         +1  7675         inc r0
2F8E E6         +1  7676         mov a,@r0
2F8F FC         +1  7677         mov r4,a
2F90 08         +1  7678         inc r0
2F91 E6         +1  7679         mov a,@r0
2F92 FD         +1  7680         mov r5,a
2F93 22         +1  7681         ret
                +1  7682     
                +1  7683     ;*********************************
                +1  7684     ;mov    dptr,#k2
                +1  7685     ;call   ldx_ltemp       ;k2->ltemp..ltemp+3
                +1  7686     ;**********************************
2F94            +1  7687     ldx_ltemp:
2F94 E583       +1  7688         mov a,dph       ;is it in on board memory
2F96 6010       +1  7689         jz  oboard1     ;yes
2F98 E0         +1  7690         movx    a,@dptr
2F99 F508       +1  7691         mov 8,a
2F9B A3         +1  7692         inc dptr
2F9C E0         +1  7693         movx    a,@dptr
2F9D F509       +1  7694         mov 9,a
2F9F A3         +1  7695         inc dptr
2FA0 E0         +1  7696         movx    a,@dptr
2FA1 F50A       +1  7697         mov 10,a
2FA3 A3         +1  7698         inc dptr
2FA4 E0         +1  7699         movx    a,@dptr
2FA5 F50B       +1  7700         mov 11,a
2FA7 22         +1  7701         ret
2FA8            +1  7702     oboard1:
2FA8 A882       +1  7703         mov r0,dpl
2FAA 8608       +1  7704         mov 8,@r0
2FAC 08         +1  7705         inc r0
2FAD 8609       +1  7706         mov 9,@r0
2FAF 08         +1  7707         inc r0
2FB0 860A       +1  7708         mov 10,@r0
2FB2 08         +1  7709         inc r0
2FB3 860B       +1  7710         mov 11,@r0
2FB5 22         +1  7711         ret
                +1  7712     ;   Long division routines for 8051
                +1  7713     ;   Divide is called with the divisor in ltemp, the dividend in r5-r2
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   120

                +1  7714     ;   It returns with the quotient in r5-r2 and the remainder in ltemp
                +1  7715     ;   The top of bank 1 (locations 12-15) are used as a long temporary
                +1  7716     ;   and registers r0 and r1 in bank 0 are used as temporaries. R0 and
                +1  7717     ;   r1 must be saved by the caller.
                +1  7718     ;   This is long unsigned division.
                +1  7719     
                +1  7720     
                +1  7721     ;   Register usage:
                +1  7722     ;       r0 loop counter
                +1  7723     ;       xtemp (12-15) accumulates quotient
                +1  7724     ;       r5-r2 holds dividend
                +1  7725     ;       ltemp holds divisor
                +1  7726     
                +1  7727     ;************************************
                +1  7728     ;r2..r5-делимое
                +1  7729     ;ltemp..-делитель
                +1  7730     ;частное -r2..r5
                +1  7731     ;*************************************
2FB6            +1  7732     divide:
2FB6 E4         +1  7733         clr a
2FB7 F8         +1  7734         mov r0,a        ;initialize count
2FB8 F50C       +1  7735         mov xtemp,a     ;zero quotient
2FBA F50D       +1  7736         mov xtemp+1,a
2FBC F50E       +1  7737         mov xtemp+2,a
2FBE F50F       +1  7738         mov xtemp+3,a
2FC0 ED         +1  7739         mov a,r5        ;check for zero dividend
2FC1 4C         +1  7740         orl a,r4
2FC2 4B         +1  7741         orl a,r3
2FC3 4A         +1  7742         orl a,r2
2FC4 600B       +1  7743         jz  jfinis
2FC6 E508       +1  7744         mov a,ltemp     ;check for zero divisor
2FC8 4509       +1  7745         orl a,ltemp+1
2FCA 450A       +1  7746         orl a,ltemp+2
2FCC 450B       +1  7747         orl a,ltemp+3
2FCE 7037       +1  7748         jnz midl
2FD0 22         +1  7749         ret
                +1  7750     
2FD1 020000   F +1  7751     jfinis: jmp finis
                +1  7752     
2FD4            +1  7753     loops:
2FD4 EA         +1  7754         mov a,r2
2FD5 C3         +1  7755         clr c
2FD6 9508       +1  7756         subb    a,ltemp+0   ;is divisor greater than dividend yet
2FD8 4033       +1  7757         jc  yes     ;yes, go no further
2FDA 7013       +1  7758         jnz no
2FDC EB         +1  7759         mov a,r3
2FDD 9509       +1  7760         subb    a,ltemp+1
2FDF 402C       +1  7761         jc  yes
2FE1 700C       +1  7762         jnz no
2FE3 EC         +1  7763         mov a,r4
2FE4 950A       +1  7764         subb    a,ltemp+2
2FE6 4025       +1  7765         jc  yes
2FE8 7005       +1  7766         jnz no
2FEA ED         +1  7767         mov a,r5
2FEB 950B       +1  7768         subb    a,ltemp+3
2FED 401E       +1  7769         jc  yes
2FEF            +1  7770     no:
2FEF E50B       +1  7771         mov a,ltemp+3   ;shift divisor up one bit
2FF1 250B       +1  7772         add a,ltemp+3
2FF3 F50B       +1  7773         mov ltemp+3,a
2FF5 E50A       +1  7774         mov a,ltemp+2
2FF7 350A       +1  7775         addc    a,ltemp+2
2FF9 F50A       +1  7776         mov ltemp+2,a
2FFB E509       +1  7777         mov a,ltemp+1
2FFD 3509       +1  7778         addc    a,ltemp+1
2FFF F509       +1  7779         mov ltemp+1,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   121

3001 E508       +1  7780         mov a,ltemp+0
3003 3508       +1  7781         addc    a,ltemp+0
3005 F508       +1  7782         mov ltemp+0,a
3007            +1  7783     midl:
3007 08         +1  7784         inc r0      ;increment count
3008 E508       +1  7785         mov a,ltemp+0   ;check for safe to shift some more
300A 30E7C7     +1  7786         jnb acc.7,loops  ;loop if top bit clear
300D            +1  7787     yes:
300D E508       +1  7788         mov a,ltemp+0
300F C3         +1  7789         clr c
3010 9A         +1  7790         subb    a,r2        ;can we subtract now?
3011 401A       +1  7791         jc  dosub       ;yes, go and do it
3013 7015       +1  7792         jnz nosub
3015 E509       +1  7793         mov a,ltemp+1
3017 9B         +1  7794         subb    a,r3
3018 4013       +1  7795         jc  dosub
301A 700E       +1  7796         jnz nosub
301C E50A       +1  7797         mov a,ltemp+2
301E 9C         +1  7798         subb    a,r4
301F 400C       +1  7799         jc  dosub
3021 7007       +1  7800         jnz nosub
3023 E50B       +1  7801         mov a,ltemp+3
3025 9D         +1  7802         subb    a,r5
3026 4005       +1  7803         jc  dosub
3028 6003       +1  7804         jz  dosub
302A            +1  7805     nosub:
302A C3         +1  7806         clr c
302B 8012       +1  7807         sjmp    dosh
302D            +1  7808     dosub:
302D C3         +1  7809         clr c       ;subtract divisor from dividend
302E ED         +1  7810         mov a,r5
302F 950B       +1  7811         subb    a,ltemp+3
3031 FD         +1  7812         mov r5,a
3032 EC         +1  7813         mov a,r4
3033 950A       +1  7814         subb    a,ltemp+2
3035 FC         +1  7815         mov r4,a
3036 EB         +1  7816         mov a,r3
3037 9509       +1  7817         subb    a,ltemp+1
3039 FB         +1  7818         mov r3,a
303A EA         +1  7819         mov a,r2
303B 9508       +1  7820         subb    a,ltemp+0
303D FA         +1  7821         mov r2,a
303E D3         +1  7822         setb    c       ;now set bit for quotient
303F            +1  7823     dosh:
303F E50F       +1  7824         mov a,xtemp+3
3041 33         +1  7825         rlc a
3042 F50F       +1  7826         mov xtemp+3,a
3044 E50E       +1  7827         mov a,xtemp+2
3046 33         +1  7828         rlc a
3047 F50E       +1  7829         mov xtemp+2,a
3049 E50D       +1  7830         mov a,xtemp+1
304B 33         +1  7831         rlc a
304C F50D       +1  7832         mov xtemp+1,a
304E E50C       +1  7833         mov a,xtemp+0
3050 33         +1  7834         rlc a
3051 F50C       +1  7835         mov xtemp+0,a
3053 E508       +1  7836         mov a,ltemp+0       ;shift divisor down
3055 C3         +1  7837         clr c
3056 13         +1  7838         rrc a
3057 F508       +1  7839         mov ltemp+0,a
3059 E509       +1  7840         mov a,ltemp+1
305B 13         +1  7841         rrc a
305C F509       +1  7842         mov ltemp+1,a
305E E50A       +1  7843         mov a,ltemp+2
3060 13         +1  7844         rrc a
3061 F50A       +1  7845         mov ltemp+2,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   122

3063 E50B       +1  7846         mov a,ltemp+3
3065 13         +1  7847         rrc a
3066 F50B       +1  7848         mov ltemp+3,a
                +1  7849     
3068 D8A3       +1  7850         djnz    r0,yes      ;and continue with the rest
                +1  7851     
306A            +1  7852     finis:
306A 8D0B       +1  7853         mov ltemp+3,r5
306C 8C0A       +1  7854         mov ltemp+2,r4
306E 8B09       +1  7855         mov ltemp+1,r3
3070 8A08       +1  7856         mov ltemp+0,r2
3072 AD0F       +1  7857         mov r5,xtemp+3
3074 AC0E       +1  7858         mov r4,xtemp+2
3076 AB0D       +1  7859         mov r3,xtemp+1
3078 AA0C       +1  7860         mov r2,xtemp+0
307A 22         +1  7861         ret         ;and return with the satisfaction of a job well done
                +1  7862     
                +1  7863     
                +1  7864     ;   Long multiplication
                +1  7865     ;   The main multiply thingo. Called with one operand in r5-r2 and the
                +1  7866     ;   other in ltemp. It really doesn't matter which one is where.
                +1  7867     
                +1  7868     ;**********************************
                +1  7869     ;(r2..r5)*(ltemp..ltemp+3)=r2..r5
                +1  7870     ;ст  мл
                +1  7871     ;**********************************
307B            +1  7872     llmul:
307B            +1  7873     almul:
307B            +1  7874     lmul:
307B ED         +1  7875         mov a,r5        ;low order byte
307C 850BF0     +1  7876         mov b,ltemp+3       ;times low order byte
307F A4         +1  7877         mul ab
3080 F50F       +1  7878         mov xtemp+3,a       ;store low
3082 85F00E     +1  7879         mov xtemp+2,b   ;and high
3085 ED         +1  7880         mov a,r5        ;low order
3086 850AF0     +1  7881         mov b,ltemp+2   ;times next
3089 A4         +1  7882         mul ab
308A 250E       +1  7883         add a,xtemp+2   ;add in
308C F50E       +1  7884         mov xtemp+2,a
308E E5F0       +1  7885         mov a,b
3090 3400       +1  7886         addc    a,#0
3092 F50D       +1  7887         mov xtemp+1,a
3094 ED         +1  7888         mov a,r5
3095 8509F0     +1  7889         mov b,ltemp+1
3098 A4         +1  7890         mul ab
3099 250D       +1  7891         add a,xtemp+1
309B F50D       +1  7892         mov xtemp+1,a
309D E5F0       +1  7893         mov a,b
309F 3400       +1  7894         addc    a,#0
30A1 F50C       +1  7895         mov xtemp+0,a
30A3 ED         +1  7896         mov a,r5
30A4 8508F0     +1  7897         mov b,ltemp+0
30A7 A4         +1  7898         mul ab
30A8 250C       +1  7899         add a,xtemp+0
30AA F50C       +1  7900         mov xtemp+0,a
30AC EC         +1  7901         mov a,r4
30AD 850BF0     +1  7902         mov b,ltemp+3
30B0 A4         +1  7903         mul ab
30B1 250E       +1  7904         add a,xtemp+2
30B3 F50E       +1  7905         mov xtemp+2,a
30B5 E5F0       +1  7906         mov a,b
30B7 350D       +1  7907         addc    a,xtemp+1
30B9 F50D       +1  7908         mov xtemp+1,a
30BB E50C       +1  7909         mov a,xtemp+0
30BD 3400       +1  7910         addc    a,#0
30BF F50C       +1  7911         mov xtemp+0,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   123

30C1 EC         +1  7912         mov a,r4
30C2 850AF0     +1  7913         mov b,ltemp+2
30C5 A4         +1  7914         mul ab
30C6 250D       +1  7915         add a,xtemp+1
30C8 F50D       +1  7916         mov xtemp+1,a
30CA E5F0       +1  7917         mov a,b
30CC 350C       +1  7918         addc    a,xtemp+0
30CE F50C       +1  7919         mov xtemp+0,a
30D0 EC         +1  7920         mov a,r4
30D1 8509F0     +1  7921         mov b,ltemp+1
30D4 A4         +1  7922         mul ab
30D5 250C       +1  7923         add a,xtemp+0
30D7 F50C       +1  7924         mov xtemp+0,a
                +1  7925     
30D9 EB         +1  7926         mov a,r3
30DA 850BF0     +1  7927         mov b,ltemp+3
30DD A4         +1  7928         mul ab
30DE 250D       +1  7929         add a,xtemp+1
30E0 F50D       +1  7930         mov xtemp+1,a
30E2 E5F0       +1  7931         mov a,b
30E4 350C       +1  7932         addc    a,xtemp+0
30E6 F50C       +1  7933         mov xtemp+0,a
30E8 EB         +1  7934         mov a,r3
30E9 850AF0     +1  7935         mov b,ltemp+2
30EC A4         +1  7936         mul ab
30ED 250C       +1  7937         add a,xtemp+0
30EF F50C       +1  7938         mov xtemp+0,a
                +1  7939     
30F1 EA         +1  7940         mov a,r2
30F2 850BF0     +1  7941         mov b,ltemp+3
30F5 A4         +1  7942         mul ab
30F6 250C       +1  7943         add a,xtemp+0
30F8 FA         +1  7944         mov r2,a
30F9 AB0D       +1  7945         mov r3,xtemp+1
30FB AC0E       +1  7946         mov r4,xtemp+2
30FD AD0F       +1  7947         mov r5,xtemp+3
                +1  7948     
30FF 22         +1  7949         ret         ;all done
                +1  7950     ;******************************
                +1  7951     ;из содержимого  r2-r5  вычесть
                +1  7952     ;содержимое          ltemp..ltemp+3
                +1  7953     ;******************************
3100            +1  7954     llsub:
3100            +1  7955      lsub:
3100 ED         +1  7956         mov a,r5
3101 C3         +1  7957         clr c
3102 950B       +1  7958         subb    a,11
3104 FD         +1  7959         mov r5,a
3105 EC         +1  7960         mov a,r4
3106 950A       +1  7961         subb    a,10
3108 FC         +1  7962         mov r4,a
3109 EB         +1  7963         mov a,r3
310A 9509       +1  7964         subb    a,9
310C FB         +1  7965         mov r3,a
310D EA         +1  7966         mov a,r2
310E 9508       +1  7967         subb    a,8
3110 FA         +1  7968         mov r2,a
3111 22         +1  7969         ret
                +1  7970     
                +1  7971     ;***********************************************
                +1  7972     ;                                                      ст мл
                +1  7973     ; cложение содержимого  r2..r5 с числом по адресу
                +1  7974     ;  r0- адрес младшего байта !!!
                +1  7975     ;результат- r2..r5
                +1  7976     ;***********************************************
                +1  7977     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   124

3112 C3         +1  7978     ladd:    clr       c
3113 ED         +1  7979          mov       a,r5
3114 26         +1  7980          add       a,@r0
3115 FD         +1  7981          mov       r5,a
3116 18         +1  7982          dec       r0
3117 EC         +1  7983          mov       a,r4
3118 36         +1  7984          addc      a,@r0
3119 FC         +1  7985          mov       r4,a
311A 18         +1  7986          dec       r0
311B EB         +1  7987          mov       a,r3
311C 36         +1  7988          addc      a,@r0
311D FB         +1  7989          mov       r3,a
311E 18         +1  7990          dec       r0
311F EA         +1  7991          mov       a,r2
3120 36         +1  7992          addc      a,@r0
3121 FA         +1  7993          mov       r2,a
3122 22         +1  7994          ret
                +1  7995     ;***********************************************
                +1  7996     ;                                                      ст мл
                +1  7997     ; cложение содержимого  r2..r5 с числом по адресу
                +1  7998     ;  r0- адрес младшего байта !!!
                +1  7999     ;результат- r2..r5
                +1  8000     ;***********************************************
                +1  8001     
3123 C3         +1  8002     laddx:    clr       c
3124 E2         +1  8003                                             movx            a,@r0
3125 2D         +1  8004                                             add                     a,r5
3126 FD         +1  8005               mov     r5,a
3127 18         +1  8006                             dec     r0
3128 E2         +1  8007                             movx    a,@r0
3129 3C         +1  8008                             addc    a,r4
312A FC         +1  8009                             mov     r4,a
312B 18         +1  8010                             dec     r0
312C E2         +1  8011                             movx    a,@r0
312D 3B         +1  8012                             addc    a,r3
312E FB         +1  8013                             mov     r3,a
312F 18         +1  8014                             dec     r0
3130 E2         +1  8015                             movx    a,@r0
3131 3A         +1  8016                             addc    a,r2
3132 FA         +1  8017                             mov       r2,a
3133 22         +1  8018                             ret
                +1  8019     
                +1  8020     ;***********************************************
                +1  8021     ;                                                      ст мл
                +1  8022     ; cложение содержимого  r2..r5 с числом по адресу
                +1  8023     ;  dptr- адрес младшего байта !!!
                +1  8024     ;результат- r2..r5
                +1  8025     ;***********************************************
                +1  8026     
3134 C3         +1  8027     addx:    clr       c
3135 E0         +1  8028                                             movx            a,@dptr
3136 2D         +1  8029                                             add                     a,r5
3137 FD         +1  8030               mov     r5,a
3138 120000   F +1  8031                             call            dedptr;dec     dptr
313B E0         +1  8032                             movx    a,@dptr
313C 3C         +1  8033                             addc    a,r4
313D FC         +1  8034                             mov     r4,a
313E 120000   F +1  8035                             call            dedptr;dec     dptr
3141 E0         +1  8036                             movx    a,@dptr
3142 3B         +1  8037                             addc    a,r3
3143 FB         +1  8038                             mov     r3,a
3144 120000   F +1  8039                             call            dedptr;dec     dptr
3147 E0         +1  8040                             movx    a,@dptr
3148 3A         +1  8041                             addc    a,r2
3149 FA         +1  8042                             mov       r2,a
314A 22         +1  8043                             ret
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   125

                +1  8044     
314B C0D0       +1  8045     dedptr:         push    psw
314D C3         +1  8046                                             clr             c
314E E582       +1  8047                                             mov             a,dpl
3150 9401       +1  8048                                             subb    a,#1
3152 F582       +1  8049                                             mov             dpl,a
3154 E583       +1  8050                                             mov             a,dph
3156 9400       +1  8051                                             subb    a,#0
3158 F583       +1  8052                                             mov             dph,a
315A D0D0       +1  8053                                             pop             psw
315C 22         +1  8054                                             ret
                    8055     
                    8056     ;$include (floatm.asm)
                +1  8057     ;       Copyright (C) 1988 HI-TECH Software
                +1  8058     
                +1  8059     ;       Single Precision Floating point arithmetic routines for 8051
                +1  8060     
                +1  8061     ;       The format of floating point numbers is as follows:
                +1  8062     
                +1  8063     ;       -----------------
                +1  8064     ;       *     sign      *  1 bit
                +1  8065     ;       -----------------
                +1  8066     ;       *   exponent    *  8 bits
                +1  8067     ;       -----------------
                +1  8068     ;       *   mantissa    *  23 bits + 1 implied bit = 24 bits
                +1  8069     ;       -----------------
                +1  8070     
                +1  8071     
                +1  8072     ;       As usual for the 8051 the memory layout has the most significant
                +1  8073     ;       byte (i.e. that containing the sign) coming first, i.e. at the
                +1  8074     ;       lowest address.
                +1  8075     
                +1  8076     ;       Calling conventions:
                +1  8077     
                +1  8078     ;       Left operand in r2-r5, right operand in ltemp (r0'-r3')
                +1  8079     ;
                +1  8080     ;       Return value is in r2-r5
                +1  8081     
                +1  8082     ;       Naming conventions: A routine name is constructed by
                +1  8083     
                +1  8084     ;             ASOP
                +1  8085     
                +1  8086     ;       Where A is the arithmetic type (f for float), and op is the operation,
                +1  8087     ;       one of mul, div, mod, add, sub and cmp. S is the size, always l.
                +1  8088     ;       Conversion routines are named
                +1  8089     
                +1  8090     ;               AStof
                +1  8091     
                +1  8092     ;       where A is the arithmetic type (a for integer, l for unsigned)
                +1  8093     ;       S is the integer size, one of b (byte), w (word) or l (long).
                +1  8094     ;       Conversion from float to integer is ftol.
                +1  8095     
                +1  8096     ;               .ORG  5000h
                +1  8097     ;               .CODE
                +1  8098     ;       seg     c_text
                +1  8099     
                +1  8100     ;;      $MOD812
----            +1  8101             CSEG
                +1  8102     ;ORG 1000h
                +1  8103     
                +1  8104     ;PUBLIC flmul,fldiv,fladd,flsub,flcmp
                +1  8105     ;PUBLIC ftol,altof,lltof,awtof,lwtof,abtof,lbtof
                +1  8106     
                +1  8107     ;       EXTERNAL DELAY,KKOFU0,AKNCH,XNULLU
                +1  8108     ;       macros
                +1  8109     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   126

                +1  8110     saveregs        macro
                +1  8111             push    7
                +1  8112             push    6
                +1  8113             push    1
                +1  8114             push    0
                +1  8115             endm
                +1  8116     
                +1  8117     restregs        macro
                +1  8118             pop     0
                +1  8119             pop     1
                +1  8120             pop     6
                +1  8121             pop     7
                +1  8122             endm
                +1  8123     
                +1  8124     ;addr   
                +1  8125     dan     macro   pad
                +1  8126             mov     a,r5
                +1  8127             add     a,pad+3
                +1  8128             mov     pad+3,a
                +1  8129             mov     a,pad+2
                +1  8130             addc    a,r4
                +1  8131             mov     pad+2,a
                +1  8132             mov     a,pad+1
                +1  8133             addc    a,r3
                +1  8134             mov     pad+1,a
                +1  8135             mov     a,pad+0
                +1  8136             addc    a,r2
                +1  8137             mov     pad,a
                +1  8138             endm
                +1  8139     
                +1  8140     addl    macro  addr
                +1  8141             mov     a,r5
                +1  8142             add     a,addr+3
                +1  8143             mov     r5,a
                +1  8144             mov     a,addr+2
                +1  8145             addc    a,r4
                +1  8146             mov     r4,a
                +1  8147             mov     a,addr+1
                +1  8148             addc    a,r3
                +1  8149             mov     r3,a
                +1  8150             mov     a,addr+0
                +1  8151             addc    a,r2
                +1  8152             mov     r2,a
                +1  8153             endm
                +1  8154     
                +1  8155     
                +1  8156     add1    macro
                +1  8157             mov     a,r5
                +1  8158             add     a,#1
                +1  8159             mov     r5,a
                +1  8160             clr     a
                +1  8161             addc    a,r4
                +1  8162             mov     r4,a
                +1  8163             clr     a
                +1  8164             addc    a,r3
                +1  8165             mov     r3,a
                +1  8166             clr     a
                +1  8167             addc    a,r2
                +1  8168             mov     r2,a
                +1  8169             endm
                +1  8170     
                +1  8171     shfdn   macro  addr
                +1  8172             clr     c
                +1  8173             mov     a,addr
                +1  8174             rrc     a
                +1  8175             mov     addr,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   127

                +1  8176             mov     a,addr+1
                +1  8177             rrc     a
                +1  8178             mov     addr+1,a
                +1  8179             mov     a,addr+2
                +1  8180             rrc     a
                +1  8181             mov     addr+2,a
                +1  8182             mov     a,addr+3
                +1  8183             rrc     a
                +1  8184             mov     addr+3,a
                +1  8185             endm
                +1  8186     
                +1  8187     shfup   macro  addr
                +1  8188             clr     c
                +1  8189             mov     a,addr+3
                +1  8190             rlc     a
                +1  8191             mov     addr+3,a
                +1  8192             mov     a,addr+2
                +1  8193             rlc     a
                +1  8194             mov     addr+2,a
                +1  8195             mov     a,addr+1
                +1  8196             rlc     a
                +1  8197             mov     addr+1,a
                +1  8198             mov     a,addr
                +1  8199             rlc     a
                +1  8200             mov     addr,a
                +1  8201             endm
                +1  8202     
                +1  8203     rshift  macro
                +1  8204             clr     c
                +1  8205             mov     a,r2
                +1  8206             rrc     a
                +1  8207             mov     r2,a
                +1  8208             mov     a,r3
                +1  8209             rrc     a
                +1  8210             mov     r3,a
                +1  8211             mov     a,r4
                +1  8212             rrc     a
                +1  8213             mov     r4,a
                +1  8214             mov     a,r5
                +1  8215             rrc     a
                +1  8216             mov     r5,a
                +1  8217             endm
                +1  8218     rshift1 macro
                +1  8219             setb    c
                +1  8220             mov     a,r2
                +1  8221             rrc     a
                +1  8222             mov     r2,a
                +1  8223             mov     a,r3
                +1  8224             rrc     a
                +1  8225             mov     r3,a
                +1  8226             mov     a,r4
                +1  8227             rrc     a
                +1  8228             mov     r4,a
                +1  8229             mov     a,r5
                +1  8230             rrc     a
                +1  8231             mov     r5,a
                +1  8232             endm
                +1  8233     
                +1  8234     
                +1  8235     lshift  macro
                +1  8236             mov     a,r5
                +1  8237             rlc     a
                +1  8238             mov     r5,a
                +1  8239             mov     a,r4
                +1  8240             rlc     a
                +1  8241             mov     r4,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   128

                +1  8242             mov     a,r3
                +1  8243             rlc     a
                +1  8244             mov     r3,a
                +1  8245             mov     a,r2
                +1  8246             rlc     a
                +1  8247             mov     r2,a
                +1  8248             endm
                +1  8249     
                +1  8250     neg1    macro
                +1  8251             clr     c
                +1  8252             clr     a
                +1  8253             subb    a,r5
                +1  8254             mov     r5,a
                +1  8255             clr     a
                +1  8256             subb    a,r4
                +1  8257             mov     r4,a
                +1  8258             clr     a
                +1  8259             subb    a,r3
                +1  8260             mov     r3,a
                +1  8261             clr     a
                +1  8262             subb    a,r2
                +1  8263             mov     r2,a
                +1  8264             endm
                +1  8265     
                +1  8266     negm    macro  addr
                +1  8267             clr     c
                +1  8268             clr     a
                +1  8269             subb    a,addr+3
                +1  8270             mov     addr+3,a
                +1  8271             clr     a
                +1  8272             subb    a,addr+2
                +1  8273             mov     addr+2,a
                +1  8274             clr     a
                +1  8275             subb    a,addr+1
                +1  8276             mov     addr+1,a
                +1  8277             clr     a
                +1  8278             subb    a,addr
                +1  8279             mov     addr,a
                +1  8280             endm
                +1  8281     
                +1  8282     copytor macro  addr
                +1  8283             mov     r2,addr
                +1  8284             mov     r3,addr+1
                +1  8285             mov     r4,addr+2
                +1  8286             mov     r5,addr+3
                +1  8287             endm
                +1  8288     
                +1  8289     
                +1  8290     copyrto macro  addr
                +1  8291             mov     addr,r2
                +1  8292             mov     addr+1,r3
                +1  8293             mov     addr+2,r4
                +1  8294             mov     addr+3,r5
                +1  8295             endm
                +1  8296     
                +1  8297     
                +1  8298     ;       Internal representation: in this set of routines a floating number
                +1  8299     ;       is unpacked into seperate mantissa, exponent and sign parts.
                +1  8300     
                +1  8301     ;       Stack offset values
                +1  8302     ;ltemp   equ     28h
                +1  8303     
  0006          +1  8304     cntr    equ     6               ;r6 is the counter
  0007          +1  8305     sign    equ     7               ;signs in r7 - left sign in bit 7, right in 6
  0000          +1  8306     exp1    equ     0               ;exponent 1 in r0
  0002          +1  8307     mant1   equ     2               ;mantissa 1 in r2-5
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   129

  0001          +1  8308     exp2    equ     1               ;exponent 1 in r1
  0008          +1  8309     mant2   equ     ltemp           ;mantissa 2 in ltemp
  000C          +1  8310     prod    equ     ltemp+4         ;product/quotient in ltemp+4 (r4'-r7')
                +1  8311     
                +1  8312     
                +1  8313     
                +1  8314     
                +1  8315     
                +1  8316     ;DECSIZE        EQU      10
                +1  8317     ;NUMSIZE        EQU      4
                +1  8318     ;RR4            EQU      4
                +1  8319     ;RR5            EQU      5
                +1  8320     
                +1  8321     ;       unpack1 - unpacks the left operand
                +1  8322     
009E            +1  8323     unpack1:
009E EA         +1  8324             mov     a,r2            ;get sign
009F 5480       +1  8325             anl     a,#80h
00A1 530740     +1  8326             anl     sign,#40h       ;clear other bits
00A4 4207       +1  8327             orl     sign,a          ;store sign
00A6 EB         +1  8328             mov     a,r3            ;get lsb of exponent
00A7 33         +1  8329             rlc     a               ;rotate into carry
00A8 EA         +1  8330             mov     a,r2            ;get rest of exponent
00A9 33         +1  8331             rlc     a               ;and make it 8 bits
00AA F8         +1  8332             mov     r0,a            ;store it
00AB 6006       +1  8333             jz      zer1            ;if zero, the whole thing is zero
00AD 430380     +1  8334             orl     mant1+1,#80h    ;set hidden bit
00B0 7A00       +1  8335             mov     r2,#0           ;clear upper byte of mantissa
00B2 22         +1  8336             ret
00B3            +1  8337     zer1:
00B3 E4         +1  8338             clr     a
00B4 FA         +1  8339             mov     r2,a
00B5 FB         +1  8340             mov     r3,a
00B6 FC         +1  8341             mov     r4,a
00B7 FD         +1  8342             mov     r5,a            ;zero mantissa
00B8 F8         +1  8343             mov     r0,a            ;zero exponent
00B9 22         +1  8344             ret
                +1  8345     
                +1  8346     ;       unpack2 - unpacks right operand
                +1  8347     
00BA            +1  8348     unpack2:
00BA E508       +1  8349             mov     a,ltemp         ;get sign
00BC 13         +1  8350             rrc     a               ;shift down
00BD 5440       +1  8351             anl     a,#40h          ;mask out sign
00BF 530780     +1  8352             anl     sign,#80h       ;clear old bit
00C2 4207       +1  8353             orl     sign,a
00C4 E509       +1  8354             mov     a,ltemp+1       ;get lsb of exponent
00C6 33         +1  8355             rlc     a               ;rotate into carry
00C7 E508       +1  8356             mov     a,ltemp         ;get rest of exponent
00C9 33         +1  8357             rlc     a               ;and make it 8 bits
00CA F9         +1  8358             mov     r1,a            ;store it
00CB 6007       +1  8359             jz      zer2            ;if zero, the whole thing is zero
00CD 430980     +1  8360             orl     mant2+1,#80h    ;set hidden bit
00D0 750800     +1  8361             mov     mant2,#0        ;clear upper byte
00D3 22         +1  8362             ret
00D4            +1  8363     zer2:
00D4 E4         +1  8364             clr     a
00D5 F508       +1  8365             mov     ltemp,a
00D7 F509       +1  8366             mov     ltemp+1,a
00D9 F50A       +1  8367             mov     ltemp+2,a
00DB F50B       +1  8368             mov     ltemp+3,a               ;zero mantissa
00DD 22         +1  8369             ret
                +1  8370     
                +1  8371     ;       pack1 - put operand 1 back into float format
                +1  8372     
00DE            +1  8373     pack1:
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   130

00DE E8         +1  8374             mov     a,r0            ;get exponent
00DF C3         +1  8375             clr     c
00E0 13         +1  8376             rrc     a               ;shift down 1 bit
00E1 530780     +1  8377             anl     sign,#80h       ;mask sign bit
00E4 4F         +1  8378             orl     a,r7            ;or in sign bit
00E5 FA         +1  8379             mov     r2,a            ;store
00E6 E8         +1  8380             mov     a,r0            ;get other bit
00E7 03         +1  8381             rr      a               ;rotate into hi bit
00E8 5480       +1  8382             anl     a,#80h          ;mask
00EA 53037F     +1  8383             anl     mant1+1,#7Fh    ;clear hidden bit
00ED 4203       +1  8384             orl     mant1+1,a       ;put in
00EF 22         +1  8385             ret
                +1  8386     
                +1  8387     
                +1  8388     ;       norm1 - normalize the unpacked value in 1
                +1  8389     
00F0            +1  8390     norm1:
00F0 E8         +1  8391             mov     a,r0            ;get exponent
00F1 60C0       +1  8392             jz      zer1            ;zero the mantissa if so
00F3 EA         +1  8393             mov     a,r2            ;get hi byte
00F4 6023       +1  8394             jz      norup           ;zero, so shift up if anything
00F6            +1  8395     nordn:
00F6 EA         +1  8396             mov     a,r2            ;get hi byte
00F7 B4010D     +1  8397             cjne    a,#1,nordn1     ;if not about to do last shift, skip
                +1  8398+3           add1                    ;add in a rounding bit
00FA ED         +1  8399+1           mov     a,r5
00FB 2401       +1  8400+1           add     a,#1
00FD FD         +1  8401+1           mov     r5,a
00FE E4         +1  8402+1           clr     a
00FF 3C         +1  8403+1           addc    a,r4
0100 FC         +1  8404+1           mov     r4,a
0101 E4         +1  8405+1           clr     a
0102 3B         +1  8406+1           addc    a,r3
0103 FB         +1  8407+1           mov     r3,a
0104 E4         +1  8408+1           clr     a
0105 3A         +1  8409+1           addc    a,r2
0106 FA         +1  8410+1           mov     r2,a
0107            +1  8411     nordn1:
                +1  8412+3           rshift                  ;shift down 1 bit
0107 C3         +1  8413+1           clr     c
0108 EA         +1  8414+1           mov     a,r2
0109 13         +1  8415+1           rrc     a
010A FA         +1  8416+1           mov     r2,a
010B EB         +1  8417+1           mov     a,r3
010C 13         +1  8418+1           rrc     a
010D FB         +1  8419+1           mov     r3,a
010E EC         +1  8420+1           mov     a,r4
010F 13         +1  8421+1           rrc     a
0110 FC         +1  8422+1           mov     r4,a
0111 ED         +1  8423+1           mov     a,r5
0112 13         +1  8424+1           rrc     a
0113 FD         +1  8425+1           mov     r5,a
0114 08         +1  8426             inc     r0              ;adjust exponent
0115 EA         +1  8427             mov     a,r2            ;test high byte
0116 70DE       +1  8428             jnz     nordn           ;loop
0118 22         +1  8429             ret                     ;done
                +1  8430     
0119            +1  8431     norup:
0119 4B         +1  8432             orl     a,r3
011A 4C         +1  8433             orl     a,r4
011B 4D         +1  8434             orl     a,r5            ;test for zero mantissa
011C 6095       +1  8435             jz      zer1            ;it is - make it true zero
011E            +1  8436     norup1:
011E EB         +1  8437             mov     a,r3            ;get mantissa byte
011F 20E710     +1  8438             jb      acc.7,norup2    ;jump if set
0122 C3         +1  8439             clr     c
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   131

                +1  8440+3           lshift                  ;shift mantissa up
0123 ED         +1  8441+1           mov     a,r5
0124 33         +1  8442+1           rlc     a
0125 FD         +1  8443+1           mov     r5,a
0126 EC         +1  8444+1           mov     a,r4
0127 33         +1  8445+1           rlc     a
0128 FC         +1  8446+1           mov     r4,a
0129 EB         +1  8447+1           mov     a,r3
012A 33         +1  8448+1           rlc     a
012B FB         +1  8449+1           mov     r3,a
012C EA         +1  8450+1           mov     a,r2
012D 33         +1  8451+1           rlc     a
012E FA         +1  8452+1           mov     r2,a
012F 18         +1  8453             dec     r0              ;adjust exponent
0130 80EC       +1  8454             jmp     norup1
0132            +1  8455     norup2:
0132 22         +1  8456             ret                     ;finito
                +1  8457     
                +1  8458     
                +1  8459     ;       fpdenorm - denormalize one of the two operands so that their
                +1  8460     ;       exponents are equal. This requires the smaller number to have
                +1  8461     ;       its exponent incremented and its mantissa shifted right.
                +1  8462     
0133            +1  8463     denorm:
0133 E8         +1  8464             mov     a,r0
0134 C3         +1  8465             clr     c
0135 99         +1  8466             subb    a,r1            ;compare exponents
0136 5029       +1  8467             jnc     up2a            ;shift operand 2
0138            +1  8468     up1:
0138 08         +1  8469             inc     r0              ;increment exponent
                +1  8470+3           rshift                  ;shift mantissa down
0139 C3         +1  8471+1           clr     c
013A EA         +1  8472+1           mov     a,r2
013B 13         +1  8473+1           rrc     a
013C FA         +1  8474+1           mov     r2,a
013D EB         +1  8475+1           mov     a,r3
013E 13         +1  8476+1           rrc     a
013F FB         +1  8477+1           mov     r3,a
0140 EC         +1  8478+1           mov     a,r4
0141 13         +1  8479+1           rrc     a
0142 FC         +1  8480+1           mov     r4,a
0143 ED         +1  8481+1           mov     a,r5
0144 13         +1  8482+1           rrc     a
0145 FD         +1  8483+1           mov     r5,a
0146 E8         +1  8484             mov     a,r0
0147 B501EE     +1  8485             cjne    a,exp2,up1      ;loop if still not equal
014A 22         +1  8486             ret
                +1  8487     
014B            +1  8488     up2:
014B 09         +1  8489             inc     r1              ;increment exponent 2
                +1  8490+3           shfdn   mant2           ;shift mantissa down
014C C3         +1  8491+1           clr     c
014D E508       +1  8492+1           mov     a,mant2
014F 13         +1  8493+1           rrc     a
0150 F508       +1  8494+1           mov     mant2,a
0152 E509       +1  8495+1           mov     a,mant2+1
0154 13         +1  8496+1           rrc     a
0155 F509       +1  8497+1           mov     mant2+1,a
0157 E50A       +1  8498+1           mov     a,mant2+2
0159 13         +1  8499+1           rrc     a
015A F50A       +1  8500+1           mov     mant2+2,a
015C E50B       +1  8501+1           mov     a,mant2+3
015E 13         +1  8502+1           rrc     a
015F F50B       +1  8503+1           mov     mant2+3,a
0161            +1  8504     up2a:
0161 E8         +1  8505             mov     a,r0            ;compare exponents
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   132

0162 B501E6     +1  8506             cjne    a,exp2,up2
0165 22         +1  8507             ret                     ;all done
                +1  8508     ;------------------------------------------------------------------
                +1  8509     ;       Add the number in op1 to the number in op2 and return the result in r2-r5
                +1  8510     
0166            +1  8511     fladd:
                +1  8512+3           saveregs
0166 C007       +1  8513+1           push    7
0168 C006       +1  8514+1           push    6
016A C001       +1  8515+1           push    1
016C C000       +1  8516+1           push    0
016E 119E       +1  8517             call    unpack1
0170 11BA       +1  8518             call    unpack2
0172 3133       +1  8519             call    denorm
0174 E507       +1  8520             mov     a,sign
0176 30E70D     +1  8521             jnb     acc.7,ok1       ;test left sign
                +1  8522+3           neg1                    ;negate op1
0179 C3         +1  8523+1           clr     c
017A E4         +1  8524+1           clr     a
017B 9D         +1  8525+1           subb    a,r5
017C FD         +1  8526+1           mov     r5,a
017D E4         +1  8527+1           clr     a
017E 9C         +1  8528+1           subb    a,r4
017F FC         +1  8529+1           mov     r4,a
0180 E4         +1  8530+1           clr     a
0181 9B         +1  8531+1           subb    a,r3
0182 FB         +1  8532+1           mov     r3,a
0183 E4         +1  8533+1           clr     a
0184 9A         +1  8534+1           subb    a,r2
0185 FA         +1  8535+1           mov     r2,a
0186            +1  8536     ok1:
0186 E507       +1  8537             mov     a,sign
0188 30E615     +1  8538             jnb     acc.6,ok2       ;test right sign
                +1  8539+3           negm    mant2           ;negate op2
018B C3         +1  8540+1           clr     c
018C E4         +1  8541+1           clr     a
018D 950B       +1  8542+1           subb    a,mant2+3
018F F50B       +1  8543+1           mov     mant2+3,a
0191 E4         +1  8544+1           clr     a
0192 950A       +1  8545+1           subb    a,mant2+2
0194 F50A       +1  8546+1           mov     mant2+2,a
0196 E4         +1  8547+1           clr     a
0197 9509       +1  8548+1           subb    a,mant2+1
0199 F509       +1  8549+1           mov     mant2+1,a
019B E4         +1  8550+1           clr     a
019C 9508       +1  8551+1           subb    a,mant2
019E F508       +1  8552+1           mov     mant2,a
01A0            +1  8553     ok2:
                +1  8554+3           addl    mant2           ;add mantissas
01A0 ED         +1  8555+1           mov     a,r5
01A1 250B       +1  8556+1           add     a,mant2+3
01A3 FD         +1  8557+1           mov     r5,a
01A4 E50A       +1  8558+1           mov     a,mant2+2
01A6 3C         +1  8559+1           addc    a,r4
01A7 FC         +1  8560+1           mov     r4,a
01A8 E509       +1  8561+1           mov     a,mant2+1
01AA 3B         +1  8562+1           addc    a,r3
01AB FB         +1  8563+1           mov     r3,a
01AC E508       +1  8564+1           mov     a,mant2+0
01AE 3A         +1  8565+1           addc    a,r2
01AF FA         +1  8566+1           mov     r2,a
01B0 E4         +1  8567             clr     a
01B1 FF         +1  8568             mov     r7,a            ;clear sign
01B2 EA         +1  8569             mov     a,r2            ;get sign of result
01B3 30E70E     +1  8570             jnb     acc.7,ok3       ;all ok
01B6 FF         +1  8571             mov     r7,a            ;store sign
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   133

                +1  8572+3           neg1                    ;negate mantissa
01B7 C3         +1  8573+1           clr     c
01B8 E4         +1  8574+1           clr     a
01B9 9D         +1  8575+1           subb    a,r5
01BA FD         +1  8576+1           mov     r5,a
01BB E4         +1  8577+1           clr     a
01BC 9C         +1  8578+1           subb    a,r4
01BD FC         +1  8579+1           mov     r4,a
01BE E4         +1  8580+1           clr     a
01BF 9B         +1  8581+1           subb    a,r3
01C0 FB         +1  8582+1           mov     r3,a
01C1 E4         +1  8583+1           clr     a
01C2 9A         +1  8584+1           subb    a,r2
01C3 FA         +1  8585+1           mov     r2,a
01C4            +1  8586     ok3:
01C4 11F0       +1  8587             call    norm1
01C6 11DE       +1  8588             call    pack1           ;pack normalized result
                +1  8589+3           restregs                ;and return
01C8 D000       +1  8590+1           pop     0
01CA D001       +1  8591+1           pop     1
01CC D006       +1  8592+1           pop     6
01CE D007       +1  8593+1           pop     7
01D0 22         +1  8594             ret
                +1  8595     ;-------------------------------------------------------------
                +1  8596     ;       Subtract the number ltemp from the number in r2-r5
                +1  8597     
01D1            +1  8598     flsub:
01D1 630880     +1  8599             xrl     ltemp,#80h      ;toggle sign bit
01D4 8090       +1  8600             jmp     fladd           ;and add!
                +1  8601     
                +1  8602     ;================================================================
                +1  8603     ;       Compare r2-r5 with the right operand and set flags accordingly
                +1  8604     
01D6            +1  8605     flcmp:
01D6 EA         +1  8606            mov     a,r2            ;get sign of left
01D7 6508       +1  8607            xrl     a,ltemp         ;calculate new sign
01D9 30E706     +1  8608            jnb     acc.7,cexp      ;same, go check exponent
                +1  8609     ;ifdef SMALL_MODEL
01DC EA         +1  8610             mov     a,r2            ;get sign of left again
01DD 33         +1  8611             rlc     a
01DE 5001       +1  8612             jnc     flout
                +1  8613     ;endif
01E0 D3         +1  8614             setb    c
01E1 22         +1  8615     flout:          ret                    ;return with acc < 0
                +1  8616     
01E2            +1  8617     cexp:
01E2 C3         +1  8618            clr     c
01E3 EA         +1  8619            mov     a,r2            ;compare exponent and mantissa
01E4 9508       +1  8620            subb    a,ltemp
01E6 7010       +1  8621            jnz     fnd
01E8 EB         +1  8622            mov     a,r3
01E9 9509       +1  8623            subb    a,ltemp+1
01EB 700B       +1  8624            jnz     fnd
01ED EC         +1  8625            mov     a,r4
01EE 950A       +1  8626            subb    a,ltemp+2
01F0 7006       +1  8627            jnz     fnd
01F2 ED         +1  8628            mov     a,r5
01F3 950B       +1  8629            subb    a,ltemp+3
01F5 7001       +1  8630            jnz     fnd
01F7            +1  8631     cdone:
01F7 22         +1  8632            ret                     ;return with acc == 0
01F8            +1  8633     fnd:
01F8 8AF0       +1  8634           mov     b,r2             ;get sign of left value
01FA 30F7FA     +1  8635          jnb     b.7,cdone       ;if positive, finished
01FD B2E7       +1  8636            cpl   acc.7             ;toggle sign???????/
01FF 4401       +1  8637                         orl         a,#1                          ;make non-zero
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   134

0201 B3         +1  8638             cpl     c               ;c=0->1,c=1->0
0202 22         +1  8639             ret
                +1  8640     ;==============================================================
                +1  8641     
                +1  8642     ;       Multiply the float in r2-r5 by the float in ltemp and return
                +1  8643     ;       the result in r2-r5
                +1  8644     
0203            +1  8645     flmul:
                +1  8646+3           saveregs
0203 C007       +1  8647+1           push    7
0205 C006       +1  8648+1           push    6
0207 C001       +1  8649+1           push    1
0209 C000       +1  8650+1           push    0
020B 119E       +1  8651             call    unpack1
020D 11BA       +1  8652             call    unpack2
020F E4         +1  8653             clr     a
0210 F50C       +1  8654             mov     prod,a
0212 F50D       +1  8655             mov     prod+1,a        ;clear product
0214 F50E       +1  8656             mov     prod+2,a
0216 F50F       +1  8657             mov     prod+3,a
0218 7E07       +1  8658             mov     r6,#7           ;initialize counter
021A            +1  8659     mup1:
                +1  8660+3           shfdn   mant2           ;shift multiplier right
021A C3         +1  8661+1           clr     c
021B E508       +1  8662+1           mov     a,mant2
021D 13         +1  8663+1           rrc     a
021E F508       +1  8664+1           mov     mant2,a
0220 E509       +1  8665+1           mov     a,mant2+1
0222 13         +1  8666+1           rrc     a
0223 F509       +1  8667+1           mov     mant2+1,a
0225 E50A       +1  8668+1           mov     a,mant2+2
0227 13         +1  8669+1           rrc     a
0228 F50A       +1  8670+1           mov     mant2+2,a
022A E50B       +1  8671+1           mov     a,mant2+3
022C 13         +1  8672+1           rrc     a
022D F50B       +1  8673+1           mov     mant2+3,a
022F 5014       +1  8674             jnc     nobit           ;skip if lsb was zero
                +1  8675+3           dan     prod            ;add multiplicand to product
0231 ED         +1  8676+1           mov     a,r5
0232 250F       +1  8677+1           add     a,prod+3
0234 F50F       +1  8678+1           mov     prod+3,a
0236 E50E       +1  8679+1           mov     a,prod+2
0238 3C         +1  8680+1           addc    a,r4
0239 F50E       +1  8681+1           mov     prod+2,a
023B E50D       +1  8682+1           mov     a,prod+1
023D 3B         +1  8683+1           addc    a,r3
023E F50D       +1  8684+1           mov     prod+1,a
0240 E50C       +1  8685+1           mov     a,prod+0
0242 3A         +1  8686+1           addc    a,r2
0243 F50C       +1  8687+1           mov     prod,a
0245            +1  8688     nobit:
                +1  8689+3           lshift                  ;shift multiplicand up
0245 ED         +1  8690+1           mov     a,r5
0246 33         +1  8691+1           rlc     a
0247 FD         +1  8692+1           mov     r5,a
0248 EC         +1  8693+1           mov     a,r4
0249 33         +1  8694+1           rlc     a
024A FC         +1  8695+1           mov     r4,a
024B EB         +1  8696+1           mov     a,r3
024C 33         +1  8697+1           rlc     a
024D FB         +1  8698+1           mov     r3,a
024E EA         +1  8699+1           mov     a,r2
024F 33         +1  8700+1           rlc     a
0250 FA         +1  8701+1           mov     r2,a
0251 DEC7       +1  8702             djnz    r6,mup1         ;loop if more
                +1  8703     
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   135

0253 7E11       +1  8704             mov     r6,#17          ;re-initalize counter
0255 8015       +1  8705             sjmp    mup3
0257            +1  8706     mup11:
                +1  8707+3           shfdn   prod            ;shift product right
0257 C3         +1  8708+1           clr     c
0258 E50C       +1  8709+1           mov     a,prod
025A 13         +1  8710+1           rrc     a
025B F50C       +1  8711+1           mov     prod,a
025D E50D       +1  8712+1           mov     a,prod+1
025F 13         +1  8713+1           rrc     a
0260 F50D       +1  8714+1           mov     prod+1,a
0262 E50E       +1  8715+1           mov     a,prod+2
0264 13         +1  8716+1           rrc     a
0265 F50E       +1  8717+1           mov     prod+2,a
0267 E50F       +1  8718+1           mov     a,prod+3
0269 13         +1  8719+1           rrc     a
026A F50F       +1  8720+1           mov     prod+3,a
026C            +1  8721     mup3:
                +1  8722+3           shfdn   mant2           ;shift multiplier down
026C C3         +1  8723+1           clr     c
026D E508       +1  8724+1           mov     a,mant2
026F 13         +1  8725+1           rrc     a
0270 F508       +1  8726+1           mov     mant2,a
0272 E509       +1  8727+1           mov     a,mant2+1
0274 13         +1  8728+1           rrc     a
0275 F509       +1  8729+1           mov     mant2+1,a
0277 E50A       +1  8730+1           mov     a,mant2+2
0279 13         +1  8731+1           rrc     a
027A F50A       +1  8732+1           mov     mant2+2,a
027C E50B       +1  8733+1           mov     a,mant2+3
027E 13         +1  8734+1           rrc     a
027F F50B       +1  8735+1           mov     mant2+3,a
0281 5014       +1  8736             jnc     mup2            ;skip if bit not set
                +1  8737+3           dan     prod            ;add to prod
0283 ED         +1  8738+1           mov     a,r5
0284 250F       +1  8739+1           add     a,prod+3
0286 F50F       +1  8740+1           mov     prod+3,a
0288 E50E       +1  8741+1           mov     a,prod+2
028A 3C         +1  8742+1           addc    a,r4
028B F50E       +1  8743+1           mov     prod+2,a
028D E50D       +1  8744+1           mov     a,prod+1
028F 3B         +1  8745+1           addc    a,r3
0290 F50D       +1  8746+1           mov     prod+1,a
0292 E50C       +1  8747+1           mov     a,prod+0
0294 3A         +1  8748+1           addc    a,r2
0295 F50C       +1  8749+1           mov     prod,a
0297            +1  8750     mup2:
0297 DEBE       +1  8751             djnz    r6,mup11        ;loop if more
0299 E8         +1  8752             mov     a,r0            ;get exp1
029A 29         +1  8753             add     a,r1            ;add exp2
029B 247A       +1  8754             add     a,#7ah;;;;;;;;;;;;;;;;;;;(-127-7) & 0FFh    ;adjust
029D F8         +1  8755             mov     r0,a            ;store
029E EF         +1  8756             mov     a,r7            ;get sign
029F 23         +1  8757             rl      a               ;rotate bit into msb
02A0 6207       +1  8758             xrl     sign,a          ;xor with other bit
                +1  8759+3           copytor prod            ;copy prod to mant1
02A2 AA0C       +1  8760+1           mov     r2,prod
02A4 AB0D       +1  8761+1           mov     r3,prod+1
02A6 AC0E       +1  8762+1           mov     r4,prod+2
02A8 AD0F       +1  8763+1           mov     r5,prod+3
02AA 11F0       +1  8764             call    norm1           ;normalize
02AC 11DE       +1  8765             call    pack1
                +1  8766+3           restregs
02AE D000       +1  8767+1           pop     0
02B0 D001       +1  8768+1           pop     1
02B2 D006       +1  8769+1           pop     6
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   136

02B4 D007       +1  8770+1           pop     7
02B6 22         +1  8771             ret
                +1  8772     ;-----------------------------------------------------------
                +1  8773     ;       Floating divide: divide the number in r2-r5 by ltemp
                +1  8774     
02B7            +1  8775     fldiv:
                +1  8776+3           saveregs
02B7 C007       +1  8777+1           push    7
02B9 C006       +1  8778+1           push    6
02BB C001       +1  8779+1           push    1
02BD C000       +1  8780+1           push    0
02BF 119E       +1  8781             call    unpack1
02C1 11BA       +1  8782             call    unpack2
02C3 E4         +1  8783             clr     a
02C4 F50C       +1  8784             mov     prod,a
02C6 F50D       +1  8785             mov     prod+1,a
02C8 F50E       +1  8786             mov     prod+2,a
02CA F50F       +1  8787             mov     prod+3,a
02CC E9         +1  8788             mov     a,r1            ;check for zero divisor
02CD 6067       +1  8789             jz      div9
02CF E8         +1  8790             mov     a,r0            ;check for zero dividend
02D0 6064       +1  8791             jz      div9
02D2 C3         +1  8792             clr     c
02D3 99         +1  8793             subb    a,r1            ;compute new exponent
02D4 2478       +1  8794             add     a,#127-7        ;unbias
02D6 F8         +1  8795             mov     r0,a            ;store back
02D7 EF         +1  8796             mov     a,r7            ;get sign
02D8 23         +1  8797             rl      a
02D9 6207       +1  8798             xrl     sign,a          ;compute new sign
02DB 7E1F       +1  8799             mov     r6,#24+7        ;initialize counter
02DD            +1  8800     div1:
                +1  8801+3           shfup   prod            ;shift quotient up
02DD C3         +1  8802+1           clr     c
02DE E50F       +1  8803+1           mov     a,prod+3
02E0 33         +1  8804+1           rlc     a
02E1 F50F       +1  8805+1           mov     prod+3,a
02E3 E50E       +1  8806+1           mov     a,prod+2
02E5 33         +1  8807+1           rlc     a
02E6 F50E       +1  8808+1           mov     prod+2,a
02E8 E50D       +1  8809+1           mov     a,prod+1
02EA 33         +1  8810+1           rlc     a
02EB F50D       +1  8811+1           mov     prod+1,a
02ED E50C       +1  8812+1           mov     a,prod
02EF 33         +1  8813+1           rlc     a
02F0 F50C       +1  8814+1           mov     prod,a
02F2 C3         +1  8815             clr     c
02F3 EA         +1  8816             mov     a,r2            ;compare values
02F4 9508       +1  8817             subb    a,mant2
02F6 4028       +1  8818             jc      div2            ;skip if bigger
02F8 7013       +1  8819             jnz     div3
02FA EB         +1  8820             mov     a,r3            ;compare values
02FB 9509       +1  8821             subb    a,mant2+1
02FD 4021       +1  8822             jc      div2            ;skip if bigger
02FF 700C       +1  8823             jnz     div3
0301 EC         +1  8824             mov     a,r4            ;compare values
0302 950A       +1  8825             subb    a,mant2+2
0304 401A       +1  8826             jc      div2            ;skip if bigger
0306 7005       +1  8827             jnz     div3
0308 ED         +1  8828             mov     a,r5            ;compare values
0309 950B       +1  8829             subb    a,mant2+3
030B 4013       +1  8830             jc      div2            ;skip if bigger
030D            +1  8831     div3:
030D ED         +1  8832             mov     a,r5
030E 950B       +1  8833             subb    a,mant2+3
0310 FD         +1  8834             mov     r5,a
0311 EC         +1  8835             mov     a,r4
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   137

0312 950A       +1  8836             subb    a,mant2+2               ;do subtraction
0314 FC         +1  8837             mov     r4,a
0315 EB         +1  8838             mov     a,r3
0316 9509       +1  8839             subb    a,mant2+1               ;do subtraction
0318 FB         +1  8840             mov     r3,a
0319 EA         +1  8841             mov     a,r2
031A 9508       +1  8842             subb    a,mant2         ;do subtraction
031C FA         +1  8843             mov     r2,a
031D 430F01     +1  8844             orl     prod+3,#1       ;set lsb in quotient
0320            +1  8845     div2:
                +1  8846+3           lshift                  ;shift dividend up
0320 ED         +1  8847+1           mov     a,r5
0321 33         +1  8848+1           rlc     a
0322 FD         +1  8849+1           mov     r5,a
0323 EC         +1  8850+1           mov     a,r4
0324 33         +1  8851+1           rlc     a
0325 FC         +1  8852+1           mov     r4,a
0326 EB         +1  8853+1           mov     a,r3
0327 33         +1  8854+1           rlc     a
0328 FB         +1  8855+1           mov     r3,a
0329 EA         +1  8856+1           mov     a,r2
032A 33         +1  8857+1           rlc     a
032B FA         +1  8858+1           mov     r2,a
032C DEAF       +1  8859             djnz    r6,div1         ;loop if more
                +1  8860+3           copytor prod            ;copy quotient
032E AA0C       +1  8861+1           mov     r2,prod
0330 AB0D       +1  8862+1           mov     r3,prod+1
0332 AC0E       +1  8863+1           mov     r4,prod+2
0334 AD0F       +1  8864+1           mov     r5,prod+3
0336            +1  8865     div9:
0336 11F0       +1  8866             call    norm1           ;now normalize result
0338 11DE       +1  8867             call    pack1           ;pack it up
                +1  8868+3           restregs                ;restore registers
033A D000       +1  8869+1           pop     0
033C D001       +1  8870+1           pop     1
033E D006       +1  8871+1           pop     6
0340 D007       +1  8872+1           pop     7
0342 22         +1  8873             ret
                +1  8874     ;------------------------------------------------------------------
                +1  8875     
                +1  8876     ;       Float to long conversion: if the exponent is less than the
                +1  8877     ;       excess value, the result is zero. If the exponent is so large
                +1  8878     ;       that the value would be shifted out, the result is overflow.
                +1  8879     ;       Otherwise shift the mantissa up or down as required.
                +1  8880     
0343            +1  8881     ftol:
                +1  8882+3           saveregs
0343 C007       +1  8883+1           push    7
0345 C006       +1  8884+1           push    6
0347 C001       +1  8885+1           push    1
0349 C000       +1  8886+1           push    0
034B EA         +1  8887             mov     a,r2
034C B4BF09     +1  8888             cjne    a,#0bfh,ne05
034F EB         +1  8889             mov     a,r3
0350 7006       +1  8890             jnz     ne05
0352 EC         +1  8891             mov     a,r4
0353 7003       +1  8892             jnz     ne05
0355 ED         +1  8893             mov     a,r5
0356 6024       +1  8894             jz      ftol1
0358 119E       +1  8895     ne05:   call    unpack1
035A E8         +1  8896             mov     a,r0            ;get exponent
035B 2482       +1  8897             add     a,#-(127-1)     ;unbias
035D 20E71C     +1  8898             jb      acc.7,ftol1     ;jump if < 0
0360 EF         +1  8899             mov     a,r7            ;get sign
0361 30E70D     +1  8900             jnb     acc.7,ftol4     ;skip if +ve
                +1  8901+3           neg1                    ;negate it
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   138

0364 C3         +1  8902+1           clr     c
0365 E4         +1  8903+1           clr     a
0366 9D         +1  8904+1           subb    a,r5
0367 FD         +1  8905+1           mov     r5,a
0368 E4         +1  8906+1           clr     a
0369 9C         +1  8907+1           subb    a,r4
036A FC         +1  8908+1           mov     r4,a
036B E4         +1  8909+1           clr     a
036C 9B         +1  8910+1           subb    a,r3
036D FB         +1  8911+1           mov     r3,a
036E E4         +1  8912+1           clr     a
036F 9A         +1  8913+1           subb    a,r2
0370 FA         +1  8914+1           mov     r2,a
0371            +1  8915     ftol4:
0371 E8         +1  8916             mov     a,r0            ;get exponent
0372 246A       +1  8917             add     a,#6ah;;;;;;;;(-(127-1+23+1)) & 0FFh
0374 20E727     +1  8918             jb      acc.7,ftol2     ;shift has to be right
0377 F8         +1  8919             mov     r0,a            ;save it
0378 24F8       +1  8920             add     a,#-8           ;if > 8, too big
037A 500E       +1  8921             jnc     ftol3
037C            +1  8922     ftol1:
037C E4         +1  8923             clr     a
037D FA         +1  8924             mov     r2,a
037E FB         +1  8925             mov     r3,a
037F FC         +1  8926             mov     r4,a
0380 FD         +1  8927             mov     r5,a
0381            +1  8928     ftol9:
                +1  8929+3           restregs
0381 D000       +1  8930+1           pop     0
0383 D001       +1  8931+1           pop     1
0385 D006       +1  8932+1           pop     6
0387 D007       +1  8933+1           pop     7
0389 22         +1  8934             ret
038A            +1  8935     ftol3:
038A E8         +1  8936             mov     a,r0
038B FE         +1  8937             mov     r6,a            ;store in counter
038C 60F3       +1  8938             jz      ftol9           ;if zero, do nothing
038E            +1  8939     ftol33:
                +1  8940+3           lshift                  ;shift up
038E ED         +1  8941+1           mov     a,r5
038F 33         +1  8942+1           rlc     a
0390 FD         +1  8943+1           mov     r5,a
0391 EC         +1  8944+1           mov     a,r4
0392 33         +1  8945+1           rlc     a
0393 FC         +1  8946+1           mov     r4,a
0394 EB         +1  8947+1           mov     a,r3
0395 33         +1  8948+1           rlc     a
0396 FB         +1  8949+1           mov     r3,a
0397 EA         +1  8950+1           mov     a,r2
0398 33         +1  8951+1           rlc     a
0399 FA         +1  8952+1           mov     r2,a
039A DEF2       +1  8953             djnz    r6,ftol33       ;and loop
039C 80E3       +1  8954             sjmp    ftol9
039E            +1  8955     ftol2:
039E F4         +1  8956             cpl     a               ;complement
039F FE         +1  8957             mov     r6,a
03A0 6022       +1  8958             jz      ftol22
03A2            +1  8959     ftol23:
03A2 EF         +1  8960             mov     a,r7
03A3 30E70F     +1  8961             jnb     acc.7,ftol24
                +1  8962+3           rshift1
03A6 D3         +1  8963+1           setb    c
03A7 EA         +1  8964+1           mov     a,r2
03A8 13         +1  8965+1           rrc     a
03A9 FA         +1  8966+1           mov     r2,a
03AA EB         +1  8967+1           mov     a,r3
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   139

03AB 13         +1  8968+1           rrc     a
03AC FB         +1  8969+1           mov     r3,a
03AD EC         +1  8970+1           mov     a,r4
03AE 13         +1  8971+1           rrc     a
03AF FC         +1  8972+1           mov     r4,a
03B0 ED         +1  8973+1           mov     a,r5
03B1 13         +1  8974+1           rrc     a
03B2 FD         +1  8975+1           mov     r5,a
03B3 800D       +1  8976             jmp     ftol25
03B5            +1  8977+3   ftol24: rshift                  ;shift down
03B5 C3         +1  8978+1           clr     c
03B6 EA         +1  8979+1           mov     a,r2
03B7 13         +1  8980+1           rrc     a
03B8 FA         +1  8981+1           mov     r2,a
03B9 EB         +1  8982+1           mov     a,r3
03BA 13         +1  8983+1           rrc     a
03BB FB         +1  8984+1           mov     r3,a
03BC EC         +1  8985+1           mov     a,r4
03BD 13         +1  8986+1           rrc     a
03BE FC         +1  8987+1           mov     r4,a
03BF ED         +1  8988+1           mov     a,r5
03C0 13         +1  8989+1           rrc     a
03C1 FD         +1  8990+1           mov     r5,a
03C2 DEDE       +1  8991     ftol25: djnz    r6,ftol23
03C4            +1  8992     ftol22:
                +1  8993+3           add1                    ;round
03C4 ED         +1  8994+1           mov     a,r5
03C5 2401       +1  8995+1           add     a,#1
03C7 FD         +1  8996+1           mov     r5,a
03C8 E4         +1  8997+1           clr     a
03C9 3C         +1  8998+1           addc    a,r4
03CA FC         +1  8999+1           mov     r4,a
03CB E4         +1  9000+1           clr     a
03CC 3B         +1  9001+1           addc    a,r3
03CD FB         +1  9002+1           mov     r3,a
03CE E4         +1  9003+1           clr     a
03CF 3A         +1  9004+1           addc    a,r2
03D0 FA         +1  9005+1           mov     r2,a
03D1 EF         +1  9006             mov     a,r7
03D2 30E70F     +1  9007             jnb     acc.7,ftol26
                +1  9008+3           rshift1
03D5 D3         +1  9009+1           setb    c
03D6 EA         +1  9010+1           mov     a,r2
03D7 13         +1  9011+1           rrc     a
03D8 FA         +1  9012+1           mov     r2,a
03D9 EB         +1  9013+1           mov     a,r3
03DA 13         +1  9014+1           rrc     a
03DB FB         +1  9015+1           mov     r3,a
03DC EC         +1  9016+1           mov     a,r4
03DD 13         +1  9017+1           rrc     a
03DE FC         +1  9018+1           mov     r4,a
03DF ED         +1  9019+1           mov     a,r5
03E0 13         +1  9020+1           rrc     a
03E1 FD         +1  9021+1           mov     r5,a
03E2 809D       +1  9022             jmp     ftol9
03E4            +1  9023+3   ftol26: rshift
03E4 C3         +1  9024+1           clr     c
03E5 EA         +1  9025+1           mov     a,r2
03E6 13         +1  9026+1           rrc     a
03E7 FA         +1  9027+1           mov     r2,a
03E8 EB         +1  9028+1           mov     a,r3
03E9 13         +1  9029+1           rrc     a
03EA FB         +1  9030+1           mov     r3,a
03EB EC         +1  9031+1           mov     a,r4
03EC 13         +1  9032+1           rrc     a
03ED FC         +1  9033+1           mov     r4,a
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   140

03EE ED         +1  9034+1           mov     a,r5
03EF 13         +1  9035+1           rrc     a
03F0 FD         +1  9036+1           mov     r5,a
03F1 808E       +1  9037             jmp     ftol9
                +1  9038     
                +1  9039     ;       arithmetic integer to floating conversions
                +1  9040     
03F3            +1  9041     abtof:
03F3 ED         +1  9042             mov     a,r5
03F4 23         +1  9043             rl      a
03F5 FC         +1  9044             mov     r4,a
03F6 9C         +1  9045             subb    a,r4
03F7 FC         +1  9046             mov     r4,a
03F8 FB         +1  9047             mov     r3,a
03F9 FA         +1  9048             mov     r2,a
03FA 8006       +1  9049             jmp     altof
03FC            +1  9050     awtof:
03FC EC         +1  9051             mov     a,r4
03FD 23         +1  9052             rl      a
03FE FB         +1  9053             mov     r3,a
03FF 9B         +1  9054             subb    a,r3
0400 FB         +1  9055             mov     r3,a
0401 FA         +1  9056             mov     r2,a
0402            +1  9057     altof:
                +1  9058+3           saveregs
0402 C007       +1  9059+1           push    7
0404 C006       +1  9060+1           push    6
0406 C001       +1  9061+1           push    1
0408 C000       +1  9062+1           push    0
040A EA         +1  9063             mov     a,r2            ;get sign
040B 5480       +1  9064             anl     a,#80h
040D FF         +1  9065             mov     r7,a            ;store it
040E 30E70D     +1  9066             jnb     acc.7,altof1    ;skip if +ve
                +1  9067+3           neg1
0411 C3         +1  9068+1           clr     c
0412 E4         +1  9069+1           clr     a
0413 9D         +1  9070+1           subb    a,r5
0414 FD         +1  9071+1           mov     r5,a
0415 E4         +1  9072+1           clr     a
0416 9C         +1  9073+1           subb    a,r4
0417 FC         +1  9074+1           mov     r4,a
0418 E4         +1  9075+1           clr     a
0419 9B         +1  9076+1           subb    a,r3
041A FB         +1  9077+1           mov     r3,a
041B E4         +1  9078+1           clr     a
041C 9A         +1  9079+1           subb    a,r2
041D FA         +1  9080+1           mov     r2,a
041E            +1  9081     altof1:
041E 7896       +1  9082             mov     r0,#127+23      ;initialize exponent
0420 11F0       +1  9083             call    norm1           ;normalize it
0422 11DE       +1  9084             call    pack1           ;and pack up
                +1  9085+3           restregs
0424 D000       +1  9086+1           pop     0
0426 D001       +1  9087+1           pop     1
0428 D006       +1  9088+1           pop     6
042A D007       +1  9089+1           pop     7
042C 22         +1  9090             ret
                +1  9091     
042D            +1  9092     lbtof:
042D 7C00       +1  9093             mov     r4,#0
042F            +1  9094     lwtof:
042F E4         +1  9095             clr     a
0430 FB         +1  9096             mov     r3,a
0431 FA         +1  9097             mov     r2,a
0432            +1  9098     lltof:
                +1  9099+3           saveregs
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   141

0432 C007       +1  9100+1           push    7
0434 C006       +1  9101+1           push    6
0436 C001       +1  9102+1           push    1
0438 C000       +1  9103+1           push    0
043A 7F00       +1  9104             mov     r7,#0           ;zero sign
043C 80E0       +1  9105             sjmp    altof1
                +1  9106     
                +1  9107     ;-------------------------------------------------------
                +1  9108     
                +1  9109     
                    9110     
                    9111     ;$include (wriread.asm)
                +1  9112     ;dptr-адрес ячейки страницы памяти
043E 75A800     +1  9113     cle256:         mov             IE,#00H
0441 75B601     +1  9114                             mov             FLSCL,#01                       ;стирание страницы 
                             байт(запись в ячейки ff)
0444 758F03     +1  9115                             MOV             PSCTL,#03
                +1  9116                                             
0447 7400       +1  9117                             mov             a,#00h  ;запись любого значения стирает страницу
0449 F0         +1  9118                             movx    @dptr,a                         ;wr
044A 758F00     +1  9119                             mov             PSCTL,#00
044D 75B600     +1  9120                             mov             FLSCL,#00
0450 75A880     +1  9121                             mov             IE,#80H
0453 22         +1  9122                             ret
                +1  9123     
                +1  9124     ;чтение памяти программ в r8..r11
                +1  9125     ;вх-r2,r3-адр яч памяти прогр
0454 8A83       +1  9126     re4byte: mov            dph,r2
0456 8B82       +1  9127                     mov                     dpl,r3
0458 E4         +1  9128                     clr                     a
0459 93         +1  9129                     movc            a,@a+dptr
045A F508       +1  9130                     mov                     r8,a
045C A3         +1  9131                     inc                     dptr
045D E4         +1  9132                     clr                     a
045E 93         +1  9133                     movc            a,@a+dptr
045F F509       +1  9134                     mov                     r9,a
0461 A3         +1  9135                     inc                     dptr
0462 E4         +1  9136                     clr                     a
0463 93         +1  9137                     movc            a,@a+dptr
0464 F50A       +1  9138                     mov                     r10,a
0466 A3         +1  9139                     inc                     dptr
0467 E4         +1  9140                     clr                     a
0468 93         +1  9141                     movc            a,@a+dptr
0469 F50B       +1  9142                     mov                     r11,a                                           ;r8
                             ..r11
046B 22         +1  9143                     ret
                +1  9144      ;чтение памяти программ в r2..r5
                +1  9145     ;вх-r2,r3-адр яч памяти прогр
046C 8A83       +1  9146     rebyte2: mov            dph,r2
046E 8B82       +1  9147                     mov                     dpl,r3
0470 E4         +1  9148                     clr                     a
0471 93         +1  9149                     movc            a,@a+dptr
0472 FA         +1  9150                     mov                     r2,a
0473 A3         +1  9151                     inc                     dptr
0474 E4         +1  9152                     clr                     a
0475 93         +1  9153                     movc            a,@a+dptr
0476 FB         +1  9154                     mov                     r3,a
0477 A3         +1  9155                     inc                     dptr
0478 E4         +1  9156                     clr                     a
0479 93         +1  9157                     movc            a,@a+dptr
047A FC         +1  9158                     mov                     r4,a
047B A3         +1  9159                     inc                     dptr
047C E4         +1  9160                     clr                     a
047D 93         +1  9161                     movc            a,@a+dptr
047E FD         +1  9162                     mov                     r5,a                                            ;r8
                             ..r11
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   142

047F 22         +1  9163                     ret
                +1  9164      
                +1  9165     ;r7-количество байт
                +1  9166     ;dptr-адр ячейки для записи
                +1  9167     ;r1-адр ячейки  внешнего озу
                +1  9168     
0480 75A800     +1  9169     wrpage: mov             IE,#00H
0483 75B601     +1  9170     WW5:    mov             FLSCL,#01               ;обязательно для каждого записи байта
0486 758F01     +1  9171                     mov             PSCTL,#01               ;обязательно для каждого записи бай
                             та
0489 E3         +1  9172                     movx            a,@r1
048A F0         +1  9173                     movx            @dptr,a                         ;wr
048B 758F00     +1  9174                     mov             PSCTL,#0
048E 75B600     +1  9175                     mov             FLSCL,#00
0491 A3         +1  9176                     inc                     dptr
0492 09         +1  9177                     inc                     r1
0493 DFEE       +1  9178                     djnz            r7,WW5
0495 75A880     +1  9179                     mov             IE,#80H
0498 22         +1  9180                     ret
                +1  9181                             
                +1  9182     
                +1  9183     
                +1  9184     ;чтение памяти программ во внешнее озу
                +1  9185     ;вх-r2,r3-адр яч памяти прогр
                +1  9186     ;r1- яч внешнее озу
0499 8A83       +1  9187     copyPP:         mov                     dph,r2
049B 8B82       +1  9188                             mov                     dpl,r3
049D 7FFF       +1  9189                             mov                     r7,#0ffh
049F E4         +1  9190     copy1:          clr                     a
04A0 93         +1  9191                             movc            a,@a+dptr
04A1 F3         +1  9192                             movx                    @r1,a
04A2 A3         +1  9193                             inc                     dptr
04A3 09         +1  9194                             inc                     r1
04A4 DFF9       +1  9195                             djnz            r7,copy1
04A6 22         +1  9196                             ret
                +1  9197     
                +1  9198     ;r8..r11->@r0..@r0+3
                +1  9199     ;r0-адр ячейки
                +1  9200     ;сохранить в ячейке озу
04A7 E508       +1  9201     savelte:        mov     a,ltemp
04A9 F6         +1  9202                     mov     @r0,a
04AA 08         +1  9203                     inc     r0
04AB E509       +1  9204                     mov     a,ltemp+1
04AD F6         +1  9205                     mov     @r0,a
04AE 08         +1  9206                     inc     r0
04AF E50A       +1  9207                     mov     a,ltemp+2
04B1 F6         +1  9208                     mov     @r0,a
04B2 08         +1  9209                     inc     r0
04B3 E50B       +1  9210                     mov     a,ltemp+3
04B5 F6         +1  9211                     mov     @r0,a
04B6 22         +1  9212                     ret
                +1  9213     
                +1  9214     
                +1  9215      
                    9216     
                    9217     
                    9218     ;$include (d:\amper\subr7.asm)  
                    9219     ;$include (d:\amper\sarifm3.asm)                                        
                    9220     ;$include (d:\amper\floatm.asm)
                    9221     ;$include (d:\amper\wriread.asm)
                    9222                                                   
                    9223     END
                                                                             
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   143

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES / REFERENCES

AA . . . . . . . .  B ADDR   00C0H.2 A      195#
AAPAR. . . . . . .  C ADDR   03C6H   R   SEG=MAIN   924#
ABIN . . . . . . .  D ADDR   004FH   A      307# 1501 1594 1619 1640 1644 1647 1648 1650 1731 1734 1968 1971 3884
                                           3898 3978 3981 4024 4119 4158 4161 4239 4243 4244 4245 4248 4503 4541 4542
                                           4544 4621 4641 4730 4734 4777 4780 5140 5145 5327 5331 6706 6864 6867
ABRET. . . . . . .  C ADDR   2970H   R   SEG=MAIN   6640 6642#
ABTOF. . . . . . .  C ADDR   03F3H   A      9041#
AC . . . . . . . .  B ADDR   00D0H.6 A      211#
ACC. . . . . . . .  D ADDR   00E0H   A      116# 746 762 811 819 826 834 835 852 1173 1183 1186 1194 1269 1882 1891
                                           1900 1909 1930 2441 2479 2484 2488 2493 2496 2499 2502 2505 2702 2763 2807
                                           2818 2920 2929 2937 2946 3093 3150 3175 3180 3184 3187 3190 3197 3200 3203
                                           3538 3625 3665 3684 3702 3721 3768 4679 4685 4722 4811 5524 5576 6083 6123
                                           6232 7283 7451 7527 7530 7786 8438 8521 8538 8570 8608 8636 8898 8900 8918
                                           8961 9007 9066
AD0BUSY. . . . . .  B ADDR   00E8H.4 A      232#
AD0CM0 . . . . . .  B ADDR   00E8H.2 A      234#
AD0CM1 . . . . . .  B ADDR   00E8H.3 A      233#
AD0EN. . . . . . .  B ADDR   00E8H.7 A      229#
AD0INT . . . . . .  B ADDR   00E8H.5 A      231#
AD0LJST. . . . . .  B ADDR   00E8H.0 A      236#
AD0TM. . . . . . .  B ADDR   00E8H.6 A      230#
AD0WINT. . . . . .  B ADDR   00E8H.1 A      235#
ADC0CF . . . . . .  D ADDR   00BCH   A      82#
ADC0CN . . . . . .  D ADDR   00E8H   A      124# 229 230 231 232 233 234 235 236
ADC0GTH. . . . . .  D ADDR   00C5H   A      91#
ADC0GTL. . . . . .  D ADDR   00C4H   A      90#
ADC0H. . . . . . .  D ADDR   00BFH   A      85#
ADC0L. . . . . . .  D ADDR   00BEH   A      84#
ADC0LTH. . . . . .  D ADDR   00C7H   A      93#
ADC0LTL. . . . . .  D ADDR   00C6H   A      92#
ADC1 . . . . . . .  D ADDR   009CH   A      53#
ADC1CF . . . . . .  D ADDR   00ABH   A      67#
ADC1CN . . . . . .  D ADDR   00AAH   A      66#
ADDX . . . . . . .  C ADDR   3134H   R   SEG=MAIN   958 989 991 993 995 997 999 1001 1003 1005 1059 1061 1063 1065
                                           1067 1069 1071 1073 1075 1078 1080 1082 1084 1086 1088 1090 1092 1094 1096
                                           1114 1116 1118 8027#
ADEC . . . . . . .  D ADDR   0053H   A      308# 1593 1605 1609 1624 1649 1652 1653 1733 1737 1970 1974 3897 3901
                                           3975 3979 4021 4025 4116 4120 4160 4164 4247 4260 4513 4528 4530 4532 4543
                                           4546 4631 4642 4735 4781 5144 5148 5330 5333 6514 6533 6551 6612 6629 6866
                                           6869 7207 7237
ADRBLOK. . . . . .  C ADDR   2DE8H   R   SEG=MAIN   3606 3630 3994 4137 5035 5064 5190 5248 5353 5405 5929 5973 6070
                                           6084 7249#
AFTERK . . . . . .  C ADDR   06C3H   R   SEG=MAIN   1203 1278#
AFTER_2. . . . . .  C ADDR   01D5H   R   SEG=MAIN   623# 2064
AGE2 . . . . . . .  C ADDR   024BH   R   SEG=MAIN   686# 689
AGE9 . . . . . . .  C ADDR   08C5H   R   SEG=MAIN   1544# 1547
AGEON. . . . . . .  C ADDR   0259H   R   SEG=MAIN   695# 697
ALLSUM . . . . . .  C ADDR   0364H   R   SEG=MAIN   872# 906 921 937
ALMUL. . . . . . .  C ADDR   307BH   R   SEG=MAIN   7873#
ALTOF. . . . . . .  C ADDR   0402H   A      1167 1263 1292 1300 1318 1334 1345 1362 1374 1462 2158 2267 2344 2382
                                           4028 4125 4645 4738 4784 4876 4954 4962 4980 5103 5115 5130 5233 5294 5310
                                           5392 5447 5460 5790 9049 9057#
ALTOF1 . . . . . .  C ADDR   041EH   A      9066 9081# 9105
AMX0CF . . . . . .  D ADDR   00BAH   A      80#
AMX0SL . . . . . .  D ADDR   00BBH   A      81#
AMX1SL . . . . . .  D ADDR   00ACH   A      68#
ANKOR. . . . . . .  C ADDR   0623H   R   SEG=MAIN   1165 1181#
ANLP1. . . . . . .  C ADDR   0AD8H   R   SEG=MAIN   1848 1854#
AN_T7. . . . . . .  C ADDR   1350H   R   SEG=MAIN   3204# 3275 3277 3285 3295
AUTOKA . . . . . .  C ADDR   0DA2H   R   SEG=MAIN   1201 2313#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   144

AVPGO. . . . . . .  C ADDR   07F4H   R   SEG=MAIN   1421 1423#
AVTDEC1. . . . . .  C ADDR   0685H   R   SEG=MAIN   1235 1244#
AWTOF. . . . . . .  C ADDR   03FCH   A      9050#
B. . . . . . . . .  D ADDR   00F0H   A      132# 6364 6726 7876 7879 7881 7885 7889 7893 7897 7902 7906 7913 7917
                                           7921 7927 7931 7935 7941 8634 8635
BEGIN. . . . . . .  C ADDR   0100H   R   SEG=MAIN   262 484#
BFORM. . . . . . .  C ADDR   2D25H   R   SEG=MAIN   7058 7063 7075# 7101
BIFL_KT. . . . . .  B ADDR   0021H.5 A      346# 4872 4928 5027
BIN30. . . . . . .  C ADDR   2E97H   R   SEG=MAIN   7440# 7464
BIN31. . . . . . .  C ADDR   2E9BH   R   SEG=MAIN   7444# 7448
BIN32. . . . . . .  C ADDR   2EABH   R   SEG=MAIN   7456# 7461
BIN41. . . . . . .  C ADDR   2EBCH   R   SEG=MAIN   7472# 7482
BINDEC . . . . . .  C ADDR   2E8BH   R   SEG=MAIN   1595 1651 1735 1972 3899 4162 4249 4545 5146 5332 6868 7419#
BITAKT . . . . . .  B ADDR   0023H.2 A      365# 1818 1819 1822
BITAVP . . . . . .  B ADDR   0020H.5 A      334# 1387 1658 1808 3273 3274 3276 5823 5825
BITBON . . . . . .  B ADDR   0021H.2 A      343# 1845 2104 2288 2313 2514 2515 2523 5947 5961 7284
BITEIZM. . . . . .  B ADDR   0022H.5 A      356# 1286 1756 1763 1826 1997 2006 2565 2609 3244 3260 4408 6286
BITIZM . . . . . .  B ADDR   0020H.4 A      333# 635 780 1663 2485 2567 2581 2660 2695 2726 3181 3247 3369 3390 3463
                                           3494 3519 3627 3738 3998 4046 4074 4231 4357 4409 4464 4577 4654 4766
BITKLB . . . . . .  B ADDR   0022H.2 A      353# 1355 1843 2490 3246 3264 3272 3279 3493 4652 4942
BITMAS . . . . . .  B ADDR   0020H.1 A      330# 1124 1126 7041
BITMEM . . . . . .  B ADDR   0021H.3 A      344# 1723 2914 3497 3515 3527 3626 3737 3999 4045 4230
BITMENU. . . . . .  B ADDR   0022H.1 A      352# 1722 2725 2834 3248 3518 4054 4073 4362 4410 4463 4576 4651
BITMIG . . . . . .  B ADDR   0023H.1 A      364# 2800 3003 3104 3431 3796 3935 3948 4482 4610 4714 4815 6789 6815
                                           6838 6850 6912 6919 6924 6930
BITNUL . . . . . .  B ADDR   0021H.7 A      348# 1435 1684 1790 2552 3293 3297 3298 3305 5638 5830 5847
BITOLL . . . . . .  B ADDR   0022H.7 A      358# 722 1508 1670 1721 1959 3249
BITPAR . . . . . .  B ADDR   0022H.6 A      357# 4943
BITPRD . . . . . .  B ADDR   0021H.1 A      342# 2103
BITPRER. . . . . .  B ADDR   0023H.4 A      367#
BITRS. . . . . . .  B ADDR   0020H.3 A      332#
BITT2. . . . . . .  B ADDR   0022H.0 A      351# 1720 2661 2696 2699 3312 3464
BITV19 . . . . . .  B ADDR   0022H.3 A      354# 565 570 2870 2875 2883 4347 4351 4442 4457 4582 4586 4591
BITVI11. . . . . .  B ADDR   0020H.6 A      335# 1385 1400 1444 1506 1666 2508 2510 2566 2580 2724 3243 3361 3368
                                           3517 4765 5764 5768
BITVICH. . . . . .  B ADDR   0022H.4 A      355# 1443 1719 2509 2568 2578 2723 2731 3330 3360 3389 3516 4764
BITZNAK. . . . . .  B ADDR   0020H.0 A      329# 747 795
BITZNB . . . . . .  B ADDR   0023H.3 A      366# 4785 6638 6641
BITZUS . . . . . .  B ADDR   0020H.7 A      336# 1436 1685 2216 2219 2621
BLOIN. . . . . . .  C ADDR   1810H   R   SEG=MAIN   3904# 3909
BLOKVV . . . . . .  C ADDR   17E2H   R   SEG=MAIN   3874#
BLOKVVC. . . . . .  C ADDR   17ECH   R   SEG=MAIN   3877 3880#
BL_LI. . . . . . .  C ADDR   17ADH   R   SEG=MAIN   3824 3832#
BONPART. . . . . .  C ADDR   0D72H   R   SEG=MAIN   2287#
BOUT7. . . . . . .  C ADDR   152AH   R   SEG=MAIN   3473# 3475 3493
BRET . . . . . . .  C ADDR   27B1H   R   SEG=MAIN   6307 6312 6316#
BUFDEC . . . . . .  C ADDR   0A1CH   R   SEG=MAIN   1740# 1745
BUFDECRS . . . . .  C ADDR   0B6BH   R   SEG=MAIN   1977# 1982
BUFIND . . . . . .  D ADDR   0040H   A      306# 685 689 694 697 702 1543 1547 1610 1631 1652 1653 1654 1655 1699
                                           1704 1738 1746 1748 1753 1788 1806 1812 1820 1823 1828 1844 1846 1960 1975
                                           1987 1989 1994 2022 2028 2460 2520 2524 2775 2793 2809 2811 2814 2873 2874
                                           2881 2882 2998 3045 3064 3168 3252 3314 3370 3371 3415 3419 3444 3465 3479
                                           3486 3498 3499 3599 3791 3818 3846 3875 3902 3916 3917 3921 3922 3929 3930
                                           3934 3950 4089 4096 4165 4173 4175 4192 4216 4250 4259 4261 4324 4346 4352
                                           4474 4512 4546 4547 4548 4549 4551 4585 4590 4602 4630 4653 4706 4752 5149
                                           5157 5161 5334 5342 5346 5494 5948 5966 6153 6362 6375 6381 6388 6513 6532
                                           6550 6611 6628 6639 6792 6818 6870 6916 6936 7206 7236 7285
BUFL_DEC . . . . .  C ADDR   22EDH   R   SEG=MAIN   5468#
BUFMEA . . . . . .  C ADDR   210CH   R   SEG=MAIN   5151# 5156
BUFMIN . . . . . .  C ADDR   221BH   R   SEG=MAIN   5336# 5341
BUFON. . . . . . .  C ADDR   0F03H   R   SEG=MAIN   2514 2523#
BUFR . . . . . . .  C ADDR   096AH   R   SEG=MAIN   1633# 1638
BUFR2. . . . . . .  C ADDR   094CH   R   SEG=MAIN   1612# 1617
BUFR3. . . . . . .  C ADDR   0945H   R   SEG=MAIN   1603 1608#
BUFR30 . . . . . .  C ADDR   0948H   R   SEG=MAIN   1606 1610#
BUF_IN . . . . . .  D ADDR   00DBH   A      377# 711 5557 5583
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   145

BUSY . . . . . . .  B ADDR   00C0H.7 A      190#
BYTE_KOR . . . . .  D ADDR   00C4H   A      426# 620 1184 5858 5863
CCF0 . . . . . . .  B ADDR   00D8H.0 A      226#
CCF1 . . . . . . .  B ADDR   00D8H.1 A      225#
CCF2 . . . . . . .  B ADDR   00D8H.2 A      224#
CCF3 . . . . . . .  B ADDR   00D8H.3 A      223#
CCF4 . . . . . . .  B ADDR   00D8H.4 A      222#
CDONE. . . . . . .  C ADDR   01F7H   A      8631# 8635
CELLBIT. . . . . .  D ADDR   0020H   A      328# 329 330 331 332 333 334 335 336
CELLBIT1 . . . . .  D ADDR   0021H   A      338# 340 342 343 344 346 348 372 373
CELLBIT2 . . . . .  D ADDR   0022H   A      350# 351 352 353 354 355 356 357 358
CELLBIT3 . . . . .  D ADDR   0023H   A      362# 363 364 365 366 367 374 375 376
CEXP . . . . . . .  C ADDR   01E2H   A      8608 8617#
CF . . . . . . . .  B ADDR   00D8H.7 A      220#
CH0. . . . . . . .  C ADDR   2854H   R   SEG=MAIN   1485 3306 4741 5848 6446#
CH1. . . . . . . .  C ADDR   2874H   R   SEG=MAIN   6274 6457#
CH10 . . . . . . .  C ADDR   2858H   R   SEG=MAIN   920 1137 4154 5995 6447#
CH100. . . . . . .  C ADDR   286CH   R   SEG=MAIN   871 6452#
CH10000. . . . . .  C ADDR   2868H   R   SEG=MAIN   6451#
CH150H . . . . . .  C ADDR   28BCH   R   SEG=MAIN   6476#
CH2. . . . . . . .  C ADDR   2870H   R   SEG=MAIN   1132 6453#
CH20 . . . . . . .  C ADDR   2A37H   R   SEG=MAIN   905 1142 6757#
CH2THO . . . . . .  C ADDR   289CH   R   SEG=MAIN   2351 2389 6468#
CH320H . . . . . .  C ADDR   28B8H   R   SEG=MAIN   6475# 7257
CH4. . . . . . . .  C ADDR   2860H   R   SEG=MAIN   1146 6449#
CH43 . . . . . . .  C ADDR   1A1BH   R   SEG=MAIN   4167# 4172
CH43_42. . . . . .  C ADDR   1AC2H   R   SEG=MAIN   4263# 4268
CH5. . . . . . . .  C ADDR   285CH   R   SEG=MAIN   936 6448#
CH57 . . . . . . .  C ADDR   2A33H   R   SEG=MAIN   6756#
CH954. . . . . . .  C ADDR   2864H   R   SEG=MAIN   6450#
CHAIBL . . . . . .  C ADDR   163FH   R   SEG=MAIN   3601 3603#
CHAIBL9. . . . . .  C ADDR   2647H   R   SEG=MAIN   5941 6068#
CHAIPR . . . . . .  C ADDR   1970H   R   SEG=MAIN   4091 4093#
CHANMA . . . . . .  C ADDR   10DEH   R   SEG=MAIN   2807 2816#
CHANZ. . . . . . .  C ADDR   10C5H   R   SEG=MAIN   2763 2805#
CHAVT. . . . . . .  D ADDR   0081H   A      394# 612 1192 1236 1244 2306 2408 4358
CHBEFORE . . . . .  D ADDR   009BH   A      404# 637 868 882 900 915 931
CHBLOK . . . . . .  D ADDR   00D6H   A      434# 5062 5110 5126 5246 5300 5403 5452
CHBUF. . . . . . .  D ADDR   00CFH   A      431# 648 2078 2184 2225 2230 2289 2297 4043 5468 5473
CHBUF1 . . . . . .  X ADDR   0E00H   A      464# 2088 2171
CHCMP. . . . . . .  C ADDR   2754H   R   SEG=MAIN   1198 6251#
CHDEC. . . . . . .  C ADDR   2767H   R   SEG=MAIN   1245 1258 6266#
CHDEL. . . . . . .  D ADDR   0083H   A      395# 2249 2275 2315 2364 2402
CHDELMO. . . . . .  C ADDR   0D5DH   R   SEG=MAIN   2259 2275# 2280
CHIF . . . . . . .  C ADDR   2A7CH   R   SEG=MAIN   6796 6799#
CHIF5. . . . . . .  C ADDR   2A84H   R   SEG=MAIN   6802 6804#
CHIFB. . . . . . .  C ADDR   2AA7H   R   SEG=MAIN   6822 6825#
CHIFB1 . . . . . .  C ADDR   2AADH   R   SEG=MAIN   6824 6825 6829#
CHIFL5 . . . . . .  C ADDR   2AB5H   R   SEG=MAIN   6832 6834#
CHIFOUR. . . . . .  C ADDR   2A96H   R   SEG=MAIN   6809 6811 6815#
CHIND. . . . . . .  D ADDR   00ACH   A      410# 1403 1867
CHIND2 . . . . . .  D ADDR   0033H   A      322# 782 784 792
CHINKOR. . . . . .  D ADDR   0098H   A      393# 607 850 1181 1197 1238 1252 1257 2282 5866
CHK. . . . . . . .  C ADDR   28B4H   R   SEG=MAIN   1356 6474#
CHKL . . . . . . .  D ADDR   003DH   A      312# 761 772 774 775 777 2639 2666 2714 2822 3218 3504 4222 4657
CHMAS. . . . . . .  D ADDR   006EH   A      309# 1121 1127 1150 7040
CHMASN . . . . . .  D ADDR   003FH   A      313# 857 866 901 916 932 947 1125 1127 1128
CHMINUS. . . . . .  C ADDR   2DCDH   R   SEG=MAIN   3622 3662 3681 3699 3718 6080 6120 7221# 7280
CHTADC . . . . . .  C ADDR   26FEH   R   SEG=MAIN   6191#
CHTHO. . . . . . .  C ADDR   2894H   R   SEG=MAIN   1325 1363 4885 4970 4988 6466#
CHTHOU . . . . . .  C ADDR   293BH   R   SEG=MAIN   6599#
CHZAP. . . . . . .  C ADDR   2850H   R   SEG=MAIN   2067 6445#
CH_1 . . . . . . .  C ADDR   287CH   R   SEG=MAIN   640 1558 1581 2085 2227 2301 4126 5470 6459#
CH_10. . . . . . .  C ADDR   28ACH   R   SEG=MAIN   1564 1587 2167 2197 4646 5135 5321 6472#
CH_10TH. . . . . .  C ADDR   28A8H   R   SEG=MAIN   1416 6471#
CH_2 . . . . . . .  C ADDR   2880H   R   SEG=MAIN   2080 2162 2190 2206 6460#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   146

CH_200 . . . . . .  C ADDR   28A4H   R   SEG=MAIN   6470#
CH_220 . . . . . .  C ADDR   28A0H   R   SEG=MAIN   1378 6469#
CH_22T . . . . . .  C ADDR   2979H   R   SEG=MAIN   1473 6647#
CH_250 . . . . . .  C ADDR   28B0H   R   SEG=MAIN   1281 6473#
CH_4 . . . . . . .  C ADDR   2884H   R   SEG=MAIN   2200 4129 6461#
CH_5 . . . . . . .  C ADDR   2888H   R   SEG=MAIN   6462#
CH_500 . . . . . .  C ADDR   2975H   R   SEG=MAIN   1468 6646#
CH_7 . . . . . . .  C ADDR   288CH   R   SEG=MAIN   2293 6463#
CH_953 . . . . . .  C ADDR   2890H   R   SEG=MAIN   6465#
CH_B . . . . . . .  C ADDR   2971H   R   SEG=MAIN   1489 6644#
CH_FL. . . . . . .  C ADDR   297DH   R   SEG=MAIN   1551 6648#
CH_M3. . . . . . .  C ADDR   28C0H   R   SEG=MAIN   6477#
CH_MLN . . . . . .  C ADDR   2878H   R   SEG=MAIN   6458#
CIKLWR . . . . . .  C ADDR   2CFBH   R   SEG=MAIN   7046#
CKCON. . . . . . .  D ADDR   008EH   A      40# 503 529
CL4. . . . . . . .  C ADDR   28D2H   R   SEG=MAIN   6494# 6496
CL4N . . . . . . .  C ADDR   28D8H   R   SEG=MAIN   6502# 6504
CLE20. . . . . . .  C ADDR   1AAFH   R   SEG=MAIN   4253# 4255
CLE256 . . . . . .  C ADDR   043EH   A      4448 4918 5020 9113#
CLEAR. . . . . . .  C ADDR   2E85H   R   SEG=MAIN   7397 7401# 7431
CLEAR4 . . . . . .  C ADDR   28CFH   R   SEG=MAIN   880 1432 1434 1620 1641 1681 1683 2549 2551 3290 3292 5061 6492#
CLEARN . . . . . .  C ADDR   28D7H   R   SEG=MAIN   3976 4022 4117 4504 4622 4731 4778 6500#
CLMASSIX . . . . .  C ADDR   2CEBH   R   SEG=MAIN   598 1430 1679 2286 2412 2547 3288 3462 7034#
CLMASV . . . . . .  C ADDR   07F9H   R   SEG=MAIN   1425 1427#
CLMAX. . . . . . .  C ADDR   2CF0H   R   SEG=MAIN   7036# 7039
CLR11. . . . . . .  C ADDR   2E86H   R   SEG=MAIN   7403# 7405
CLRDEC . . . . . .  C ADDR   2E7FH   R   SEG=MAIN   7395#
CLRNUM . . . . . .  C ADDR   2E83H   R   SEG=MAIN   7398# 7510
CLRVICH. . . . . .  C ADDR   1497H   R   SEG=MAIN   3389# 3406
CL_HL. . . . . . .  C ADDR   16F9H   R   SEG=MAIN   3731# 3745 3750 3754
CL_HL1 . . . . . .  C ADDR   170BH   R   SEG=MAIN   3728 3742#
CL_HL2 . . . . . .  C ADDR   1715H   R   SEG=MAIN   3742 3747#
CL_HL3 . . . . . .  C ADDR   171FH   R   SEG=MAIN   3747 3752#
CMD_REZ. . . . . .  D ADDR   004EH   A      382# 5582 5721 5772 5878 5890 5942 6060 6062
CMD_TREE . . . . .  C ADDR   237AH   R   SEG=MAIN   719 5581#
CNTR . . . . . . .  N NUMB   0006H   A      8304#
CNT_IN . . . . . .  D ADDR   0025H   A      379# 713 5552 5556 5569 5570
CNT_OUT. . . . . .  D ADDR   0024H   A      378# 712 2003 2011 2020 2056 2057 5526 5533 5604 5611 5700 5745 5752 5981
                                           6031
CO02S. . . . . . .  C ADDR   2838H   R   SEG=MAIN   6429# 6433
CO05S. . . . . . .  C ADDR   2845H   R   SEG=MAIN   6438# 6442
CO1S . . . . . . .  C ADDR   282FH   R   SEG=MAIN   6422# 6422
CO2S . . . . . . .  C ADDR   282BH   R   SEG=MAIN   6420# 6424
COMPA1 . . . . . .  C ADDR   08E1H   R   SEG=MAIN   1558# 1567
COMPA2 . . . . . .  C ADDR   0917H   R   SEG=MAIN   1581# 1590
COND . . . . . . .  C ADDR   2D5FH   R   SEG=MAIN   7130#
COPY1. . . . . . .  C ADDR   049FH   A      9190# 9195
COPYPP . . . . . .  C ADDR   0499H   A      4435 4897 4998 9187#
COPY_HL. . . . . .  D ADDR   00D7H   A      435# 4142 4274 5054 5069 5083 5239 5254 5269 5397 5410 5424 5989 6025
COUNT. . . . . . .  C ADDR   280DH   R   SEG=MAIN   6395# 6395
CPRL2. . . . . . .  B ADDR   00C8H.0 A      207#
CPT0CN . . . . . .  D ADDR   009EH   A      55#
CPT1CN . . . . . .  D ADDR   009FH   A      56#
CR . . . . . . . .  B ADDR   00D8H.6 A      221#
CT . . . . . . . .  C ADDR   2814H   R   SEG=MAIN   6401# 6401
CT2. . . . . . . .  B ADDR   00C8H.1 A      206#
CY . . . . . . . .  B ADDR   00D0H.7 A      210#
DAC0CN . . . . . .  D ADDR   00D4H   A      105# 508
DAC0H. . . . . . .  D ADDR   00D3H   A      104# 2075
DAC0L. . . . . . .  D ADDR   00D2H   A      103# 2072
DAC1CN . . . . . .  D ADDR   00D7H   A      108# 509
DAC1H. . . . . . .  D ADDR   00D6H   A      107#
DAC1L. . . . . . .  D ADDR   00D5H   A      106#
DCOA . . . . . . .  C ADDR   2D64H   R   SEG=MAIN   7134# 7136
DCOB . . . . . . .  C ADDR   2D6BH   R   SEG=MAIN   7138# 7156
DCOC . . . . . . .  C ADDR   2D76H   R   SEG=MAIN   7148# 7153
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   147

DCOD . . . . . . .  C ADDR   2D83H   R   SEG=MAIN   7155 7158#
DDOUTF . . . . . .  C ADDR   1762H   R   SEG=MAIN   3590 3643 3777 3785# 3870
DDOUTFR. . . . . .  C ADDR   1623H   R   SEG=MAIN   3590# 3596
DEC30. . . . . . .  C ADDR   2ED8H   R   SEG=MAIN   7520# 7543
DEC31. . . . . . .  C ADDR   2EDDH   R   SEG=MAIN   7525# 7532
DEC32. . . . . . .  C ADDR   2EEDH   R   SEG=MAIN   7536# 7540
DECBIN . . . . . .  C ADDR   2ECBH   R   SEG=MAIN   3980 4026 4121 4643 4736 4782 7499#
DECSIZE. . . . . .  N NUMB   000AH   A      7381# 7396 7430 7455 7468 7471 7524
DECT2. . . . . . .  C ADDR   2EF6H   R   SEG=MAIN   7516 7546#
DEDPTR . . . . . .  C ADDR   314BH   R   SEG=MAIN   8031 8035 8039 8045#
DENORM . . . . . .  C ADDR   0133H   A      8463# 8519
DGOTO7 . . . . . .  C ADDR   18F4H   R   SEG=MAIN   4029# 4037
DIAP . . . . . . .  D ADDR   00AEH   A      412# 628 1420 1660 1752 1849 1993 2037 2114 2541 2588 3281 4550 4925 5621
                                           5716 6287 6308 6564 6578 6723 6783
DIINC. . . . . . .  C ADDR   0F29H   R   SEG=MAIN   2544 2547#
DIKDN. . . . . . .  C ADDR   2A0BH   R   SEG=MAIN   6725 6745#
DIKDW. . . . . . .  C ADDR   2923H   R   SEG=MAIN   6568 6587#
DIKM . . . . . . .  C ADDR   2939H   R   SEG=MAIN   6598#
DIPAR. . . . . . .  C ADDR   2937H   R   SEG=MAIN   6597#
DIV1 . . . . . . .  C ADDR   02DDH   A      8800# 8859
DIV2 . . . . . . .  C ADDR   0320H   A      8818 8822 8826 8830 8845#
DIV3 . . . . . . .  C ADDR   030DH   A      8819 8823 8827 8831#
DIV9 . . . . . . .  C ADDR   0336H   A      8789 8791 8865#
DIVIDE . . . . . .  C ADDR   2FB6H   R   SEG=MAIN   7062 7732#
DONE . . . . . . .  C ADDR   2F25H   R   SEG=MAIN   7562 7573#
DONE1. . . . . . .  C ADDR   2F23H   R   SEG=MAIN   7565 7568 7571#
DOSH . . . . . . .  C ADDR   303FH   R   SEG=MAIN   7807 7823#
DOSUB. . . . . . .  C ADDR   302DH   R   SEG=MAIN   7791 7795 7799 7803 7804 7808#
DPH. . . . . . . .  D ADDR   0083H   A      29# 604 652 660 667 674 2452 3082 3161 3731 4147 4149 4279 4284 4800 5038
                                           5047 5055 5067 5071 5079 5081 5084 5095 5182 5184 5193 5202 5240 5251 5256
                                           5265 5267 5270 5281 5356 5364 5398 5408 5412 5420 5422 5425 5436 5992 6030
                                           6113 6994 7002 7265 7273 7305 7579 7615 7650 7653 7665 7688 8050 8052 9126
                                           9146 9187
DPL. . . . . . . .  D ADDR   0082H   A      28# 655 663 670 677 2451 3083 3160 3734 4143 4145 4276 4287 4801 5036
                                           5043 5058 5065 5074 5076 5078 5087 5091 5179 5181 5191 5198 5243 5249 5259
                                           5262 5264 5273 5277 5354 5360 5401 5406 5415 5417 5419 5428 5432 5990 6027
                                           6116 6995 7001 7262 7276 7308 7595 7631 7652 7666 7669 7703 8047 8049 9127
                                           9147 9188
DVIG0. . . . . . .  C ADDR   0B14H   R   SEG=MAIN   1903# 1905
DVIG1. . . . . . .  C ADDR   0B09H   R   SEG=MAIN   1894# 1896
DVIG2. . . . . . .  C ADDR   0AFEH   R   SEG=MAIN   1885# 1887
DVIG3. . . . . . .  C ADDR   0AF2H   R   SEG=MAIN   1876# 1878
DVIG4. . . . . . .  C ADDR   0B20H   R   SEG=MAIN   1914# 1916
DVIG6. . . . . . .  C ADDR   0B42H   R   SEG=MAIN   1942# 1944
DVM. . . . . . . .  C ADDR   0B40H   R   SEG=MAIN   1930 1941#
EA . . . . . . . .  B ADDR   00A8H.7 A      173# 1512 1538 5617 5843 5980 6033 6037 6064 6069 6088
EIE1 . . . . . . .  D ADDR   00E6H   A      122# 506
EIE2 . . . . . . .  D ADDR   00E7H   A      123# 574 766 2438 3147 5490 5492 5505
EIP1 . . . . . . .  D ADDR   00F6H   A      138#
EIP2 . . . . . . .  D ADDR   00F7H   A      139#
EMI0CF . . . . . .  D ADDR   00A3H   A      59#
EMI0CN . . . . . .  D ADDR   00AFH   A      71#
EMI0TC . . . . . .  D ADDR   00A1H   A      58#
ENDKALIB . . . . .  C ADDR   1F23H   R   SEG=MAIN   3270 4871#
ENDSDV . . . . . .  C ADDR   0B46H   R   SEG=MAIN   1936 1945#
ENDSUM . . . . . .  C ADDR   05B1H   R   SEG=MAIN   959 1006 1097 1120#
ENSMB. . . . . . .  B ADDR   00C0H.6 A      191#
EQU0 . . . . . . .  C ADDR   0912H   R   SEG=MAIN   1561 1577#
EQU00. . . . . . .  C ADDR   0930H   R   SEG=MAIN   1579 1584 1592#
EQU1L. . . . . . .  C ADDR   1227H   R   SEG=MAIN   3009 3013#
EQU2L. . . . . . .  C ADDR   17C8H   R   SEG=MAIN   3856 3861#
ERRA0. . . . . . .  C ADDR   1E42H   R   SEG=MAIN   4744 4756#
ERRA01 . . . . . .  C ADDR   080FH   R   SEG=MAIN   1439# 1488
ERROR. . . . . . .  C ADDR   2B11H   R   SEG=MAIN   1446 1856 4370 4573 4759 6161 6173 6934#
ES0. . . . . . . .  B ADDR   00A8H.4 A      175#
ET0. . . . . . . .  B ADDR   00A8H.1 A      178#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   148

ET1. . . . . . . .  B ADDR   00A8H.3 A      176#
ET2. . . . . . . .  B ADDR   00A8H.5 A      174# 2148 3122 4831
EX0. . . . . . . .  B ADDR   00A8H.0 A      179#
EX1. . . . . . . .  B ADDR   00A8H.2 A      177#
EXEN2. . . . . . .  B ADDR   00C8H.3 A      204#
EXF2 . . . . . . .  B ADDR   00C8H.6 A      201#
EXP1 . . . . . . .  N NUMB   0000H   A      8306#
EXP2 . . . . . . .  N NUMB   0001H   A      8308# 8485 8506
EXTCLE . . . . . .  C ADDR   01B7H   R   SEG=MAIN   601# 605
F0 . . . . . . . .  B ADDR   00D0H.5 A      212#
F1 . . . . . . . .  B ADDR   00D0H.1 A      216#
FINDEXT. . . . . .  C ADDR   291CH   R   SEG=MAIN   4899 6577#
FINDKOEF . . . . .  C ADDR   290DH   R   SEG=MAIN   1359 6563#
FINDMEM. . . . . .  C ADDR   1185H   R   SEG=MAIN   2832 2914#
FINDR. . . . . . .  C ADDR   2A64H   R   SEG=MAIN   1646 4540 6783#
FINIS. . . . . . .  C ADDR   306AH   R   SEG=MAIN   7751 7852#
FLACL. . . . . . .  D ADDR   00B7H   A      77#
FLADD. . . . . . .  C ADDR   0166H   A      2183 5107 5119 8511# 8600
FLCMP. . . . . . .  C ADDR   01D6H   A      1283 1380 1418 1470 1475 1487 1560 1583 2082 4743 5296 5312 5448 5461
                                           8605#
FLDIV. . . . . . .  C ADDR   02B7H   A      1306 1327 1365 1496 1553 1566 2199 2353 2391 4883 4968 4986 5134 5137
                                           5323 8775#
FLMUL. . . . . . .  C ADDR   0203H   A      1176 1274 1324 1370 1491 1589 2170 2192 2202 2208 4131 4648 4887 4972
                                           4990 8645#
FLOUT. . . . . . .  C ADDR   01E1H   A      8612 8615#
FLSCL. . . . . . .  D ADDR   00B6H   A      76# 9114 9120 9170 9175
FLSUB. . . . . . .  C ADDR   01D1H   A      1266 2087 2229 2296 2349 2387 4128 5472 8598#
FND. . . . . . . .  C ADDR   01F8H   A      8621 8624 8627 8630 8633#
FO1M . . . . . . .  C ADDR   2D22H   R   SEG=MAIN   7068 7072#
FO2M . . . . . . .  C ADDR   2D2BH   R   SEG=MAIN   7075 7077#
FORM4. . . . . . .  C ADDR   2D2CH   R   SEG=MAIN   7070 7076 7080#
FT1IZM . . . . . .  C ADDR   101CH   R   SEG=MAIN   2709#
FTOL . . . . . . .  C ADDR   0343H   A      1221 1371 1499 4132 4888 4991 5138 5324 5690 6863 8881#
FTOL1. . . . . . .  C ADDR   037CH   A      8894 8898 8922#
FTOL2. . . . . . .  C ADDR   039EH   A      8918 8955#
FTOL22 . . . . . .  C ADDR   03C4H   A      8958 8992#
FTOL23 . . . . . .  C ADDR   03A2H   A      8959# 8991
FTOL24 . . . . . .  C ADDR   03B5H   A      8961 8977#
FTOL25 . . . . . .  C ADDR   03C2H   A      8976 8991#
FTOL26 . . . . . .  C ADDR   03E4H   A      9007 9023#
FTOL3. . . . . . .  C ADDR   038AH   A      8921 8935#
FTOL33 . . . . . .  C ADDR   038EH   A      8939# 8953
FTOL4. . . . . . .  C ADDR   0371H   A      8900 8915#
FTOL9. . . . . . .  C ADDR   0381H   A      8928# 8938 8954 9022 9037
FULKALIB . . . . .  C ADDR   1F92H   R   SEG=MAIN   4926 4941# 5029
GENER. . . . . . .  C ADDR   0145H   R   SEG=MAIN   513#
GO23NO . . . . . .  C ADDR   1726H   R   SEG=MAIN   3644 3756#
GO31L. . . . . . .  C ADDR   122DH   R   SEG=MAIN   2986 3018#
GO41L. . . . . . .  C ADDR   1232H   R   SEG=MAIN   3018 3020#
GOA2 . . . . . . .  C ADDR   07AFH   R   SEG=MAIN   1384 1386 1389# 1411
GOA3A2 . . . . . .  C ADDR   07B9H   R   SEG=MAIN   1394#
GOCIKLE. . . . . .  C ADDR   0CF6H   R   SEG=MAIN   2105 2187 2216# 2223 2232
GOFULL . . . . . .  C ADDR   1759H   R   SEG=MAIN   3761 3781#
GOGO7. . . . . . .  C ADDR   1E60H   R   SEG=MAIN   4717 4722 4769#
GOKAA2 . . . . . .  C ADDR   07D7H   R   SEG=MAIN   1409#
GOKLB. . . . . . .  C ADDR   0EF2H   R   SEG=MAIN   2490 2512#
GOOFF1 . . . . . .  C ADDR   168DH   R   SEG=MAIN   3657# 3665
GOOFF2 . . . . . .  C ADDR   16A8H   R   SEG=MAIN   3676# 3684
GOOFF3 . . . . . .  C ADDR   16C3H   R   SEG=MAIN   3694# 3702
GOOFF4 . . . . . .  C ADDR   16DEH   R   SEG=MAIN   3713# 3721
GOONIN . . . . . .  C ADDR   07C9H   R   SEG=MAIN   1402# 1437 1449 1671 1686
GOONIN1. . . . . .  C ADDR   09BBH   R   SEG=MAIN   1663 1671#
GOONIN2. . . . . .  C ADDR   09B9H   R   SEG=MAIN   1666 1670#
GOONIND. . . . . .  C ADDR   09F3H   R   SEG=MAIN   1405 1711#
GOONOF9. . . . . .  C ADDR   2653H   R   SEG=MAIN   6075# 6083
GOONOFF. . . . . .  C ADDR   1652H   R   SEG=MAIN   3617# 3625
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   149

GOONT. . . . . . .  C ADDR   0C7FH   R   SEG=MAIN   2108 2149#
GOPAROL. . . . . .  C ADDR   1CC4H   R   SEG=MAIN   4367 4525 4534#
GOPAROM. . . . . .  C ADDR   1B95H   R   SEG=MAIN   4365# 4368 4375
GOPART . . . . . .  C ADDR   0342H   R   SEG=MAIN   852 855#
GOSK19 . . . . . .  C ADDR   1152H   R   SEG=MAIN   2870 2879#
GOTO7. . . . . . .  C ADDR   1350H   R   SEG=MAIN   3217# 3303 3310 3372 3393 3420 3432 3473 3477 3524 3567 3582 3641
                                           3806 3809 3860 3863 3919 3931 3937 3963 3965 4006 4029 4047 4102 4234 4297
                                           4305 4313 4411 4486 4490 4570 4580 4614 4665 4667 4681 4693 4754 4938 4949
GOTOKD . . . . . .  C ADDR   064AH   R   SEG=MAIN   1179 1205#
GOTOSTROB. . . . .  C ADDR   0C61H   R   SEG=MAIN   2119 2122 2125 2128 2131#
GOUT6. . . . . . .  C ADDR   0EA7H   R   SEG=MAIN   2480# 2508
GOUT6__. . . . . .  C ADDR   0EA2H   R   SEG=MAIN   2467 2476#
GOVVLIST . . . . .  C ADDR   1994H   R   SEG=MAIN   4085 4107#
GOZNAK . . . . . .  C ADDR   02F4H   R   SEG=MAIN   753 801#
HNOR11 . . . . . .  C ADDR   14A2H   R   SEG=MAIN   3357 3397#
HNOR12 . . . . . .  C ADDR   144AH   R   SEG=MAIN   3347 3351#
HNOT1. . . . . . .  C ADDR   14EEH   R   SEG=MAIN   3324 3441#
HNOT2. . . . . . .  C ADDR   1418H   R   SEG=MAIN   3322#
HR12 . . . . . . .  C ADDR   1440H   R   SEG=MAIN   3341 3347#
HVI1113. . . . . .  C ADDR   143AH   R   SEG=MAIN   3344# 3350 3355
IE . . . . . . . .  D ADDR   00A8H   A      64# 173 174 175 176 177 178 179 581 714 2062 5485 5603 5610 5744 5751
                                           6141 9113 9121 9169 9179
IE0. . . . . . . .  B ADDR   0088H.1 A      159#
IE1. . . . . . . .  B ADDR   0088H.3 A      157#
INCT . . . . . . .  C ADDR   1414H   R   SEG=MAIN   3317 3319#
IND. . . . . . . .  C ADDR   230DH   R   SEG=MAIN   690 698 755 785 1447 1571 1575 1669 1857 2521 2525 2536 3253 3483
                                           3500 4005 4217 4269 4371 4574 4760 4946 5489# 5949 5967 6157 6162 6174
                                           7286
INDOLL . . . . . .  C ADDR   09A4H   R   SEG=MAIN   1658 1659 1663#
INIACP . . . . . .  C ADDR   2981H   R   SEG=MAIN   706 3460 6653#
INNOT1_2 . . . . .  C ADDR   184BH   R   SEG=MAIN   3928 3933#
INNOT3 . . . . . .  C ADDR   183CH   R   SEG=MAIN   3920 3925#
INNOT6 . . . . . .  C ADDR   1830H   R   SEG=MAIN   3915 3920#
INTER2 . . . . . .  C ADDR   2301H   R   SEG=MAIN   275 5478#
INTERVA. . . . . .  D ADDR   00CDH   A      430# 681 2149 3883 3982 5653 6045
INTMUL . . . . . .  C ADDR   0CA2H   R   SEG=MAIN   2164 2170#
INTMUL1. . . . . .  C ADDR   0CA5H   R   SEG=MAIN   2171#
INTMUL2. . . . . .  C ADDR   0CBAH   R   SEG=MAIN   2184# 2193 2203 2209 2213
INTN . . . . . . .  C ADDR   18DDH   R   SEG=MAIN   4020#
IP . . . . . . . .  D ADDR   00B8H   A      78# 182 183 184 185 186 187
IS_2 . . . . . . .  B ADDR   0021H.4 A      372# 2033 2059 5602 5609 5743 5750 5755
IS_CMD . . . . . .  B ADDR   0023H.5 A      375# 718 5558 5844 5880 5892 6065
IS_IZM . . . . . .  B ADDR   0023H.7 A      374# 2467 2468 5881 5893
IS_MEM . . . . . .  B ADDR   0021H.6 A      373# 6124
IS_RS. . . . . . .  B ADDR   0023H.6 A      376# 1505 1957 5594 5598 5605 5612 5746 5753
IT0. . . . . . . .  B ADDR   0088H.0 A      160#
IT1. . . . . . . .  B ADDR   0088H.2 A      158#
IZCHI. . . . . . .  C ADDR   14D3H   R   SEG=MAIN   3422#
IZMAN. . . . . . .  C ADDR   0F91H   R   SEG=MAIN   2424 2469 2609#
IZMAN1 . . . . . .  C ADDR   0F97H   R   SEG=MAIN   2611#
IZMFUN . . . . . .  C ADDR   0FA3H   R   SEG=MAIN   2537 2546 2554 2615 2620#
IZMPAT . . . . . .  C ADDR   0FA7H   R   SEG=MAIN   2506 2522 2526 2585 2624#
IZMT2. . . . . . .  C ADDR   0FB6H   R   SEG=MAIN   2640 2645#
IZMT3. . . . . . .  C ADDR   0FC1H   R   SEG=MAIN   2645 2651#
JFINIS . . . . . .  C ADDR   2FD1H   R   SEG=MAIN   7743 7751#
KD . . . . . . . .  C ADDR   2898H   R   SEG=MAIN   6467#
KEYB1. . . . . . .  C ADDR   0E71H   R   SEG=MAIN   295 2431# 5882 5894
KEYB2. . . . . . .  C ADDR   12E0H   R   SEG=MAIN   297 3139#
KFULL. . . . . . .  C ADDR   1730H   R   SEG=MAIN   3583 3760#
KFULLR . . . . . .  C ADDR   1612H   R   SEG=MAIN   3578 3583#
KGO23. . . . . . .  C ADDR   167AH   R   SEG=MAIN   3577 3647#
KKOUT6 . . . . . .  C ADDR   12A0H   R   SEG=MAIN   2426 3101#
KLBOFF . . . . . .  C ADDR   13A0H   R   SEG=MAIN   3246 3264#
KLEV1. . . . . . .  C ADDR   15ECH   R   SEG=MAIN   3535 3568#
KLEV2. . . . . . .  C ADDR   15F1H   R   SEG=MAIN   3568 3570#
KLEV21 . . . . . .  C ADDR   1615H   R   SEG=MAIN   3575 3584#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   150

KLEV22 . . . . . .  C ADDR   15FBH   R   SEG=MAIN   3563 3572 3575#
KLEV23 . . . . . .  C ADDR   1626H   R   SEG=MAIN   3584 3592#
KLEV3. . . . . . .  C ADDR   15F6H   R   SEG=MAIN   3570 3572#
KLMAS. . . . . . .  C ADDR   03EFH   R   SEG=MAIN   884 946#
KNAVP. . . . . . .  C ADDR   13AFH   R   SEG=MAIN   3197 3272#
KNIZM. . . . . . .  B ADDR   0023H.0 A      363# 1384 1659 1814 1848 2587 2610 2612 2618 5644 5877 5889
KNIZMON. . . . . .  C ADDR   0F9EH   R   SEG=MAIN   2610 2618#
KNKMP. . . . . . .  C ADDR   12C7H   R   SEG=MAIN   3127# 3187
KNLEFT . . . . . .  C ADDR   13BDH   R   SEG=MAIN   3131 3279#
KNMEM. . . . . . .  C ADDR   154BH   R   SEG=MAIN   3137 3493#
KNMENU . . . . . .  C ADDR   1372H   R   SEG=MAIN   3203 3237#
KNNUL. . . . . . .  C ADDR   13DEH   R   SEG=MAIN   3130 3297#
KNOPT. . . . . . .  C ADDR   0FC9H   R   SEG=MAIN   2423 2659#
KNRAZR . . . . . .  C ADDR   0FDEH   R   SEG=MAIN   2422 2672#
KNRIGHT. . . . . .  C ADDR   0F1FH   R   SEG=MAIN   2496 2541#
KNVICH . . . . . .  C ADDR   0F40H   R   SEG=MAIN   2505 2559#
KOEFKD . . . . . .  D ADDR   00A0H   A      407# 646 4890 4900 4992 5000
KOEFKM . . . . . .  D ADDR   0094H   A      401# 644 1174 1272 2395
KOEFKP . . . . . .  D ADDR   0090H   A      400# 642 1171 1267 2357
KOMUL. . . . . . .  C ADDR   0773H   R   SEG=MAIN   1358 1362#
KOMULPZ. . . . . .  C ADDR   076DH   R   SEG=MAIN   1355 1359#
KONSTA . . . . . .  D ADDR   00BCH   A      420# 1483 4739 5662 5791 6861
KON_B. . . . . . .  C ADDR   10A9H   R   SEG=MAIN   2765 2782#
KOR0US . . . . . .  C ADDR   27C5H   R   SEG=MAIN   2257 6341#
KOR0_AN. . . . . .  D ADDR   0084H   A      397# 1264 2268 2347 2385
KORDEC1. . . . . .  C ADDR   069BH   R   SEG=MAIN   1250 1257#
KORDEC10 . . . . .  C ADDR   067BH   R   SEG=MAIN   1238#
KORNUL . . . . . .  C ADDR   0D30H   R   SEG=MAIN   1188 2249#
KVVOD0 . . . . . .  C ADDR   174CH   R   SEG=MAIN   3544 3768 3776#
LABEL43. . . . . .  C ADDR   198BH   R   SEG=MAIN   4103# 4111
LABEL7 . . . . . .  C ADDR   1A74H   R   SEG=MAIN   4103 4222#
LABELA . . . . . .  C ADDR   02B8H   R   SEG=MAIN   758# 789 2220
LABELB . . . . . .  C ADDR   0AEBH   R   SEG=MAIN   1230 1689 1869# 2237 2241 2243
LABELC . . . . . .  C ADDR   0FDEH   R   SEG=MAIN   2673#
LABELE . . . . . .  C ADDR   0FA7H   R   SEG=MAIN   2622 2638# 2678 2681 2685 2689 2697 2729
LABELF . . . . . .  C ADDR   1009H   R   SEG=MAIN   2421 2698#
LABELH . . . . . .  C ADDR   1400H   R   SEG=MAIN   3129 3312#
LABELI . . . . . .  C ADDR   1DBCH   R   SEG=MAIN   3327 3382 3434 4676#
LABELI2. . . . . .  C ADDR   1487H   R   SEG=MAIN   3382# 3383
LABELK . . . . . .  C ADDR   158EH   R   SEG=MAIN   3326 3526#
LABELL . . . . . .  C ADDR   11E2H   R   SEG=MAIN   2830 2943 2951#
LABELL1. . . . . .  C ADDR   10E6H   R   SEG=MAIN   2820# 2907 3025 3077
LABELN . . . . . .  C ADDR   124CH   R   SEG=MAIN   2908 3034#
LABELP . . . . . .  C ADDR   1961H   R   SEG=MAIN   4033 4054 4085# 4315
LABELS . . . . . .  C ADDR   1926H   R   SEG=MAIN   3764 4054#
LABELS1. . . . . .  C ADDR   1C08H   R   SEG=MAIN   4390 4424#
LABELS13 . . . . .  C ADDR   1D42H   R   SEG=MAIN   4468 4594#
LABELS3. . . . . .  C ADDR   1DCFH   R   SEG=MAIN   4686#
LABELS4. . . . . .  C ADDR   1DAAH   R   SEG=MAIN   4467 4669#
LABL2. . . . . . .  C ADDR   120EH   R   SEG=MAIN   2990# 3587
LABM . . . . . . .  C ADDR   17D1H   R   SEG=MAIN   3588 3866#
LABN_1 . . . . . .  C ADDR   1256H   R   SEG=MAIN   3036 3044#
LABN_2 . . . . . .  C ADDR   1251H   R   SEG=MAIN   3034 3036#
LADD . . . . . . .  C ADDR   3112H   R   SEG=MAIN   863 897 912 928 2070 7978#
LADDX. . . . . . .  C ADDR   3123H   R   SEG=MAIN   8002#
LBTOF. . . . . . .  C ADDR   042DH   A      9092#
LCMP . . . . . . .  C ADDR   2F10H   R   SEG=MAIN   6261 7099 7558#
LDC_LONG . . . . .  C ADDR   2F26H   R   SEG=MAIN   641 1357 2068 2352 2390 3307 5849 7578#
LDC_LTEMP. . . . .  C ADDR   2F48H   R   SEG=MAIN   872 1133 1138 1143 1147 1282 1326 1364 1379 1417 1469 1474 1486
                                           1490 1552 1559 1565 1582 1588 2081 2086 2163 2168 2191 2198 2201 2207 2228
                                           2295 4127 4130 4155 4647 4742 4886 4971 4989 5136 5322 5471 5996 6275 7258
                                           7614#
LDX_LONG . . . . .  C ADDR   2F6EH   R   SEG=MAIN   7649#
LDX_LTEMP. . . . .  C ADDR   2F94H   R   SEG=MAIN   7687#
LEFCUR . . . . . .  C ADDR   185CH   R   SEG=MAIN   3943# 4015 4031
LEFKL. . . . . . .  C ADDR   13C7H   R   SEG=MAIN   3279 3285#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   151

LEFMEM11 . . . . .  C ADDR   15A2H   R   SEG=MAIN   3536# 3569 3571 3573
LEFT21 . . . . . .  C ADDR   177BH   R   SEG=MAIN   3802 3807#
LEFT_S . . . . . .  C ADDR   1C00H   R   SEG=MAIN   4418# 4426
LEFT_SK. . . . . .  C ADDR   1D23H   R   SEG=MAIN   4418 4582#
LEV220 . . . . . .  C ADDR   15FEH   R   SEG=MAIN   3576# 3585
LEV2GO . . . . . .  C ADDR   127CH   R   SEG=MAIN   3033 3073#
LEVEL. . . . . . .  D ADDR   00B0H   A      414# 2528 2915 2957 3501 3511 3534 3778 6813
LI21 . . . . . . .  C ADDR   14DDH   R   SEG=MAIN   3429 3431#
LI42_43. . . . . .  C ADDR   19FAH   R   SEG=MAIN   4152# 4289
LIST_43. . . . . .  C ADDR   1A7EH   R   SEG=MAIN   4105 4227#
LLDI2. . . . . . .  C ADDR   0F8AH   R   SEG=MAIN   2600 2604#
LLDI23 . . . . . .  C ADDR   0F7EH   R   SEG=MAIN   2592 2597#
LLDI3. . . . . . .  C ADDR   0F85H   R   SEG=MAIN   2599 2601#
LLEV2. . . . . . .  C ADDR   1237H   R   SEG=MAIN   2988 3023#
LLMUL. . . . . . .  C ADDR   307BH   R   SEG=MAIN   7872#
LLSUB. . . . . . .  C ADDR   3100H   R   SEG=MAIN   7954#
LLTOF. . . . . . .  C ADDR   0432H   A      9098#
LMUL . . . . . . .  C ADDR   307BH   R   SEG=MAIN   7057 7259 7874#
LOA3_X . . . . . .  C ADDR   2E5BH   R   SEG=MAIN   2035 2111 7322#
LOAB12 . . . . . .  C ADDR   29D0H   R   SEG=MAIN   3458 6691#
LOAD . . . . . . .  D ADDR   00B7H   A      418# 2662 2703 3315 3454 6361
LOADB. . . . . . .  C ADDR   1501H   R   SEG=MAIN   3449 3452# 3484 3490
LOADB2 . . . . . .  C ADDR   152DH   R   SEG=MAIN   3471 3475#
LOADCLE. . . . . .  C ADDR   15BFH   R   SEG=MAIN   3549# 3771
LOADKD . . . . . .  C ADDR   29EDH   R   SEG=MAIN   6723#
LOADR2 . . . . . .  C ADDR   29DFH   R   SEG=MAIN   4027 4122 4644 4737 4783 6706#
LOADT. . . . . . .  C ADDR   27E0H   R   SEG=MAIN   2664 2709 3321 6361#
LOADUS . . . . . .  C ADDR   277FH   R   SEG=MAIN   707 1428 1676 2553 2619 3261 3265 3294 3461 5028 5718 5835 6285#
LOAHL_R2 . . . . .  C ADDR   2121H   R   SEG=MAIN   5102 5114 5165# 5292 5308 5446 5459
LOBLOK . . . . . .  C ADDR   1786H   R   SEG=MAIN   3759 3814# 3833
LOCLE. . . . . . .  C ADDR   15BAH   R   SEG=MAIN   3539 3547#
LOD1 . . . . . . .  C ADDR   27EFH   R   SEG=MAIN   6369# 6374
LODT . . . . . . .  C ADDR   27FEH   R   SEG=MAIN   6382# 6387
LOIZMK . . . . . .  C ADDR   144DH   R   SEG=MAIN   3352# 3387
LOKAME1. . . . . .  C ADDR   1B48H   R   SEG=MAIN   4328#
LOLEVT . . . . . .  C ADDR   27E2H   R   SEG=MAIN   2534 6362#
LOLIST . . . . . .  C ADDR   15AFH   R   SEG=MAIN   3541#
LOME1. . . . . . .  C ADDR   1ED7H   R   SEG=MAIN   4839# 4843 4846 4849 4852 4856 4859 4862 4865 4869
LOMENU . . . . . .  C ADDR   1ECFH   R   SEG=MAIN   2847 2860 4328 4377 4399 4836#
LOOP . . . . . . .  C ADDR   273BH   R   SEG=MAIN   6231# 6232
LOOPS. . . . . . .  C ADDR   2FD4H   R   SEG=MAIN   7753# 7786
LOSPUS . . . . . .  C ADDR   27B9H   R   SEG=MAIN   2258 6324#
LOSTAT . . . . . .  C ADDR   15D4H   R   SEG=MAIN   3553 3559#
LOTEXT . . . . . .  C ADDR   27FAH   R   SEG=MAIN   1570 1574 1665 1668 2574 2740 2748 2756 2872 2880 2923 2932 2940
                                           2949 2961 3251 3344 3413 3496 3542 3550 3556 3561 3566 3581 3782 3815 3827
                                           3882 4003 4071 4095 4258 4294 4302 4310 4323 4345 4350 4396 4537 4584 4589
                                           4750 4839 4945 6379# 6935
LOTP . . . . . . .  C ADDR   2A43H   R   SEG=MAIN   6763# 6773 6775
LOTPUS . . . . . .  C ADDR   2A3BH   R   SEG=MAIN   4407 6319 6760#
LOU. . . . . . . .  C ADDR   0F90H   R   SEG=MAIN   2587 2603 2607#
LOUIZM . . . . . .  C ADDR   0F6DH   R   SEG=MAIN   2587# 2614 6316
LOUTF. . . . . . .  C ADDR   122AH   R   SEG=MAIN   3015# 3024 3031 3035 3037
LOVICH . . . . . .  C ADDR   1443H   R   SEG=MAIN   3348# 3380 3401 4796
LOWR . . . . . . .  C ADDR   15C7H   R   SEG=MAIN   3547 3553#
LOWR1. . . . . . .  C ADDR   15CCH   R   SEG=MAIN   3555# 3775
LSUB . . . . . . .  C ADDR   3100H   R   SEG=MAIN   1226 1397 6276 7955#
LTEMP. . . . . . .  N NUMB   0008H   A      1150 1152 1153 1154 6601 6602 6603 6604 7109 7112 7115 7118 7161 7162
                                           7163 7164 7379# 7744 7745 7746 7747 7756 7760 7764 7768 7771 7772 7773
                                           7774 7775 7776 7777 7778 7779 7780 7781 7782 7785 7788 7793 7797 7801 7811
                                           7814 7817 7820 7836 7839 7840 7842 7843 7845 7846 7848 7853 7854 7855 7856
                                           7876 7881 7889 7897 7902 7913 7921 7927 7935 7941 8309 8310 8349 8354 8356
                                           8365 8366 8367 8368 8599 8607 8620 8623 8626 8629 9201 9204 9207 9210
LWR. . . . . . . .  C ADDR   2CFDH   R   SEG=MAIN   7048# 7052
LWRX . . . . . . .  C ADDR   2CC1H   R   SEG=MAIN   6993# 7004
LWTOF. . . . . . .  C ADDR   042FH   A      9094#
MABIN. . . . . . .  D ADDR   006FH   A      310#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   152

MAFORM . . . . . .  C ADDR   2D18H   R   SEG=MAIN   1730 1967 4157 5139 5326 5998 7056 7061 7066# 7098
MAIN . . . . . . .  C SEG    315DH       REL=UNIT   252 302# 477
MANT1. . . . . . .  N NUMB   0002H   A      8307# 8334 8383 8384
MANT2. . . . . . .  N NUMB   0008H   A      8309# 8360 8361 8492 8494 8495 8497 8498 8500 8501 8503 8542 8543 8545
                                           8546 8548 8549 8551 8552 8556 8558 8561 8564 8662 8664 8665 8667 8668 8670
                                           8671 8673 8724 8726 8727 8729 8730 8732 8733 8735 8817 8821 8825 8829 8833
                                           8836 8839 8842
MARK0_8. . . . . .  C ADDR   10B0H   R   SEG=MAIN   2767 2783 2785#
MARKER . . . . . .  D ADDR   00B2H   A      416# 617 2459 2727 2766 2774 2782 2792 2798 2997 3005 3044 3051 3063 3167
                                           3391 3408 3427 3520 3638 3739 3790 3798 3819 3845 3852 3910 3949 3956 3996
                                           4039 4097 4113 4232 4378 4473 4480 4565 4578 4601 4608 4655 4686 4705 4712
                                           4746 4756 4767 4792 6790 6816 6840 6851 6909
MARLE. . . . . . .  C ADDR   2AB6H   R   SEG=MAIN   3964 6837#
MARRI. . . . . . .  C ADDR   2AC3H   R   SEG=MAIN   3071 6850#
MAS10. . . . . . .  C ADDR   040EH   R   SEG=MAIN   948 961#
MAS20. . . . . . .  C ADDR   048EH   R   SEG=MAIN   961 1010#
MAS4 . . . . . . .  C ADDR   0582H   R   SEG=MAIN   1008 1099#
MAS5DIV. . . . . .  C ADDR   05F6H   R   SEG=MAIN   1134 1139 1144 1148 1156#
MASFULL. . . . . .  C ADDR   05BDH   R   SEG=MAIN   1124 1127#
MASS0. . . . . . .  X ADDR   0100H   A      443 444# 949 954 979 985 1050 1056 1104 1110 7035
MASS1. . . . . . .  X ADDR   0104H   A      445# 957 977 988 1048 1058 1102 1113
MASS10 . . . . . .  X ADDR   0128H   A      454# 1029 1077
MASS11 . . . . . .  X ADDR   012CH   A      455# 1026 1079
MASS12 . . . . . .  X ADDR   0130H   A      456# 1024 1081
MASS13 . . . . . .  X ADDR   0134H   A      457# 1022 1083
MASS14 . . . . . .  X ADDR   0138H   A      458# 1020 1085
MASS15 . . . . . .  X ADDR   013CH   A      459# 1017 1087
MASS16 . . . . . .  X ADDR   0140H   A      460# 1015 1089
MASS17 . . . . . .  X ADDR   0144H   A      461# 1013 1091
MASS18 . . . . . .  X ADDR   0148H   A      462# 1011 1093
MASS19 . . . . . .  X ADDR   014CH   A      463# 1095
MASS2. . . . . . .  X ADDR   0108H   A      446# 974 990 1046 1060 1100 1115
MASS3. . . . . . .  X ADDR   010CH   A      447# 972 992 1043 1062 1117
MASS4. . . . . . .  X ADDR   0110H   A      448# 970 994 1041 1064
MASS5. . . . . . .  X ADDR   0114H   A      449# 968 996 1039 1066
MASS6. . . . . . .  X ADDR   0118H   A      450# 966 998 1037 1068
MASS7. . . . . . .  X ADDR   011CH   A      451# 964 1000 1035 1070
MASS8. . . . . . .  X ADDR   0120H   A      452# 962 1002 1033 1072
MASS9. . . . . . .  X ADDR   0124H   A      453# 1004 1031 1074
MASX5. . . . . . .  C ADDR   05ECH   R   SEG=MAIN   1125 1150#
MAXG . . . . . . .  C ADDR   2280H   R   SEG=MAIN   5405# 5454
MAXVIX . . . . . .  C ADDR   22EAH   R   SEG=MAIN   5462 5465#
MD_3 . . . . . . .  C ADDR   0B47H   R   SEG=MAIN   1955#
MD_5 . . . . . . .  C ADDR   0B47H   R   SEG=MAIN   1956#
ME11_15DE. . . . .  C ADDR   191DH   R   SEG=MAIN   4049# 4068
ME11_15DEC . . . .  C ADDR   1B47H   R   SEG=MAIN   4049 4327#
ME21_22. . . . . .  C ADDR   11F2H   R   SEG=MAIN   2961# 2970
ME21_23. . . . . .  C ADDR   1BC1H   R   SEG=MAIN   4082 4386#
ME21_23DEC . . . .  C ADDR   1BDDH   R   SEG=MAIN   4393 4398#
ME3. . . . . . . .  C ADDR   0287H   R   SEG=MAIN   718 720#
MEAVP. . . . . . .  C ADDR   13B9H   R   SEG=MAIN   3273 3276#
MECLE. . . . . . .  C ADDR   01A4H   R   SEG=MAIN   585# 587
MEFF . . . . . . .  C ADDR   01ABH   R   SEG=MAIN   589# 592
MEM10MS. . . . . .  C ADDR   02B3H   R   SEG=MAIN   755#
MEM12NO. . . . . .  C ADDR   1747H   R   SEG=MAIN   3769 3773#
MENG . . . . . . .  C ADDR   206DH   R   SEG=MAIN   5064# 5112
MENU12 . . . . . .  C ADDR   1EDBH   R   SEG=MAIN   4837 4841#
MENU13 . . . . . .  C ADDR   1EE3H   R   SEG=MAIN   4841 4844#
MENU14 . . . . . .  C ADDR   1EEBH   R   SEG=MAIN   4844 4847#
MENU15 . . . . . .  C ADDR   1EF3H   R   SEG=MAIN   4847 4850#
MENU21 . . . . . .  C ADDR   1EFBH   R   SEG=MAIN   4850 4854#
MENU22 . . . . . .  C ADDR   1F03H   R   SEG=MAIN   4854 4857#
MENU23 . . . . . .  C ADDR   1F0BH   R   SEG=MAIN   4857 4860#
MENU31 . . . . . .  C ADDR   1F13H   R   SEG=MAIN   4860 4863#
MENU41 . . . . . .  C ADDR   1F1BH   R   SEG=MAIN   4863 4867#
MENUOFF. . . . . .  C ADDR   1394H   R   SEG=MAIN   3244 3257#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   153

MENUON . . . . . .  C ADDR   1953H   R   SEG=MAIN   4073#
MERR . . . . . . .  C ADDR   136FH   R   SEG=MAIN   3234# 3243
ME_14. . . . . . .  C ADDR   15DEH   R   SEG=MAIN   3563#
ME_41. . . . . . .  C ADDR   1C87H   R   SEG=MAIN   4424 4494#
ME_5 . . . . . . .  C ADDR   0BBAH   R   SEG=MAIN   1957 2032#
ME_52. . . . . . .  C ADDR   1C5BH   R   SEG=MAIN   4470# 4494
ME_52V . . . . . .  C ADDR   1C78H   R   SEG=MAIN   4484 4486#
ME_6 . . . . . . .  C ADDR   0BF4H   R   SEG=MAIN   2033 2058 2065#
MIDL . . . . . . .  C ADDR   3007H   R   SEG=MAIN   7748 7783#
MIGN . . . . . . .  C ADDR   2AF3H   R   SEG=MAIN   5493 6909#
MIGNN. . . . . . .  C ADDR   2AFBH   R   SEG=MAIN   6910 6915#
MIN4_HL. . . . . .  C ADDR   212DH   R   SEG=MAIN   5178# 5211 5237 5372 5395
MING . . . . . . .  C ADDR   218BH   R   SEG=MAIN   5248# 5302
MINIVIX. . . . . .  C ADDR   21F5H   R   SEG=MAIN   5313 5318# 5465
MLABL2 . . . . . .  C ADDR   17B1H   R   SEG=MAIN   3837# 3868 4106
MLABL2R. . . . . .  C ADDR   1991H   R   SEG=MAIN   4106# 4109
MMM. . . . . . . .  C ADDR   02AEH   R   SEG=MAIN   751#
MO220. . . . . . .  C ADDR   0999H   R   SEG=MAIN   1242 1407 1658#
MO500I . . . . . .  C ADDR   0906H   R   SEG=MAIN   1454 1573#
MO500I_. . . . . .  C ADDR   082CH   R   SEG=MAIN   1453# 1476
MO500R . . . . . .  C ADDR   08FAH   R   SEG=MAIN   1452 1569#
MO500R_. . . . . .  C ADDR   0829H   R   SEG=MAIN   1451# 1471
MODF . . . . . . .  B ADDR   00F8H.5 A      241#
MOUTF. . . . . . .  C ADDR   117FH   R   SEG=MAIN   2909# 2920 2929 2937 2946 2954
MOUTKMEM . . . . .  C ADDR   1920H   R   SEG=MAIN   4050# 4058
MOVE28 . . . . . .  C ADDR   2D85H   R   SEG=MAIN   1301 1319 1367 1478 2350 2388 4880 4963 4981 5104 5116 5131 5291
                                           5307 5445 5458 7161#
MOVE82 . . . . . .  C ADDR   293FH   R   SEG=MAIN   6601#
MOVEA3 . . . . . .  C ADDR   09F3H   R   SEG=MAIN   1714#
MOVEA3_. . . . . .  C ADDR   0B51H   R   SEG=MAIN   1959 1962#
MOVER3_. . . . . .  C ADDR   089CH   R   SEG=MAIN   1508 1511#
MOVLEFT. . . . . .  D ADDR   003AH   A      316# 2768 3013 3056 3410 3758 3799 3807 3861 3913 3957 4100 4381 4483
                                           4567 4611 4687 4715 6844
MOVRIG . . . . . .  D ADDR   003BH   A      315# 2764 3006 3010 3052 3411 3757 3803 3853 3857 3912 3961 4099 4380
                                           4568 4691 6853
MR_5 . . . . . . .  C ADDR   08C3H   R   SEG=MAIN   1505 1506 1540#
MSTEN. . . . . . .  B ADDR   00F8H.1 A      245#
MT0A . . . . . . .  C ADDR   25C5H   R   SEG=MAIN   5983# 5984
MTB2 . . . . . . .  C ADDR   2430H   R   SEG=MAIN   5710 5713 5721# 5731 5806
MTE2 . . . . . . .  C ADDR   24C7H   R   SEG=MAIN   5805 5807#
MTF. . . . . . . .  C ADDR   24D5H   R   SEG=MAIN   5800 5820#
MTF1 . . . . . . .  C ADDR   24E1H   R   SEG=MAIN   5822 5825#
MTF2 . . . . . . .  C ADDR   2492H   R   SEG=MAIN   5735 5771 5774# 5810 5837
MTF3 . . . . . . .  C ADDR   24FFH   R   SEG=MAIN   5829 5837#
MTF4 . . . . . . .  C ADDR   258BH   R   SEG=MAIN   5938 5942#
MTG. . . . . . . .  C ADDR   24E6H   R   SEG=MAIN   5820 5827#
MTH. . . . . . . .  C ADDR   2533H   R   SEG=MAIN   5855 5874#
MTH1 . . . . . . .  C ADDR   2549H   R   SEG=MAIN   5876 5886#
MTH2 . . . . . . .  C ADDR   2559H   R   SEG=MAIN   5887 5896#
MTI. . . . . . . .  C ADDR   255CH   R   SEG=MAIN   5884 5901#
MTI0 . . . . . . .  C ADDR   2547H   R   SEG=MAIN   5874 5884#
MTI1 . . . . . . .  C ADDR   255FH   R   SEG=MAIN   5908#
MTK. . . . . . . .  C ADDR   2516H   R   SEG=MAIN   5827 5855#
MTK1 . . . . . . .  C ADDR   2525H   R   SEG=MAIN   5857 5862#
MTX. . . . . . . .  C ADDR   255FH   R   SEG=MAIN   5901 5913#
MTX0 . . . . . . .  C ADDR   2591H   R   SEG=MAIN   5940 5945#
MTX0A. . . . . . .  C ADDR   2609H   R   SEG=MAIN   6020# 6021
MTX1 . . . . . . .  C ADDR   259FH   R   SEG=MAIN   5946 5959#
MTX2 . . . . . . .  C ADDR   25B4H   R   SEG=MAIN   5960 5970#
MTX3 . . . . . . .  C ADDR   2621H   R   SEG=MAIN   5971 6036#
MTX5 . . . . . . .  C ADDR   257FH   R   SEG=MAIN   5918 5936#
MTXA . . . . . . .  C ADDR   25CDH   R   SEG=MAIN   5987# 6031
MTXB . . . . . . .  C ADDR   25E7H   R   SEG=MAIN   6000# 6001
MTXC . . . . . . .  C ADDR   25EFH   R   SEG=MAIN   6005# 6006
MTXD . . . . . . .  C ADDR   25F7H   R   SEG=MAIN   6010# 6011
MTXE . . . . . . .  C ADDR   25FFH   R   SEG=MAIN   6015# 6016
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   154

MTY. . . . . . . .  C ADDR   257CH   R   SEG=MAIN   5914 5934#
MTY2 . . . . . . .  C ADDR   2633H   R   SEG=MAIN   5934 6054#
MUP1 . . . . . . .  C ADDR   021AH   A      8659# 8702
MUP11. . . . . . .  C ADDR   0257H   A      8706# 8751
MUP2 . . . . . . .  C ADDR   0297H   A      8736 8750#
MUP3 . . . . . . .  C ADDR   026CH   A      8705 8721#
MVV11. . . . . . .  C ADDR   1781H   R   SEG=MAIN   3779 3812#
MVV12. . . . . . .  C ADDR   1799H   R   SEG=MAIN   3812 3824#
N12DELCH . . . . .  C ADDR   0E54H   R   SEG=MAIN   2406 2414#
N4DELCH. . . . . .  C ADDR   0E00H   R   SEG=MAIN   2330 2368#
N8DELCH. . . . . .  C ADDR   0E42H   R   SEG=MAIN   2368 2406#
NBIMENU. . . . . .  C ADDR   1185H   R   SEG=MAIN   2913#
NBLOK. . . . . . .  D ADDR   0038H   A      318# 679 2039 2116 3603 3727 3816 3880 4093 4180 5629 5926 6110 7249 7270
                                           7301
NE05 . . . . . . .  C ADDR   0358H   A      8888 8890 8892 8895#
NELEM. . . . . . .  D ADDR   0037H   A      319# 680 4124 4237 4241
NEXIN. . . . . . .  C ADDR   231AH   R   SEG=MAIN   5496# 5503
NEXTMAX. . . . . .  C ADDR   22B5H   R   SEG=MAIN   5435 5442#
NEXTMEA. . . . . .  C ADDR   20A2H   R   SEG=MAIN   5094 5102#
NEXTMIN. . . . . .  C ADDR   21C0H   R   SEG=MAIN   5280 5288#
NMEM_MENU. . . . .  C ADDR   1923H   R   SEG=MAIN   4052# 4056
NMINUS . . . . . .  C ADDR   06B8H   R   SEG=MAIN   1269 1273#
NMINUS3. . . . . .  C ADDR   0616H   R   SEG=MAIN   1173 1175#
NNDELCH. . . . . .  C ADDR   0DC0H   R   SEG=MAIN   2316 2330#
NNMEMB . . . . . .  C ADDR   1288H   R   SEG=MAIN   2911 3079#
NNNOTT . . . . . .  C ADDR   14EBH   R   SEG=MAIN   3439# 3442
NNNUL. . . . . . .  C ADDR   0A71H   R   SEG=MAIN   1790 1793#
NO . . . . . . . .  C ADDR   2FEFH   R   SEG=MAIN   7758 7762 7766 7770#
NO0CHK . . . . . .  C ADDR   12D6H   R   SEG=MAIN   3133#
NO0CHKL. . . . . .  C ADDR   0E67H   R   SEG=MAIN   2426#
NO0KEY . . . . . .  C ADDR   02C8H   R   SEG=MAIN   762 769#
NO10MSV. . . . . .  C ADDR   18C4H   R   SEG=MAIN   4001 4007#
NO11V6 . . . . . .  C ADDR   1060H   R   SEG=MAIN   2735 2743#
NO12V6 . . . . . .  C ADDR   1074H   R   SEG=MAIN   2743 2751#
NO13V6 . . . . . .  C ADDR   1088H   R   SEG=MAIN   2751 2761#
NO21P7 . . . . . .  C ADDR   1E67H   R   SEG=MAIN   4725 4774#
NO23RI . . . . . .  C ADDR   1131H   R   SEG=MAIN   2858 2862#
NO2MSV . . . . . .  C ADDR   18C1H   R   SEG=MAIN   4006# 4007 4017
NO2PARN. . . . . .  C ADDR   09E8H   R   SEG=MAIN   1697 1703#
NO31N. . . . . . .  C ADDR   187BH   R   SEG=MAIN   3970#
NO31RI . . . . . .  C ADDR   1167H   R   SEG=MAIN   2864 2899#
NO3PARN. . . . . .  C ADDR   09DEH   R   SEG=MAIN   1697# 1772
NO4DEL . . . . . .  C ADDR   0D63H   R   SEG=MAIN   2262 2279#
NO5DEL . . . . . .  C ADDR   0D82H   R   SEG=MAIN   2294# 2302
NO6DEL . . . . . .  C ADDR   0D90H   R   SEG=MAIN   2292 2300#
NOAVK. . . . . . .  C ADDR   068AH   R   SEG=MAIN   1199 1247# 2310
NOAVP. . . . . . .  C ADDR   07AFH   R   SEG=MAIN   1388# 1419 1422
NOBAVP . . . . . .  C ADDR   0A8FH   R   SEG=MAIN   1572 1576 1656 1808 1812#
NOBEF99. . . . . .  C ADDR   037FH   R   SEG=MAIN   869 885# 903 918 934
NOBIT. . . . . . .  C ADDR   0245H   A      8674 8688#
NOBITIZM . . . . .  C ADDR   0A98H   R   SEG=MAIN   1814 1817#
NOBL21 . . . . . .  C ADDR   11FBH   R   SEG=MAIN   2958 2966#
NOBL22 . . . . . .  C ADDR   1205H   R   SEG=MAIN   2966 2986#
NOBUF. . . . . . .  C ADDR   0ACDH   R   SEG=MAIN   1845 1847#
NOBUF0 . . . . . .  C ADDR   0D06H   R   SEG=MAIN   2106 2225#
NOCHI0 . . . . . .  C ADDR   09DAH   R   SEG=MAIN   1408 1688#
NOCHIND. . . . . .  C ADDR   02E7H   R   SEG=MAIN   783 791#
NOCHN10. . . . . .  C ADDR   05D9H   R   SEG=MAIN   1136 1141#
NOCHN2 . . . . . .  C ADDR   05CEH   R   SEG=MAIN   1131 1136#
NOCHN20. . . . . .  C ADDR   05E4H   R   SEG=MAIN   1141 1146#
NODI2. . . . . . .  C ADDR   09BEH   R   SEG=MAIN   1661 1673#
NODI6. . . . . . .  C ADDR   13C9H   R   SEG=MAIN   3283 3287#
NODI8. . . . . . .  C ADDR   0A44H   R   SEG=MAIN   1755 1762#
NODI8K . . . . . .  C ADDR   1CF7H   R   SEG=MAIN   4553 4558#
NODI8RS. . . . . .  C ADDR   0B99H   R   SEG=MAIN   1996 2005#
NODI8_43 . . . . .  C ADDR   1A57H   R   SEG=MAIN   4194 4201#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   155

NODI9. . . . . . .  C ADDR   09C3H   R   SEG=MAIN   1674 1676#
NODI9_43 . . . . .  C ADDR   1A62H   R   SEG=MAIN   4201 4208#
NODIS9 . . . . . .  C ADDR   0A57H   R   SEG=MAIN   1762 1774#
NODIS9RS . . . . .  C ADDR   0BA9H   R   SEG=MAIN   2005 2018#
NODISK9. . . . . .  C ADDR   1CFFH   R   SEG=MAIN   4557 4558 4565#
NOENDLI. . . . . .  C ADDR   2E27H   R   SEG=MAIN   7283 7287#
NOEND_M. . . . . .  C ADDR   2686H   R   SEG=MAIN   6123 6127#
NOEQU1 . . . . . .  C ADDR   126DH   R   SEG=MAIN   3055 3059#
NOEQU2 . . . . . .  C ADDR   1875H   R   SEG=MAIN   3960 3964#
NOFIZM . . . . . .  C ADDR   1041H   R   SEG=MAIN   2699 2731#
NOFT1. . . . . . .  C ADDR   101BH   R   SEG=MAIN   2704 2708#
NOFZ . . . . . . .  C ADDR   0D01H   R   SEG=MAIN   2216 2220#
NOH37. . . . . . .  C ADDR   1462H   R   SEG=MAIN   3340 3365# 3375
NOHNOT1. . . . . .  C ADDR   1540H   R   SEG=MAIN   3443 3485#
NOHNOT2. . . . . .  C ADDR   1535H   R   SEG=MAIN   3478# 3485
NOKLB. . . . . . .  C ADDR   0AC7H   R   SEG=MAIN   1843 1845#
NOKORR . . . . . .  C ADDR   0632H   R   SEG=MAIN   1183 1186 1189#
NOLAH. . . . . . .  C ADDR   1424H   R   SEG=MAIN   3312 3330#
NOLI_43. . . . . .  C ADDR   1AD3H   R   SEG=MAIN   4227 4272#
NOM31. . . . . . .  C ADDR   1853H   R   SEG=MAIN   3865 3939#
NOM32. . . . . . .  C ADDR   18CCH   R   SEG=MAIN   3939 4013#
NOM33. . . . . . .  C ADDR   18FAH   R   SEG=MAIN   4013 4033#
NOMARL . . . . . .  C ADDR   1DE4H   R   SEG=MAIN   4689 4695 4699#
NOMAXI . . . . . .  C ADDR   22CDH   R   SEG=MAIN   5449 5452#
NOME11 . . . . . .  C ADDR   1737H   R   SEG=MAIN   3766#
NOMEM11. . . . . .  C ADDR   11A0H   R   SEG=MAIN   2916 2926#
NOMEM12. . . . . .  C ADDR   11B6H   R   SEG=MAIN   2926 2934#
NOMEM13. . . . . .  C ADDR   11CCH   R   SEG=MAIN   2934 2943#
NOMEMK . . . . . .  C ADDR   1734H   R   SEG=MAIN   3510 3764#
NOMINI . . . . . .  C ADDR   21D8H   R   SEG=MAIN   5297 5300#
NON1C. . . . . . .  C ADDR   0FEFH   R   SEG=MAIN   2679 2683#
NONULAVT . . . . .  C ADDR   066FH   R   SEG=MAIN   1194 1232#
NONULDEL . . . . .  C ADDR   0D45H   R   SEG=MAIN   2250 2261#
NOP1OLL. . . . . .  C ADDR   0AE1H   R   SEG=MAIN   1853 1854 1857#
NOP3_0 . . . . . .  C ADDR   09DEH   R   SEG=MAIN   1690#
NOPART1. . . . . .  C ADDR   0383H   R   SEG=MAIN   858 891#
NOPART2. . . . . .  C ADDR   03A3H   R   SEG=MAIN   891 908#
NOPART3. . . . . .  C ADDR   03C3H   R   SEG=MAIN   908 923#
NOPART4. . . . . .  C ADDR   03E3H   R   SEG=MAIN   923 939#
NOPLUS . . . . . .  C ADDR   10D8H   R   SEG=MAIN   2810 2813#
NOPOIN7. . . . . .  C ADDR   1DFBH   R   SEG=MAIN   4685 4720#
NOPOINT. . . . . .  C ADDR   1DC7H   R   SEG=MAIN   4679 4683#
NORDN. . . . . . .  C ADDR   00F6H   A      8395# 8428
NORDN1 . . . . . .  C ADDR   0107H   A      8397 8411#
NORIG2 . . . . . .  C ADDR   1240H   R   SEG=MAIN   3020 3028#
NORIM6 . . . . . .  C ADDR   1288H   R   SEG=MAIN   3081#
NORIME . . . . . .  C ADDR   1117H   R   SEG=MAIN   2845 2849#
NORIME1. . . . . .  C ADDR   1111H   R   SEG=MAIN   2847# 2850 2863
NORM1. . . . . . .  C ADDR   00F0H   A      8390# 8587 8764 8866 9083
NORR11 . . . . . .  C ADDR   147AH   R   SEG=MAIN   3376#
NORR12 . . . . . .  C ADDR   148AH   R   SEG=MAIN   3376 3383# 3397
NORUP. . . . . . .  C ADDR   0119H   A      8394 8431#
NORUP1 . . . . . .  C ADDR   011EH   A      8436# 8454
NORUP2 . . . . . .  C ADDR   0132H   A      8438 8455#
NORVICH. . . . . .  C ADDR   0AE4H   R   SEG=MAIN   1771 1865#
NOSAV1 . . . . . .  C ADDR   0C4FH   R   SEG=MAIN   2117 2120#
NOSAV2 . . . . . .  C ADDR   0C56H   R   SEG=MAIN   2120 2123#
NOSAV3 . . . . . .  C ADDR   0C5DH   R   SEG=MAIN   2123 2126#
NOSUB. . . . . . .  C ADDR   302AH   R   SEG=MAIN   7792 7796 7800 7805#
NOSV1. . . . . . .  C ADDR   0BD2H   R   SEG=MAIN   2040 2043#
NOSV2. . . . . . .  C ADDR   0BD9H   R   SEG=MAIN   2043 2046#
NOSV3. . . . . . .  C ADDR   0BE0H   R   SEG=MAIN   2046 2049#
NOT1IN . . . . . .  C ADDR   0D1BH   R   SEG=MAIN   1938 2235#
NOT1_7 . . . . . .  C ADDR   135FH   R   SEG=MAIN   3219 3226#
NOT2IN . . . . . .  C ADDR   0D23H   R   SEG=MAIN   2235 2239#
NOT2_7 . . . . . .  C ADDR   136AH   R   SEG=MAIN   3226 3231#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   156

NOT3IN . . . . . .  C ADDR   0D2BH   R   SEG=MAIN   2239 2242#
NOTAKT . . . . . .  C ADDR   0AA2H   R   SEG=MAIN   1818 1822#
NOTE21 . . . . . .  C ADDR   072FH   R   SEG=MAIN   1288 1330#
NOTE22 . . . . . .  C ADDR   074AH   R   SEG=MAIN   1330 1342#
NOTESTIZM. . . . .  C ADDR   0762H   R   SEG=MAIN   1256 1354#
NOTT1. . . . . . .  C ADDR   0C99H   R   SEG=MAIN   2161 2166#
NOTT2. . . . . . .  C ADDR   0CC1H   R   SEG=MAIN   2166 2189#
NOTT3. . . . . . .  C ADDR   0CCFH   R   SEG=MAIN   2189 2196#
NOTT4. . . . . . .  C ADDR   0CE6H   R   SEG=MAIN   2196 2205#
NOTT5. . . . . . .  C ADDR   0CF4H   R   SEG=MAIN   2205 2210#
NOT_1. . . . . . .  C ADDR   0FF6H   R   SEG=MAIN   2683 2688#
NOT_10 . . . . . .  C ADDR   0FF6H   R   SEG=MAIN   2687#
NOVIR. . . . . . .  C ADDR   10F9H   R   SEG=MAIN   2720 2834#
NOVIR1 . . . . . .  C ADDR   102BH   R   SEG=MAIN   2720# 2731
NOZMEA . . . . . .  C ADDR   211DH   R   SEG=MAIN   5159 5161#
NOZMIN . . . . . .  C ADDR   222CH   R   SEG=MAIN   5344 5346#
NOZZBL . . . . . .  C ADDR   1A49H   R   SEG=MAIN   4183 4186 4189 4192#
NOZZMI . . . . . .  C ADDR   0A31H   R   SEG=MAIN   1750 1752#
NOZZMI1. . . . . .  C ADDR   1A39H   R   SEG=MAIN   4181 4184#
NOZZMI2. . . . . .  C ADDR   1A40H   R   SEG=MAIN   4184 4187#
NOZZMI3. . . . . .  C ADDR   1A47H   R   SEG=MAIN   4187 4191#
NOZZMI43 . . . . .  C ADDR   1A30H   R   SEG=MAIN   4177 4180#
NOZZMIRS . . . . .  C ADDR   0B84H   R   SEG=MAIN   1991 1993#
NSEC1. . . . . . .  C ADDR   0A7BH   R   SEG=MAIN   1794 1798#
NSEC10 . . . . . .  C ADDR   0A86H   R   SEG=MAIN   1797 1801 1806#
NSEC11 . . . . . .  C ADDR   0A83H   R   SEG=MAIN   1798 1803#
NUERR. . . . . . .  D ADDR   0039H   A      317# 1445 1855 4369 4572 4758 6160 6172 6936
NULAVT . . . . . .  C ADDR   0DA5H   R   SEG=MAIN   2314#
NUMSIZE. . . . . .  N NUMB   0004H   A      7382# 7399 7437 7443 7517 7535
OBOARD . . . . . .  C ADDR   2F60H   R   SEG=MAIN   7616 7630#
OBOARD1. . . . . .  C ADDR   2FA8H   R   SEG=MAIN   7689 7702#
OFFMENUM . . . . .  C ADDR   158BH   R   SEG=MAIN   3524# 3530
OK1. . . . . . . .  C ADDR   0186H   A      8521 8536#
OK2. . . . . . . .  C ADDR   01A0H   A      8538 8553#
OK3. . . . . . . .  C ADDR   01C4H   A      8570 8586#
OLDMAX . . . . . .  C ADDR   224CH   R   SEG=MAIN   5363 5369#
OLDMEAN. . . . . .  C ADDR   2058H   R   SEG=MAIN   5046 5052#
OLDMIN . . . . . .  C ADDR   2157H   R   SEG=MAIN   5201 5207#
ONBOAR1. . . . . .  C ADDR   2F86H   R   SEG=MAIN   7651 7668#
ONBOARD. . . . . .  C ADDR   2F3AH   R   SEG=MAIN   7580 7594#
ONMEM11. . . . . .  C ADDR   1565H   R   SEG=MAIN   3256 3323 3345 3504# 3543 3551 3557 3562 3783 3823 3830 4072 4078
                                           4325 4329 4334 4348 4353 4383 4397 4400 4587 4592
ONMEM12. . . . . .  C ADDR   1C03H   R   SEG=MAIN   4404 4420# 4428
ONMEM13. . . . . .  C ADDR   1DA7H   R   SEG=MAIN   4612 4667# 4671 4673
ONMIG. . . . . . .  C ADDR   2B09H   R   SEG=MAIN   6919 6927#
ONTEST . . . . . .  C ADDR   0FA5H   R   SEG=MAIN   2609 2622#
ONVICH . . . . . .  C ADDR   0F61H   R   SEG=MAIN   2566 2578#
OSCICN . . . . . .  D ADDR   00B2H   A      74# 515
OSCXCN . . . . . .  D ADDR   00B1H   A      73# 510
OUT43. . . . . . .  C ADDR   1A6BH   R   SEG=MAIN   4217#
OUT6 . . . . . . .  C ADDR   1288H   R   SEG=MAIN   2420 2512 2556 2644 2649 2654 2670 2718 2826 3082#
OUT7 . . . . . . .  C ADDR   1E90H   R   SEG=MAIN   3127 3128 3223 3230 3234 3262 3268 3318 3508 3589 3924 4052 4219
                                           4226 4271 4363 4465 4662 4674 4769 4771 4799#
OUTA . . . . . . .  C ADDR   2AD0H   R   SEG=MAIN   3414 6861#
OUTA2. . . . . . .  C ADDR   2AEAH   R   SEG=MAIN   6872# 6877
OUTF . . . . . . .  C ADDR   1021H   R   SEG=MAIN   2714#
OUTFL. . . . . . .  C ADDR   10E9H   R   SEG=MAIN   2818 2822#
OUTKMEM. . . . . .  C ADDR   1572H   R   SEG=MAIN   3511# 3533 4050
OUTMA. . . . . . .  C ADDR   10C2H   R   SEG=MAIN   2801 2803#
OUTMAX . . . . . .  C ADDR   22D2H   R   SEG=MAIN   5350 5439 5455#
OUTMEA . . . . . .  C ADDR   20BDH   R   SEG=MAIN   5050 5098 5113#
OUTMENU. . . . . .  C ADDR   1B90H   R   SEG=MAIN   4362#
OUTMIN . . . . . .  C ADDR   21DDH   R   SEG=MAIN   5187 5284 5304#
OUTR . . . . . . .  C ADDR   095DH   R   SEG=MAIN   1601 1624#
OUTR5. . . . . . .  C ADDR   0979H   R   SEG=MAIN   1622 1643#
OUTSKO . . . . . .  C ADDR   1C4EH   R   SEG=MAIN   4459 4463#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   157

OUTSKO1. . . . . .  C ADDR   1C49H   R   SEG=MAIN   4457 4460#
OUTVICH. . . . . .  C ADDR   102EH   R   SEG=MAIN   2721# 2733
OUTVIR . . . . . .  C ADDR   0EEBH   R   SEG=MAIN   2479 2508#
OUT_KALI . . . . .  C ADDR   1F9FH   R   SEG=MAIN   4947#
OV . . . . . . . .  B ADDR   00D0H.2 A      215# 7572
P. . . . . . . . .  B ADDR   00D0H.0 A      217#
P0 . . . . . . . .  D ADDR   0080H   A      26# 5496 5500
P0MDOUT. . . . . .  D ADDR   00A4H   A      60# 488
P1 . . . . . . . .  D ADDR   0090H   A      42# 723 724 1854 4368 6180 6182 6185 6188 6192 6194 6195 6239 6241 6243
                                           6665 6672 7191 7194 7196 7199
P1MDIN . . . . . .  D ADDR   00BDH   A      83#
P1MDOUT. . . . . .  D ADDR   00A5H   A      61# 489
P2 . . . . . . . .  D ADDR   00A0H   A      57# 6213 6217 6226
P2MDOUT. . . . . .  D ADDR   00A6H   A      62# 490
P3 . . . . . . . .  D ADDR   00B0H   A      72# 499 2429 2478 2480 2482 2483 2486 2487 2491 2492 2494 2495 2497 2498
                                           2500 2501 2503 2504 2693 2694 2700 2701 2732 2733 2736 2737 2744 2745 2752
                                           2753 2761 2762 2805 2806 2816 2817 2842 2843 2856 2857 2867 2868 2903 2904
                                           2905 2906 2918 2919 2927 2928 2935 2936 2944 2945 2953 2954 2987 2988 3023
                                           3024 3032 3033 3073 3074 3103 3134 3174 3176 3178 3179 3182 3183 3185 3186
                                           3188 3189 3191 3196 3198 3199 3201 3202 3313 3316 3339 3340 3365 3366 3377
                                           3378 3384 3385 3398 3399 3441 3442 3529 3530 3532 3533 3536 3537 3576 3577
                                           3593 3594 3595 3596 3647 3648 3766 3767 3776 3777 3867 3868 3869 3870 3940
                                           3941 3970 3971 4014 4015 4016 4017 4034 4035 4036 4037 4055 4056 4057 4058
                                           4065 4066 4108 4109 4110 4111 4228 4229 4317 4318 4391 4392 4403 4404 4425
                                           4426 4427 4428 4471 4472 4488 4489 4495 4496 4497 4498 4670 4671 4672 4673
                                           4677 4678 4683 4684 4720 4721 4813 6212 6214 6216 6222 6223 6224 6227 6228
P3IF . . . . . . .  D ADDR   00ADH   A      69# 763 765 2428 2439 3102 3133 3148 4812
P3MDOUT. . . . . .  D ADDR   00A7H   A      63# 492
P4 . . . . . . . .  D ADDR   0084H   A      30# 2252 2272 2317 2399 2594 2596 4933 6294 6297 6313 6315 6765
P5 . . . . . . . .  D ADDR   0085H   A      31# 625 634 2254 2274 2319 2322 2327 2361 2363 2401 2604 2606 4937 6302
                                           6305 6335 6338 6769
P6 . . . . . . . .  D ADDR   0086H   A      32# 2132 2134 2137 2139 3105 3107 3110 3112 4816 4818 4821 4823
P7 . . . . . . . .  D ADDR   0096H   A      48#
P74OUT . . . . . .  D ADDR   00B5H   A      75# 493
PACK1. . . . . . .  C ADDR   00DEH   A      8373# 8588 8765 8867 9084
PARERR . . . . . .  C ADDR   1D0CH   R   SEG=MAIN   4528 4530 4532 4572#
PARN . . . . . . .  D ADDR   00AFH   A      413# 631 1784 2674 3468 5633 5813
PAROL. . . . . . .  D ADDR   00A8H   A      409#
PART . . . . . . .  D ADDR   009AH   A      403# 626 856 1162 1206 1232 1247 1793 1866 2060 2160 2291 2560 2638 2675
                                           3217 3452 3467 3914 4000 5599 5625 5739 6306 6691
PCA0CN . . . . . .  D ADDR   00D8H   A      109# 220 221 222 223 224 225 226 536
PCA0CPH0 . . . . .  D ADDR   00FAH   A      142# 535
PCA0CPH1 . . . . .  D ADDR   00FBH   A      143#
PCA0CPH2 . . . . .  D ADDR   00FCH   A      144#
PCA0CPH3 . . . . .  D ADDR   00FDH   A      145#
PCA0CPH4 . . . . .  D ADDR   00FEH   A      146#
PCA0CPL0 . . . . .  D ADDR   00EAH   A      126# 534
PCA0CPL1 . . . . .  D ADDR   00EBH   A      127#
PCA0CPL2 . . . . .  D ADDR   00ECH   A      128#
PCA0CPL3 . . . . .  D ADDR   00EDH   A      129#
PCA0CPL4 . . . . .  D ADDR   00EEH   A      130#
PCA0CPM0 . . . . .  D ADDR   00DAH   A      111# 533 2141 2143 3114 3116 4825 4827 5479 5481
PCA0CPM1 . . . . .  D ADDR   00DBH   A      112#
PCA0CPM2 . . . . .  D ADDR   00DCH   A      113#
PCA0CPM3 . . . . .  D ADDR   00DDH   A      114#
PCA0CPM4 . . . . .  D ADDR   00DEH   A      115#
PCA0H. . . . . . .  D ADDR   00F9H   A      141#
PCA0L. . . . . . .  D ADDR   00E9H   A      125# 486
PCA0MD . . . . . .  D ADDR   00D9H   A      110# 487 532
PCON . . . . . . .  D ADDR   0087H   A      33# 528
POIN3. . . . . . .  C ADDR   1DFAH   R   SEG=MAIN   4718# 4772
POINA. . . . . . .  C ADDR   1E62H   R   SEG=MAIN   4716 4771#
POINA1 . . . . . .  C ADDR   1DDFH   R   SEG=MAIN   4688 4695#
POINA2 . . . . . .  C ADDR   1DD9H   R   SEG=MAIN   4691# 4696
POZB . . . . . . .  C ADDR   1E85H   R   SEG=MAIN   4785 4789#
PROD . . . . . . .  N NUMB   000CH   A      8310# 8654 8655 8656 8657 8677 8678 8679 8681 8682 8684 8685 8687 8709
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   158

                                           8711 8712 8714 8715 8717 8718 8720 8739 8740 8741 8743 8744 8746 8747 8749
                                           8760 8761 8762 8763 8784 8785 8786 8787 8803 8805 8806 8808 8809 8811 8812
                                           8814 8844 8861 8862 8863 8864
PS . . . . . . . .  B ADDR   00B8H.4 A      183#
PSCTL. . . . . . .  D ADDR   008FH   A      41# 9115 9119 9171 9174
PSW. . . . . . . .  D ADDR   00D0H   A      101# 210 211 212 213 214 215 216 217 2442 3092 3151 4810 5523 5577 7100
                                           7102 8045 8053
PT0. . . . . . . .  B ADDR   00B8H.1 A      186#
PT1. . . . . . . .  B ADDR   00B8H.3 A      184#
PT2. . . . . . . .  B ADDR   00B8H.5 A      182#
PX0. . . . . . . .  B ADDR   00B8H.0 A      187#
PX1. . . . . . . .  B ADDR   00B8H.2 A      185#
PYSKST . . . . . .  C ADDR   0EF5H   R   SEG=MAIN   2502 2514#
P_IN . . . . . . .  D ADDR   0027H   A      381# 711 5557 5566 5568
P_OUT. . . . . . .  D ADDR   0026H   A      380# 2029 5535 5538 5699
QUES . . . . . . .  C ADDR   1620H   R   SEG=MAIN   3589# 3594
QU_AVP . . . . . .  C ADDR   07ACH   R   SEG=MAIN   1385 1387#
R10. . . . . . . .  N NUMB   000AH   A      474# 1195 1440 1481 1493 2179 4531 6738 9138
R11. . . . . . . .  N NUMB   000BH   A      475# 1196 1439 1482 1492 2182 6742 9142
R8 . . . . . . . .  N NUMB   0008H   A      472# 1442 1479 1495 2173 4342 4527 6259 6730 9130
R9 . . . . . . . .  N NUMB   0009H   A      473# 1441 1480 1494 2176 4529 6260 6734 9134
RAFTERK. . . . . .  C ADDR   0648H   R   SEG=MAIN   1203# 1209
RB80 . . . . . . .  B ADDR   0098H.2 A      168#
RCAP2H . . . . . .  D ADDR   00CBH   A      97#
RCAP2L . . . . . .  D ADDR   00CAH   A      96#
RCAP4H . . . . . .  D ADDR   00E5H   A      121#
RCAP4L . . . . . .  D ADDR   00E4H   A      120#
RCLK0. . . . . . .  B ADDR   00C8H.5 A      202#
RDDOUTF. . . . . .  C ADDR   1674H   R   SEG=MAIN   3643# 3648
RE1. . . . . . . .  C ADDR   2744H   R   SEG=MAIN   6239# 6245
RE11_7 . . . . . .  C ADDR   06F0H   R   SEG=MAIN   1299# 1341 1352
RE4BYTE. . . . . .  C ADDR   0454H   A      4341 4524 9126#
REA3_M . . . . . .  C ADDR   2669H   R   SEG=MAIN   6088#
REA3_X . . . . . .  C ADDR   2E6DH   R   SEG=MAIN   4153 5988 7339#
REACP. . . . . . .  D ADDR   0077H   A      311# 738 740 742 744 802 818 825 833 841 848 860 894 909 925 940 2335
                                           2337 2339 2341 2373 2375 2377 2379
READ . . . . . . .  C ADDR   2742H   R   SEG=MAIN   737 739 741 6238#
READYACP . . . . .  C ADDR   033AH   R   SEG=MAIN   842 850#
READ_X2. . . . . .  C ADDR   272AH   R   SEG=MAIN   6221# 6231
REBYTE . . . . . .  C ADDR   0281H   R   SEG=MAIN   716# 756 780 886 2277 2299 2304 2329 2366 2404 2413 2415
REBYTE2. . . . . .  C ADDR   046CH   A      1291 1299 1317 1333 1344 1360 4953 4961 9146#
REBYTER. . . . . .  C ADDR   0D95H   R   SEG=MAIN   2288 2304#
REF0CN . . . . . .  D ADDR   00D1H   A      102# 494
REN0 . . . . . . .  B ADDR   0098H.4 A      166#
RENDKALIB. . . . .  C ADDR   13ACH   R   SEG=MAIN   3270# 3272
RESAR2 . . . . . .  C ADDR   2D91H   R   SEG=MAIN   861 895 910 926 941 953 983 1054 1108 1219 1262 1369 1391 1461
                                           1484 1549 1728 1965 2079 2226 2265 2290 3300 4874 4882 4901 4979 5001 5106
                                           5118 5133 5232 5289 5305 5319 5391 5443 5456 5469 5832 6862 7169# 7323
RESAR8 . . . . . .  C ADDR   2D4FH   R   SEG=MAIN   1175 1225 1265 1273 1396 2348 2386 7108#
RESA_HL. . . . . .  C ADDR   2E3AH   R   SEG=MAIN   2034 2110 5040 5053 5195 5208 5358 5370 7300#
REZAM. . . . . . .  D ADDR   008CH   A      399# 2383
REZAP. . . . . . .  D ADDR   0088H   A      398# 2345
REZMUL . . . . . .  C ADDR   06A0H   R   SEG=MAIN   1240 1254 1261#
REZ_A. . . . . . .  D ADDR   0062H   A      389# 874 942 952 982 1053 1107 2264
REZ_A0 . . . . . .  D ADDR   006AH   A      391# 1224 1395 1433 1682 2550 3291 3301 3308 5833 5850
REZ_A1 . . . . . .  D ADDR   0066H   A      390# 1158 1222 1261 1372 1390 1409
REZ_A2 . . . . . .  D ADDR   007BH   A      392# 1392
REZ_A3 . . . . . .  D ADDR   009CH   A      405# 1227 1398 1460 1727 1871 1964 3299 4873 4978 5831 5999 7322 7351
REZ_AK . . . . . .  D ADDR   00A4H   A      408# 4649 4881
REZ_AME. . . . . .  D ADDR   005EH   A      387# 1168 1177 1218 1275 1368
REZ_DEL. . . . . .  D ADDR   00C5H   A      428# 876
REZ_R. . . . . . .  D ADDR   00C9H   A      429# 1497 1507 1509 1548
RE_HL. . . . . . .  C ADDR   2E41H   R   SEG=MAIN   7304# 7313 7317 7320
RE_HL1 . . . . . .  C ADDR   2E49H   R   SEG=MAIN   7302 7311#
RE_HL2 . . . . . .  C ADDR   2E50H   R   SEG=MAIN   7311 7315#
RE_HL3 . . . . . .  C ADDR   2E57H   R   SEG=MAIN   7315 7319#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   159

RFINDMEM . . . . .  C ADDR   10F6H   R   SEG=MAIN   2832# 2834
RGO23NO. . . . . .  C ADDR   1677H   R   SEG=MAIN   3644# 3649
RGOTO7 . . . . . .  C ADDR   1850H   R   SEG=MAIN   3937# 3971
RHNOR11. . . . . .  C ADDR   1454H   R   SEG=MAIN   3338 3351 3357#
RHNOT1 . . . . . .  C ADDR   141BH   R   SEG=MAIN   3316 3324#
RI . . . . . . . .  B ADDR   0098H.0 A      383# 5562 5563
RI0. . . . . . . .  B ADDR   0098H.0 A      170#
RI21_23. . . . . .  C ADDR   111AH   R   SEG=MAIN   2840 2852#
RI6. . . . . . . .  C ADDR   1114H   R   SEG=MAIN   2843 2848# 2857 2868 2902 2906
RIGBLO . . . . . .  C ADDR   1208H   R   SEG=MAIN   2987# 3019 3021
RIGBLOK. . . . . .  C ADDR   1246H   R   SEG=MAIN   3032#
RIGHT2 . . . . . .  C ADDR   0F15H   R   SEG=MAIN   2529 2533#
RIGHT3 . . . . . .  C ADDR   0F19H   R   SEG=MAIN   2531 2536#
RIKN . . . . . . .  C ADDR   109AH   R   SEG=MAIN   2768# 2784
RIZMAN . . . . . .  C ADDR   0E64H   R   SEG=MAIN   2424# 2488
RI_31. . . . . . .  C ADDR   1134H   R   SEG=MAIN   2855 2864#
RKNLEFT. . . . . .  C ADDR   12D3H   R   SEG=MAIN   3131# 3190
RKNMEM . . . . . .  C ADDR   12DDH   R   SEG=MAIN   3137# 3200
RKNNUL . . . . . .  C ADDR   12D0H   R   SEG=MAIN   3130# 3184
RKNOPT . . . . . .  C ADDR   0E61H   R   SEG=MAIN   2423# 2499
RKNRAZR. . . . . .  C ADDR   0E5EH   R   SEG=MAIN   2422# 2493
RKVVOD0. . . . . .  C ADDR   15B7H   R   SEG=MAIN   3538 3544#
RLABELF. . . . . .  C ADDR   0E5BH   R   SEG=MAIN   2421# 2485
RLABELH. . . . . .  C ADDR   12CDH   R   SEG=MAIN   3129# 3181
RLABELI. . . . . .  C ADDR   1421H   R   SEG=MAIN   3327#
RLABELK. . . . . .  C ADDR   141EH   R   SEG=MAIN   3326# 3330
RLABELL. . . . . .  C ADDR   10F3H   R   SEG=MAIN   2830#
RLABELL1 . . . . .  C ADDR   1285H   R   SEG=MAIN   3074 3077#
RLABELN. . . . . .  C ADDR   117CH   R   SEG=MAIN   2904 2908#
RLABELP. . . . . .  C ADDR   1B2BH   R   SEG=MAIN   4315# 4318
RLABELS13. . . . .  C ADDR   1C58H   R   SEG=MAIN   4468# 4496
RLABELS4 . . . . .  C ADDR   1C55H   R   SEG=MAIN   4467# 4470
RLABL2 . . . . . .  C ADDR   161AH   R   SEG=MAIN   3587#
RLABM. . . . . . .  C ADDR   161DH   R   SEG=MAIN   3588# 3592
RLEFCUR. . . . . .  C ADDR   18F7H   R   SEG=MAIN   4031# 4035
RLER . . . . . . .  C ADDR   2AC2H   R   SEG=MAIN   6845 6847#
RLIST_43 . . . . .  C ADDR   198EH   R   SEG=MAIN   4105# 4107
RMAS4. . . . . . .  C ADDR   048BH   R   SEG=MAIN   1008# 1010
RME21_23 . . . . .  C ADDR   195EH   R   SEG=MAIN   4063 4082#
RMO220 . . . . . .  C ADDR   0682H   R   SEG=MAIN   1242# 1284
RNNMEMB. . . . . .  C ADDR   1182H   R   SEG=MAIN   2911# 2914
RNO3PARN . . . . .  C ADDR   0A55H   R   SEG=MAIN   1772# 1785
RNOBUF0. . . . . .  C ADDR   0C35H   R   SEG=MAIN   2083 2106#
RNOCHI0. . . . . .  C ADDR   07D4H   R   SEG=MAIN   1404 1408#
RNOH37 . . . . . .  C ADDR   1478H   R   SEG=MAIN   3375# 3378 3385 3399
RNOM31 . . . . . .  C ADDR   17CEH   R   SEG=MAIN   3865# 3866
RNOMEMK. . . . . .  C ADDR   156FH   R   SEG=MAIN   3510# 3527
RNORVICH . . . . .  C ADDR   0A52H   R   SEG=MAIN   1719 1720 1771#
RNOT1IN. . . . . .  C ADDR   0B3DH   R   SEG=MAIN   1868 1938#
RNOTESTIZM . . . .  C ADDR   0698H   R   SEG=MAIN   1256# 1286
ROUSTA . . . . . .  C ADDR   1B17H   R   SEG=MAIN   4299 4307#
ROUSTA1. . . . . .  C ADDR   1B28H   R   SEG=MAIN   4307 4313#
ROUT6. . . . . . .  C ADDR   0E58H   R   SEG=MAIN   2420# 2484
ROUT7. . . . . . .  C ADDR   12CAH   R   SEG=MAIN   3128# 3175 3180
ROUTMAX. . . . . .  C ADDR   2230H   R   SEG=MAIN   5350# 5367
ROUTMIN. . . . . .  C ADDR   213BH   R   SEG=MAIN   5187# 5205
RR0. . . . . . . .  N NUMB   0000H   A      466# 2443 3091 3152 4809
RR1. . . . . . . .  N NUMB   0001H   A      467# 2444 3090 3153 4808
RR2. . . . . . . .  N NUMB   0002H   A      469# 1293 1305 1311 1323 1335 1346 2445 3089 3154 4133 4141 4807 4955
                                           4967 4973 4985 6272
RR3. . . . . . . .  N NUMB   0003H   A      470# 1294 1304 1312 1322 1336 1347 2446 3088 3155 4134 4140 4806 4956
                                           4966 4974 4984 6273
RR4. . . . . . . .  N NUMB   0004H   A      1295 1303 1313 1321 1337 1348 2447 3087 3156 4135 4139 4805 4957 4965
                                           4975 4983 7383# 7435 7454 7470 7514 7534
RR5. . . . . . . .  N NUMB   0005H   A      1296 1302 1314 1320 1338 1349 2448 3086 3157 4136 4138 4804 4958 4964
                                           4976 4982 7384# 7436 7442 7449 7515 7523
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   160

RR6. . . . . . . .  N NUMB   0006H   A      468# 2449 3085 3158 4803
RR7. . . . . . . .  N NUMB   0007H   A      471# 2450 3084 3159 4802
RRIR . . . . . . .  C ADDR   2ACFH   R   SEG=MAIN   6856 6858#
RRMO220. . . . . .  C ADDR   07D1H   R   SEG=MAIN   1381 1407#
RS0. . . . . . . .  B ADDR   00D0H.3 A      214#
RS1. . . . . . . .  B ADDR   00D0H.4 A      213#
RSEEIND. . . . . .  C ADDR   09F1H   R   SEG=MAIN   1709# 1721 1722 1723
RSTSRC . . . . . .  D ADDR   00EFH   A      131# 521 4455
RS_BYTE. . . . . .  C ADDR   232EH   R   SEG=MAIN   273 5508#
RTIZMRI. . . . . .  C ADDR   0FFAH   R   SEG=MAIN   2691#
RVIOUT . . . . . .  C ADDR   1071H   R   SEG=MAIN   2737 2745 2749# 2753
RVVIZKO. . . . . .  C ADDR   1456H   R   SEG=MAIN   3359# 3367
RVVKALI52. . . . .  C ADDR   1C84H   R   SEG=MAIN   4489 4491#
RXOVRN . . . . . .  B ADDR   00F8H.4 A      242#
SADDR0 . . . . . .  D ADDR   00A9H   A      65#
SADDR1 . . . . . .  D ADDR   00F3H   A      135#
SADEN0 . . . . . .  D ADDR   00B9H   A      79#
SADEN1 . . . . . .  D ADDR   00AEH   A      70#
SADIAP . . . . . .  D ADDR   0034H   A      321# 630 2041 2118 4182
SADIAP2. . . . . .  D ADDR   0032H   A      323# 2044 2121 4185
SADIAP3. . . . . .  D ADDR   0031H   A      324# 2047 2124 4188
SADIAP4. . . . . .  D ADDR   0030H   A      325# 2050 2127 4191
SAUS . . . . . . .  D ADDR   0036H   A      320# 2253 2255 2271 2273 2318 2320 2398 2400
SAVBA. . . . . . .  D ADDR   003CH   A      314# 2463 2779 2797 3002 3049 3069 3171 3795 3850 3954 4478 4606 4710
                                           6920 6927
SAVEIR2. . . . . .  C ADDR   2CD3H   R   SEG=MAIN   955 986 1057 1111 7007#
SAVELTE. . . . . .  C ADDR   04A7H   A      9201#
SAVEN_BL . . . . .  D ADDR   00D3H   A      432# 651 3730 6112 7272 7303
SAVEN_BL2. . . . .  D ADDR   00C0H   A      422# 659 3744 6129 7290 7312
SAVEN_BL3. . . . .  D ADDR   00C2H   A      423# 666 3749 6132 7294 7316
SAVEN_BL4. . . . .  D ADDR   00D9H   A      436# 673 3753 6134 7296 7319
SAVER2 . . . . . .  C ADDR   2CDFH   R   SEG=MAIN   643 645 647 649 865 875 877 899 914 930 943 1159 1169 1178 1223
                                           1228 1276 1373 1393 1399 1410 1498 1502 1732 1969 2185 2231 2269 2298 2346
                                           2358 2384 2396 3302 3309 4159 4650 4740 4891 4993 5109 5121 5141 5235 5299
                                           5315 5328 5394 5451 5464 5474 5792 5834 5851 6865 7021# 7352
SAVE_HL. . . . . .  C ADDR   2E06H   R   SEG=MAIN   2036 2113 3637 3995 5930 5975 6085 7270#
SAVE_HLM . . . . .  C ADDR   266BH   R   SEG=MAIN   6110#
SA_HL. . . . . . .  C ADDR   2E0DH   R   SEG=MAIN   7273# 7291 7295 7297
SA_HL1 . . . . . .  C ADDR   2E28H   R   SEG=MAIN   7271 7289#
SA_HL2 . . . . . .  C ADDR   2E2FH   R   SEG=MAIN   7289 7293#
SA_HL3 . . . . . .  C ADDR   2E36H   R   SEG=MAIN   7293 7296#
SBUF0. . . . . . .  D ADDR   0099H   A      50# 1516 1521 1526 1531 1536 2031 5542 5564 5879 5891 5982 5986 6003 6008
                                           6013 6018 6019 6023 6056 6063 6142 6148
SBUF1. . . . . . .  D ADDR   00F2H   A      134#
SCON0. . . . . . .  D ADDR   0098H   A      49# 163 164 165 166 167 168 169 170 383 384 527 6143 6147 6150 6151 6171
SCON1. . . . . . .  D ADDR   00F1H   A      133#
SDV. . . . . . . .  C ADDR   26ECH   R   SEG=MAIN   6180# 6187
SDV1 . . . . . . .  C ADDR   2700H   R   SEG=MAIN   6192# 6198
SDVIG0 . . . . . .  C ADDR   031BH   R   SEG=MAIN   829# 831
SDVIG1 . . . . . .  C ADDR   0310H   R   SEG=MAIN   821# 823
SDVIG2 . . . . . .  C ADDR   0305H   R   SEG=MAIN   814# 816
SDVIG3 . . . . . .  C ADDR   02F9H   R   SEG=MAIN   805# 807
SDVIG4 . . . . . .  C ADDR   032AH   R   SEG=MAIN   838# 840
SDVIG6 . . . . . .  C ADDR   0334H   R   SEG=MAIN   845# 847
SDVM . . . . . . .  C ADDR   0332H   R   SEG=MAIN   835 844#
SEEGOON. . . . . .  C ADDR   0A5AH   R   SEG=MAIN   1756 1761 1763 1769 1776#
SEEGOONRS. . . . .  C ADDR   0BAFH   R   SEG=MAIN   1997 2004 2006 2013 2021#
SEEIND . . . . . .  C ADDR   0A68H   R   SEG=MAIN   1701 1708 1709 1787#
SEE_L43. . . . . .  C ADDR   1A65H   R   SEG=MAIN   4199 4206 4210#
SI . . . . . . . .  B ADDR   00C0H.3 A      194#
SIGN . . . . . . .  N NUMB   0007H   A      8305# 8326 8327 8352 8353 8377 8520 8537 8758 8798
SKOR19 . . . . . .  C ADDR   1B76H   R   SEG=MAIN   4343 4349#
SLVSEL . . . . . .  B ADDR   00F8H.2 A      244#
SM00 . . . . . . .  B ADDR   0098H.7 A      163#
SM10 . . . . . . .  B ADDR   0098H.6 A      164#
SM20 . . . . . . .  B ADDR   0098H.5 A      165#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   161

SMB0ADR. . . . . .  D ADDR   00C3H   A      89#
SMB0CN . . . . . .  D ADDR   00C0H   A      86# 190 191 192 193 194 195 196 197
SMB0CR . . . . . .  D ADDR   00CFH   A      100#
SMB0DAT. . . . . .  D ADDR   00C2H   A      88#
SMB0STA. . . . . .  D ADDR   00C1H   A      87#
SMBFTE . . . . . .  B ADDR   00C0H.1 A      196#
SMBTOE . . . . . .  B ADDR   00C0H.0 A      197#
SM_HL. . . . . . .  C ADDR   2672H   R   SEG=MAIN   6113# 6130 6133 6135
SM_HL1 . . . . . .  C ADDR   2687H   R   SEG=MAIN   6111 6128#
SM_HL2 . . . . . .  C ADDR   268EH   R   SEG=MAIN   6128 6131#
SM_HL3 . . . . . .  C ADDR   2695H   R   SEG=MAIN   6131 6134#
SOOTV. . . . . . .  C ADDR   14E5H   R   SEG=MAIN   3437# 3453
SP . . . . . . . .  D ADDR   0081H   A      27# 484
SPEED_RS . . . . .  B ADDR   0021H.0 A      340# 2892
SPI0CFG. . . . . .  D ADDR   009AH   A      51#
SPI0CKR. . . . . .  D ADDR   009DH   A      54# 525
SPI0CN . . . . . .  D ADDR   00F8H   A      140# 239 240 241 242 243 244 245 246 524
SPI0DAT. . . . . .  D ADDR   009BH   A      52# 5498
SPIEN. . . . . . .  B ADDR   00F8H.0 A      246#
SPIF . . . . . . .  B ADDR   00F8H.7 A      239#
SPWRI. . . . . . .  C ADDR   1C29H   R   SEG=MAIN   4442 4444#
SS1. . . . . . . .  C ADDR   2822H   R   SEG=MAIN   6413# 6415
STA. . . . . . . .  B ADDR   00C0H.5 A      192#
STO. . . . . . . .  B ADDR   00C0H.4 A      193#
SUMMA. . . . . . .  D ADDR   00B3H   A      417# 862 864 879 896 898 911 913 927 929 1431 1680 2548 3289
SUMT2. . . . . . .  C ADDR   0386H   R   SEG=MAIN   853 893#
S_R2 . . . . . . .  C ADDR   232EH   R   SEG=MAIN   5522#
S_R3 . . . . . . .  C ADDR   234CH   R   SEG=MAIN   5531 5544#
S_R4 . . . . . . .  C ADDR   234DH   R   SEG=MAIN   5527 5547#
S_R5 . . . . . . .  C ADDR   234FH   R   SEG=MAIN   5530 5543 5550#
S_R6 . . . . . . .  C ADDR   2356H   R   SEG=MAIN   5556# 5573
S_R7 . . . . . . .  C ADDR   2360H   R   SEG=MAIN   5555 5561#
S_R9 . . . . . . .  C ADDR   2375H   R   SEG=MAIN   5559 5562 5571 5575#
T2CON. . . . . . .  D ADDR   00C8H   A      94# 200 201 202 203 204 205 206 207 537 2147 3121 4830 5484
T2MSME . . . . . .  C ADDR   18BBH   R   SEG=MAIN   4003# 4009
T4CON. . . . . . .  D ADDR   00C9H   A      95#
TA0. . . . . . . .  C ADDR   2387H   R   SEG=MAIN   5588 5591#
TA1. . . . . . . .  C ADDR   2390H   R   SEG=MAIN   5593 5596#
TA2. . . . . . . .  C ADDR   23B8H   R   SEG=MAIN   5597 5615#
TA2_ . . . . . . .  C ADDR   23A8H   R   SEG=MAIN   5601 5607#
TA3. . . . . . . .  C ADDR   23DDH   R   SEG=MAIN   5638 5641#
TA3_ . . . . . . .  C ADDR   23B5H   R   SEG=MAIN   5608 5613#
TA4. . . . . . . .  C ADDR   23DFH   R   SEG=MAIN   5640 5643#
TA5. . . . . . . .  C ADDR   23E6H   R   SEG=MAIN   5644 5647#
TA6. . . . . . . .  C ADDR   23E8H   R   SEG=MAIN   5646 5649#
TABB1_2. . . . . .  C ADDR   29C2H   R   SEG=MAIN   6682# 6692
TABN . . . . . . .  C ADDR   2A5AH   R   SEG=MAIN   6781# 6785
TABT11 . . . . . .  C ADDR   27DAH   R   SEG=MAIN   6355# 6762
TABT7. . . . . . .  C ADDR   27DEH   R   SEG=MAIN   4930 6357# 6774
TABT9. . . . . . .  C ADDR   27DCH   R   SEG=MAIN   6356# 6772
TABUS. . . . . . .  C ADDR   27C6H   R   SEG=MAIN   6291 6344#
TAKTIND. . . . . .  C ADDR   0AA7H   R   SEG=MAIN   1821 1824#
TB . . . . . . . .  C ADDR   2415H   R   SEG=MAIN   5590 5704#
TB80 . . . . . . .  B ADDR   0098H.3 A      167#
TB_0 . . . . . . .  C ADDR   2384H   R   SEG=MAIN   5587 5589#
TC . . . . . . . .  C ADDR   2436H   R   SEG=MAIN   5705 5725#
TC1. . . . . . . .  C ADDR   2447H   R   SEG=MAIN   5734 5736#
TC2. . . . . . . .  C ADDR   245DH   R   SEG=MAIN   5741 5748#
TC3. . . . . . . .  C ADDR   246DH   R   SEG=MAIN   5748 5755#
TCLK0. . . . . . .  B ADDR   00C8H.4 A      203#
TCON . . . . . . .  D ADDR   0088H   A      34# 153 154 155 156 157 158 159 160 519 520 531
TD . . . . . . . .  C ADDR   2472H   R   SEG=MAIN   5726 5758#
TE . . . . . . . .  C ADDR   24BAH   R   SEG=MAIN   5759 5799#
TE1. . . . . . . .  C ADDR   2481H   R   SEG=MAIN   5763 5766#
TE10MS . . . . . .  C ADDR   2B25H   R   SEG=MAIN   4002 6942#
TE2. . . . . . . .  C ADDR   2489H   R   SEG=MAIN   5767 5770#
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   162

TE22 . . . . . . .  C ADDR   2A4DH   R   SEG=MAIN   6761 6771#
TE23 . . . . . . .  C ADDR   2A55H   R   SEG=MAIN   6771 6774#
TE2MS. . . . . . .  C ADDR   2B1BH   R   SEG=MAIN   4008 6941#
TEAEQU0. . . . . .  C ADDR   2B61H   R   SEG=MAIN   3412 6950#
TEAVK. . . . . . .  C ADDR   2B9DH   R   SEG=MAIN   4848 6957#
TEBEQU0. . . . . .  C ADDR   2B6BH   R   SEG=MAIN   6951#
TEBL . . . . . . .  C ADDR   2C51H   R   SEG=MAIN   2960 3580 6976#
TEBL0. . . . . . .  C ADDR   2C5BH   R   SEG=MAIN   3814 6977#
TECH . . . . . . .  C ADDR   2C65H   R   SEG=MAIN   4094 4257 6978#
TECLE. . . . . . .  C ADDR   2C16H   R   SEG=MAIN   2948 3549 6970#
TEEND. . . . . . .  C ADDR   2CB5H   R   SEG=MAIN   4944 6987#
TEERR. . . . . . .  C ADDR   2CABH   R   SEG=MAIN   6934 6986#
TEFULL . . . . . .  C ADDR   2C3DH   R   SEG=MAIN   2967 3781 6974#
TEINT. . . . . . .  C ADDR   2C47H   R   SEG=MAIN   3881 6975#
TEIZMK . . . . . .  C ADDR   2BF8H   R   SEG=MAIN   2739 3343 3353 6967#
TEKALIB. . . . . .  C ADDR   2BA7H   R   SEG=MAIN   4070 4851 6958#
TEKAOUT. . . . . .  C ADDR   0D98H   R   SEG=MAIN   2306# 2313
TEKD . . . . . . .  C ADDR   2BEEH   R   SEG=MAIN   4536 6966#
TELIST . . . . . .  C ADDR   2C32H   R   SEG=MAIN   2931 3495 3560 3565 6973#
TEMAX. . . . . . .  C ADDR   2C83H   R   SEG=MAIN   4293 6981#
TEMEM. . . . . . .  C ADDR   2C20H   R   SEG=MAIN   6971#
TEMENU . . . . . .  C ADDR   2B75H   R   SEG=MAIN   6952#
TEMID. . . . . . .  C ADDR   2C8DH   R   SEG=MAIN   4301 6982#
TEMIN. . . . . . .  C ADDR   2C79H   R   SEG=MAIN   3826 4309 6980#
TEMUL. . . . . . .  C ADDR   077FH   R   SEG=MAIN   1329 1367#
TENMIN . . . . . .  C ADDR   28C4H   R   SEG=MAIN   1237 1239 1253 6481#
TEOLI. . . . . . .  C ADDR   2C97H   R   SEG=MAIN   1573 1667 6984#
TEOLL. . . . . . .  C ADDR   2C0CH   R   SEG=MAIN   1664 6969#
TEOLR. . . . . . .  C ADDR   2CA1H   R   SEG=MAIN   1569 6985#
TEOUT. . . . . . .  C ADDR   2C02H   R   SEG=MAIN   6968#
TEPAR. . . . . . .  C ADDR   2BE4H   R   SEG=MAIN   4868 6965#
TES19_2. . . . . .  C ADDR   2BDAH   R   SEG=MAIN   569 2879 4349 4588 6963#
TES57_6. . . . . .  C ADDR   2BD0H   R   SEG=MAIN   2871 4344 4583 4864 6962#
TESKOR . . . . . .  C ADDR   2B93H   R   SEG=MAIN   4845 6956#
TEST01 . . . . . .  C ADDR   26A5H   R   SEG=MAIN   6147# 6169
TEST02 . . . . . .  C ADDR   26D4H   R   SEG=MAIN   6166 6168#
TEST04 . . . . . .  C ADDR   26B5H   R   SEG=MAIN   6154# 6156
TEST1. . . . . . .  C ADDR   269BH   R   SEG=MAIN   6142# 6158 6176
TEST2. . . . . . .  C ADDR   26CDH   R   SEG=MAIN   6147 6165#
TEST22 . . . . . .  C ADDR   1BF9H   R   SEG=MAIN   4405 4412#
TEST23 . . . . . .  C ADDR   1BFEH   R   SEG=MAIN   4412 4415#
TEST3. . . . . . .  C ADDR   26BFH   R   SEG=MAIN   6149 6159#
TEST4. . . . . . .  C ADDR   26ADH   R   SEG=MAIN   6150# 6164
TEST5. . . . . . .  C ADDR   26D7H   R   SEG=MAIN   6167 6170#
TEST7I . . . . . .  C ADDR   0ABFH   R   SEG=MAIN   1837 1840#
TEST9I . . . . . .  C ADDR   0AB8H   R   SEG=MAIN   1831 1837#
TESTAT . . . . . .  C ADDR   2C6FH   R   SEG=MAIN   2939 3541 6979#
TESTRS . . . . . .  C ADDR   2699H   R   SEG=MAIN   4333 6140#
TESTS. . . . . . .  C ADDR   1BEDH   R   SEG=MAIN   4407# 4414 4417
TETE11 . . . . . .  C ADDR   2BB2H   R   SEG=MAIN   4322 4855 6959#
TETE7. . . . . . .  C ADDR   2BC6H   R   SEG=MAIN   4395 4861 6961#
TETE9. . . . . . .  C ADDR   2BBCH   R   SEG=MAIN   4858 6960#
TETESI . . . . . .  C ADDR   2B7FH   R   SEG=MAIN   3250 4838 6954#
TETESR . . . . . .  C ADDR   2B89H   R   SEG=MAIN   4842 6955#
TEVICH . . . . . .  C ADDR   2B57H   R   SEG=MAIN   2573 2747 2755 3349 4749 6949#
TEWR . . . . . . .  C ADDR   2C28H   R   SEG=MAIN   2922 3555 6972#
TEXTT. . . . . . .  C ADDR   2B1BH   R   SEG=MAIN   6368 6940#
TF0. . . . . . . .  B ADDR   0088H.5 A      155#
TF1. . . . . . . .  B ADDR   0088H.7 A      153#
TF2. . . . . . . .  B ADDR   00C8H.7 A      200#
TH0. . . . . . . .  D ADDR   008CH   A      38# 504
TH1. . . . . . . .  D ADDR   008DH   A      39# 538 566 571 4458 4460
TH2. . . . . . . .  D ADDR   00CDH   A      99# 2144 3118 4828
TH4. . . . . . . .  D ADDR   00F5H   A      137#
TI . . . . . . . .  B ADDR   0098H.1 A      384# 1519 1520 1524 1525 1529 1530 1534 1535 5531 5532 5548 5984 5985
                                           6001 6002 6006 6007 6011 6012 6016 6017 6021 6022
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   163

TI0. . . . . . . .  B ADDR   0098H.1 A      169#
TIM. . . . . . . .  C ADDR   2710H   R   SEG=MAIN   6201#
TIM1 . . . . . . .  C ADDR   2712H   R   SEG=MAIN   6202# 6202
TIM2 . . . . . . .  C ADDR   2715H   R   SEG=MAIN   6183 6186 6193 6197 6205# 6240 6244 7195 7197
TIM3 . . . . . . .  C ADDR   2717H   R   SEG=MAIN   6206# 6206
TIZMRI . . . . . .  C ADDR   0F0EH   R   SEG=MAIN   2528# 2691
TL0. . . . . . . .  D ADDR   008AH   A      36# 505
TL1. . . . . . . .  D ADDR   008BH   A      37# 567
TL2. . . . . . . .  D ADDR   00CCH   A      98# 2145 3119 4829
TL4. . . . . . . .  D ADDR   00F4H   A      136#
TLABELI. . . . . .  C ADDR   14E2H   R   SEG=MAIN   3422 3434#
TMOD . . . . . . .  D ADDR   0089H   A      35# 502 530
TMR2RLH. . . . . .  D ADDR   00CBH   A      300# 517
TMR2RLL. . . . . .  D ADDR   00CAH   A      299# 516
TMR3CN . . . . . .  D ADDR   0091H   A      43#
TMR3H. . . . . . .  D ADDR   0095H   A      47#
TMR3L. . . . . . .  D ADDR   0094H   A      46#
TMR3RLH. . . . . .  D ADDR   0093H   A      45#
TMR3RLL. . . . . .  D ADDR   0092H   A      44#
TOME13 . . . . . .  C ADDR   1B57H   R   SEG=MAIN   4331 4336#
TOME14 . . . . . .  C ADDR   1B84H   R   SEG=MAIN   4336 4356#
TOME15 . . . . . .  C ADDR   1B9CH   R   SEG=MAIN   4356 4368# 4373
TOME21 . . . . . .  C ADDR   1B4EH   R   SEG=MAIN   4320 4331#
TOSK19 . . . . . .  C ADDR   1D34H   R   SEG=MAIN   4582 4588#
TOSTRO . . . . . .  C ADDR   0BE2H   R   SEG=MAIN   2042 2045 2048 2051#
TOUTF. . . . . . .  C ADDR   145FH   R   SEG=MAIN   3363# 3366
TR0. . . . . . . .  B ADDR   0088H.4 A      156#
TR1. . . . . . . .  B ADDR   0088H.6 A      154# 539 573 4456 4461
TR2. . . . . . . .  B ADDR   00C8H.2 A      205#
TR9. . . . . . . .  C ADDR   263EH   R   SEG=MAIN   5595 5606 5614 5702 5719 5722 5747 5754 5756 5765 5769 5773 5797
                                           5817 5824 5826 5836 5852 5861 5870 5899 5932 5943 5950 5968 6034 6051 6057
                                           6062# 6086
TTOUT. . . . . . .  C ADDR   0FFDH   R   SEG=MAIN   2693# 2702
TX1. . . . . . . .  C ADDR   08A1H   R   SEG=MAIN   1518# 1519
TX2. . . . . . . .  C ADDR   08A9H   R   SEG=MAIN   1523# 1524
TX3. . . . . . . .  C ADDR   08B1H   R   SEG=MAIN   1528# 1529
TX4. . . . . . . .  C ADDR   08B9H   R   SEG=MAIN   1533# 1534
TXBSY. . . . . . .  B ADDR   00F8H.3 A      243# 5499
TZ . . . . . . . .  C ADDR   263BH   R   SEG=MAIN   6055 6059#
UNPACK1. . . . . .  C ADDR   009EH   A      8323# 8517 8651 8781 8895
UNPACK2. . . . . .  C ADDR   00BAH   A      8348# 8518 8652 8782
UP1. . . . . . . .  C ADDR   0138H   A      8468# 8485
UP2. . . . . . . .  C ADDR   014BH   A      8488# 8506
UP2A . . . . . . .  C ADDR   0161H   A      8467 8504#
UPA. . . . . . . .  C ADDR   28F3H   R   SEG=MAIN   6535# 6541
UPA1 . . . . . . .  C ADDR   2903H   R   SEG=MAIN   6553# 6559
UPA2 . . . . . . .  C ADDR   28E3H   R   SEG=MAIN   6516# 6522
UPAA . . . . . . .  C ADDR   2DDEH   R   SEG=MAIN   7239# 7245
UPAA4. . . . . . .  C ADDR   294EH   R   SEG=MAIN   6614# 6620
UPAB . . . . . . .  C ADDR   295EH   R   SEG=MAIN   6631# 6637
UPAK . . . . . . .  C ADDR   28EDH   R   SEG=MAIN   6532#
UPAK1. . . . . . .  C ADDR   2DB8H   R   SEG=MAIN   7206#
UPAK2. . . . . . .  C ADDR   28DDH   R   SEG=MAIN   6513#
UPAK3. . . . . . .  C ADDR   28FDH   R   SEG=MAIN   4023 4118 6550#
UPAK4. . . . . . .  C ADDR   2DD8H   R   SEG=MAIN   3977 7236#
UPAKA. . . . . . .  C ADDR   2948H   R   SEG=MAIN   4732 6611#
UPAKB. . . . . . .  C ADDR   2958H   R   SEG=MAIN   4779 6628#
UPAV1. . . . . . .  C ADDR   1CA3H   R   SEG=MAIN   4515# 4521
UPAV2. . . . . . .  C ADDR   1D66H   R   SEG=MAIN   4633# 4639
UPK1 . . . . . . .  C ADDR   2DCAH   R   SEG=MAIN   7214 7217#
UPK2 . . . . . . .  C ADDR   2DCBH   R   SEG=MAIN   7216 7218#
VICHMAX. . . . . .  C ADDR   2233H   R   SEG=MAIN   4295 5352#
VICHMEAN . . . . .  C ADDR   203FH   R   SEG=MAIN   4303 5033#
VICHMIN. . . . . .  C ADDR   213EH   R   SEG=MAIN   3828 4311 5189#
VICHR. . . . . . .  D ADDR   00B1H   A      415# 1287 1827 2570 2583 2721 2734 2836 2844 3254 3258 3266 3337 3403
                                           3513 4059 4067 4076 4316 4365 4386 4534 4723 4762 4794 4836 6760
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   164

VIG0 . . . . . . .  C ADDR   0B29H   R   SEG=MAIN   1922# 1924
VIG4 . . . . . . .  C ADDR   0B37H   R   SEG=MAIN   1933# 1935
VIOUT. . . . . . .  C ADDR   0FD4H   R   SEG=MAIN   2576 2666# 2694 2706 2711 2741 2749 2757 2780 2803 2812 2815 2848
                                           2861 2893 2909 2924 2933 2941 2950 2964 3012 3015 3058 3072 3075 3362 3363
                                           3439 4422
VIOUT2 . . . . . .  C ADDR   1162H   R   SEG=MAIN   2877 2886#
VIOUTF . . . . . .  C ADDR   1458H   R   SEG=MAIN   3360#
VIT2_10. . . . . .  C ADDR   0F3DH   R   SEG=MAIN   2556# 2564 2565
VODM11_15. . . . .  C ADDR   191AH   R   SEG=MAIN   4048# 4066
VOLUME . . . . . .  D ADDR   00D5H   A      433# 3612 3990 5962 6119 6121 7279 7281
VV21_23. . . . . .  C ADDR   1BE4H   R   SEG=MAIN   4392 4403#
VVCHIBL. . . . . .  C ADDR   2A91H   R   SEG=MAIN   2820 6813#
VVCHIF . . . . . .  C ADDR   2A6CH   R   SEG=MAIN   6789# 6806
VVINTE . . . . . .  C ADDR   187BH   R   SEG=MAIN   3941 3969#
VVIZKO . . . . . .  C ADDR   14AFH   R   SEG=MAIN   3359 3403#
VVKALI52 . . . . .  C ADDR   1D59H   R   SEG=MAIN   4491 4617# 4669
VVMENU . . . . . .  C ADDR   1D09H   R   SEG=MAIN   4498 4570#
VVNOL23. . . . . .  C ADDR   2A8CH   R   SEG=MAIN   6810# 6814
VVNOL31. . . . . .  C ADDR   2A87H   R   SEG=MAIN   6808# 6810
VVNOL41. . . . . .  C ADDR   2A85H   R   SEG=MAIN   6806# 6808
VVOD2_10 . . . . .  C ADDR   18B3H   R   SEG=MAIN   3522 3640 3741 4000#
VVOD43 . . . . . .  C ADDR   1A92H   R   SEG=MAIN   4229 4236#
VVODM11_15 . . . .  C ADDR   1B2EH   R   SEG=MAIN   4048 4316#
VVOSTA . . . . . .  C ADDR   1AEFH   R   SEG=MAIN   4272 4291#
VVOSTAD. . . . . .  C ADDR   1B03H   R   SEG=MAIN   4291 4299#
VVRR6. . . . . . .  C ADDR   1057H   R   SEG=MAIN   2739#
VV_52V . . . . . .  C ADDR   1C7BH   R   SEG=MAIN   4472 4488#
WCOL . . . . . . .  B ADDR   00F8H.6 A      240#
WDTCN. . . . . . .  D ADDR   00FFH   A      147# 500 501
WORK . . . . . . .  D ADDR   00B8H   A      419# 1554 1556 1562 1578 1585 1600 1621 1626 1642 1873 2069 3607 3621
                                           3623 3653 3661 3663 3672 3680 3682 3689 3698 3700 3709 3717 3719 5060 5105
                                           5108 5117 5120 5132 5213 5231 5234 5288 5298 5304 5314 5318 5373 5390 5393
                                           5442 5450 5455 5463 6071 6079 6081 6144 6165
WR1. . . . . . . .  C ADDR   2DA5H   R   SEG=MAIN   7191# 7198
WRITE. . . . . . .  C ADDR   2DA2H   R   SEG=MAIN   735 6654 6656 6658 6660 6662 6664 6667 6669 6671 6674 6676 6678
                                           7189#
WRITED_X1. . . . .  C ADDR   271BH   R   SEG=MAIN   6211#
WRITE_X1 . . . . .  C ADDR   271AH   R   SEG=MAIN   6210#
WRPAGE . . . . . .  C ADDR   0480H   A      4453 4923 5025 9169#
WW5. . . . . . . .  C ADDR   0483H   A      9170# 9178
XBR0 . . . . . . .  D ADDR   00E1H   A      117# 496 523
XBR1 . . . . . . .  D ADDR   00E2H   A      118# 497
XBR2 . . . . . . .  D ADDR   00E3H   A      119# 498 522
XCIKLWR. . . . . .  C ADDR   2CBFH   R   SEG=MAIN   950 963 965 967 969 971 973 976 978 980 1012 1014 1016 1019 1021
                                           1023 1025 1028 1030 1032 1034 1036 1038 1040 1042 1045 1047 1049 1051 1101
                                           1103 1105 6992#
XTEMP. . . . . . .  N NUMB   000CH   A      7380# 7735 7736 7737 7738 7824 7826 7827 7829 7830 7832 7833 7835 7857
                                           7858 7859 7860 7878 7879 7883 7884 7887 7891 7892 7895 7899 7900 7904 7905
                                           7907 7908 7909 7911 7915 7916 7918 7919 7923 7924 7929 7930 7932 7933 7937
                                           7938 7943 7945 7946 7947
YBNUL. . . . . . .  C ADDR   13F0H   R   SEG=MAIN   3297 3305#
YES. . . . . . . .  C ADDR   300DH   R   SEG=MAIN   7757 7761 7765 7769 7787# 7850
YES0KEY. . . . . .  C ADDR   02D5H   R   SEG=MAIN   767 779#
YES0KEY1 . . . . .  C ADDR   02E2H   R   SEG=MAIN   786# 793
YESAVP . . . . . .  C ADDR   07DEH   R   SEG=MAIN   1387 1413#
YESBUF . . . . . .  C ADDR   0C3AH   R   SEG=MAIN   2104 2109#
YESIND . . . . . .  C ADDR   0AC1H   R   SEG=MAIN   1826 1835 1839 1842#
YESPRD . . . . . .  C ADDR   0C38H   R   SEG=MAIN   2103 2107#
YESTEST. . . . . .  C ADDR   27B5H   R   SEG=MAIN   6286 6318#
YESTT5 . . . . . .  C ADDR   0D04H   R   SEG=MAIN   2223#
YESVICH. . . . . .  C ADDR   082FH   R   SEG=MAIN   1400 1456#
YESVI_KM . . . . .  C ADDR   1FA8H   R   SEG=MAIN   4870 4950#
YESVI_KR . . . . .  C ADDR   1F20H   R   SEG=MAIN   4870# 4872
YST1 . . . . . . .  C ADDR   0199H   R   SEG=MAIN   568 572#
YST19. . . . . . .  C ADDR   0191H   R   SEG=MAIN   569#
Z01S . . . . . . .  C ADDR   283AH   R   SEG=MAIN   6430# 6432
A51 MACRO ASSEMBLER  AMP36_2                                                              09/02/2011 17:17:46 PAGE   165

Z05S . . . . . . .  C ADDR   2847H   R   SEG=MAIN   6439# 6441
Z100 . . . . . . .  C ADDR   280BH   R   SEG=MAIN   6394# 6396
Z15. . . . . . . .  C ADDR   2819H   R   SEG=MAIN   6406# 6408
Z1S. . . . . . . .  C ADDR   282DH   R   SEG=MAIN   6421# 6423
ZAPADC . . . . . .  C ADDR   26EAH   R   SEG=MAIN   6179#
ZCMP . . . . . . .  C ADDR   2D41H   R   SEG=MAIN   7098#
ZDIV . . . . . . .  C ADDR   2D0EH   R   SEG=MAIN   873 1156 4156 5997 7061#
ZER1 . . . . . . .  C ADDR   00B3H   A      8333 8337# 8392 8435
ZER2 . . . . . . .  C ADDR   00D4H   A      8359 8363#
ZMUL . . . . . . .  C ADDR   2D04H   R   SEG=MAIN   7056#
ZNMAT. . . . . . .  B ADDR   0020H.2 A      331# 1750 1991 4177 5159 5344 7069 7072 7075
ZNPLUS . . . . . .  C ADDR   02ECH   R   SEG=MAIN   746 795#
ZZ . . . . . . . .  C ADDR   281BH   R   SEG=MAIN   6407# 6407
Z_01S. . . . . . .  C ADDR   2836H   R   SEG=MAIN   2455 3164 4372 6163 6175 6428# 6931
Z_05S. . . . . . .  C ADDR   2843H   R   SEG=MAIN   2217 2218 2963 4296 4304 4312 6437#
Z_100. . . . . . .  C ADDR   2809H   R   SEG=MAIN   6393#
Z_15 . . . . . . .  C ADDR   2817H   R   SEG=MAIN   701 6405#
Z_1MS. . . . . . .  C ADDR   2820H   R   SEG=MAIN   786 6170 6412#
Z_1S . . . . . . .  C ADDR   2829H   R   SEG=MAIN   691 699 1448 2575 3829 4101 4218 4270 4575 4661 4761 4947 4948
                                           6419#
Z_5. . . . . . . .  C ADDR   2812H   R   SEG=MAIN   6215 6225 6400#
Z_9. . . . . . . .  C ADDR   2D9DH   R   SEG=MAIN   5501 7183#


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
